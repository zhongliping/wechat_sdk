require = function s(c, r, o) {
function h(t, e) {
if (!r[t]) {
if (!c[t]) {
var i = "function" == typeof require && require;
if (!e && i) return i(t, !0);
if (l) return l(t, !0);
var n = new Error("Cannot find module '" + t + "'");
throw n.code = "MODULE_NOT_FOUND", n;
}
var a = r[t] = {
exports: {}
};
c[t][0].call(a.exports, function(e) {
return h(c[t][1][e] || e);
}, a, a.exports, s, c, r, o);
}
return r[t].exports;
}
for (var l = "function" == typeof require && require, e = 0; e < o.length; e++) h(o[e]);
return h;
}({
Activity: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3cba6xY2QpIZbQQ2MvhXt6s", "Activity");
cc.Class({
extends: cc.Component,
properties: {
scrollview: {
default: null,
type: cc.ScrollView
},
rewardShow: {
default: null,
type: cc.Sprite
},
_isDoingGo: !1,
_doPlayCount: 0,
rewardShowLb: cc.RichText,
lingqufangshi: cc.Label,
_isStart: !1,
_itemList: [],
_choujNum: 0,
rewardItem: {
default: null,
type: cc.Prefab
}
},
onLoad: function() {
this._activity = this.node;
this._activity.getComponent("Activity").updateActivityStatus();
var e = this._activity.getChildByName("zhuangpan");
this.btnGo = e.getChildByName("btn_go").getChildByName("zhen");
this.showMC = this.btnGo.getChildByName("showMC");
this.showMC.active = !1;
this.needle = e.getChildByName("needle");
this.needle.active = !1;
cc.vv.utils.addClickEvent(this.needle, this.node, "Activity", "btnShare");
this.initConstant();
var t = this._activity.getChildByName("reward");
this.rewardBox = t.getChildByName("rewardBox");
this.rewardImg = this.rewardBox.getChildByName("rewardImg");
this.guang = this.rewardBox.getChildByName("guang");
this.rewardImg_lb = this.rewardImg.getChildByName("lb").getComponent(cc.Label);
this.rewardImg.active = !1;
this.guang.active = !1;
this.lb_choujNum = this.rewardBox.getChildByName("lb_choujNum").getComponent(cc.Label);
this.rewardBox.getChildByName("lb_choujNum").active = !1;
this.rewardBox.active = !0;
this.rewardList = t.getChildByName("rewardList");
this.rewardList.active = !1;
this._emptyTip = this.rewardList.getChildByName("emptyTip");
this._emptyTip.active = !0;
this._emptyTip_bar = this.rewardList.getChildByName("scrollBar");
this._emptyTip_bar.active = !1;
this._content = this.rewardList.getChildByName("view").getChildByName("content");
this.rewardList.active = !1;
this.rewardPop = this._activity.getChildByName("rewardPop");
this.rewardPop.active = !1;
this.onZhuanpan();
this.updateChoujiangNum();
cc.vv.wc.show("正在加载转盘状态");
cc.vv.anysdkMgr.dataEventHandler = this.node;
var i = this;
this.node.on("goToRoom", function(e) {
var t = cc.sys.localStorage.getItem("mwroomid");
console.log("----------准备进入roomid:", t);
cc.sys.localStorage.removeItem("mwroomid");
cc.vv.userMgr.enterRoom(t);
});
this.node.on("freshUserInfo", function(e) {
i.lblGems.string = cc.vv.userMgr.gems;
i.lblMoney.string = cc.vv.userMgr.coins;
i.refreshInfo();
});
this.node.on("updateMoney", function(e) {
i.refreshInfo();
});
this.node.on("ShareSuccess", function(e) {
i.onZhuanpan();
});
this.initMsgHandler();
},
onShare: function() {},
onTabtype1Click: function(e) {
cc.vv.audioMgr.playBtnClick();
this.rewardBox.active = !0;
this.rewardList.active = !1;
},
onTabtype2Click: function(e) {
cc.vv.audioMgr.playBtnClick();
this.rewardBox.active = !1;
this.rewardList.active = !0;
this.updateRewardList();
},
onBtnCloseRewardPop: function() {
cc.vv.audioMgr.playBtnClick();
this.rewardPop.active = !1;
},
onBtnback: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
refreshInfo: function() {
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_user_status", e);
},
onZhuanpan: function() {
this.updateActivityStatus();
},
updateActivityStatus: function() {
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("route_state", e);
},
updateChoujiangNum: function() {
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_user_extro_info", e);
},
onBtnOneClick: function() {
cc.vv.audioMgr.playBtnClick();
if (this._choujNum < 1) cc.vv.alert.show("", "今天的付费抽奖次数已经用完啦..."); else if (1 != this._isDoingGo) {
this._isDoingGo = !0;
this.doPlayRote();
}
},
onBtnFiveClick: function() {
cc.vv.audioMgr.playBtnClick();
if (this._choujNum < 5) cc.vv.alert.show("", "今天已经不能连续抽奖5次啦..."); else if (1 != this._isDoingGo) {
this._isDoingGo = !0;
this._doPlayCount = 4;
this.doPlayRote();
}
},
doPlayRote: function() {
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
this._isStart = !1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("pay_route", e);
},
onBtnGo: function() {
if (1 != this._isDoingGo) {
cc.vv.audioMgr.playBtnClick();
this._isDoingGo = !0;
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
this._isStart = !1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("do_route", e);
}
},
startRoute: function(e) {
for (var t = 0; t < this._itemList.length; t++) {
this._itemList[t].select.opacity = 0;
}
this.isFadein = !1;
this.routeData = e;
var i = this.getDataList(e.hit_index);
this.order = i.sortIndex;
this.Target_Arc = 30 * this.order - 15;
this._isStart = !0;
this.state = 0;
},
endRoute: function() {
this._isStart = !1;
for (var e = this.routeData.hit_index, t = null, i = 0; i < this._itemList.length; i++) {
var n = this._itemList[i];
n.tempData.sortIndex == e && (t = n);
}
if (t) {
t.select.stopAllActions();
var a = new cc.Blink(2, 10);
t.select.runAction(cc.sequence(a, cc.fadeIn(.1)));
console.log(t.select.opacity);
}
var s = this;
this.node.runAction(cc.sequence(cc.delayTime(.2), cc.callFunc(function(e) {
s.rewardPop.active = !0;
s.rewardShow.spriteFrame = null;
var t = s.getDataList(s.routeData.hit_index);
s.rewardShow.spriteFrame = cc.vv.mahjongmgr.getHallRewardFraneByName("reward_" + t.route_index);
if ("谢谢参与" == t.route_name) {
s.rewardShowLb.string = "<color=#fcecd1>很抱歉，您没有中奖，<color=#e4c28a>谢谢参与。</color>";
s.lingqufangshi.string = "";
} else if (-1 != t.route_name.indexOf("钻石") || -1 != t.route_name.indexOf("房卡")) {
s.rewardShowLb.string = "<color=#fcecd1>恭喜您，获得</c><color=#e4c28a>" + t.route_name + "<color=#fcecd1>，奖励已直接发放到您的账号中。</color></c>";
s.lingqufangshi.string = "";
} else {
s.rewardShowLb.string = "<color=#fcecd1>恭喜您，获得</c><color=#e4c28a>" + t.route_name + "<color=#fcecd1>，请联系微信客服领取奖励。</color></c>";
s.lingqufangshi.string = "请联系微信客服领取奖品：" + cc.KEFU;
}
s.node.runAction(cc.sequence(cc.delayTime(1.2), cc.callFunc(function(e) {
s.needle.rotation = s.btnGo.rotation;
if (s._doPlayCount < 1) {
s._isDoingGo = !1;
s._doPlayCount = 0;
s.updateActivityStatus();
} else {
s._doPlayCount = s._doPlayCount - 1;
s.rewardPop.active = !1;
s.doPlayRote();
}
})));
s.rewardImg.active = !0;
s.guang.active = !0;
s.rewardImg.getComponent(cc.Sprite).spriteFrame = null;
s.rewardImg.getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHallRewardFraneByName("reward_" + t.route_index);
s.rewardImg_lb.string = t.route_name;
cc.find("Canvas").emit("updateMoney");
s.updateChoujiangNum();
})));
},
initRewardItemNode: function(e) {
var t = [];
for (var i in e) {
var n = e[i];
(o = this.getDataList(n[0])) && t.push(o);
}
var a = 12 - t.length;
if (0 < a) for (var s = 0; s < a; s++) t.push(this.activityList[0]);
t.sort(function(e, t) {
return e.sortIndex - t.sortIndex;
});
this.item_node = this._activity.getChildByName("zhuangpan").getChildByName("itemList");
this.nodeList = this.item_node.getChildByName("list");
for (i = 0; i < this.nodeList.children.length; ++i) {
var c = this.nodeList.children[i];
c.index = i;
var r = {};
r.icon = c.getChildByName("icon").getComponent(cc.Sprite);
r.lb_name = c.getChildByName("lb_name").getComponent(cc.Label);
r.select = c.getChildByName("select");
var o = t[i];
r.icon.spriteFrame = null;
r.icon.spriteFrame = cc.vv.mahjongmgr.getHallRewardFraneByName("reward_" + o.route_index);
r.lb_name.string = o.route_name;
r.tempData = o;
this._itemList.push(r);
}
},
getDataList: function(e) {
for (var t = 0; t < this.activityList.length; t++) {
var i = this.activityList[t];
if (i.sortIndex == e) return i;
}
return null;
},
updateRewardList: function() {
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("route_log", e);
},
initList: function(e) {
this._content.removeAllChildren();
for (var t = 0; t < e.length; t++) {
var i = e[t], n = this.getDataList(i.hit_index), a = this.dateFormat(1e3 * i.route_time);
if (n) {
var s = cc.instantiate(this.rewardItem);
s.parent = this._content;
s.getChildByName("Img_reward").getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHallRewardFraneByName("reward_" + n.route_index);
s.getChildByName("lb_decs").getComponent(cc.Label).string = n.route_name;
s.getChildByName("time").getComponent(cc.Label).string = a;
}
}
if (0 == e.length) {
this._emptyTip.active = !0;
this._emptyTip_bar.active = !1;
} else {
this._emptyTip.active = !1;
this._emptyTip_bar.active = !0;
}
this.shrinkContent(e.length);
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
getViewItem: function(e) {
var t = this._content;
if (t.childrenCount > e) return t.children[e];
var i = cc.instantiate(this.rewardItem);
i.parent = t;
return i;
},
shrinkContent: function(e) {
for (;this._content.childrenCount > e; ) {
var t = this._content.children[this._content.childrenCount - 1];
this._content.removeChild(t, !0);
}
},
btnShare: function(e) {
var t = 1e3 * cc.vv.userMgr.share_time, i = new Date(t), n = i.getDate(), a = i.getMonth(), s = Date.now(), c = new Date(s), r = c.getDate(), o = c.getMonth();
n == r && a == o ? cc.vv.alert.show("", "没有免费次数，明天再来吧！") : this.btnShareClick(null);
},
btnShareClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = cc.vv.userMgr.userName + "(输入专属邀请码" + cc.vv.userMgr.userId + "即可获得钻石奖励)：" + cc.YXNAME + "可以每天免费抽奖，等你！快来哦！", i = "输入专属邀请码(" + cc.vv.userMgr.userId + ")即可获得钻石奖励哦~";
cc.vv.anysdkMgr.shareInHall(t, i, 1, 0);
},
initActivityData: function(e) {
this.activityList = [];
for (var t = 0; t < e.length; t++) {
var i = e[t];
this.activityList.push({
sortIndex: i[0],
route_name: i[1],
route_index: i[2]
});
}
},
initConstant: function() {
this.acceleration = .4;
this.cur_speed = 0;
this.cur_arc = this.btnGo.rotation % 360;
this.Time_Start = 0;
this.state = -1;
this.Target_Arc = 0;
this.arc_total = 0;
this.ac_time = 0;
this._isStart = !1;
},
StartRotation: function(e) {
this.btnGo.setRotation(e);
},
update: function(e) {
this.ac_time += e;
if (1 == this._isStart) {
if (this.ac_time < .02) return;
this.ac_time = 0;
this.cur_speed += this.acceleration;
this.cur_arc += this.cur_speed;
this.StartRotation(this.cur_arc);
switch (this.state) {
case 0:
if (600 <= new Date().getTime() - this.Time_Start) {
this.Time_Start = new Date().getTime();
this.acceleration = .4;
this.state = 1;
}
break;

case 1:
if (1e3 <= new Date().getTime() - this.Time_Start) {
this.Time_Start = new Date().getTime();
this.acceleration = 0;
this.state = 2;
}
break;

case 2:
if (Math.abs(this.cur_arc) % 360 < 3 || 1435 < this.cur_arc) {
this.acceleration = -Math.pow(this.cur_speed, 2) / (2 * (360 + this.Target_Arc - 15));
this.state = 3;
}
break;

case 3:
if (0 < this.cur_speed) ; else {
this.initConstant();
this.endRoute();
}
}
var t = Math.floor((this.cur_arc + 15) % 360 / 30);
this.select = this._itemList[t].select;
if (this.select.opacity < 100) {
this.select.opacity = 255;
this.select.runAction(cc.fadeOut(1));
}
}
},
showSpMC: function() {
if (1 != this.isFadein) {
this.showMC.active = !0;
var e = cc.fadeIn(3);
this.showMC.runAction(e);
this.isFadein = !0;
}
},
onCopyClick: function(e, t) {
cc.vv.audioMgr.playBtnClick();
console.log(t);
cc.vv.anysdkMgr.copyToClipBord(cc.KEFU);
cc.vv.alert.show("提示", "客服微信复制成功！");
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_user_status", this.onMsgGetUserStatus.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("route_state", this.onMsgRouteState.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_user_extro_info", this.onMsgGetUserExtroInfo.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("pay_route", this.onMsgPayRoute.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("do_route", this.onMsgDoRoute.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("route_log", this.onMsgRouteLog.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_user_status");
cc.vv.netMgr.hallIEventDispatcher.off("route_state");
cc.vv.netMgr.hallIEventDispatcher.off("get_user_extro_info");
cc.vv.netMgr.hallIEventDispatcher.off("pay_route");
cc.vv.netMgr.hallIEventDispatcher.off("do_route");
cc.vv.netMgr.hallIEventDispatcher.off("route_log");
},
onMsgGetUserStatus: function(e) {
if (0 !== e.errcode) console.log(e.errmsg); else if (null != e.gems) {
cc.vv.userMgr.gems = e.gems;
cc.vv.userMgr.coins = e.coins;
}
},
onMsgRouteState: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 !== e.errcode) console.log(e.errmsg); else {
this.initActivityData(e.route_info);
console.log("是否可以免费抽奖：" + e.can_route);
var t = Number(e.can_route);
this.needle.active = 0 == t;
this.initRewardItemNode(e.route_info);
}
},
onMsgGetUserExtroInfo: function(e) {
if (0 !== (e = e.detail).errcode) console.log(e.errmsg); else {
cc.vv.userMgr.daily_value = [];
if ("" != e.daily_value) {
var t = JSON.parse(e.daily_value);
for (var i in t) {
var n = "k_" + i;
cc.vv.userMgr.daily_value[n] = t[i];
}
}
var a = cc.vv.userMgr.daily_value_get(cc.vv.userMgr.daily_value, cc.vv.userMgr.daily_value_key.PAY_ROUTE_TIMES, 0);
this._choujNum = 5 - a;
this.lb_choujNum.string = "剩余付费抽奖次数：" + this._choujNum;
}
},
onMsgPayRoute: function(e) {
if (0 !== (e = e.detail).errcode) console.log(e.errmsg); else {
this.needle.active = !1;
this.startRoute(e);
}
},
onMsgDoRoute: function(e) {
e = e.detail;
console.log("log---------onMsgDoRoute---\x3edata=:", e);
0 != e.errcode ? console.log(e.errmsg) : this.startRoute(e);
},
onMsgRouteLog: function(e) {
e = e.detail;
this.initList(e);
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
Alert: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c12553sxCxG/on0Bz7rkX0f", "Alert");
cc.Class({
extends: cc.Component,
properties: {
btnOK: {
default: null,
type: cc.Node
},
btnCancel: {
default: null,
type: cc.Node
},
title: {
default: null,
type: cc.Label
},
content: {
default: null,
type: cc.Label
},
_onok: null
},
onLoad: function() {
if (null != cc.vv) {
this.initArrow();
this.adatpScreen();
this.node.active = !1;
cc.vv.alert = this;
}
},
initArrow: function() {
this._arrow = this.node.getChildByName("arrow");
},
adatpScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 / e.height * e.width / 820, i = this.node.getChildByName("cover");
i.setScaleX(t);
var n = i.getContentSize();
this._arrow.setPosition(n.width * t * .5 - 30, this._arrow.y);
},
onButtonClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
"btn_ok" == e.target.name && this._onok && this._onok();
this.node.active = !1;
this._onok = null;
this._arrow && (this._arrow.active = !1);
},
showArrow: function() {
this._arrow.active = !0;
},
show: function(e, t, i, n) {
var a = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : "确定", s = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : "取消";
if (this.node) {
this.node.active = !0;
this._onok = i;
this.btnOK.getChildByName("Label").getComponent(cc.Label).string = a;
this.btnCancel.getChildByName("Label").getComponent(cc.Label).string = s;
this.content.string = t;
if (n) {
this.btnCancel.active = !0;
this.btnOK.x = -150;
this.btnCancel.x = 150;
} else {
this.btnCancel.active = !1;
this.btnOK.x = 0;
}
}
},
onDestory: function() {
cc.vv && (cc.vv.alert = null);
}
});
cc._RF.pop();
}, {} ],
AnysdkMgr: [ function(r, e, t) {
(function(c) {
"use strict";
cc._RF.push(e, "f58cea6lrpDZJSNs2BGBqxN", "AnysdkMgr");
cc.Class({
extends: cc.Component,
properties: {
_isCapturing: !1,
dataEventHandler: null,
_shareType: 0
},
onLoad: function() {},
init: function() {
this.ANDROID_API = "com/szbj/yueyueqipai/WXAPI";
this.IOS_API = "AppController";
if (cc.sys.os == cc.sys.OS_ANDROID) {
var e = jsb.reflection.callStaticMethod(this.ANDROID_API, "getMWroomid", "()I");
console.log("mwroomid", e);
e && "0" != e && cc.sys.localStorage.setItem("mwroomid", e);
}
},
getAndroidMWroomid: function() {},
getGPS: function() {
if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {
var e = jsb.reflection.callStaticMethod(this.ANDROID_API, "getGPS", "()Ljava/lang/String;");
console.log("收到GPS位置信息 经度,纬度", e);
cc.vv.userMgr.gps = e;
} else if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {
e = jsb.reflection.callStaticMethod(this.IOS_API, "getGPS");
console.log("收到GPS位置信息 经度,纬度", e);
cc.vv.userMgr.gps = e;
} else {
var t = 106 + .1 * Math.random(), i = 29 + .1 * Math.random();
cc.vv.userMgr.gps = t + "," + i;
console.log("坐标：" + cc.vv.userMgr.gps);
}
},
getWechatSign: function() {
var t = this;
if (cc.sys.isBrowser && cc.sys.isMobile) {
var e = {
account: cc.vv.userMgr.account,
url: new c(location.href, "utf8").toString("base64"),
channel: cc.args.web_args.channel,
sign: cc.vv.userMgr.sign
};
cc.vv.http.sendRequest("/web_wechat_signature", e, function(e) {
console.log(e);
0 !== e.errcode ? console.log(e.errmsg) : t.initH5(e.timestamp, e.noncestr, e.signature);
});
}
},
initH5: function(e, t, i) {
wx.config({
debug: !1,
appId: "wx9a626fafe7e866cd",
timestamp: e,
nonceStr: t,
signature: i,
jsApiList: [ "checkJsApi", "onMenuShareTimeline", "onMenuShareAppMessage", "onMenuShareQQ", "onMenuShareWeibo", "hideMenuItems", "showMenuItems", "hideAllNonBaseMenuItem", "showAllNonBaseMenuItem", "translateVoice", "startRecord", "stopRecord", "onRecordEnd", "playVoice", "pauseVoice", "stopVoice", "uploadVoice", "downloadVoice", "chooseImage", "previewImage", "uploadImage", "downloadImage", "getNetworkType", "openLocation", "getLocation", "hideOptionMenu", "showOptionMenu", "closeWindow", "scanQRCode", "chooseWXPay", "openProductSpecificView", "addCard", "chooseCard", "openCard" ]
});
wx.ready(function() {
var e = "http://assets-0.totorotec.com/web-mobile/index.html?web_args=channel$" + cc.args.web_args.channel, t = "约约棋牌,斗地主跑得快炸金花斗牛德州扑克十三水玩法合集,分享领取红包话费iphone，快一起来玩吧!";
if (cc.vv.gameNetMgr.roomId) {
e = "http://assets-0.totorotec.com/web-mobile/index.html?web_args=channel$" + cc.args.web_args.channel + "$$roomid$" + cc.vv.gameNetMgr.roomId;
t = "约约棋牌 " + cc.vv.gameNetMgr.getGameTypeStr() + " 房号:" + cc.vv.gameNetMgr.roomId + " 玩法:" + cc.vv.gameNetMgr.getWanfa();
}
wx.onMenuShareAppMessage({
title: "约约棋牌",
desc: t,
link: e,
imgUrl: "http://firicon.fir.im/7ece9bb7eb7a8181cb17185975e58e87e0e31418",
success: function(e) {},
cancel: function(e) {}
});
wx.onMenuShareTimeline({
title: "约约棋牌,斗地主跑得快炸金花斗牛德州扑克十三水玩法合集,分享领取红包话费iphone，快一起来玩吧!",
link: "http://assets-0.totorotec.com/web-mobile/index.html?web_args=channel$" + cc.args.web_args.channel,
imgUrl: "http://firicon.fir.im/7ece9bb7eb7a8181cb17185975e58e87e0e31418",
success: function(e) {},
cancel: function(e) {}
});
});
wx.error(function(e) {
alert("微信config失败");
});
},
login: function() {
cc.eventManager.removeCustomListeners(cc.game.EVENT_HIDE);
if (cc.sys.isBrowser) {
if (cc.sys.isMobile) {
var e = cc.args.code;
cc.vv.http.sendRequest("/login", {
code: e,
os: "wechat_default"
}, function(e) {
if (0 == e.errcode) {
cc.sys.localStorage.setItem("wx_account", e.account);
cc.sys.localStorage.setItem("wx_sign", e.sign);
}
cc.vv.userMgr.onAuth(e);
});
}
} else cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod(this.ANDROID_API, "Login", "()V") : cc.sys.os == cc.sys.OS_IOS ? jsb.reflection.callStaticMethod(this.IOS_API, "login") : console.log("platform:" + cc.sys.os + " dosn't implement share.");
},
shareInHall: function(e, t, i, n) {
console.log("分享类型", i);
1 == i && (this._shareType = 1);
if (cc.sys.isBrowser) {
cc.vv.alert.show("提示", "网页版请点击微信浏览器右上角分享或邀请");
cc.vv.alert.showArrow();
} else {
var a = cc.SHARELINK + "?roomid=" + n;
1 == i && (a = cc.DOWNLOAD_URL);
cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod(this.ANDROID_API, "Share", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", a, e, t, i + "") : cc.sys.os == cc.sys.OS_IOS ? jsb.reflection.callStaticMethod(this.IOS_API, "share:shareTitle:shareDesc:shareType:", a, e, t, i + "") : console.log("platform:" + cc.sys.os + " dosn't implement share.");
}
},
share: function(e, t, i) {
console.log("分享类型", e, t, i);
1 == i && (this._shareType = 1);
if (cc.sys.isBrowser) {
cc.vv.alert.show("提示", "网页版请点击微信浏览器右上角分享或邀请");
cc.vv.alert.showArrow();
} else cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod(this.ANDROID_API, "Share", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", cc.SHARELINK + "?roomid=" + cc.vv.gameNetMgr.roomId, e, t, i + "") : cc.sys.os == cc.sys.OS_IOS ? jsb.reflection.callStaticMethod(this.IOS_API, "share:shareTitle:shareDesc:shareType:", cc.SHARELINK + "?roomid=" + cc.vv.gameNetMgr.roomId, e, t, i + "") : console.log("platform:" + cc.sys.os + " dosn't implement share.");
},
shareUrl: function(e, t, i, n) {
console.log("分享类型", n);
1 == n && (this._shareType = 1);
if (cc.sys.isBrowser) {
cc.vv.alert.show("提示", "网页版请点击微信浏览器右上角分享或邀请");
cc.vv.alert.showArrow();
} else cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod(this.ANDROID_API, "Share", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", e, t, i, n) : cc.sys.os == cc.sys.OS_IOS ? jsb.reflection.callStaticMethod(this.IOS_API, "share:shareTitle:shareDesc:shareType:", e, t, i, n + "") : console.log("platform:" + cc.sys.os + " dosn't implement share.");
},
paymentRequest: function(t) {
if (cc.sys.os == cc.sys.OS_IOS) {
cc.vv.wc.show("订单请求中...");
var i = this, e = {
account: cc.vv.userMgr.account,
good_sn: t,
good_count: "1",
pay_platform: "IOS"
};
cc.vv.http.sendRequest("/pay_order", e, function(e) {
console.log("pay_order  errcode:", e.errcode);
if (0 == e.errcode) {
console.log(e.pay_id);
jsb.reflection.callStaticMethod(i.IOS_API, "paymentRequest:", t);
i.pay_id = e.pay_id;
} else {
cc.vv.wc.hide();
console.log(e);
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
});
}
},
onPaymentComplete: function(e, t, i) {
console.log(e);
console.log(t);
console.log(i);
if (cc.sys.os == cc.sys.OS_IOS) {
console.log(cc.vv.userMgr.account);
var n = !0;
-1 == cc.vv.userMgr.account.indexOf("guest_") && (n = !1);
var a = {
account: cc.vv.userMgr.account,
pay_id: this.pay_id,
order_id: e,
good_sn: t,
pay_platform: "IOS",
is_sandbox: n + "",
check: i
};
this.commitOrder(a);
}
},
commitOrder: function(e) {
console.log("正在验证订单....");
cc.vv.wc.show("正在验证订单...");
var t = this, i = JSON.stringify(e);
cc.sys.localStorage.setItem("checkOrder", i);
console.log("订单已缓存....", i);
cc.vv.http.sendRequest("/pay_success", e, function(e) {
console.log(e.errcode);
cc.vv.wc.hide();
if (0 == e.errcode || 8107 == e.errcode) {
cc.sys.localStorage.removeItem("checkOrder");
if (0 == e.errcode) {
cc.vv.userMgr.coins = e.total_gold;
t.dispatchEvent("freshUserInfo");
}
} else cc.vv.alert.show("提示", "订单验证失败错误码" + e.errcode);
});
},
paymentRequestWX: function(e) {
if (cc.sys.isNative) {
cc.vv.wc.show("订单请求中...");
var t = this, i = {
account: cc.vv.userMgr.account,
good_sn: e,
good_count: "1",
platform: "Wechat_Android"
};
cc.vv.http.sendRequest("/wehchat_pay_order", i, function(e) {
console.log("pay_order  errcode:", e.errcode);
if (0 == e.errcode) {
console.log(e.pay_id);
jsb.reflection.callStaticMethod(t.ANDROID_API, "wxPay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", e.prepayid, e.noncestr, e.timestamp + "", e.sign);
t.out_trade_no = e.out_trade_no;
t.attach = e.attach;
} else {
cc.vv.wc.hide();
console.log(e);
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
});
}
},
onPaymentCompleteWX: function() {
cc.log(this.out_trade_no);
cc.log(this.attach);
if (cc.sys.os == cc.sys.OS_ANDROID) {
var e = {
account: cc.vv.userMgr.account,
out_trade_no: this.out_trade_no,
attach: this.attach
};
this.commitOrderWX(e);
}
},
commitOrderWX: function(e) {
console.log("正在验证订单....");
var t = this, i = JSON.stringify(e);
cc.sys.localStorage.setItem("checkOrder", i);
console.log("订单已缓存....", i);
cc.vv.http.sendRequest("/wechat_pay_success", e, function(e) {
console.log("订单验证结果errcode", e.errcode);
cc.vv.wc.hide();
if (0 == e.errcode) {
cc.sys.localStorage.removeItem("checkOrder");
cc.vv.userMgr.coins = e.total_gold;
t.dispatchEvent("freshUserInfo");
} else cc.vv.alert.show("提示", "订单验证失败错误码" + e.errcode);
});
console.log("订单验证已发出....");
},
onPaymentError: function() {
cc.vv.wc.hide();
cc.vv.alert.show("提示", "支付失败");
},
onPaymentCancel: function() {
cc.vv.wc.hide();
},
shareResult: function(i, n) {
var a = this, s = cc.director.getWinSize(), e = (new Date(), "result_share.jpg"), c = jsb.fileUtils.getWritablePath() + e;
jsb.fileUtils.isFileExist(c) && jsb.fileUtils.removeFile(c);
var t = new cc.RenderTexture(Math.floor(s.width), Math.floor(s.height), cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES);
t.setPosition(cc.p(s.width / 2, s.height / 2));
t.begin();
cc.director.getRunningScene().visit();
t.end();
t.saveToFile(e, cc.IMAGE_FORMAT_JPG, function() {
var e = 100 / s.height, t = Math.floor(s.width * e);
console.log(c, t, 100);
cc.sys.os == cc.sys.OS_ANDROID ? i ? jsb.reflection.callStaticMethod(a.ANDROID_API, "ShareIMG", "(Ljava/lang/String;IILjava/lang/String;)V", c, t, 100, i + "") : jsb.reflection.callStaticMethod(a.ANDROID_API, "ShareIMG", "(Ljava/lang/String;II)V", c, t, 100) : cc.sys.os == cc.sys.OS_IOS ? jsb.reflection.callStaticMethod(a.IOS_API, "shareIMG:width:height:shareType:", c, t, 100, i + "") : console.log("platform:" + cc.sys.os + " dosn't implement share.");
n && (n.active = !1);
});
},
shareImg: function(e, t) {
cc.vv.wc.show("正在生成分享图片");
},
onLoginResp: function(e, t) {
console.log("onLoginResp !!!11");
cc.eventManager.addCustomListener(cc.game.EVENT_HIDE, function() {
cc.game.emit(cc.game.EVENT_HIDE, cc.game);
});
var i = t || cc.CHANNEL;
cc.vv.http.sendRequest("/login", {
login_type: 2,
code: e,
channel: i,
os: cc.sys.os
}, function(e) {
console.log("onLoginResp !!!");
console.log(e);
if (0 == e.errcode) {
cc.sys.localStorage.setItem("wx_account", e.account);
cc.sys.localStorage.setItem("wx_sign", e.sign);
}
cc.vv.userMgr.onAuth(e);
});
},
onShareSuccess: function(e) {
console.log("分享成功而不是取消，至于分享到哪里去了js分享前自己判断");
var t = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.http.sendRequest("/daily_share", t, function(e) {
if (0 !== e.errcode) console.log(e.errmsg); else {
console.log("分享成功向服务器发送消息");
cc.vv.userMgr.share_time = Math.floor(Date.now() / 1e3);
this.dispatchEvent("ShareSuccess");
}
}.bind(this));
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("----------魔窗传递roomid:", e);
cc.sys.localStorage.setItem("mwroomid", e);
this.dispatchEvent("goToRoom", e);
},
hmac: function(e) {
var t = r("crypto"), i = "1234567890123456", n = new c(i, "hex").toString("base64"), a = t.createHmac("sha1", i);
a.update(e);
var s = a.digest().toString("base64");
s += "?";
return s += n;
},
checkhmac: function(e, t) {
var i = r("crypto"), n = new c(t, "base64").toString("hex"), a = i.createHmac("sha1", n);
a.update(e);
return a.digest().toString("base64");
},
copyToClipBord: function(e) {
cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod(this.ANDROID_API, "onClickCopy", "(Ljava/lang/String;)V", e) : cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod(this.IOS_API, "addStringToPasteboard:", e);
},
getBatteryLevel: function() {
var e = 100;
if (cc.sys.os == cc.sys.OS_ANDROID) e = jsb.reflection.callStaticMethod(this.ANDROID_API, "getCurrentBatteryLevel", "()I"); else if (cc.sys.os == cc.sys.OS_IOS) {
e = jsb.reflection.callStaticMethod(this.IOS_API, "getCurrentBatteryLevel");
console.log("电池电量", e);
}
return e;
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
}
});
cc._RF.pop();
}).call(this, r("buffer").Buffer);
}, {
buffer: 47,
crypto: 56
} ],
Atavar: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1600f+T5JRI1ZY1Wf5dvD+v", "Atavar");
cc.Class({
extends: cc.Component,
properties: {},
load: function(e) {
var t = e;
console.log("log-----------玩家头像RUL=:", t);
cc.loader.load({
url: t,
type: "jpg"
}, function(e, t) {
if (e) console.log("log-----------------加载头像失败"); else {
console.log("log-----------------加载头像成功");
var i = new cc.SpriteFrame(t);
this.node.getComponent(cc.Sprite).spriteFrame = i;
}
}.bind(this));
}
});
cc._RF.pop();
}, {} ],
AudioMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "55caepcpvFK5r0Ax5f8jss4", "AudioMgr");
cc.Class({
extends: cc.Component,
properties: {
bgmVolume: 1,
sfxVolume: 1,
bgmAudioID: -1
},
init: function() {
var e = cc.sys.localStorage.getItem("bgmVolume");
console.log("声音：" + e);
null != e && (this.bgmVolume = parseFloat(e));
null != (e = cc.sys.localStorage.getItem("sfxVolume")) && (this.sfxVolume = parseFloat(e));
cc.game.on(cc.game.EVENT_HIDE, function() {
console.log("cc.audioEngine.pauseAll");
cc.audioEngine.pauseAll();
});
cc.game.on(cc.game.EVENT_SHOW, function() {
console.log("cc.audioEngine.resumeAll");
cc.audioEngine.resumeAll();
});
},
playBtnClick: function() {
this.playSFX("resources/hall/sounds/TICK.WAV");
},
playBGM: function(e) {
var t = cc.url.raw(e);
console.log(t);
0 <= this.bgmAudioID && cc.audioEngine.stop(this.bgmAudioID);
this.bgmAudioID = cc.audioEngine.play(t, !0, this.bgmVolume * this.bgmVolume * this.bgmVolume);
},
stopBGM: function() {
cc.audioEngine.stop(this.bgmAudioID);
},
playSFX: function(e) {
var t = cc.url.raw(e);
if (0 < this.sfxVolume) cc.audioEngine.play(t, !1, this.sfxVolume);
},
setSFXVolume: function(e) {
if (this.sfxVolume != e) {
cc.sys.localStorage.setItem("sfxVolume", e * e * e);
this.sfxVolume = e;
}
},
setBGMVolume: function(e, t) {
0 <= this.bgmAudioID && (0 < e ? cc.audioEngine.resume(this.bgmAudioID) : cc.audioEngine.pause(this.bgmAudioID));
if (this.bgmVolume != e || t) {
cc.sys.localStorage.setItem("bgmVolume", e);
this.bgmVolume = e;
cc.audioEngine.setVolume(this.bgmAudioID, e * e * e);
}
},
pauseAll: function() {
cc.audioEngine.pauseAll();
},
resumeAll: function() {
cc.audioEngine.resumeAll();
},
stop: function() {
cc.audioEngine.stop();
},
setLoop: function() {
cc.audioEngine.setLoop();
}
});
cc._RF.pop();
}, {} ],
Authentication: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cab9fDviytET5K4VSJDKSEv", "Authentication");
cc.Class({
extends: cc.Component,
properties: {
_authentication: null
},
onLoad: function() {
this.initMsgHandler();
this._authentication = this.node;
var e = this._authentication.getChildByName("contenNode");
this.editbox_name = e.getChildByName("editbox_name").getComponent(cc.EditBox);
this.editbox_identityCard = e.getChildByName("editbox_identityCard").getComponent(cc.EditBox);
this.editbox_phoneNumber = e.getChildByName("editbox_phoneNumber").getComponent(cc.EditBox);
},
onOpenClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this._authentication.active = !0;
this.editbox_name.string = "";
this.editbox_identityCard.string = "";
this.editbox_phoneNumber.string = "";
},
onClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
authenticationRequest: function() {
cc.vv.audioMgr.playBtnClick();
var e = this.editbox_name.string, t = this.editbox_identityCard.string, i = this.editbox_phoneNumber.string;
console.log("log-------------------name=:", e);
console.log("log-------------------identityCard=:", t);
console.log("log-------------------phoneNumber=:", i);
var n = this.isCardIDWrong(t);
if (n) cc.vv.alert.show("提示", n); else if (n = this.isPhoneNum(i)) cc.vv.alert.show("提示", n); else if (n = this.isNameWrong(e)) cc.vv.alert.show("提示", n); else {
cc.vv.wc.show("正在认证");
var a = {
account: cc.vv.userMgr.account,
rname: e,
rid: t,
phone: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("identity", a);
}
},
isCardIDWrong: function(e) {
var t = 0;
if (!/^\d{17}(\d|x)$/i.test(e)) return "你输入的身份证长度或格式错误";
e = e.replace(/x$/i, "a");
if (null == {
11: "北京",
12: "天津",
13: "河北",
14: "山西",
15: "内蒙古",
21: "辽宁",
22: "吉林",
23: "黑龙江",
31: "上海",
32: "江苏",
33: "浙江",
34: "安徽",
35: "福建",
36: "江西",
37: "山东",
41: "河南",
42: "湖北",
43: "湖南",
44: "广东",
45: "广西",
46: "海南",
50: "重庆",
51: "四川",
52: "贵州",
53: "云南",
54: "西藏",
61: "陕西",
62: "甘肃",
63: "青海",
64: "宁夏",
65: "新疆",
71: "台湾",
81: "香港",
82: "澳门",
91: "国外"
}[parseInt(e.substr(0, 2))]) return "你的身份证地区非法";
var i = e.substr(6, 4) + "-" + Number(e.substr(10, 2)) + "-" + Number(e.substr(12, 2)), n = new Date(i.replace(/-/g, "/"));
if (i != n.getFullYear() + "-" + (n.getMonth() + 1) + "-" + n.getDate()) return "身份证上的出生日期非法";
for (var a = 17; 0 <= a; a--) t += Math.pow(2, a) % 11 * parseInt(e.charAt(17 - a), 11);
return t % 11 != 1 && "你输入的身份证号非法";
},
isPhoneNum: function(e) {
if (!/^\d{11}$/i.test(e)) return "电话号码不合法";
},
isNameWrong: function(e) {
if (!e || "" == e || 10 < e.length) return "名字不合法";
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("identity", this.onMsgIdentity.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("identity");
},
onMsgIdentity: function(e) {
e = e.detail;
cc.vv.wc.hide();
this._authentication.active = !1;
if (0 == e.errcode) {
cc.vv.alert.show("提示", "认证成功");
cc.vv.UILoader.destroy(this.node);
} else cc.vv.alert.show("提示", "认证失败:" + e.errmsg);
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
BaseRoom: [ function(r, e, t) {
"use strict";
cc._RF.push(e, "f8eefB9qQxDX5y//uW+ylJ4", "BaseRoom");
cc.Class({
extends: cc.Component,
properties: {
btnReady: {
default: null,
type: cc.Node
},
baterryArr: [ cc.Node ],
gamecount: cc.Label,
lbRoomNo: cc.Label,
timeLabel: cc.Label,
more: cc.Node,
_voiceMsgQueue: [],
_lastPlayingSeat: null,
_playingSeat: null,
_lastPlayTime: null,
sender: cc.Node,
target: cc.Node
},
onLoad: function() {
cc.vv.UILoader.retainScene(this.node);
this.initEventHandlers();
},
start: function() {
this._btn_join = this.node.getChildByName("join").getChildByName("btn_join");
this.lbRoomNo.string = cc.vv.gameNetMgr.roomId;
this.gamecount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
this.defaultBackgroud();
},
initBaseRoom: function() {
var t = this;
cc.vv.UILoader.loadRes("game/public/prefabs/chat", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
cc.vv.UILoader.loadRes("game/public/prefabs/voice", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
cc.vv.UILoader.loadRes("hall/prefabs/popups", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
cc.vv.UILoader.loadRes("hall/prefabs/alert", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
cc.vv.UILoader.loadRes("hall/prefabs/WaitingConnection", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
cc.vv.UILoader.loadRes("game/public/prefabs/reconnect", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
this.updateJoinPush();
this.refreshBtns();
this.onBtnMore_close();
this.setBtnVoicePos();
var e = cc.find("Canvas/lookFlower");
e && e.setLocalZOrder(99);
var i = cc.find("Canvas/game_over");
i && i.setLocalZOrder(100);
var n = cc.find("Canvas/game_result");
n && n.setLocalZOrder(101);
var a = cc.vv.anysdkMgr.getBatteryLevel();
this.updateBaterry(a);
cc.vv.anysdkMgr.getGPS();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("gps", {
gps: cc.vv.userMgr.gps
});
},
initEventHandlers: function() {
var c = this, e = cc.find("Canvas");
e.on("game_begin", function(e) {
c.refreshBtns();
c.btnReady.active = !1;
});
e.on("user_state_changed", function(e) {
c.refreshBtns("user_state_changed");
});
e.on("game_button_push", function(e) {
c.refreshBtns();
});
e.on("fresh_all_score", function(e) {
c.refreshBtns();
});
e.on("game_num", function(e) {
c.refreshBtns();
c.gamecount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
});
e.on("voice_msg", function(e) {
e = e.detail;
c._voiceMsgQueue.push(e);
c.playVoice();
});
e.on("join_push", function(e) {
c.updateJoinPush();
});
e.on("chat_push", function(e) {
e = e.detail;
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.sender), i = cc.vv.gameNetMgr.getLocalIndex(t);
c._seats2[i].chat(e.content);
var n = cc.vv.gameNetMgr.seats[t].name;
cc.vv.chat.addchatRecord(n + ":" + info.content);
});
e.on("quick_chat_push", function(e) {
e = e.detail;
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.sender), i = cc.vv.gameNetMgr.getLocalIndex(t), n = e.content;
"null" == n && (n = 0);
var a = cc.vv.chat.getQuickChatInfo(n);
c._seats2[i].chat(a.content);
var s = cc.vv.gameNetMgr.seats[t].name;
cc.vv.chat.addchatRecord(s + ":" + a.content);
cc.vv.audioMgr.playSFX(a.sound);
});
e.on("emoji_push", function(e) {
e = e.detail;
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.sender), i = cc.vv.gameNetMgr.getLocalIndex(t);
console.log(e);
c._seats2[i].emoji(e.content);
});
e.on("emoji_to_cl", function(e) {
e = e.detail;
c.emojito(e);
});
e.on("gps_push", function(e) {
c.checkGPS(e.detail);
});
},
checkGPS: function(e) {
if (e.gps && -1 != e.gps.indexOf(",")) {
cc.vv.gameNetMgr.getSeatByID(e.user_id).gps = e.gps;
console.log("服务器传来用户", e.user_id, "的经纬度", e.gps);
} else console.log("没有获取到用户的经纬度", e.user_id);
},
refreshBtns: function(e) {
var t = this.more.getChildByName("btn_tuichu"), i = this.more.getChildByName("btn_jiesan"), n = this.more.getChildByName("btn_sqjsfj"), a = this.node.getChildByName("prepare"), s = a.getChildByName("btnWeichat"), c = 0 == cc.vv.gameNetMgr.numOfGames;
n.active = !c;
t.active = !cc.vv.gameNetMgr.isOwner() && c;
i.active = cc.vv.gameNetMgr.isOwner() && c;
s.active = c;
cc.vv.gameNetMgr.getIsWatch && cc.vv.gameNetMgr.getIsWatch() ? this.btnReady.active = !1 : cc.vv.gameNetMgr.getSelfData() && cc.vv.gameNetMgr.getSelfData().ready ? this.btnReady.active = !1 : c && (this.btnReady.active = !0);
var r = a.getChildByName("btnStart"), o = cc.vv.gameNetMgr.conf.server_type;
if (cc.vv.gameNetMgr.use58 && cc.vv.gameNetMgr.use58() || 20009 == o) {
c = 0 == cc.vv.gameNetMgr.numOfGames;
r.active = 0 == cc.vv.gameNetMgr.seatIndex && c && !this.btnReady.active;
} else r.active = !1;
},
updateJoinPush: function() {
cc.vv.gameNetMgr.isVisibleWatch ? this.node.getChildByName("join").active = cc.vv.gameNetMgr.isVisibleWatch() : this.node.getChildByName("join").active = !1;
},
updateBaterry: function(e) {
this.baterryArr[0].active = !1;
this.baterryArr[1].active = !1;
this.baterryArr[2].active = !1;
this.baterryArr[3].active = !1;
this.baterryArr[4].active = !1;
this.baterryArr[5].active = !1;
0 < e && (this.baterryArr[0].active = !0);
20 < e && (this.baterryArr[1].active = !0);
40 < e && (this.baterryArr[2].active = !0);
60 < e && (this.baterryArr[3].active = !0);
80 < e && (this.baterryArr[4].active = !0);
90 < e && (this.baterryArr[5].active = !0);
},
onBtnSettingsClicked: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/settings", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
this.onBtnMore_close();
},
onBtnBackClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.alert.show("返回大厅", "返回大厅房间仍会保留，快去邀请大伙来玩吧！", function() {
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
}, !0);
},
onBtnChatClicked: function() {
if (!cc.vv.gameNetMgr.isReplay) {
cc.vv.audioMgr.playBtnClick();
cc.vv.chat.node.active = !0;
}
},
onBtnWeichatClicked: function() {
var e = cc.vv.gameType.getWaFaDecs(cc.vv.gameNetMgr.conf.server_type, cc.vv.gameNetMgr.conf.type_index, cc.vv.gameNetMgr.conf.rule_index), t = " 房间ID:" + cc.vv.gameNetMgr.roomId;
cc.vv.gameNetMgr.unions_id && (t += " (俱乐部" + cc.vv.gameNetMgr.unions_id + ")");
cc.vv.anysdkMgr.share(" " + cc.vv.gameNetMgr.getGameTypeStr() + t, " 玩法:" + e, 0);
},
onBtnDissolveClicked: function() {
cc.vv.audioMgr.playBtnClick();
this.onBtnMore_close();
cc.vv.alert.show("解散房间", "解散房间不扣房卡，是否确定解散？", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dispress");
}, !0);
},
onBtnExit: function() {
cc.vv.audioMgr.playBtnClick();
this.onBtnMore_close();
cc.vv.userMgr.isHighDefend = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("exit");
},
onSQJSFJClick: function() {
if (!cc.vv.gameNetMgr.isReplay) {
cc.vv.audioMgr.playBtnClick();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dissolve_request");
}
},
onBtnReadyClick: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
},
onBtnMore: function() {
cc.vv.audioMgr.playBtnClick();
1 == this.more.active ? this.more.active = !1 : this.more.active = !0;
},
onBtnMore_close: function() {
this.more.active = !1;
},
onBtnWanfa_open: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/wanfa", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
cc.vv.wanfa.onGuize();
i.onBtnMore_close();
});
});
},
onBtnScanning: function() {
var t = this;
if (!cc.vv.gameNetMgr.isReplay && !cc.vv.userMgr.isHighDefend) {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/scanning", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
this.onBtnMore_close();
}
},
onBtnChoice_open: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("game/public/prefabs/choice", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
cc.vv.choice.node.active = !0;
t.onBtnMore_close();
});
});
},
onGameBackgroud: function(e) {
var i = cc.find("Canvas/bg/Z_backgroud");
i && cc.loader.loadRes("game/public/bj_" + e, cc.SpriteFrame, function(e, t) {
i.getComponent(cc.Sprite).spriteFrame = t;
console.log("桌面背景：" + i.getComponent(cc.Sprite).spriteFrame.name);
});
},
defaultBackgroud: function() {
var e = cc.vv.gameNetMgr.getGameTypeStr(), t = cc.sys.localStorage.getItem(e);
if (t) {
var i = JSON.parse(t).zhuo;
this.onGameBackgroud(i);
console.log("查找上局游戏桌布选择界面保存的数据：桌面 : " + i);
} else this.onGameBackgroud(1);
},
onBtnStartPlayClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = !0, i = cc.vv.gameNetMgr.seats;
if (1 != i.length) {
for (var n = 0; n < i.length; ++n) if (0 == i[n].ready) {
t = !1;
break;
}
if (0 != t) {
var a = JSON.parse(cc.vv.msgTemp.CS_StartPlay);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("start_play", a);
} else cc.vv.alert.show("提示", "有玩家没有准备！");
} else cc.vv.alert.show("提示", "一个人不能提前开始！");
},
playVoice: function() {
var s = this;
if (null == this._playingSeat && this._voiceMsgQueue.length) {
var e = this._voiceMsgQueue.shift(), t = cc.vv.gameNetMgr.getSeatIndexByID(e.sender), i = cc.vv.gameNetMgr.getLocalIndex(t);
this._playingSeat = i;
this._seats2[i].voiceMsg(!0);
var c = JSON.parse(e.content);
cc.vv.http.sendRequest("/get_voice", {
voice_msg_id: c.msg
}, function(e) {
if (e.errcode) console.log("语音下载失败，错误码", e.errcode); else {
for (var t = "voicemsg.amr", i = r("buffer").Buffer, n = e.voice_msg; -1 != n.indexOf("."); ) n = n.replace(".", "+");
var a = new i(n, "base64").toString();
cc.vv.voiceMgr.writeVoice(t, a);
cc.vv.voiceMgr.play(t);
s._lastPlayTime = Date.now() + c.time;
}
}, cc.vv.userMgr.voice_chat_addr);
}
},
update: function(e) {
if (1 != cc.vv.gameNetMgr.isReplay) {
var t = Math.floor(Date.now() / 1e3 / 60);
if (this._lastMinute != t) {
this._lastMinute = t;
var i = new Date(), n = i.getHours();
n = n < 10 ? "0" + n : n;
var a = i.getMinutes();
a = a < 10 ? "0" + a : a;
this.timeLabel && (this.timeLabel.string = n + ":" + a);
}
if (null != this._lastPlayTime) {
if (Date.now() > this._lastPlayTime + 200) {
this.onPlayerOver();
this._lastPlayTime = null;
}
} else this.playVoice();
}
},
onPlayerOver: function() {
cc.vv.audioMgr.resumeAll();
console.log("onPlayCallback:" + this._playingSeat);
var e = this._playingSeat;
this._playingSeat = null;
this._seats2[e].voiceMsg(!1);
},
onBtnJoinClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("join");
this._btn_join.active = !1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
},
emojito: function(t) {
this._sender = this.sender;
this._target = this.target;
var e = cc.vv.gameNetMgr.getSeatIndexByID(t.sender), i = cc.vv.gameNetMgr.getLocalIndex(e), n = cc.vv.gameNetMgr.getSeatIndexByID(t.target), a = cc.vv.gameNetMgr.getLocalIndex(n), s = this._seats2[i].node, c = s.parent.getPosition().add(s.getPosition().mul(s.parent.scale)), r = this._sender.getChildByName(t.content), o = cc.instantiate(r);
o.parent = r.parent;
o.setPosition(c.x, c.y + -31);
o.active = !0;
var h = this._seats2[a].node, l = h.parent.getPosition().add(h.getPosition().mul(h.parent.scale)), d = this._target.getChildByName("node"), u = (d.getChildByName("interactive").getComponent(cc.Animation), 
cc.instantiate(d));
u.parent = d.parent;
u.setPosition(l.x, l.y + -31);
var v = u.getChildByName("interactive").getComponent(cc.Animation);
o.runAction(cc.sequence(cc.moveTo(1, cc.p(l.x, l.y + -31)), cc.callFunc(function(e) {
v.play(t.content);
cc.vv.audioMgr.playSFX("resources/hall/sounds/daoju/" + t.content + ".mp3");
o.destroy();
})));
u.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
u.destroy();
})));
},
setBtnVoicePos: function() {
if (cc.vv.gameNetMgr.conf.server_type >= cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP && cc.vv.gameNetMgr.conf.server_type <= cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT) {
(t = this.node.getChildByName("btn_voice")).setPosition(t.x, t.y - 370);
} else if (cc.vv.gameNetMgr.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ) {
var e = this.node.getChildByName("btn_chat"), t = this.node.getChildByName("btn_voice"), i = e.getComponent(cc.Widget);
e.setPosition(e.x, e.y - 570);
t.setPosition(t.x, t.y - 470);
i.right = 150;
}
}
});
cc._RF.pop();
}, {
buffer: 47
} ],
Chat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "58f27rxustNsYlRX3fryN8X", "Chat");
cc.Class({
extends: cc.Component,
properties: {
_chatRoot: null,
_tabQuick: null,
_emoji: null,
_tabRecord: null,
_iptChat: null,
_quickChatInfo: null,
item_prefab: {
default: null,
type: cc.Prefab
},
item_content: {
default: null,
type: cc.Node
}
},
onLoad: function() {
if (null != cc.vv) {
(cc.vv.chat = this)._chatRoot = this.node;
this._chatRoot.active = !1;
this._chatRoot.setLocalZOrder(1e3);
this._tabQuick = this._chatRoot.getChildByName("quickchatlist");
this._tabQuick.active = !0;
this._emoji = this._chatRoot.getChildByName("emojis");
this._emoji.active = !1;
this._tabRecord = this._chatRoot.getChildByName("recordList");
this._tabRecord.active = !1;
this._iptChat = this._chatRoot.getChildByName("iptChat").getComponent(cc.EditBox);
this._quickChatInfo = {};
this._quickChatInfo.item0 = {
index: 0,
content: "快点啊，都等到我花儿都谢谢了！",
sound: "resources/hall/sounds/fix_msg_1.mp3"
};
this._quickChatInfo.item1 = {
index: 1,
content: "怎么又断线了，网络怎么这么差啊！",
sound: "resources/hall/sounds/fix_msg_2.mp3"
};
this._quickChatInfo.item2 = {
index: 2,
content: "不要走，决战到天亮！",
sound: "resources/hall/sounds/fix_msg_3.mp3"
};
this._quickChatInfo.item3 = {
index: 3,
content: "你的牌打得也太好了！",
sound: "resources/hall/sounds/fix_msg_4.mp3"
};
this._quickChatInfo.item4 = {
index: 4,
content: "你是妹妹还是哥哥啊？",
sound: "resources/hall/sounds/fix_msg_5.mp3"
};
this._quickChatInfo.item5 = {
index: 5,
content: "和你合作真是太愉快了！",
sound: "resources/hall/sounds/fix_msg_6.mp3"
};
this._quickChatInfo.item6 = {
index: 6,
content: "大家好，很高兴见到各位！",
sound: "resources/hall/sounds/fix_msg_7.mp3"
};
this._quickChatInfo.item7 = {
index: 7,
content: "各位，真是不好意思，我得离开一会儿。",
sound: "resources/hall/sounds/fix_msg_8.mp3"
};
this._quickChatInfo.item8 = {
index: 8,
content: "不要吵了，专心玩游戏吧！",
sound: "resources/hall/sounds/fix_msg_9.mp3"
};
this.node.active = !1;
}
},
getQuickChatInfo: function(e) {
var t = "item" + e;
return this._quickChatInfo[t];
},
onBtnChatClicked: function() {
cc.vv.audioMgr.playBtnClick();
this._chatRoot.active = !0;
},
onBgClicked: function() {
cc.vv.audioMgr.playBtnClick();
this._chatRoot.active = !1;
},
onTabClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target;
if ("btn_cyy" == t.name) {
this._tabQuick.active = !0;
this._emoji.active = !1;
this._tabRecord.active = !1;
} else if ("btn_emoji" == t.name) {
this._tabQuick.active = !1;
this._emoji.active = !0;
this._tabRecord.active = !1;
} else if ("btn_record" == t.name) {
this._tabQuick.active = !1;
this._emoji.active = !1;
this._tabRecord.active = !0;
}
},
onQuickChatItemClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this._chatRoot.active = !1;
var t = this._quickChatInfo[e.target.name];
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("quick_chat", t.index);
},
onEmojiItemClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this._chatRoot.active = !1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("emoji", e.target.name);
},
onBtnSendChatClicked: function() {
cc.vv.audioMgr.playBtnClick();
this._chatRoot.active = !1;
if ("" != this._iptChat.string) {
for (var e = this._iptChat.string; -1 != e.indexOf("\\"); ) e = e.replace("\\", "");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("chat", e);
this._iptChat.string = "";
}
},
addchatRecord: function(e) {
var t = [];
t = t.concat(this.item_content.getChildren());
this.item_content.removeAllChildren(!1);
var i = cc.instantiate(this.item_prefab);
i.parent = this.item_content;
for (var n in t) t[n].parent = this.item_content;
i.getChildByName("label").getComponent(cc.Label).string = e;
}
});
cc._RF.pop();
}, {} ],
Choice: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4b17azCghH67z8RIRz3DX5", "Choice");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
if (null != cc.vv) {
(cc.vv.choice = this)._choice = this.node;
this._choice.setLocalZOrder(1e3);
this.defaultBackgroud();
}
},
defaultBackgroud: function() {
this.zhuomian = this._choice.getChildByName("ToggleGroup_zhuomian");
var e = cc.vv.gameNetMgr.getGameTypeStr(), t = cc.sys.localStorage.getItem(e);
if (t) {
var i = JSON.parse(t).zhuo;
this.onGameBackgroud(i);
console.log("查找上局游戏桌布选择界面保存的数据：桌面 : " + i);
for (var n = 0; n < this.zhuomian.children.length; n++) {
this.zhuomian.children[n].getComponent(cc.Toggle).isChecked = n == i;
}
} else {
this.onGameBackgroud(1);
for (n = 0; n < this.zhuomian.children.length; n++) {
this.zhuomian.children[n].getComponent(cc.Toggle).isChecked = 1 == n;
}
console.log("未保存过数据时，默认桌面信息：桌面 : 1");
}
},
onGameBackgroud: function(e) {
var i = cc.find("Canvas/bg/Z_backgroud");
i && cc.loader.loadRes("game/public/bj_" + e, cc.SpriteFrame, function(e, t) {
i.getComponent(cc.Sprite).spriteFrame = t;
console.log("桌面背景：" + i.getComponent(cc.Sprite).spriteFrame.name);
});
},
onBtnChoice: function() {
cc.vv.audioMgr.playBtnClick();
this.zhuomian = this._choice.getChildByName("ToggleGroup_zhuomian");
for (var e = 0; e < this.zhuomian.children.length; e++) {
if (this.zhuomian.children[e].getComponent(cc.Toggle).isChecked) {
var t = e;
break;
}
}
var i = cc.vv.gameNetMgr.getGameTypeStr(), n = {
game: i,
zhuo: t
};
cc.sys.localStorage.setItem(i, JSON.stringify(n));
console.log("本次保存的桌面数据：桌面 : " + t);
this.onGameBackgroud(t);
cc.vv.choice = null;
cc.vv.UILoader.destroy(this.node);
},
onBtnChoice_close: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.choice = null;
cc.vv.UILoader.destroy(this.node);
}
});
cc._RF.pop();
}, {} ],
ChoumaItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "48ebemz5HlH0orSgo9v4Y2z", "ChoumaItem");
cc.Class({
extends: cc.Component,
properties: {
num: cc.Label,
bg1: cc.Node,
bg2: cc.Node,
bg3: cc.Node,
bg4: cc.Node,
bg5: cc.Node,
bg6: cc.Node,
bg7: cc.Node
},
onLoad: function() {},
setValue: function(e, t) {
this.num.string = t;
this.bg1.active = !1;
this.bg2.active = !1;
this.bg3.active = !1;
this.bg4.active = !1;
this.bg5.active = !1;
this.bg6.active = !1;
this.bg7.active = !1;
switch (e) {
case 1:
this.bg1.active = !0;
break;

case 2:
this.bg2.active = !0;
break;

case 3:
this.bg3.active = !0;
break;

case 4:
this.bg4.active = !0;
break;

case 5:
this.bg5.active = !0;
break;

case 6:
this.bg6.active = !0;
break;

case 7:
this.bg7.active = !0;
}
},
setValueByCion: function(e, t) {
this.num.string = t;
this.bg1.active = !1;
this.bg2.active = !1;
this.bg3.active = !1;
this.bg4.active = !1;
this.bg5.active = !1;
this.bg6.active = !1;
this.bg7.active = !1;
t < 16 ? this.bg4.active = !0 : 19 < t && t < 46 ? this.bg1.active = !0 : 49 < t && t < 96 ? this.bg5.active = !0 : 99 < t && t < 196 ? this.bg7.active = !0 : 199 < t && (this.bg6.active = !0);
},
setValueByCionBy21D: function(e, t) {
this.num.string = t;
this.bg1.active = !1;
this.bg2.active = !1;
this.bg3.active = !1;
this.bg4.active = !1;
this.bg5.active = !1;
this.bg6.active = !1;
this.bg7.active = !1;
t < 20 ? this.bg1.active = !0 : 19 < t && t < 30 ? this.bg6.active = !0 : 29 < t && t < 50 ? this.bg4.active = !0 : 49 < t && t < 99 ? this.bg2.active = !0 : 99 < t && (this.bg5.active = !0);
},
setValueByCionBySDB: function(e, t) {
this.num.string = t;
this.bg1.active = !1;
this.bg2.active = !1;
this.bg3.active = !1;
this.bg4.active = !1;
this.bg5.active = !1;
this.bg6.active = !1;
this.bg7.active = !1;
t < 10 ? this.bg3.active = !0 : t < 20 && 9 < t ? this.bg1.active = !0 : 19 < t && t < 30 ? this.bg6.active = !0 : 29 < t && t < 50 ? this.bg4.active = !0 : 49 < t && t < 99 ? this.bg2.active = !0 : 99 < t && (this.bg5.active = !0);
}
});
cc._RF.pop();
}, {} ],
ClubChangName: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "15234nDyeZCgK+7IgusPOZJ", "ClubChangName");
cc.Class({
extends: cc.Component,
properties: {
_curr_unionid: -1,
_curr_createrID: -1
},
onLoad: function() {
if (null != cc.vv) {
this.union_name = this.node.getChildByName("unionEdit").getComponent(cc.EditBox);
this.node.active = !1;
cc.vv.clubChangeName = this;
}
},
openNode: function(e, t) {
this.node.active = !0;
this.initMsgHandler();
this._curr_unionid = e;
this._curr_createrID = t;
},
closeNode: function() {
this.node.active = !1;
cc.vv.netMgr.hallIEventDispatcher.off("change_union_name");
},
onChangeNameOk: function() {
if (null != this.union_name.string) {
this.node.active = !1;
var e = this.union_name.string, t = {
account: cc.vv.userMgr.account,
unionid: this._curr_unionid,
new_union_name: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("change_union_name", t);
} else cc.vv.alert.show("请输入俱乐部名称");
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("change_union_name", this.onMsgChangeUnionName.bind(this));
},
onMsgChangeUnionName: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.alert.show(" ", "修改成功");
cc.vv.netMgr.hallIEventDispatcher.off("change_union_name");
cc.find("Canvas/clubMain").emit("update_unions");
}
}
});
cc._RF.pop();
}, {} ],
ClubChat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0812atlPsFG4KEPWMfvUCE7", "ClubChat");
cc.Class({
extends: cc.Component,
properties: {
chatItem: cc.Prefab,
chatMeItem: cc.Prefab,
chatContent: cc.Node,
chatScrollView: cc.ScrollView
},
onLoad: function() {
this.node.active = !1;
(cc.vv.clubChat = this).inputMsg = this.node.getChildByName("chatBg").getChildByName("kuangBg").getChildByName("EditBox").getComponent(cc.EditBox);
this.chatContent.removeAllChildren();
this.lastLen = 540;
this.meSendMsgItemArr = [];
this.msg_id = 0;
this.last_chat_id = 0;
this.openFirstTime = !0;
},
start: function() {},
init: function() {
this.chatContent.removeAllChildren();
this.meSendMsgItemArr = [];
this.chatContent.height = 0;
this.chatContent.y = 270;
this.lastLen = 540;
this.isGetHistory = !1;
},
onBtnSendMsg: function() {
var e = this.inputMsg.string;
if ("" != e) {
var t = {
chat_msg: e,
unionid: this._curr_unionid,
chat_type: 1,
msg_id: this.msg_id
};
this.dealMeMsg(t, 1);
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].send("union_chat", t);
this.inputMsg.string = "";
} else cc.vv.alert.show("提示", "不能发送空白消息");
},
dealGetChatMsg: function(e, t, i) {
if (e.unionid == this._curr_unionid) {
if (e.user_id == cc.vv.userMgr.userId) if (1 == e.chat_type) if (t) this.dealHistoryMsg(1, e, 1); else {
this.dealContent(1, e, 1);
this.inputMsg.string = "";
} else 2 == e.chat_type && (t ? this.dealHistoryMsg(1, e, 2) : this.dealContent(1, e, 2)); else 1 == e.chat_type ? t ? this.dealHistoryMsg(2, e, 1) : this.dealContent(2, e, 1) : 2 == e.chat_type && (t ? this.dealHistoryMsg(2, e, 2) : this.dealContent(2, e, 2));
i && this.chatScrollView.scrollToBottom();
}
},
dealMeMsg: function(e, t, i, n) {
var a = cc.instantiate(this.chatMeItem), s = a.getComponent("chatMsgItem");
s.msg_id = this.msg_id;
this.msg_id++;
s.msg = e.chat_msg;
s.failSprite.active = !1;
s.quanSprite.active = !0;
e.user_name = cc.vv.userMgr.userName;
e.user_id = cc.vv.userMgr.userId;
s.setUserInfo(e);
if (i) {
s.failSprite.active = !1;
s.quanSprite.active = !1;
}
this.meSendMsgItemArr.push(s);
this.chatContent.addChild(a);
if (1 == t) {
var c = (r = a.getChildByName("paopao")).getChildByName("New Label");
c.getComponent("cc.Label").string = e.chat_msg;
this.setLabelOverFlow(c);
r.width = c.width + 40;
r.height = r.height + 32 * (parseInt(c.height / 32) - 1);
a.height = a.height + 32 * (parseInt(c.height / 32) - 1);
} else {
var r, o = a.getChildByName("yuyinpao");
(r = a.getChildByName("paopao")).active = !1;
o.active = !0;
s.failSprite.x = 260 - o.x - e.time / 15 * 100;
s.quanSprite.x = 260 - o.x - e.time / 15 * 100;
}
for (var h = 0, l = 0; l < this.chatContent.children.length; l++) {
h = this.chatContent.children[l].height + h;
cc.log("len", h);
}
540 < h + 12 + 12 * (this.chatContent.children.length - 1) && this.chatScrollView.scrollToBottom(.1);
},
setLabelOverFlow: function(e) {
var t = e.getComponent("cc.Label");
if (e.width < 310) t.overflow = cc.Label.Overflow.NONE; else {
t.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
e.width = 310;
}
},
dealMeHistoryMsg: function(e, t, i) {
var n = cc.instantiate(this.chatMeItem), a = n.getComponent("chatMsgItem");
a.msg_id = this.msg_id;
this.msg_id++;
a.msg = e.chat_msg;
a.failSprite.active = !1;
a.quanSprite.active = !1;
e.user_name = cc.vv.userMgr.userName;
e.user_id = cc.vv.userMgr.userId;
a.setUserInfo(e);
a.showSendTime(e.create_time);
var s = [];
(s = s.concat(this.chatContent.getChildren())).unshift(n);
this.chatContent.removeAllChildren(!1);
for (var c = 0; c < s.length; c++) this.chatContent.addChild(s[c]);
if (1 == t) {
var r = (o = n.getChildByName("paopao")).getChildByName("New Label");
r.getComponent("cc.Label").string = e.chat_msg;
this.setLabelOverFlow(r);
o.width = r.width + 40;
o.height = o.height + 32 * (parseInt(r.height / 32) - 1);
n.height = n.height + 32 * (parseInt(r.height / 32) - 1);
} else {
var o, h = n.getChildByName("yuyinpao");
(o = n.getChildByName("paopao")).active = !1;
h.active = !0;
a.failSprite.x = 260 - h.x - e.time / 15 * 100;
a.quanSprite.x = 260 - h.x - e.time / 15 * 100;
a.setVoiceMsg(e);
a.showVoiceTime(e.time);
a.setReadStatu();
}
},
dealContent: function(e, t, i) {
if (1 == e) {
for (var n = 0, a = 0; a < this.meSendMsgItemArr.length; a++) if (this.meSendMsgItemArr[a].msg_id == t.msg_id) {
this.meSendMsgItemArr[a].count = -1;
this.meSendMsgItemArr[a].failSprite.active = !1;
this.meSendMsgItemArr[a].quanSprite.active = !1;
if (2 == i) {
this.meSendMsgItemArr[a].setVoiceMsg(t);
this.meSendMsgItemArr[a].showVoiceTime(t.time);
this.meSendMsgItemArr[a].setReadStatu();
}
this.meSendMsgItemArr[a].showSendTime(t.create_time);
n++;
this.meSendMsgItemArr.splice(a, 1);
break;
}
0 == n && this.dealMeMsg(t, t.chat_type, !0);
} else {
var s = cc.instantiate(this.chatItem), c = s.getComponent("chatMsgItem");
c.setUserInfo(t);
c.showSendTime(t.create_time);
if (1 == i) {
this.chatContent.addChild(s);
var r = (o = s.getChildByName("paopao")).getChildByName("New Label");
r.getComponent("cc.Label").string = t.chat_msg;
this.setLabelOverFlow(r);
o.width = r.width + 40;
o.height = o.height + 32 * (parseInt(r.height / 32) - 1);
s.height = s.height + 32 * (parseInt(r.height / 32) - 1);
} else {
this.chatContent.addChild(s);
var o, h = s.getChildByName("yuyinpao");
(o = s.getChildByName("paopao")).active = !1;
h.active = !0;
c.setVoiceMsg(t);
c.showVoiceTime(t.time);
c.setReadStatu();
}
var l = 0;
for (a = 0; a < this.chatContent.children.length; a++) {
l = this.chatContent.children[a].height + l;
cc.log("len", l);
}
540 < l + 12 + 12 * (this.chatContent.children.length - 1) && this.contentGoToBottom();
}
},
contentGoToBottom: function() {
for (var e = 0, t = 0; t < this.chatContent.children.length; t++) {
e = this.chatContent.children[t].height + e;
cc.log("len", e);
}
var i = e + 12 + 12 * (this.chatContent.children.length - 1), n = i - 540 + 270 - this.chatScrollView.getContentPosition().y;
0 <= n && n <= 300 && 540 < i && this.chatScrollView.scrollToBottom(.1);
},
dealHistoryMsg: function(e, t, i) {
if (1 == e) this.dealMeHistoryMsg(t, t.chat_type, !0); else {
var n = cc.instantiate(this.chatItem), a = n.getComponent("chatMsgItem");
a.setUserInfo(t);
a.showSendTime(t.create_time);
if (1 == i) {
(r = (r = []).concat(this.chatContent.getChildren())).unshift(n);
this.chatContent.removeAllChildren(!1);
for (var s = 0; s < r.length; s++) this.chatContent.addChild(r[s]);
var c = (o = n.getChildByName("paopao")).getChildByName("New Label");
c.getComponent("cc.Label").string = t.chat_msg;
o.width = c.width + 40;
o.height = o.height + 32 * (parseInt(c.height / 32) - 1);
n.height = n.height + 32 * (parseInt(c.height / 32) - 1);
} else {
var r;
(r = (r = []).concat(this.chatContent.getChildren())).unshift(n);
this.chatContent.removeAllChildren(!1);
for (s = 0; s < r.length; s++) this.chatContent.addChild(r[s]);
var o, h = n.getChildByName("yuyinpao");
(o = n.getChildByName("paopao")).active = !1;
h.active = !0;
a.setVoiceMsg(t);
a.showVoiceTime(t.time);
a.setReadStatu();
}
}
this.isGetHistory = !1;
},
dealDisConnect: function() {
for (var e = 0; e < this.meSendMsgItemArr; e++) {
this.meSendMsgItemArr[e].failSprite.active = !0;
this.meSendMsgItemArr[e].quanSprite.active = !1;
}
},
onbtnChange: function(e, t) {
var i = this.node.getChildByName("chatBg").getChildByName("btn_voice"), n = this.node.getChildByName("chatBg").getChildByName("kuangBg");
if (1 == t) {
n.active = !1;
i.active = !0;
} else {
n.active = !0;
i.active = !1;
}
},
openNode: function(e, t) {
this.node.active = !0;
this._curr_unionid = e;
this._curr_createrID = t;
},
closeNode: function() {
this.node.active = !1;
},
OnScrollEvent: function(e, t) {
if (this.chatContent.y < 270 && 0 == this.isGetHistory) {
this.isGetHistory = !0;
t = {
last_chat_id: this.last_chat_id,
unionid: this._curr_unionid
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].send("history_union_chat", t);
}
}
});
cc._RF.pop();
}, {} ],
ClubFriend: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5eb5exQoI1GSb1L+JNhEJfb", "ClubFriend");
cc.Class({
extends: cc.Component,
properties: {
scrollview: {
default: null,
type: cc.ScrollView
},
_viewlist: null,
_content: null,
_viewitemTemp: null,
_curr_unionid: -1,
_curr_createrID: -1,
_membersList: [],
_invitationID: 0
},
onLoad: function() {
if (null != cc.vv) {
this._dataEventHandler = cc.find("Canvas/clubMain");
this._node_bg = this.node.getChildByName("node_bg");
this._viewlist = this._node_bg.getChildByName("viewlist");
this._btn_node = this._node_bg.getChildByName("btn_node");
this._addNode = this._node_bg.getChildByName("addNode");
this._addNode.active = !1;
this._searchNode = this._addNode.getChildByName("searchNode");
this._searchWaiting = this._addNode.getChildByName("searchWaiting");
this.quanSprite = this._searchWaiting.getChildByName("searchQuan");
this._searchUser = this._addNode.getChildByName("searchUser");
this._content = cc.find("view/content", this._viewlist);
this._viewitemTemp = this._content.children[0];
this._content.removeChild(this._viewitemTemp);
this.node.active = !1;
cc.vv.clubFriend = this;
}
},
start: function() {},
openNode: function(e, t) {
this.node.active = !0;
this.initMsgHandler();
this._curr_unionid = e;
this._curr_createrID = t;
this._addNode.active = !1;
this._viewlist.active = !0;
t == cc.vv.userMgr.userId ? this._node_bg.getChildByName("btn_node").active = !0 : this._node_bg.getChildByName("btn_node").active = !1;
var i = {
account: cc.vv.userMgr.account,
unionid: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_members", i);
},
closeNode: function() {
this.node.active = !1;
cc.vv.netMgr.hallIEventDispatcher.off("get_members");
cc.vv.netMgr.hallIEventDispatcher.off("invite_union");
cc.vv.netMgr.hallIEventDispatcher.off("get_user_info");
cc.vv.netMgr.hallIEventDispatcher.off("delete_member");
cc.vv.netMgr.hallIEventDispatcher.off("shield_join");
},
onAddClicked: function(e, t) {
cc.vv.audioMgr.playBtnClick();
this._viewlist.active = !1;
this._addNode.active = !0;
this.showSearchNode(1);
},
showSearchNode: function(e, t) {
if (1 == e) {
this._searchNode.active = !0;
this._searchWaiting.active = !1;
this._searchUser.active = !1;
this._searchNode.getChildByName("addEdit").getComponent(cc.EditBox).string = "";
} else if (2 == e) {
this._searchNode.active = !1;
this._searchWaiting.active = !0;
this._searchUser.active = !1;
} else if (3 == e) {
this._searchNode.active = !1;
this._searchWaiting.active = !1;
this._searchUser.active = !0;
this._searchUser.getChildByName("lb_name").getComponent(cc.Label).string = t.name;
this._searchUser.getChildByName("lb_ID").getComponent(cc.Label).string = "ID:" + t.user_id;
var i = this._searchUser.getChildByName("headimg").getChildByName("head");
this.initAtavar(i, t.headimg);
this._invitationID = t.user_id;
}
},
initAtavar: function(e, t) {
e.getComponent("Atavar").load(t);
},
onBtnSendInvitation: function() {
var e = {
account: cc.vv.userMgr.account,
unionid: this._curr_unionid,
invited_user_id: this._invitationID
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("invite_union", e);
},
onBtnSearchPlayer: function() {
var e = this._searchNode.getChildByName("addEdit").getComponent(cc.EditBox);
if ("" == e.string) cc.vv.alert.show("提示", "请输入玩家ID..."); else {
for (var t = 0; t < this._membersList.length; t++) if (this._membersList[t].userid == e.string) {
cc.vv.alert.show("提示", "该玩家是俱乐部成员...");
this.showSearchNode(1);
return;
}
var i = {
user_id: e.string,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_user_info", i);
this.showSearchNode(2);
}
},
onDelClicked: function() {
cc.vv.audioMgr.playBtnClick();
this.updateFriendList(2);
},
onPBClicked: function() {
cc.vv.audioMgr.playBtnClick();
this.updateFriendList(3);
},
getViewItem: function(e) {
var t = this._content;
if (t.childrenCount > e) return t.children[e];
var i = cc.instantiate(this._viewitemTemp);
t.addChild(i);
return i;
},
shrinkContent: function(e) {
for (;this._content.childrenCount > e; ) {
var t = this._content.children[this._content.childrenCount - 1];
this._content.removeChild(t, !0);
}
},
updateFriendList: function(e) {
for (var t = this._curr_unionid, i = this._curr_createrID, n = this._membersList, a = 0; a < n.length; ++a) {
var s = n[a], c = this.getViewItem(a);
c.unionid = t;
c.user_id = s.userid;
c.getChildByName("zhu_img").active = s.userid == i;
c.getChildByName("lb_name").getComponent(cc.Label).string = s.username;
c.getChildByName("lb_ID").getComponent(cc.Label).string = "ID:" + s.userid;
var r = c.getChildByName("headimg").getChildByName("head");
this.initAtavar(r, s.headimg);
var o = c.getChildByName("del"), h = c.getChildByName("bt_pb"), l = c.getChildByName("im_sm");
o.active = !1;
h.active = !1;
l.active = !1;
2 == e && s.userid != i ? o.active = !0 : 3 == e && s.userid != i ? h.active = !0 : l.active = !0;
c.getChildByName("im_sm_an").active = !1;
}
this.shrinkContent(n.length);
},
onBtnClicked: function(e) {},
onBtnDelClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.parent.unionid, i = e.target.parent.user_id;
cc.vv.alert.show("提示", "确定删除该玩家？", function() {
var e = {
account: cc.vv.userMgr.account,
unionid: t,
delete_user_id: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("delete_member", e);
}, !0);
},
onBtnPBClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.parent.unionid, i = e.target.parent.user_id, n = {
account: cc.vv.userMgr.account,
unionid: t,
apply_userid: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("shield_join", n);
},
onBtnCloseThisNode: function() {
this.dispatchEvent("close_friend_node");
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
update: function(e) {
0 == this._searchWaiting.active && (this.quanSprite.rotation = this.quanSprite.rotation + 45 * e);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_members", this.onMsgGetMembers.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("invite_union", this.onMsgInviteUnion.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_user_info", this.onMsggetUserInfo.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("delete_member", this.onMsgDeleteMember.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("shield_join", this.onMsgShieldJoin.bind(this));
},
onMsgGetMembers: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
this._membersList = e.members;
this.updateFriendList(1);
}
},
onMsgInviteUnion: function(e) {
if (0 == (e = e.detail).errcode) {
cc.log("邀请好友", e);
cc.vv.alert.show("提示", "邀请成功,等待玩家同意");
this.showSearchNode(1);
} else {
cc.vv.alert.show("提示", "邀请失败");
this.showSearchNode(1);
}
},
onMsggetUserInfo: function(e) {
0 == (e = e.detail).errcode ? this.showSearchNode(3, e) : cc.vv.alert.show("提示", "用户不存在!");
},
onMsgDeleteMember: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
e.members;
this.openNode(this._curr_unionid, this._curr_createrID);
}
},
onMsgShieldJoin: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
e.members;
this.openNode(this._curr_unionid, this._curr_createrID);
}
}
});
cc._RF.pop();
}, {} ],
ClubItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "01e2drHHc5E57Hf+oKYudNX", "ClubItem");
cc.Class({
extends: cc.Component,
properties: {
icon_winCount: {
default: null,
type: cc.Sprite
},
icon_maxWinScore: {
default: null,
type: cc.Sprite
},
label_name: {
default: null,
type: cc.Label
},
label_id: {
default: null,
type: cc.Label
},
label_wordWinCount: {
default: null,
type: cc.Label
},
label_wordMaxWinScore: {
default: null,
type: cc.Label
},
label_winCount: {
default: null,
type: cc.Label
},
label_maxWinScore: {
default: null,
type: cc.Label
},
label_rank: {
default: null,
type: cc.Label
}
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
ClubMail: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7e1a5a6h4NGHqSWtzNDJS4Y", "ClubMail");
cc.Class({
extends: cc.Component,
properties: {
scrollview: {
default: null,
type: cc.ScrollView
},
_viewlist: null,
_content: null,
_viewitemTemp: null,
_emptyTip: null,
_curr_unionid: -1
},
onLoad: function() {
if (null != cc.vv) {
this._dataEventHandler = cc.find("Canvas/clubMain");
this._node_bg = this.node.getChildByName("node_bg");
this._viewlist = this._node_bg.getChildByName("viewlist");
this._content = cc.find("view/content", this._viewlist);
this._viewitemTemp = this._content.children[0];
this._content.removeChild(this._viewitemTemp);
this._emptyTip = this._node_bg.getChildByName("emptyTip");
this._emptyTip.active = !0;
this.node.active = !1;
cc.vv.clubMail = this;
}
},
start: function() {},
openNode: function(e) {
this.node.active = !0;
this.initMsgHandler();
this._curr_unionid = e;
var t = {
account: cc.vv.userMgr.account,
unionid: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_applys", t);
},
closeNode: function() {
this.node.active = !1;
cc.vv.netMgr.hallIEventDispatcher.off("get_applys");
cc.vv.netMgr.hallIEventDispatcher.off("agree_join");
cc.vv.netMgr.hallIEventDispatcher.off("refuse_join");
cc.vv.netMgr.hallIEventDispatcher.off("shield_join");
},
getViewItem: function(e) {
var t = this._content;
if (t.childrenCount > e) return t.children[e];
var i = cc.instantiate(this._viewitemTemp);
t.addChild(i);
return i;
},
shrinkContent: function(e) {
for (;this._content.childrenCount > e; ) {
var t = this._content.children[this._content.childrenCount - 1];
this._content.removeChild(t, !0);
}
},
updateMailList: function(e) {
for (var t = this._curr_unionid, i = 0; i < e.length; ++i) {
var n = e[i], a = this.getViewItem(i);
a.unionid = t;
a.apply_userid = n.userid;
a.getChildByName("lb_name").getComponent(cc.Label).string = n.username;
var s = a.getChildByName("headimg").getChildByName("head");
this.initAtavar(s, n.userid);
a.getChildByName("lb_accept").active = !0;
a.getChildByName("lb_del").active;
}
this.shrinkContent(e.length);
this._emptyTip.active = 0 == e.length;
},
initAtavar: function(e, t) {
e.getComponent("Atavar").load(t);
},
onBtnAcceptClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.wc.show("");
var t = e.target.parent.parent.unionid, i = e.target.parent.parent.apply_userid, n = {
account: cc.vv.userMgr.account,
unionid: t,
apply_userid: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("agree_join", n);
},
onBtnDelClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.wc.show("");
var t = e.target.parent.parent.unionid, i = e.target.parent.parent.apply_userid, n = {
account: cc.vv.userMgr.account,
unionid: t,
apply_userid: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("refuse_join", n);
},
onBtnPBClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.wc.show("");
var t = e.target.parent.parent.unionid, i = e.target.parent.parent.apply_userid, n = {
account: cc.vv.userMgr.account,
unionid: t,
apply_userid: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("shield_join", n);
},
onBtnCloseThisNode: function() {
this.dispatchEvent("close_mail_node");
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_applys", this.onMsgGetApplys.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("agree_join", this.onMsgAgreeJoin.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("refuse_join", this.onMsgRefuseJoin.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("shield_join", this.onMsgShieldJoin.bind(this));
},
onMsgGetApplys: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = e.applys;
cc.vv.wc.hide();
0 == i.length && this.dispatchEvent("no_mail", this._curr_unionid);
this.updateMailList(i);
}
},
onMsgAgreeJoin: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.wc.hide();
cc.vv.alert.show(" ", "同意加入！");
this.openNode(this._curr_unionid);
}
},
onMsgRefuseJoin: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.wc.hide();
cc.vv.alert.show(" ", "拒绝加入成功！");
this.openNode(this._curr_unionid);
}
},
onMsgShieldJoin: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.wc.hide();
cc.vv.alert.show("屏蔽成功", t);
this.openNode(this._curr_unionid);
}
}
});
cc._RF.pop();
}, {} ],
ClubSetAutomatic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a9d83wB7VFBXLudEPh/RuCR", "ClubSetAutomatic");
cc.Class({
extends: cc.Component,
properties: {
onOpenNode: cc.Toggle,
onCloseNode: cc.Toggle,
highDefend: cc.Toggle,
puTong: cc.Toggle,
roomTypeLab: cc.Label,
jushuLab: cc.Label,
renshuLab: cc.Label,
wanfaLab: cc.Label
},
onLoad: function() {
this.node.active = !1;
cc.vv.clubAutoPre = this;
},
start: function() {},
openNode: function(e, t, i) {
this.node.active = !0;
this.initMsgHandler();
this._curr_unionid = e;
this._curr_createrID = t;
this.autoData = i;
this.init();
},
init: function() {
if (this.autoData.auto_create) {
this.onOpenNode.isChecked = !0;
this.onCloseNode.isChecked = !1;
} else {
this.onOpenNode.isChecked = !1;
this.onCloseNode.isChecked = !0;
}
if (this.autoData.auto_high_defend) {
this.highDefend.isChecked = !0;
this.puTong.isChecked = !1;
} else {
this.highDefend.isChecked = !1;
this.puTong.isChecked = !0;
}
if ("" != this.autoData.create_conf) {
var e = JSON.parse(this.autoData.create_conf);
this.getRuleType(e.server_code, e.type_index, e.rule_index);
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("set_union_auto_create", this.onMsgSetUnionAuto.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("set_union_create_conf", this.onMsgSetUnionAutoConf.bind(this));
},
onBtnOpen: function() {
var e = {
account: cc.vv.userMgr.account,
unionid: this._curr_unionid,
auto_create: 1
};
console.log(e);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("set_union_auto_create", e);
},
onBtnClose: function() {
var e = {
account: cc.vv.userMgr.account,
unionid: this._curr_unionid,
auto_create: 0
};
console.log(e);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("set_union_auto_create", e);
},
onBtnSetting: function() {
cc.vv.userMgr.isClubRoom = !0;
cc.vv.UILoader.loadRes("hall/prefabs/SelectGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, cc.find("Canvas"), function(e) {
e.getComponent("SelectGame").isPrefabMode = !0;
});
});
},
getRuleType: function(e, t, i) {
cc.log(e, t, i);
this.ruleType = {
server_code: e,
type_index: t,
rule_index: i
};
this.roomTypeLab.string = cc.vv.gameType.getGameTypeStr(e);
this.renshuLab.string = cc.vv.gameType.getMaxPlayer(e, t, i) + "人";
this.wanfaLab.string = cc.vv.gameType.getWaFaDecs(e, t, i);
var n = this.wanfaLab.string.split("局")[0].split("");
0 == n[n.length - 1] ? this.jushuLab.string = n[n.length - 2] + n[n.length - 1] + "局" : this.jushuLab.string = n[n.length - 1] + "局";
},
onBtnSureType: function() {
var e = this.highDefend.isChecked ? 1 : 0, t = {
account: cc.vv.userMgr.account,
unionid: this._curr_unionid,
high_defend: e,
conf: JSON.stringify(this.ruleType)
};
console.log(t);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("set_union_create_conf", t);
},
onMsgSetUnionAuto: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else for (var i = 0; i < cc.vv.userMgr.unions.length; i++) if (cc.vv.userMgr.unions[i].union_id == this._curr_unionid) {
0 == cc.vv.userMgr.unions[i].auto_create ? cc.vv.userMgr.unions[i].auto_create = 1 : cc.vv.userMgr.unions[i].auto_create = 0;
break;
}
},
onMsgSetUnionAutoConf: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
cc.vv.alert.show("提示", errorM);
} else {
for (var t = 0; t < cc.vv.userMgr.unions.length; t++) if (cc.vv.userMgr.unions[t].union_id == this._curr_unionid) {
cc.vv.userMgr.unions[t].create_conf = e.conf;
cc.vv.userMgr.unions[t].auto_high_defend = e.high_defend;
break;
}
this.node.active = !1;
}
},
closeNode: function() {
cc.vv.netMgr.hallIEventDispatcher.off("set_union_auto_create");
cc.vv.netMgr.hallIEventDispatcher.off("set_union_create_conf");
this.node.active = !1;
}
});
cc._RF.pop();
}, {} ],
ClubSetting: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1cc8cJ4zS9IeKQJGYlHVRRc", "ClubSetting");
cc.Class({
extends: cc.Component,
properties: {
_curr_unionid: -1,
_curr_createrID: -1
},
onLoad: function() {
if (null != cc.vv) {
this._dataEventHandler = cc.find("Canvas/clubMain");
this._node_creater_bg = this.node.getChildByName("node_creater_bg");
this._node_creater_bg.active = !1;
this._node_member_bg = this.node.getChildByName("node_member_bg");
this._node_member_bg.active = !1;
this.node.active = !1;
cc.vv.clubSetting = this;
}
},
start: function() {},
openNode: function(e, t) {
this.node.active = !0;
this.initMsgHandler();
if (t == cc.vv.userMgr.userId) {
this._node_creater_bg.active = !0;
this._node_member_bg.active = !1;
} else {
this._node_member_bg.active = !0;
this._node_creater_bg.active = !1;
}
this._curr_unionid = e;
this._curr_createrID = t;
},
closeNode: function() {
this.node.active = !1;
cc.vv.netMgr.hallIEventDispatcher.off("dissolve_union");
cc.vv.netMgr.hallIEventDispatcher.off("leave_union");
},
onJSClub: function() {
var t = this;
this.node.active = !1;
cc.vv.alert.show("提示", "是否确定解散俱乐部？", function() {
var e = {
account: cc.vv.userMgr.account,
unionid: t._curr_unionid
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("dissolve_union", e);
}, !0);
},
onLKClub: function() {
var t = this;
this.node.active = !1;
cc.vv.alert.show("提示", "是否确定退出俱乐部？", function() {
var e = {
account: cc.vv.userMgr.account,
unionid: t._curr_unionid
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("leave_union", e);
}, !0);
},
onChangeName: function() {
this.node.active = !1;
cc.vv.clubChangeName.openNode(this._curr_unionid, this._curr_createrID);
},
onBtnCloseThisNode: function() {
this.dispatchEvent("close_setting_node");
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("dissolve_union", this.onMsgDissolveUnion.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("leave_union", this.onMsgLeaveUnion.bind(this));
},
onMsgDissolveUnion: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(datav.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.alert.show(" ", "解散成功！");
for (var i = 0; i < cc.vv.userMgr.unions.length; i++) if (e.unionid == cc.vv.userMgr.unions[i].union_id) {
cc.vv.userMgr.unions.splice(i, 1);
cc.vv.userMgr.unions.length && this.dispatchEvent("click_change_club", cc.vv.userMgr.unions[0].union_id);
break;
}
cc.find("Canvas/clubMain").emit("update_unions");
}
},
onMsgLeaveUnion: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.alert.show(" ", "退出俱乐部成功！");
for (var i = 0; i < cc.vv.userMgr.unions.length; i++) if (e.unionid == cc.vv.userMgr.unions[i].union_id) {
cc.vv.userMgr.unions.splice(i, 1);
cc.vv.userMgr.unions.length && this.dispatchEvent("click_change_club", cc.vv.userMgr.unions[0].union_id);
break;
}
cc.find("Canvas/clubMain").emit("update_unions");
}
}
});
cc._RF.pop();
}, {} ],
Club: [ function(require, module, exports) {
(function(Buffer) {
"use strict";
cc._RF.push(module, "2011btlvpBKApNeaub2V6r3", "Club");
cc.Class({
extends: cc.Component,
properties: {
clubItem_prefab: {
default: null,
type: cc.Prefab
},
_club: null,
shareBG: {
default: null,
type: cc.Node
},
_count: 0,
_showWX: {
default: null,
type: cc.Node
}
},
onLoad: function() {
this._club = this.node.getChildByName("club");
this._club.active = !1;
this._showWX = this._club.getChildByName("ShowWX");
this._showWX.active = !1;
this.inviteCodeNode = this._club.getChildByName("inviteCodeNode");
this.clubContentNode = this._club.getChildByName("clubContentNode");
this.edibox_inviteCode = this.inviteCodeNode.getChildByName("content").getChildByName("edibox_inviteCode");
this.contentNode = this.clubContentNode.getChildByName("bgInside").getChildByName("contentNode");
this.clubContentFrame = this.clubContentNode.getChildByName("bgInside").getChildByName("contentNode").getChildByName("view").getChildByName("content");
this.label_inviteCode = this.clubContentNode.getChildByName("bgInside").getChildByName("titleNode").getChildByName("label_inviteCode");
this.noteNode = this.clubContentNode.getChildByName("bgInside").getChildByName("noteNode");
this.buyCardNode = this._club.getChildByName("buyCardNode");
this.buyCardNode.active = !1;
this.initData();
this.initBtns();
this.initBtnListener();
this.onEnter();
},
openClubContentNode: function() {
this.initSelfInfo();
this.inviteCodeNode.active = !1;
this.clubContentNode.active = !0;
},
openInviteCodeNode: function() {
this.inviteCodeNode.active = !0;
this.clubContentNode.active = !1;
this.edibox_inviteCode.getComponent(cc.EditBox).string = "";
},
initData: function() {
this.btnList = [];
this.clubItemInfoList = [];
this.clubItemInfoRankList = [];
this.scrollView_container_width = 900;
this.scrollView_container_height = 610;
this.clubItemCount = 0;
this.showAtavarIndex = 0;
this.con_wechat = "test_kangkang";
this.con_qq = "test_123";
this.con_phone = "test_12345678901";
},
initBuyCardNode: function() {
var e = this.buyCardNode.getChildByName("lable_weixin").getComponent(cc.Label), t = this.buyCardNode.getChildByName("lable_qq").getComponent(cc.Label), i = this.buyCardNode.getChildByName("lable_phoneNumber").getComponent(cc.Label);
e.string = this.con_wechat;
t.string = this.con_qq;
i.string = this.con_phone;
},
addClickEvent: function(e, t, i, n) {
var a = new cc.Component.EventHandler();
a.target = t;
a.component = i;
a.handler = n;
e.getComponent(cc.Button).clickEvents.push(a);
},
onEnter: function(e) {
this._club.active = !0;
var t = cc.vv.userMgr.web_agent;
if (t) {
this.hideClickedBtn();
this.btnList[this.btnEnum.MENBER + 2].active = !0;
this.openClubContentNode();
this.enterClubRequset();
this.label_inviteCode.getComponent(cc.Label).string = t;
this.contentNode.active = !0;
} else this.clubStatusRequest();
},
onClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.director.loadScene("hall");
},
initSelfInfo: function() {
var e = this._club.getChildByName("clubContentNode").getChildByName("bgInside").getChildByName("selfInfoNode"), t = e.getChildByName("nameFrame").getChildByName("name"), i = e.getChildByName("idFrame").getChildByName("id"), n = e.getChildByName("winCountFrame").getChildByName("winCount"), a = e.getChildByName("maxScoreFrame").getChildByName("score"), s = e.getChildByName("rankFrame").getChildByName("rank"), c = e.getChildByName("headImageMask").getChildByName("headImage");
t.getComponent(cc.Label).string = cc.vv.userMgr.userName;
i.getComponent(cc.Label).string = "ID:" + cc.vv.userMgr.userId;
n.getComponent(cc.Label).string = "赢牌局数：" + cc.vv.userMgr.statistic_get(cc.vv.userMgr.statistic, cc.vv.userMgr.statistic_key.WIN_COUNTS, "未知");
a.getComponent(cc.Label).string = "最大赢分：" + cc.vv.userMgr.statistic_get(cc.vv.userMgr.statistic, cc.vv.userMgr.statistic_key.MAX_WIN_SCORE, "未知");
s.getComponent(cc.Label).string = "排名：20";
var r = cc.vv.baseInfoMap[cc.vv.userMgr.userId].url;
console.log("log----------headImageUrl=:", r);
cc.loader.load({
url: r,
type: "jpg"
}, function(e, t) {
c.active = !0;
if (e) console.log("log-----------------加载图片失败"); else {
var i = new cc.SpriteFrame(t);
c.getComponent(cc.Sprite).spriteFrame = i;
c.setScale(.8125);
}
});
},
initBtns: function() {
var e = this._club.getChildByName("clubContentNode").getChildByName("bgInside").getChildByName("btnNode"), t = e.getChildByName("btn_menber"), i = e.getChildByName("btn_rank"), n = (e.getChildByName("btn_frends"), 
e.getChildByName("btn_Note"), e.getChildByName("btn_menber_click")), a = e.getChildByName("btn_rank_click");
e.getChildByName("btn_frends_click"), e.getChildByName("btn_Note_click");
this.btnList.push(t);
this.btnList.push(i);
this.btnList.push(n);
this.btnList.push(a);
this.btnEnum = {
MENBER: 0,
RANK: 1
};
},
initBtnListener: function() {
var c = this, r = null, e = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !0,
onTouchBegan: function(e, t) {
for (var i = 0; i < c.btnList.length; i++) {
var n = c.btnList[i].convertToNodeSpace(e.getLocation()), a = c.btnList[i].getContentSize(), s = cc.rect(0, 0, a.width, a.height);
if (cc.rectContainsPoint(s, n) && i < 2) {
r = i;
return !0;
}
}
r = -1;
return !0;
},
onTouchMoved: function(e, t) {},
onTouchEnded: function(e, t) {
if (-1 != r) {
cc.vv.audioMgr.playBtnClick();
if (r < 2) {
c.hideClickedBtn();
c.btnList[r + 2].active = !0;
if (c.btnEnum.MENBER === r) {
c.contentNode.active = !0;
c.showMember();
} else if (c.btnEnum.RANK === r) {
c.contentNode.active = !0;
c.showRank();
}
}
}
}
});
cc.eventManager.addListener(e, this._club);
},
hideClickedBtn: function() {
this.btnList[2].active = !1;
this.btnList[3].active = !1;
},
clubStatusRequest: function clubStatusRequest() {
var self = this, fn = function fn(ret) {
if (0 == ret.errcode) if (eval(ret.agent_code)) {
console.log("log---------------------------你已经是俱乐部成员");
self.hideClickedBtn();
self.btnList[self.btnEnum.MENBER + 2].active = !0;
self.openClubContentNode();
self.enterClubRequset();
self.label_inviteCode.getComponent(cc.Label).string = ret.agent_code;
self.contentNode.active = !0;
} else {
console.log("log---------------------------你还不是俱乐部成员");
self.openInviteCodeNode();
} else {
cc.vv.wc.hide();
if (1 == ret.errcode) cc.vv.alert.show("提示", "俱乐部错误"); else {
var errorM = cc.vv.error.errorMsg(ret.errcode);
cc.vv.alert.show("提示", errorM);
}
}
}, data = {
account: cc.vv.userMgr.account
};
cc.vv.http.sendRequest("/agent_invitation_status", data, fn);
},
joinClubRequest: function() {
cc.vv.audioMgr.playBtnClick();
var i = this, e = this.edibox_inviteCode.getComponent(cc.EditBox).string, t = {
account: cc.vv.userMgr.account,
invitation: e
};
cc.vv.http.sendRequest("/add_agent_invitation", t, function(e) {
if (0 == e.errcode) i.clubStatusRequest(); else {
cc.vv.wc.hide();
if (1 == e.errcode) cc.vv.alert.show("提示", "俱乐部错误"); else {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
}
}
});
},
clubInfoRequest: function() {
var p = this, e = {
account: cc.vv.userMgr.account,
page: 0,
page_size: p.clubItemCount
};
cc.vv.http.sendRequest("/show_club", e, function(f) {
if (0 == f.errcode) {
p.clubItemCount = f.all_counts;
if (f.all_counts <= 5) p.clubContentFrame.setContentSize(cc.size(p.scrollView_container_width, p.scrollView_container_height)); else {
p.scrollView_container_height = 119 * f.all_counts;
p.clubContentFrame.setContentSize(p.scrollView_container_width, p.scrollView_container_height);
}
p.contentNode.getComponent(cc.ScrollView).scrollToTop();
cc.loader.loadRes("hall/texturesPublish/club/club", cc.SpriteAtlas, function(e, t) {
var i = t.getSpriteFrame("messageFame1"), n = 0;
for (n = 0; n < f.all_counts; n++) {
var a = cc.instantiate(p.clubItem_prefab);
a.parent = p.clubContentFrame;
a.active = !0;
a.setPosition(0, p.scrollView_container_height / 2 - 59.5 - 119 * n);
a.getChildByName("sprite_bg").getComponent(cc.Sprite).spriteFrame = i;
var s = a.getChildByName("label_name"), c = a.getChildByName("label_id"), r = a.getChildByName("label_winCount"), o = a.getChildByName("label_maxWinScore"), h = a.getChildByName("labe_rank"), l = a.getChildByName("icon_rank"), d = a.getChildByName("headImgMask").getChildByName("headImg"), u = a.getChildByName("headImgFrame");
h.active = !1;
l.active = !1;
d.active = !0;
u.active = !0;
l.setPosition(-380, 0);
s.getComponent(cc.Label).string = new Buffer(f.detail[n].name, "base64").toString();
c.getComponent(cc.Label).string = "ID:" + f.detail[n].userid;
console.log(f.detail[n]);
var v = {
item: a,
level: f.detail[n].lv,
headImg: f.detail[n].headimg
};
p.clubItemInfoList.push(v);
var g = new Buffer(f.detail[n].statistic, "utf8").toString();
if (0 != g.length) {
var _ = JSON.parse(g);
null == _[cc.vv.userMgr.statistic_key.WIN_COUNTS] ? r.getComponent(cc.Label).string = 0 : r.getComponent(cc.Label).string = _[cc.vv.userMgr.statistic_key.WIN_COUNTS];
null == _[cc.vv.userMgr.statistic_key.MAX_WIN_SCORE] ? o.getComponent(cc.Label).string = 0 : o.getComponent(cc.Label).string = _[cc.vv.userMgr.statistic_key.MAX_WIN_SCORE];
}
}
for (var n in p.clubItemInfoList) p.clubItemInfoRankList.push(p.clubItemInfoList[n]);
p.showHeadAtavar();
});
} else {
cc.vv.wc.hide();
if (1 == f.errcode) cc.vv.alert.show("提示", "俱乐部错误"); else {
var e = cc.vv.error.errorMsg(f.errcode);
cc.vv.alert.show("提示", e);
}
}
});
},
enterClubRequset: function() {
var i = this, e = {
account: cc.vv.userMgr.account,
page: 0,
page_size: 100
};
cc.vv.http.sendRequest("/show_club", e, function(e) {
if (0 == e.errcode) {
i.clubItemCount = e.all_counts;
console.log("log---------------ret.other_info=:", e.other_info);
if (e.other_info) {
i.con_wechat = e.other_info.con_wechat;
i.con_qq = e.other_info.con_qq;
i.con_phone = e.other_info.con_phone;
i.initBuyCardNode();
}
i.clubInfoRequest();
} else {
cc.vv.wc.hide();
if (1 == e.errcode) cc.vv.alert.show("提示", "俱乐部错误"); else {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
}
}
});
},
showHeadAtavar: function() {
if (!(this.showAtavarIndex >= this.clubItemInfoList.length)) {
var n = this;
console.log("log----------------开始加载头像");
var e = this.clubItemInfoList[n.showAtavarIndex].headImg, a = this.clubItemInfoList[n.showAtavarIndex].item.getChildByName("headImgMask").getChildByName("headImg");
cc.loader.load({
url: e,
type: "png"
}, function(e, t) {
console.log("log-----------------加载头像返回结果");
a.active = !0;
if (e) console.log("log-----------------加载图片失败"); else {
100 / t.width;
var i = new cc.SpriteFrame(t);
a.getComponent(cc.Sprite).spriteFrame = i;
a.setScale(.7);
}
n.showAtavarIndex++;
n.showHeadAtavar();
});
}
},
showRank: function() {
this.contentNode.getComponent(cc.ScrollView).stopAutoScroll();
this.contentNode.getComponent(cc.ScrollView).scrollToTop();
for (var e = 0; e < this.clubItemInfoRankList.length; e++) for (var t = e + 1; t < this.clubItemInfoRankList.length; t++) if (this.clubItemInfoRankList[e].level < this.clubItemInfoRankList[t].level) {
var i = this.clubItemInfoRankList[e];
this.clubItemInfoRankList[e] = this.clubItemInfoRankList[t];
this.clubItemInfoRankList[t] = i;
}
var h = this;
cc.loader.loadRes("hall/texturesPublish/club/club", cc.SpriteAtlas, function(e, t) {
for (var i in h.clubItemInfoRankList) {
h.clubItemInfoRankList[i].item.setPosition(0, h.scrollView_container_height / 2 - 59.5 - 119 * i);
var n = h.clubItemInfoRankList[i].item.getChildByName("icon_rank"), a = h.clubItemInfoRankList[i].item.getChildByName("headImgMask").getChildByName("headImg"), s = h.clubItemInfoRankList[i].item.getChildByName("headImgFrame");
a.active = !1;
s.active = !1;
n.active = !0;
n.setScale(1);
if (i < 3) {
var c = "icon_place_" + (i - 0 + 1);
console.log("log-----------------------------icon_place_=:", c);
var r = t.getSpriteFrame(c);
n.getComponent(cc.Sprite).spriteFrame = r;
} else {
r = t.getSpriteFrame("icon_place_other");
n.getComponent(cc.Sprite).spriteFrame = r;
var o = h.clubItemInfoRankList[i].item.getChildByName("labe_rank");
o.setPosition(-380, 0);
o.active = !0;
o.getComponent(cc.Label).string = i - 0 + 1;
}
}
});
},
showMember: function() {
this.contentNode.getComponent(cc.ScrollView).stopAutoScroll();
this.contentNode.getComponent(cc.ScrollView).scrollToTop();
var r = this;
cc.loader.loadRes("hall/texturesPublish/club/club", cc.SpriteAtlas, function(e, t) {
for (var i in r.clubItemInfoList) {
r.clubItemInfoList[i].item.setPosition(0, r.scrollView_container_height / 2 - 59.5 - 119 * i);
var n = r.clubItemInfoList[i].item.getChildByName("icon_rank"), a = r.clubItemInfoList[i].item.getChildByName("headImgMask").getChildByName("headImg"), s = r.clubItemInfoList[i].item.getChildByName("labe_rank"), c = r.clubItemInfoList[i].item.getChildByName("headImgFrame");
a.active = !0;
c.active = !0;
n.active = !1;
s.active = !1;
}
});
},
clearData: function() {
this.showAtavarIndex = 0;
this.clearClubItemList();
this.clubItemInfoList.splice(0, this.clubItemInfoList.length);
this.clubItemInfoRankList.splice(0, this.clubItemInfoRankList.length);
console.log("log-----------this.clubItemInfoList=:", this.clubItemInfoList);
console.log("log-----------this.clubItemInfoRankList=:", this.clubItemInfoRankList);
},
clearClubItemList: function() {
for (var e in this.clubItemInfoList) {
console.log("log-----------remove clubItem********=:");
this.clubItemInfoList[e].item.removeFromParent();
this.clubItemInfoRankList[e].item.removeFromParent();
}
},
share: function(a) {
this._count = 0;
var s = this;
cc.vv.wc.show("正在生成俱乐部分享图片");
var e = {
account: cc.vv.userMgr.account,
agent_id: this.label_inviteCode.getComponent(cc.Label).string,
sign: cc.vv.userMgr.sign
};
cc.vv.http.sendRequest("/agent_url", e, function(e) {
if (0 == e.errcode) {
if (e.urls_h && 0 == e.urls_h.length) {
cc.vv.wc.hide();
cc.vv.alert.show("提示", "需要群主设置推广素材");
return;
}
var t = JSON.parse(e.urls_h);
if (t && 0 < t.length) {
var i = Math.floor(Math.random() * t.length), n = t[i];
n = n.replace("https://", "http://");
console.log("生成的图片地址:", n);
s.loadImg(n, i, a);
} else {
cc.vv.alert.show("提示", "需要群主设置推广素材");
cc.vv.wc.hide();
}
} else {
cc.vv.alert.show("提示", "错误码：" + e.errcode);
cc.vv.wc.hide();
}
});
},
onCloseClick: function() {
cc.vv.audioMgr.playBtnClick();
this._showWX.active = !1;
},
onBtnShareClick: function(e, t) {
this._showWX.active = !1;
this.share(t);
},
onBtnShareClubClick: function() {
cc.vv.audioMgr.playBtnClick();
this._showWX.active = !0;
},
onbtnBuyCard: function() {
this.buyCardNode.active = !0;
},
closeBuyCardNode: function() {
this.buyCardNode.active = !1;
},
loadImg: function(e, n, a) {
var s = this;
cc.loader.load({
url: e,
type: "jpg"
}, function(e, t) {
console.log(e);
console.log(t);
cc.vv.wc.hide();
if (e) console.log("log-----------------加载图片失败"); else {
var i = new cc.SpriteFrame(t);
console.log("shareImg" + n);
s.shareBG.active = !0;
s.shareBG.getChildByName("shareImg").getComponent(cc.Sprite).spriteFrame = i;
cc.vv.anysdkMgr.shareResult(a, s.shareBG);
}
});
}
});
cc._RF.pop();
}).call(this, require("buffer").Buffer);
}, {
buffer: 47
} ],
Course: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "08995lcZsJK0K0DHdvG7tKN", "Course");
cc.Class({
extends: cc.Component,
properties: {
_tabList: []
},
onLoad: function() {
cc.find("Canvas/Course/Course/btn_back");
this.scrollView_bg_mc = cc.find("Canvas/Course/Course/scrollView/bg_mc");
this.scrollView_view = cc.find("Canvas/Course/Course/scrollView/view");
this.text_wenti = cc.find("Canvas/Course/Course/scrollView/view/content/text_wenti");
for (var e = cc.find("Canvas/Course/Course/tab_node/btn_type"), t = 1; t < 5; t++) {
var i = "Type" + t;
this._tabList.push(e.getChildByName(i));
}
this.onButtonTab(null, 0);
this.adaptScreen();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this.scrollView_bg_mc.setScaleX(1 * i);
var n = 1180 * i;
this.scrollView_view.setContentSize(cc.size(n, 500));
this.text_wenti.getComponent(cc.RichText).maxWidth = 1150 * i;
},
onButtonTab: function(e, t) {
var i = t;
if (0 == i) {
this._tabList[1].setPosition(0, -325);
this._tabList[2].setPosition(0, -415);
this._tabList[3].setPosition(0, -500);
} else if (1 == i) {
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -415);
this._tabList[3].setPosition(0, -500);
} else if (2 == i) {
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -180);
this._tabList[3].setPosition(0, -500);
} else if (3 == i) {
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -180);
this._tabList[3].setPosition(0, -270);
}
this.showbtnType();
},
showbtnType: function() {
for (var e in this._tabList) {
var t = this._tabList[e];
if (t && t.getComponent(cc.Toggle).isChecked) {
t.getChildByName("New Label").active = !1;
t.getChildByName("icon_nor").active = !1;
for (var i = t.getChildByName("Background").getChildByName("checkmark").getChildByName("tabPageView").getChildByName("view").getChildByName("content").getChildByName("btn_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n];
if (a && a.getComponent(cc.Toggle).isChecked) {
var s = a.getComponent(cc.Toggle).checkEvents[0].customEventData;
this.text_wenti.getComponent(cc.RichText).string = this.getGameTypeStr(s);
}
}
} else {
t.getChildByName("New Label").active = !0;
t.getChildByName("icon_nor").active = !0;
}
}
},
addClickEvent: function(e, t, i, n) {
var a = new cc.Component.EventHandler();
a.target = t;
a.component = i;
a.handler = n;
e.getComponent(cc.Button).clickEvents.push(a);
},
onBtnBackClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
onBtnTypeClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
this.text_wenti.getComponent(cc.RichText).string = this.getGameTypeStr(t);
},
getGameTypeStr: function(e) {
var t = "";
e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN ? t = this.coures_pdk() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD ? t = this.coures_ddz() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? t = this.coures_dnn() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH ? t = this.coures_zjh() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ ? t = this.coures_dzpk() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ || (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 ? t = this.coures_21d() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G ? t = this.coures_3g() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI ? t = this.coures_13s() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA ? t = this.coures_3dh() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT ? t = this.coures_10b() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_SSP ? t = this.coures_ssp() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY ? t = this.coures_fly() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP ? t = this.coures_glzp() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ ? t = this.coures_fzmj() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ ? t = this.coures_wzmj() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HN ? t = this.coures_csmj() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_ZZ ? t = this.coures_zzmj() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HZ ? t = this.coures_hzmj() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC ? t = this.coures_dczb() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_GL ? t = this.coures_glmj() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PAGUO ? t = this.coures_paguo() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PINGOINGLE ? t = "拼拼乐" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ ? t = this.coures_phz() : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT && (t = this.coures_qmt()));
return t;
},
coures_pdk: function() {
return "跑得快经典玩法\n一、   基本规则\n1、  一副牌去掉大小王、3张2、1张A，共剩48张牌，每人16张。\n2、  首局游戏由第一个拿到黑桃3的玩家先出牌，最先出完手中16张牌的人获胜。\n二、  牌型介绍\n1、  单张：1张任意牌，2最大，3最小。\n2、  对子：2张点数相同的牌，AA最大，33最小。\n3、  三带二：点数相同的3张牌+2张任意牌或者一对，如：55534或者55544。在最后一手牌不够带的情况下可以3不带或者3带1。\n4、  顺子：点数相连的5张或5张以上的牌，可以从3连到A。如：910JQKA。\n5、  连对： 2对或2对以上相连的牌，可以从3连到A。如：7788，334455。\n6、  飞机：点数相连的2个及以上的点数相同的3张牌+4张任意牌，可以从3连到A。如：888999+6655、777888999+234566。在最后一手牌牌不够带的时候可以少带或不带。\n7、  炸弹：4张一样的牌，如：8888、3333。炸弹不可以带任何牌。\n8、  全关：有一方玩家全部出完手中牌，还有玩家一张牌都没出时就叫全关。\n三、  积分规则\n1、  一张牌1分\n2、  报单：不进不出（炸弹除外）\n2、  对子：2张点数相同的牌，AA最大，33最小。\n3、  炸弹：每人10分\n4、  全关：被关者手中剩余牌数X2\n5、  红桃10扎鸟：拿到红桃10的玩家输赢分数翻倍（炸弹分除外）\n\n跑得快15张玩法\n一、   基本规则\n1、  一副牌去掉大小王、3张2、3张A、1张K，共剩45张牌，每人15张。\n2、  首局游戏由第一个拿到黑桃3的玩家先出牌，最先出完手中15张牌的人获胜。\n二、  牌型介绍\n1、  单张：1张任意牌，2最大，3最小。\n2、  对子：2张点数相同的牌，AA最大，33最小。\n3、  三带二：点数相同的3张牌+2张任意牌或者一对，如：55534或者55544。在最后一手牌不够带的情况下可以3不带或者3带1。\n4、  顺子：点数相连的5张或5张以上的牌，可以从3连到A。如：910JQKA。\n5、  连对： 2对或2对以上相连的牌，可以从3连到A。如：7788，334455。\n6、  飞机：点数相连的2个及以上的点数相同的3张牌+4张任意牌，可以从3连到A。如：888999+6655、777888999+234566。在最后一手牌牌不够带的时候可以少带或不带。\n7、  炸弹：4张一样的牌，如：8888、3333。炸弹不可以带任何牌。\n8、  全关：有一方玩家全部出完手中牌，还有玩家一张牌都没出时就叫全关。\n三、  积分规则\n1、  一张牌1分\n2、  报单：不进不出（炸弹除外）\n2、  对子：2张点数相同的牌，AA最大，33最小。\n3、  炸弹：每人10分\n4、  全关：被关者手中剩余牌数X2\n5、  红桃10扎鸟：拿到红桃10的玩家输赢分数翻倍（炸弹分除外）\n\n跑得快4人玩法\n一、   基本规则\n1、   一副牌去掉大小王，共剩52张牌，每人13张。\n2、   首局游戏由第一个拿到黑桃3的玩家先出牌，最先出完手中13张牌的人获胜。\n二、  牌型介绍\n1、  单张：1张任意牌，2最大，3最小。\n2、  对子：2张点数相同的牌，AA最大，33最小。\n3、  三带二：点数相同的3张牌+2张任意牌或者一对，如：55534或者55544。在最后一手牌不够带的情况下可以3不带或者3带1。\n4、  顺子：点数相连的5张或5张以上的牌，可以从3连到A。如：910JQKA。\n5、  连对： 2对或2对以上相连的牌，可以从3连到A。如：7788，334455。\n6、  飞机：点数相连的2个及以上的点数相同的3张牌+4张任意牌，可以从3连到A。如：888999+6655、777888999+234566。在最后一手牌牌不够带的时候可以少带或不带。\n7、  炸弹：4张一样的牌，如：8888、3333。炸弹不可以带任何牌。\n8、  全关：有一方玩家全部出完手中牌，还有玩家一张牌都没出时就叫全关。\n三、  积分规则\n1、  一张牌1分\n2、  报单：不进不出（炸弹除外）\n2、  对子：2张点数相同的牌，AA最大，33最小。\n3、  炸弹：每人10分\n4、  全关：被关者手中剩余牌数X2\n5、  红桃10扎鸟：拿到红桃10的玩家输赢分数翻倍（炸弹分除外）";
},
coures_ddz: function() {
return "斗地主\n一、   基本规则\n1、  共54张牌，游戏人数：3人\n2、  游戏开始后,每位玩家先发17张牌，留3张做底牌给地主，在确定地主之前玩家不能看底牌。\n3、  首局由房主先叫分，后面的局由上局先出完牌的玩家先叫分，可以叫1分、2分、3分、不叫，后叫分者只能叫比前面玩家高的分或者不叫，叫牌结束后所叫分值最大的玩家为地 主；如果有玩家叫“3分”则立即结束叫牌，该玩家为地主；如果都不叫，则重新发牌。\n4、  确定地主后，系统将三张底牌交给地主，并亮出底牌让所有人都能看到。\n5、  地主首先出牌，按逆时针顺序依次出牌,轮到用户跟牌时，用户可以选择“不出”或出比上一个玩家大的牌。任意一个玩家先出完所有牌时游戏结束。\n二、牌型介绍\n1、  单张：1张任意牌。\n2、  对子：2张点数相同的牌，22最大，33最小。\n3、  三带一：点数相同的3张牌+任意一张牌。如：6663。\n4、  三带二：点数相同的3张牌+一对。如：55544。\n5、  顺子：点数相连的5张或5张以上的牌，可以从3连到A。如：910JQKA。\n6、  连对：3对或3对以上相连的牌，可以从3连到A。如：334455。\n7、  飞机：点数相连的2个及以上的点数相同的3张牌。如：333444。\n8、  飞机带翅膀：点数相连的2个及以上的点数相同的3张牌+2张任意牌或2对，可以从3连到A。如：888999+6655、777888+45。\n9、  四带二：点数相同的4张牌+2张任意牌或者2对。如：3333+45；3333+4455。\n10、炸弹：点数相同的4张牌。如：3333.\n11、火箭：双王炸（大王和小王）。\n12、春天：地主所有牌出完,其他两家一张牌都未出。\n13、反春：其他两家中有一家先出完牌，地主只出过第一手牌。\n三、牌型大小\n1、  火箭最大，可以大过任何牌。\n2、  炸弹比火箭小，比其它牌大。都是炸弹时按牌的点数比大小。\n3、  出火箭和炸弹外，其它牌必须要牌型相同总张数相同才能比大小。\n4、  单牌按分值比大小，大小次序：大王＞小王＞2＞A＞K＞Q＞J＞10＞9＞8＞7＞6＞5＞4＞3，不分花色。\n5、  四带二：同为四带二的牌按其中4张牌的数值来比，带的牌不影响大小。同时四带二的牌小于四张不带牌的任意炸弹。\n四、积分规则\n1、地主叫的是几分输赢的基础分就是几分。\n2、每出一个炸弹或火箭：翻1倍。\n3、春天：翻1倍。\n4、反春：翻1倍。";
},
coures_dnn: function() {
return "斗牛经典玩法\n一、   基本规则\n一副牌去掉大小王，共剩52张，游戏人数2人至8人，每人随机发5张牌，与其它玩家比大小，JQK视为10点。\n抢庄玩法：所有玩家都可以抢庄，当有多人抢庄时系统将随机选择参与抢庄的一人坐庄，闲家只需要与庄家比牌型大小即可，闲家之间无需比较。\n轮庄玩法：第一局抢庄，之后按逆时针顺序轮流坐庄。\n牛牛做庄：第一局抢庄，之后谁拿到牛牛谁坐庄，如果有几个玩家同时拿到牛牛则谁的牛牛大就谁坐庄。\n牌大坐庄：第一局抢庄，之后谁的牌最大谁坐庄。\n霸王庄：第一局抢庄，之后庄家不变。\n二、  牌型介绍\n牌面点数大小：K>Q>J>10>9>8>7>6>5>4>3>2>A\n三张牌组合成10点、20点、30点的整数才算有牛\n没牛：没有三张牌能组合成整数的牌型（炸弹牛、五小牛除外），如：678QK\n牛一至牛九：三张牌能组合成整数+两张牌的点数相加尾数是1至9，如：46Q+56、479+K9\n牛牛：三张牌能组合成整数+两张牌的点数相加尾数是0，如：55K37、JQKA9\n五花牛：五张牌全是JQK，如：JJQKK、QQQJK\n炸弹牛：四张点数相同的牌+张任何牌，如：6666Q、AAAA3\n五小牛：五张牌的点数相加小于或等于10点，如：223AA、AAA34\n牌型相同的情况下先比五张牌中最大的那张牌的点数，如果点数相同再比花色，花色大小：黑桃>红桃>梅花>方块\n三、  积分规则\n无牛至牛七：1倍\n牛八：2倍\n牛九：3倍\n牛牛：4倍\n五花牛：5倍\n炸弹牛：6倍\n五小牛：7倍\n\n无花牌斗牛\n一、   基本规则\n一副牌去掉大小王、4张K、4张Q、4张J，共剩40张，游戏人数2人至8人，每人随机发5张牌，与其它玩家比大小。\n抢庄玩法：所有玩家都可以抢庄，当有多人抢庄时系统将随机选择参与抢庄的一人坐庄，闲家只需要与庄家比牌型大小即可，闲家之间无需比较。\n轮庄玩法：第一局抢庄，之后按逆时针顺序轮流坐庄。\n牛牛做庄：第一局抢庄，之后谁拿到牛牛谁坐庄，如果有几个玩家同时拿到牛牛则谁的牛牛大就谁坐庄。\n牌大坐庄：第一局抢庄，之后谁的牌最大谁坐庄。\n霸王庄：第一局抢庄，之后庄家不变。\n二、  牌型介绍\n牌面点数大小：10>9>8>7>6>5>4>3>2>A\n三张牌组合成10点、20点、30点的整数才算有牛\n没牛：没有三张牌能组合成整数的牌型（炸弹牛、五小牛除外），如：67834\n牛一至牛九：三张牌能组合成整数+两张牌的点数相加尾数是1至9，如：578+56、479+45\n牛牛：三张牌能组合成整数+两张牌的点数相加尾数是0，如：57837、776A9\n炸弹牛：四张点数相同的牌+张任何牌，如：66665、AAAA3\n五小牛：五张牌的点数相加小于或等于10点，如：223AA、AAA34\n牌型相同的情况下先比五张牌中最大的那张牌的点数，如果点数相同再比花色，花色大小：黑桃>红桃>梅花>方块\n三、  积分规则\n无牛至牛七：1倍\n牛八：2倍\n牛九：3倍\n牛牛：4倍\n炸弹牛：5倍\n五小牛：6倍\n\n斗公牛\n一、   基本规则\n一副牌去掉大小王，共剩52张，游戏人数2人至8人，每人随机发5张牌，与其它玩家比大小，JQK视为10点。\n每局先由庄家投入盘子分，庄家下庄之前所有的输赢分值全在盘子分中加减，当盘子分输完了庄家自动下庄，3圈之后盘子分翻了3倍庄家也可以选择下庄或者继续（只能继续3圈，如果这3圈之内盘子分输到3倍以下可以再继续打）。\n第一局由房主坐庄，之后按逆时针顺序轮流坐庄。\n二、  牌型介绍\n牌面点数大小：K>Q>J>10>9>8>7>6>5>4>3>2>A\n三张牌组合成10点、20点、30点的整数才算有牛\n没牛：没有三张牌能组合成整数的牌型（炸弹牛、五小牛除外），如：678QK\n牛一至牛九：三张牌能组合成整数+两张牌的点数相加尾数是1至9，如：46Q+56、479+K9\n牛牛：三张牌能组合成整数+两张牌的点数相加尾数是0，如：55K37、JQKA9\n五花牛：五张牌全是JQK，如：JJQKK、QQQJK\n炸弹牛：四张点数相同的牌+张任何牌，如：6666Q、AAAA3\n五小牛：五张牌的点数相加小于或等于10点，如：223AA、AAA34\n牌型相同的情况下先比五张牌中最大的那张牌的点数，如果点数相同再比花色，花色大小：黑桃>红桃>梅花>方块\n三、  积分规则\n无牛至牛七：1倍\n牛八：2倍\n牛九：3倍\n牛牛：4倍\n五花牛：5倍\n炸弹牛：6倍\n五小牛：7倍\n\n无花斗公牛\n一、   基本规则\n一副牌去掉大小王、4张K、4张Q、4张J，共剩40张，游戏人数2人至8人，每人随机发5张牌，与其它玩家比大小。\n每局先由庄家投入盘子分，庄家下庄之前所有的输赢分值全在盘子分中加减，当盘子分输完了庄家自动下庄，3圈之后盘子分翻了3倍庄家也可以选择下庄或者继续（只能继续3圈，如果这3圈之内盘子分输到3倍以下可以再继续打）。\n第一局由房主坐庄，之后按逆时针顺序轮流坐庄。\n二、  牌型介绍\n牌面点数大小：10>9>8>7>6>5>4>3>2>A\n三张牌组合成10点、20点、30点的整数才算有牛\n没牛：没有三张牌能组合成整数的牌型（炸弹牛、五小牛除外），如：67834\n牛一至牛九：三张牌能组合成整数+两张牌的点数相加尾数是1至9，如：578+56、479+45\n牛牛：三张牌能组合成整数+两张牌的点数相加尾数是0，如：57837、776A9\n炸弹牛：四张点数相同的牌+张任何牌，如：66665、AAAA3\n五小牛：五张牌的点数相加小于或等于10点，如：223AA、AAA34\n牌型相同的情况下先比五张牌中最大的那张牌的点数，如果点数相同再比花色，花色大小：黑桃>红桃>梅花>方块\n三、  积分规则\n无牛至牛七：1倍\n牛八：2倍\n牛九：3倍\n牛牛：4倍\n炸弹牛：5倍\n五小牛：6倍";
},
coures_zjh: function() {
return "炸金花\n一、   基本规则\n游戏人数：2-8人\n一副牌去掉大王小王还剩52张，发牌之前每个玩家先要打底分，然后每人发三张牌，发完牌后开始下注\n二、牌型介绍\n豹子：三张点数相同的牌，如：AAA、333\n同花顺：花色相同点数相连的三张牌，如：黑桃456、红桃789\n金花：花色相同的三张牌，非顺子，如：黑桃57Q、梅花489\n顺子：花色不同点数相连的三张牌，如：黑桃5红桃6梅花7\n对子：两张点数相同的牌，如：334、886\n散牌：三张不能组成以上牌型的牌\n三、牌型大小\n1、   豹子>同花顺>金花>顺子>对子>散牌\n2、   牌点大小：A>K>Q>J>10>9>8>7>6>5>4>3>2\n3、   顺子和同花顺中A23最小，AKQ最大\n4、   相同牌型按顺序比点，若点数相同则开牌者输\n四、积分规则\n1、  锅底：每位玩家在发牌前投入相同的筹码\n2、  暗牌：不看牌下注\n3、  明牌：看牌后下注，压注是暗牌的2倍\n4、  弃牌：放弃已经投入的筹码，判输";
},
coures_dzpk: function() {
return "德州扑克\n一、   基本规则\n一副牌每个玩家先发2张底牌，然后再依次发5张公牌，每个玩家用手里的2张牌和5张公牌组合出的最大牌组，与其他玩家进行比较，每局分四轮下注，每个玩家发2张牌后进行第一轮下注；发3张公共牌后进行第二轮下注；发第四张公共牌后进行第三轮下注；发第五张牌后进行第四轮下注。下注结束后玩家进行比牌，最大者赢。\n第一局由房主坐庄，以后的局按顺时针方向轮流坐庄。\n发牌前庄家的左边第一个玩家默认下小盲注，下小盲注玩家左边的第一个玩家默认下大盲注，再发牌，由下大盲注玩家的左边第一个玩家开始下注。\n当多个玩家牌面一样大的时候，平分锅底分数。\n二、   牌型介绍\n皇家同花顺：由五张花色相同的A、K、Q、J、10组成，如：黑桃A、K、Q、J、10\n同花顺：五张相同花色的连续牌，如：黑桃J、10、9、8、7\n四条：四张点数相同的牌+一张其他的牌，如：A、A、A、A、9\n葫芦：三张点数相同的牌+两张点数相同的牌，如：K、K、K、A、A\n同花：五张相同花色但点数不相连的牌，如：黑桃J、8、7、5、4\n顺子：五张点数相连但花色不同的牌，如：黑桃4、红桃5、红桃6、梅花7、方块8\n三条：三张点数相同的牌+两张点数不同的牌，如：A、A、A、7、8\n两对：两张点数相同的牌+两张点数相同的牌+任意一张牌，如：A、A、K、K、5\n对子：两张点数相同的牌+三张点数不同的牌，如：A、A、5、8、9\n高牌：五张不能组成任何牌型的散牌，如：A、J、9、5、6\n牌型大小顺序：皇家同花顺>同花顺>四条>葫芦>同花>顺子>三条>两对>对子>高牌";
},
coures_21d: function() {
return "21点\n一、   基本规则\n游戏中没有大小王，其中2-10的牌面所代表的是2-10的点数，J、Q、K为10点，A可以当1点或者11点计算。\n抢庄：所有玩家都可以抢庄，当有多人抢庄时系统将随机选择参与抢庄的一人坐庄。\n轮庄：第一局抢庄，之后按逆时针顺序轮流坐庄。\n霸王庄：第一局抢庄，之后庄家不变。\n当庄家和闲家牌型或点数一样时为平局，退换闲家所下的注。\n当庄家和闲家都是爆牌时，庄家赢。\n买保险：当庄家的一张明牌是A时，可购买保险（购买保险的金额为当前自己压注分的一半），结算庄家为“黑杰克”时，庄家要赔购买保险者的保险金2倍，若庄家不是“黑杰克”则保险金归庄家所得。\n二、   牌型介绍\n黑杰克：一张A+一张花牌或10点，如：A、Q；A、10\n五龙：五张牌点数不超过21点，如：22345\n顺子：五张点数相连但花色不同的牌，如：黑桃4、红桃5、红桃6、梅花7、方块8\n点数：牌面点数相加，21点最大\n爆牌：点数相加超过21点的牌型，如：987\n牌型大小：黑杰克>五龙>点数>爆牌";
},
coures_3g: function() {
return "三公\n一、   基本规则\n游戏人数：2至8人\n一副牌去掉大小王，共剩52张牌，每人发三张牌组成牌型。\n其中JQK为公牌，10、J、Q、K不计点数（为0点）、其他牌计对应的点数，三张牌点数相加后，通过比较个位数的大小来决定牌面大小\n抢庄玩法：所有玩家都可以抢庄，当有多人抢庄时系统将随机选择参与抢庄的一人坐庄，闲家只需要与庄家比牌型大小即可，闲家之间无需比较。\n轮庄玩法：第一局抢庄，之后按逆时针顺序轮流坐庄。\n三公做庄：第一局抢庄，之后谁拿到三公谁坐庄，如果有几个玩家同时拿到三公则谁的三公大就谁坐庄。\n牌大坐庄：第一局抢庄，之后谁的牌最大谁坐庄。\n霸王庄：第一局抢庄，之后庄家不变。\n二、   牌型大小\n至尊九：三张点数为3的牌型；如：333\n三条：三张点数相同的牌：如：777、KKK\n三公：三张不一样的公牌；如：JJK、JQK\n一点至九点：三张牌相加个位数为1~9的牌型；如：225、KA8\n没点：三张牌相加个位数为0的牌型；如：J55、226\n牌型大小：至尊九>三条>三公>九点>八点>.......>一点>没点\n三、   比牌规则\n1、   先比牌型，牌型一样则比公牌数；\n2、   公牌数一样则比较最大的那张牌的点数大小（K、Q、J、10、9、8、7、6、5、4、3、2、A）\n3、   点数一样则比较花色（黑桃>红桃>梅花>方片）\n四、   牌型倍率\n没点~1点：1倍\n八点：2倍\n九点：3倍\n三公：4倍\n三条：5倍\n至尊九：9倍";
},
coures_10b: function() {
return "十点半\n一、   基本规则\n游戏人数：2至8人\n一副牌去掉大小王，共剩52张，其中A-10的牌面所代表的是1-10的点数，J、Q、K为半点（0.5），每人发1张牌，从庄家右边的第一个闲家开始按逆时针方向轮流要牌，然后所有闲家与庄家进行比牌。\n抢庄：所有玩家都可以抢庄，当有多人抢庄时系统将随机选择参与抢庄的一人坐庄。\n轮庄：第一局抢庄，之后按逆时针顺序轮流坐庄。\n霸王庄：第一局抢庄，之后庄家不变。\n二、   牌型大小\n天王：5张牌点数相加等于10点半的牌型\n人五：5张都是JQK的牌型\n五小：5张牌点数相加小于10点半的牌型\n点牌：牌面点数相加，点数0.5-10点的牌型\n爆牌：牌面点数相加，点数超过10点半的牌型\n牌型大小：天王>人五>五小>十点半>点牌>爆牌\n当牌型一样时庄家赢\n三、   积分规则\n天王：5倍\n人五：4倍\n五小：3倍\n十点半：2倍\n点牌：1倍\n八爆牌：1倍";
},
coures_13s: function() {
return "十三水\n一、   基本规则\n每位玩家各发13张牌，由玩家分别摆成上（三张）、中（五张）、下（五张）三墩牌，确定开牌后与所有玩家进行比牌，先比上墩（上顿对上顿），再比中墩（中墩比中墩），最后比下墩（下墩比下墩），再依照这三项胜负关系来判定输赢。\n打枪：比牌结束后，如果其中一位玩家三墩全部胜过另一位玩家或者1胜2平、2胜1平，则称为打枪。\n全垒打：比牌结束后，如果其中一位玩家三墩牌全部赢过所有玩家的牌，则称为全垒打。\n二、牌型介绍\n特殊牌型\n    至尊青龙：同一花色的A、K、Q、J、10、9、8、7、6、5、4、、3、2\n    一条龙：不同花色的A、K、Q、J、10、9、8、7、6、5、4、3、2\n    三同花顺：每墩都是同花色点数连续的牌\n    三分天下：三个四张点数一样的牌+一张任意牌\n    四套三条：四个三张点数一样的牌+一张任意牌\n    六对半：六个两张点数一样的牌+一张任意牌\n    三顺子：每墩都是点数连续的牌，但花色不一样\n    三同花：每墩都是花色相同但点数不连续的牌\n普通牌型\n    同花顺：花色相同点数连续的牌\n    铁支：四张点数相同的牌+一张任意牌\n    葫芦：三张点数相同的牌+两张点数相同的牌\n    同花：花色相同的牌\n    顺子：花色不一样点数连续的牌\n    三条：三张点数相同的牌或者+两张点数不一样的牌\n    两对：两个两张点数一样的牌+一张任意牌\n    对子：两张点数一样的牌+三张或一张点数不一样的牌\n    乌龙：三张或五张点数不一样的牌\n点数大小：A>K>Q>J>10>9>8>7>6>5>4>3>2\n牌型大小：至尊青龙>一条龙>三同花顺>三分天下>四套三条>六对半>三顺子>三同花>同花顺>铁支>葫芦>同花>顺子>三条>两对>对子>乌龙\n至尊青龙：牌型一样时比花色，按黑>红>梅>方次序分大小\n其它牌型一样时算平局\n三、   积分规则\n特殊牌型\n至尊青龙：52水，当赢过所有玩家时翻倍104水\n一条龙：26水，当赢过所有玩家时翻倍52水\n三同花顺：18水，当赢过所有玩家时翻倍36水\n三分天下：16水，当赢过所有玩家时翻倍32水\n四套三条：8水，当赢过所有玩家时翻倍16水\n六对半：3水（含铁支4水），当赢过所有玩家时翻倍6水（含铁支8水）\n三顺子：3水（含顺子5水），当赢过所有玩家时翻倍6水（含顺子10水）\n三同花：3水（含顺子5水），当赢过所有玩家时翻倍6水（含顺子10水）\n普通牌型\n同花顺：在下墩5水，在中墩10水\n铁支：在下墩4水，在中墩8水\n葫芦：在下墩1水，在中墩2水\n同花：1水\n顺子：1水\n三条：1水，在上墩3水\n两对：1水\n对子：1水\n乌龙：1水";
},
coures_3dh: function() {
return "三打哈\n一、   基本规则\n游戏人数：4人，其中一人为庄家，其余三人为闲家共同对抗庄家（三打一）\n两副牌，去掉3、4，留8张底牌，其余分发给玩家，始终2、7、王为常主，由庄家拿底牌（底牌不能明牌，只有庄家才能看得到），庄家可以任意选择一个花色为主牌，其它花色牌均为副牌。\n叫分抢庄：\n    牌发完之后，开始叫分（打到多少分下庄，亦称庄分），第一盘房主先开始叫分，以后庄家赢了由庄家先叫分，如果庄家输了，按逆时针方向轮给下一家开始叫分，最高从80分起叫，按出牌顺序（逆时针方向）轮流叫分，则有7张常主（2、7、王）的玩家必须叫到75分或者以下（如果本人有7张常主，先叫80分，没人继续往下叫的话可以不用降分，若有人先叫80分，轮到自己必须要叫到75分或者以下，若有人先叫了75分或以下的分，自己可以不用叫分），每次最少降5分，叫分最低者为庄家。\n    轮到自己叫分时可以选择不叫，若选择了不叫将失去当局的叫分权，若都不叫分，默认由起叫者做庄，庄分为80分。\n出牌规则：\n第一轮牌由庄家方先出牌，以后每轮牌都由前轮牌大者首先出牌，首家可以出同花色中的拖拉机、对子、单牌，如果不是首家出牌方，则在出牌时必须先出首家出的花色。\n如：\n    1、首家出的单张红桃副牌，则如果其他玩家有红桃就要先出红桃，没有红桃时可以用主牌杀之或垫其它花色的牌。\n    2、首家出的1对红桃副牌，则其他玩家有红桃对子就先出红桃对子，没有红桃对子就出2个任意红桃单牌，没有红桃可以出1对主牌杀之或者出其它花色的牌垫上。\n    3、首家出拖拉机，则其他玩家也要出该花色的拖拉机，如果没有拖拉机则有该花色的对子就出对子，没有对子就出该花色的单牌，没有该花色的牌可以用主牌拖拉机杀之或者同数量的散牌垫上。\n抠底：\n    当局结束时，最后一轮牌若是闲家以副牌大则可以察看底牌，若闲家以主牌大则可以获得底牌中的分牌。\n计分规则：\n    5、10、K为分牌，分别代表5、10、10分。\n    一局结算之后，计算闲家得（牌）分，若闲家得分大于或等于庄分，庄家下庄，得分超过庄分40分为小光，超过庄分70分为大光；若得分低于30分闲家为小光，得0分为大光。\n    叫到55分或者以上，看底牌后投降，作下庄处理；叫到50分或者以下，投降作小光处理\n    下庄：庄家出9分，闲家每人进3分\n    下庄小光：庄家出18分，闲家每人进6分\n    下庄大光：庄家出27分，闲家每人进9分\n    过庄：庄家进9分，闲家每人出3分\n    过庄小光：庄家进18分，闲家每人出6分\n    过庄大光：庄家进27分，闲家每人出9分";
},
coures_ssp: function() {
return "四色牌\n一、   基本规则\n游戏人数：2至4人\n“四色牌”由红色、黄色、绿色、白色四种颜色的牌组成\n    红色：帥仕相、俥傌炮、兵；各4张\n    黄色：帥仕相、俥傌炮、兵；各4张\n    绿色：将士象、車馬包、卒；各4张\n    白色：将士象、車馬包、卒；各4张\n共有4×7×4=112张，另加5张“鬼”（伯、候、公、男、子）共117张。\n发牌：\n    庄家发21张，闲家发20张，底牌留36张，发完牌先报“鱼”（报鱼：只需报手上有几个鱼，不用明牌摆出来）和报“龙”（报龙：需要明牌摆出来，不能再拿回手上）,再由庄家先出一张牌，这样各家的牌数相等，按逆时针方向每个玩家轮流翻一张底牌（不能拿上去，自己和其他玩家可以吃、碰、龙、胡），“鬼”、“帥”、“将”不能打出。\n吃：\n    上家打的牌，或者上家与自己翻的牌，和手中的牌能组成同色的“帥仕相”、“俥傌炮”、“将士象”、“車馬包”或者能够组成3种、4种不同色的“兵”和“卒”时可以选择“吃”，自己手上有一张同色同字的牌也可以“吃”（当自己翻的牌，自己和下家都可以“吃”时优先自己）\n碰：\n    上家打的牌，或者上家与自己翻的牌，和手中的牌能组成3张同色同字的牌型时可以选择“碰”\n鱼龙：\n    （和麻将的“杠”一样），上家打的牌，或者上家与自己翻的牌，和手中的牌能组成4张同色同字的牌型时可以选择“龙”\n胡：\n    可以抓炮也可自摸，抓炮：只扣放炮的玩家的分；自摸：其他所有玩家都要扣分\n优先等级：胡>龙>碰>吃\n二、   牌型介绍\n    一句话：同色的“帥仕相”、“俥傌炮”、“将士象”、“車馬包”或不同色的3张、4张“兵”和“卒”\n    鱼：三张同色同字的牌型\n    龙：手上有四张同色同字的牌型\n    鱼：三张同色同字的牌型\n    鱼龙：手上有三张同色同字的牌，其他玩家打一张或自己翻一张相同的牌\n    鬼龙：手上有五张不同的鬼\n当手中的牌已成“一句话”、“鱼”的牌型时不能拆散了打出。\n三、   积分规则\n    将、帥：1胡\n    鬼：3胡\n    吃：一句话1胡（四个不同色的兵和卒算2胡）\n    碰：1胡\n    鱼：3胡（起手报鱼：1个算1分即时结算）\n    鱼龙：4胡即时结算（胡牌后有1个鱼龙加6胡，总胡数加1倍）\n    龙：起手报龙1个算8分即时结算（胡牌后1个龙加8分，总胡数加4倍）";
},
coures_fly: function() {
return "飞行棋\n一、   基本规则\n游戏人数：2人或者4人\n    每位游戏者都有四架飞机，飞机的颜色在游戏开始由系统随机确定，共，红，黄，蓝，绿四种，棋盘种的红，黄，蓝，绿色块与个位游戏者的颜色相对应棋子的行进\n    首先由服务器随机选择一位玩家开始，然后每位玩家在起点轮流掷骰子一次，在掷到6点后，方可将一架飞机由“停机坪”起飞至起飞点，并可以在掷骰子一次，确定飞机的前进步数，在游戏进行过程中，掷得6点的游戏者可以继续掷骰子，直至显示点数不是6点结束。\n    飞机依照箭头所示方向，照外围飞完一周后，再至自己面前时，直向中间目的地飞去，只有当游戏者掷骰子的点数恰好等于飞机与终点的相差步数时，该飞机方可取得小旗返回停机坪。若大于相差步数，则飞机到达终点后掉头折返走完剩余的步数。\n    飞机进到颜色相同的格子内，可直接跳至到前面颜色相同的一格，机会一次\n    飞机若行进到颜色相同而虚线链接的一格，可按照虚线箭头指示的路线，通过虚拟到前方颜色相同的一格后，再跳至下一个与飞机颜色相同的格内，若飞机是由上一个颜色相同的格子跳至颜色相同而有虚拟链接的一格内，则飞机按照虚线箭头指示的路线，通过虚拟到前方颜色相同的一格后，飞机就不再移动，若正好在起飞点有飞机停留，那么对方的飞机逐回停机坪，本方飞机停留\n打子的处理：\n    如果敌方飞机在我方的颜色区里，那么如果我方飞机刚好走到自己的颜色格子里，那么就不跳到前面颜色的格子里，直接把对方飞机打落，如果飞机在通过虚线时有其他飞机停留在虚线和通道终点的交叉点时，如果对方是一架飞机，则将该飞机打落回停机坪，本方飞机继续行进，如果对方是两架飞机重叠则飞机不能穿越虚线，必须绕行，（注：本方飞机重叠数>=敌方飞机重叠数，不需绕行，直接打落敌方飞机）本方继续前行\n迭子的处理：\n    自己的飞机最终走至同一格内，可迭一起，也就是2架或者3架或者4架飞机一起，这类情况称为”迭子”其他游戏者的飞机，不能再迭子上面飞过，自己一方的棋子可以从迭子上面飞过\n    若当他人的飞机正好停留在迭子上方时，他人飞机与2架飞机或3架或4架同时返回停机坪（注：飞机迭子数>=敌方机数时，可打落敌方。本方飞机停留原地，敌方飞机返回停机坪）\n    若自己的迭子数大于等于他人的迭子数，则它可以继续行进，不被迭子所阻碍，若刚好停留在他人的迭子上方，那么把他人的飞机都打落 返回停机坪，自己一方继续行进\n计分规则：\n    有一方玩家的所有飞机都进库了，就结束游戏\n    谁的所有飞机先进库谁就赢了所有玩家，赢家和所有玩家进行计算，按进库的飞机数量结算，赢家比输家多进库1架飞机算1分。\n    比如：玩家1进库4架，玩家2进库2架，玩家3进库2架，玩家4进库1架，最后结算：玩家1  赢7分，玩家2 输2分，玩家3 输2分，玩家4 输3分";
},
coures_glzp: function() {
return "桂林字牌\n一、   基本规则\n游戏人数：3人\n一、字牌组成:\n    “小写”字牌：一、二、三、四、五、六、七、八、九、十各4张；计40张；“大写”字牌：壹、贰、叁、肆、伍、陆、柒、捌、玖、拾各4张，计40张；共计80张牌。\n玩法规则：\n    庄家起最后一张牌必须亮张（挡底）（以告知闲家不能再起牌了，否则就算庄家冲垛，庄家应承担议定的冲垛责任）。\n    吃牌：上家丢出的或者自己抓（摸）的牌，示众后没有人碰或者开招，且正好可以与自己手中的牌组合成一坒牌，则可以吃，吃牌后需放到桌面上。\n    过张：当有机会吃或者碰时，自己没有吃或者碰，称为过张，过张后的牌不可再吃或者碰，但可以胡。（注：不能吃的牌过后，后期因特种组合而导致后期能吃，此牌也不能再吃，例如：手上有二三四五，当出现三时不能吃，但后面吃了一后导致能吃三，此时三也不能再吃）\n    碰：当别人打牌跟自己手上一对一样，则可以碰牌，碰牌后将牌放桌面上。\n    扫：抓（摸）牌时，如果所（抓）摸的牌正好是手中的一对牌，则必须将牌由手上放到桌面上。\n    过扫：忍（过）牌之后，又扫牌，称为过扫。\n    开招：①当别人打的牌或者（抓）摸的牌，自己手上正好有一坎，或者是已经扫的牌，称为开招；②当自己或别人从垛牌上（抓）摸的牌正好是自己碰过的牌，称为开招，开招的牌必须将牌放在桌面上。\n    扫穿：①起牌后，手中4张相同的牌，称为扫穿；②如果抓（摸）底牌时，抓（摸）到的底牌正好是手中一坎牌或扫牌一样，称为扫穿，扫穿的牌必须将牌放在桌面上。当玩家开招和扫穿超过一次时，如开招了二，然后又扫穿了三，则不需要再打牌出去；如果玩家起手两组扫穿时，进一张牌就听牌时，不用再打牌。\n    组牌优先顺序为：扫穿或扫>胡牌>开招或碰>吃 ，可胡任何人手中打出的牌，吃牌的时候，先是自己吃，自己不吃才到下家吃。\n   每进一张牌，必须打出一张牌，开招或扫穿超过或等于之后不需要打牌；游戏中不能忍扫、忍开招、忍扫穿；扫、扫穿不示众（三张或四张）\n胡数计算：\n    碰：（大写字）计3胡，（小写字）计1胡\n    坎、扫、过扫：（大写字）计6胡，（小写字）计3胡\n    开招：（大写字）计9胡，（小写字）计6胡\n    壹贰叁：计6胡\n    一二三：计3胡\n    贰柒拾：计6胡\n    二七十：计3胡\n计分规则：\n    基本单位为子，积分=（胡息转换成的子数+中醒数）番数2（赢家）";
},
coures_fzmj: function() {
return "福州麻将\n1.概述\n福州麻将是以福州地区流行的麻将规则为基础的一款地方麻将游戏，它具有简单易懂、好“胡”、算分刺激等特点，是非常好玩的一种麻将玩法。 \n2.游戏玩法\n游戏人数：2人、3人、4人。 \n游戏用牌\n福州麻将使用麻将中所有的牌，总共144张。包括：\n万字，一至九万各4张，36张\n饼字，一至九饼各4张，36张 \n条字，一至九条各4张，36张 \n花牌，东南西北中发白各4张，春夏秋冬梅兰竹菊各1张，共36张，花牌只用作记分。 \n每人面前摆18墩牌。\n游戏骰子\n游戏使用两个骰子\n庄家\n新开第一局系统随机选择一个庄家。之后每一盘牌，如果庄家赢或者和局，则继续坐庄，称为连庄。否则由庄家的下家做庄。\n任意一个玩家离开游戏，算作新的一局开始。\n庄家拥有当局第一轮出牌权\n拿牌\n庄家摇骰子，逆时针数点找到先拿牌的人，先拿牌的人再从自己面前的牌堆右向左按根据两个骰子点数之和的点数开始拿牌。\n轮流拿牌，庄家拿17张牌，闲家16张牌。\n坎门 \n等4家都拿完牌后，庄家要多拿一张牌，就是接下来的那张。即庄家拿17张牌。\n补花\n凡是拿牌拿到“东、南、西、北、中、发、白板、梅、兰、竹、菊、春、夏、秋、冬”的，自庄家开始在相反的一边（即牌尾）补花，一次补完手里的花；如果补花牌过程中仍抓进花牌，须等本轮四家都补过花牌后再行补牌，再次补花牌的顺序仍然以庄家为首开始，但上一次补花没抓进花牌的玩家则跳过。通过多轮直到所有玩家手上的牌均是“索、万、饼”为止。\n同样，在游戏的过程中如果抓到花牌，也一样是在这边补花。\n开金 \n“金”即是麻将中的“财神”，在福州麻将中称为“金”，可以替代任何一张牌。当全部补完花后就可以开“金”了，补完花后从牌尾翻开的第一张就是“金”。如果开金时开出的为花，则算庄家的，为庄家补完花后，重新从牌尾翻开一张牌为金。金牌开出后移动到倒数第9墩牌上正面显示。游戏中如果出现杆牌或补花，则金牌显示的位置要相应前移。补花时，当最后一墩的牌补完后，金牌需要相应前移一墩。出现杠牌、4个一样的花时，要留的牌相应增加，则金牌显示的位置也要按要留的牌数相应前移。\n取牌\n游戏在一开始，庄家从牌中选出一张最没用的牌丢出。此时，其它三家都有权力要那张丢出的牌。庄家的下家，有权力吃或碰或杠那张牌，其它两家则只可碰或杠那张牌。“碰”比“吃”优先。如没有玩家要吃进，则依时针顺序由下一家取牌。\n出牌\n凡是抓进、吃、碰、开杠、补花后，不胡牌便要打出一张牌。\n特殊：金牌能打出，但是金牌打出时，玩家不能吃、碰、杠该金牌；如果有玩家听牌，听牌玩家不能和该金牌。金牌打出后，本局游戏内打金牌的人只能自摸，不能胡别人的牌。 \n吃碰杠牌  \n打牌过程中，可以吃上家的牌，吃牌后必须亮明。\n打牌过程中可以任意碰牌和杠牌，碰或杠牌后必须亮明，暗杠除外。\n吃牌\n上家打出牌，与他的下家手中的牌可以组成一副顺子，下家可以吃进该牌，吃进后必须打出一张牌。\n碰牌 \n当自己手中有两张同样的牌，遇到有人弃牌一样时，根据自己牌的情况，决定是否碰。如果他人有胡牌时，胡牌优先。\n杠牌\n明杠：有两种明杠方式 \n1.玩家手中有三张同样的牌，其他玩家所弃之牌与自己手中的牌一样时，根据情况，可确定杠或者不杠。但如有人要胡此张牌时，胡牌优先\n2.玩家碰牌后，又摸到杠牌，根据情况，可确定杠或者不杠。\n暗杠：玩家持有了四张一样的牌（未碰），此时玩家可以选择从手中把牌拿出来杠牌。\n杠后补牌：玩家杠牌后，在桌面上最后一墩牌补一张牌。\n普通胡牌\n放胡：自己手中所有的牌组合成赢牌的格式，所需要的最后一张牌由他人弃之时，即可胡牌。\n(1)11、123、123、123、123、123\n(2)11、123、123、123、111、111(1111，下同)  \n(3)11、123、123、111、111、111 \n(4)11、123、111、111、111、111  \n(5)11、111、111、111、111、111等类型。 \n（其中：1=单张　11=将、对子　111=刻子　1111=杠　123=顺子）\n胡牌组合只考虑只上几种，其他特殊组合均不考虑。\n自摸：将自己手中所有的牌组成赢牌格式，所需的最后一张牌由自己抓来，称之为自摸。\n特殊胡牌类型中的天胡、抢金也算自摸。其他类型可能出现放胡也可能出现自摸。\n特殊胡牌类型\n天胡：庄家在开完金后，不用打出牌，已经胡牌，称为天胡。\n抢金：出现在开局开完金后，有两种情况：\n1.庄家开局时出首张牌时只要打出一张没用的牌，再将开出来的“金”换进，即可胡牌的； \n2.闲家在庄家出过首张牌后将“金”抓进，即可和牌的。\n抢金是以每盘每个玩家的首张牌有效。在每盘牌中，如果庄家和闲家同时都是可以抢金的牌，由于闲家没打出，所以算闲家抢金。但是，如果庄家是天胡，就算闲家抢金，也是庄家天胡在先。即优先级为：天胡>闲家抢金>庄家抢金，多个闲家可以抢金的，按逆时针最近的下家优先级最高。\n平胡（无花无杠）：如果赢家胡牌，一张花牌都没有抓到、也没有开杠的话，即为平胡。\n平胡（一张花）：如果赢家胡牌，只有一张花的情况下，也算平胡。\n三金倒：在牌局结束前，任何一家，只要抓到三张“金”，就可胡牌，不用根据基本牌型，此称为“三金倒”。上手有两张金牌，不能以胡“三金倒”的胡型来抢金。\n金雀：用两只金来做对子，即是金雀。 \n在一人以上听同一张牌时，不论位置先后，金雀优先胡。\n金龙：胡牌时如果手里有3张金牌，并且3张金牌只能当作自己本身的刻子来使用，即是金龙。  \n截胡 \n一人以上听同一张牌，那张牌出现后，按照逆时针顺序只有最近的人算胡，其他的不能算胡。金雀除外。\n和局\n一般情况下最后留18张，但每当有人有一个明杠则多留1张，有一个暗杠则多留2张（4个一样的花也要多留两张）。即和局要留的牌是在打牌过程中不停变化，直到最后才留够十八张牌。\n最后可抓的4张牌（即除去剩张可抓的牌）为最后一组牌，最后一组牌不再补花和出牌，轮流抓牌，若抓的牌就能胡牌则由服务器自动胡掉，按自摸计算。如果4人均没自摸，即为和局。\n特殊：设要留n张，现桌面上有n+4张，某玩家打出一张牌后，另一玩家明杠，理论上要留的张数应该变为n+1张，且给杠牌玩家补了一张牌。这样可抓的最后一组少于4张，变成了2张。所以只按顺序轮流抓这两张。\n如果出现连续的杠牌，导致可抓的最后一组牌数变为０，如没有胡牌，则直接和局。\n3.积分计算\n第一个胡牌或者自摸的玩家胜利，其余玩家失败。\n胡牌时，胡牌玩家赢分，放胡的玩家扣分。\n自摸时，胡牌玩家赢分，其他三个玩家扣分。\n番数计算\n番数计算中的番值指每局游戏中胡牌方的番数。\n福州麻将的番数计算由底番、花番和金组成。\n底番：底番为1\n花番：花番的计算包括花牌、杠牌两方面 \n1.花牌：指每朵花的番数，与底番相同。花牌中，每抓一朵花就计1个花番；抓齐４个一样的花（如４个“东”或者“春夏秋冬”一套），按６朵花计。如４个“东”＝６朵花。\n2. 杠牌：胡牌玩家所开的杠，一个明杠算一朵花，一个暗杠算两朵花。\n金：每张金的番数与花相同，有几个金胡牌时便多算几张花的番数。 \n连庄和抓庄\n连庄指庄家赢得胜利，在第二庄的时候算一连庄，对应1番。\n抓庄指闲家赢得胜利。\n连庄及抓庄对分数的影响如下：\n1.庄家在连庄的时候，要根据连庄的次数加底番。而抓庄的玩家，在胡牌的时候可以多赢连庄的次数对应的番数。\n2.玩家第一次做庄后胜的第一庄为站顶，不算连庄的底数，从第二次胜庄起算第一次的连庄底番。例如：现在底番为1番，连庄1次时，底番为1+1＝2；连庄2次时，底番为1+2＝3，依次类推。\n特殊胡牌的番数\n特殊胡牌的积番计算：\n1.天胡：天胡的底番按牌局底番的30倍计。\n2.抢金：抢金的底番按牌局底番的30倍计。\n3.平胡（无花无杠）：底番按牌局底番的30倍计。\n4.平胡（一张花）底番按牌局底番的15倍计\n5.三金倒：三金倒的底番按牌局底番的40倍计。\n6.金雀：金雀的底番按牌局底番的60倍计。\n7.金龙：底番按牌局底番的120倍计。\n计分公式\n胡牌公式为：\n放胡＝(花番+金+连庄数+5)×2+特殊胡牌番数最大值\n自摸＝[ (花番+金+连庄数+5)×2+特殊胡牌番数最大值]×3\n特殊胡牌番数最大值：放胡、自摸时如果遇到几种特殊胡法同时出现，则只计番数最高的特殊胡牌，其他不计。";
},
coures_wzmj: function() {
return "温州麻将\n一、基本参数：\n游戏人数：2人、3人、4人。\n温州麻将一共 136张牌，包括 3种序数牌和字牌（东南西北中发白），筒条万各36张，风牌16张，字牌12张，每家面前 17墩牌，每家 16张牌，在开始时，庄家 17张牌。\n二、名词解释：\n买底：由庄家在摸牌前操作。买底底分+1分。\n顶底：由闲家在庄家买底后操作，顶底底分+1分。\n财神：掷骰后即确定，并翻出一张在牌墙显示。可用来在胡牌时代替任何牌，但财神不能在游戏过程中出掉或用于吃牌。白板代替财神原来牌值。当财神为白板时则当局无白板而只有3个财神牌。\n连庄：起庄胡牌为1连庄x1倍，2连庄x2倍，3连庄x3倍，4连庄x4倍，最高4连庄换庄。\n承包：庄家的上家碰庄家或对家3次，此时庄家胡牌该玩家要承包。\n如果一张牌多家胡，按逆时针最近的先胡，单如果一个是硬胡牌一个胡双翻则双翻优先\n三、和牌的基本牌型：\na.11（牛）,123,123,123,123,123.\nb.11（牛）,123,123,123,123，111。\nc.11（牛）,123,123111,111。\nd.11（牛）,123,123,111,111,111。\ne.11（牛）,123,111,111,111,111。\nf.11,11,11,11,11,11,11,11,2。（软8对：有财神的，胡牌算硬牌）有3个财神但没有符合以上牌型也可胡牌，算硬牌\n四、胡牌的特殊牌型（双翻）\nA、11,11,11，11,11,11,11,11,2（硬8对：没财神的，胡牌算双翻）。\nB、有3个财神且有符合1中牌型之一的牌型\nC、天胡：在庄家抓第一张牌时就胡了。\nD、地胡：闲家没抓过牌，别人放冲胡;或者自摸。\nE、单吊：经过吃碰杠后，手上的牌只剩最后一张时胡的。\nF、全球神：手上牌只有4张时，其中有张财神，吃掉或碰掉杠掉后（不含财神）后打出的那张牌没有被人胡掉的话（最后一张手上拿的是财神），这个人就可以赢了（全球神时其他玩家不能摸牌了）\nJ、碰碰胡：牌型符合11,111,111,111,111,111（111数==5，包括碰的）\nH、杠上开花：杠牌后补的牌自摸胡。（可选择规则）\n五、计分规则\n1）软牌倍数为1；\n胡牌中有财神代替其他牌\n2）硬牌倍数为2：\nA.自摸胡牌。\nB.胡牌没有财神或财神归位（财神代表自己本身的牌不代替别的牌，白板就代表自己）\nC.抢杠胡（先前已经碰掉的，在之后的抓到第四张，拿出去杠，别人刚好胡这个牌，这样别人胡的就是硬牌）。（暗杠不能抢胡），抢胡时不管有没有财神都是硬牌。\nD.软8对，有财神的。\nE.手中3张财神牌但不符合胡牌排序的胡牌。\nF.双翻是硬牌中的特殊牌\n3）双翻倍数为4\n4）财神钱：玩家手中有一张财神则可以得到其他3位玩家的贡献分（1x财神数x底分）。双翻时财神钱也双翻。\n六、胡牌规则：\n一盘只能有一个胡牌。如有1人以上同时表示胡牌，从打牌者逆时针方向，顺序在前者被定为胡牌者。在游戏中谁先胡牌谁优先，如果是特殊牌型则不受限制，由特殊牌先胡，如果同时出现多个特殊牌，则按逆时针方向进行。\n七、自选玩法\n1、无中发\n发牌时取出“中”“发”两种风牌。\n2、三背\n庄家上家碰庄家或对家，算一背；上家补杠庄家或者对家，加一背；上家明杠庄家或对家，算二背。累计到三背时，若本局庄家胜，则三背玩家承包另外2位玩家输掉的牌型及倍率分，不包括其他闲家的杠分，财神钱，跟风分。\n3、跟风\n若一个玩家打出“东南西北中发”中的任一张，后面3个玩家连续打出相同牌，则首个出牌玩家被跟风，需要支付其他玩家每人一分。";
},
coures_csmj: function() {
return "长沙麻将\n人数：3人、4人\n长沙麻将增加了大四喜、板板胡、六六顺、缺一色、地胡牌型、亲友湖南麻将综合风俗习惯去掉了天胡，地胡牌型，添加个各种新玩法例如中途六六顺、步步赢、假将胡、金童玉女等。\n\n一、牌数\n长沙麻将，1-9筒、1-9索、1-9万，去掉东、南、西、北风、中、发、白，共108张。\n\n二、摸牌规则\n游戏开始，庄家得14张牌，闲家得13张牌。庄家先出牌，下家有权吃、碰、杠、胡，其他两家则只可碰、杠、胡，‘胡’比‘碰’优先，‘碰’比‘吃’优先。\n注：小胡需要2、5、8做将，如：2万、条、筒；5万、条、筒；8万、条、筒。\n大胡可以为任意1对做将。\n\n三、胡牌类型\n1、小胡：普通牌型\n2、起手胡（在起牌后可先胡一次牌，可一次多胡，立即结算分值，亮牌一圈后继续进行当局）\n大四喜：起牌后，玩家手上已有4张一样的牌，即可胡牌（等同小胡自摸）\n板板胡：起牌后，玩家手上没有一张2、5、8（将牌），即可胡牌（等同小胡自摸）\n缺一色：起牌后，玩家手上筒、条、万、任缺一门，即可胡牌（等同小胡自摸）\n六六顺：起牌后玩家手上有2坎牌（坎：3个一样的牌），即可胡牌（等同小胡自摸）\n3、大胡（可乱将）\n碰碰胡：由碰牌、坎、对子组成的牌型。\n将将胡：全部都是2、5、8将的牌型。\n清一色：由同一花色组成的牌型。\n七小对：任意组成的七队牌，不能碰和杠。\n豪华七小时：手中任意七对牌，其中有4张一样的牌，但不能杠，算2个大胡分。\n超豪华七小对：手中任意七对牌，其中两组4张一样的牌，但不能杠，算3个大胡分。\n全求人：吃、碰、补张以及杠后手上只能一张牌由别人打出或者自己摸到相同的牌即可胡牌。\n海底捞月：最后一张底牌为海底，轮到谁摸牌就从谁开始选择是否要海底，没有听牌的玩家无权要海底，如果一圈下来都不要，就直接流局，海底胡牌为大胡。\n海底炮：如果玩家要了海底牌，而又不能胡牌，则自动打出这张海底牌，这时如果被其他玩家抓炮的话算大胡，可以多家抓炮。\n杠上开花：玩家在听牌后开杠，可以选择“杠”或“补”，如果选择“补”补的牌正好可以胡，则为杠上开花。\n抢杠胡：当玩家在明杠时，其他玩家正好胡被杠的这张牌，则为抢杠胡。\n杠上炮：开杠者选择摇骰子补牌，补的牌开杠者不能胡，而其他玩家可以胡，则属于杠上炮。\n\n四、庄家分配\nA、第一局由创建房间者为庄家。\nB、以后谁胡牌，下局谁做庄\nC、如果有人要了海底牌后却没人胡，则要海底牌的玩家下局当庄家。\nD、如果四个玩家都不要海底牌，则下轮由第一个可以选择海底牌的玩家当庄家。\nE、如果出现通炮，则下轮由放炮玩家做庄家。\n\n五、抓鸟\n扎鸟在胡牌后进行，由胡牌方进行抓鸟（一炮多响时由点炮玩家进行抓鸟），此时从牌堆上取创建房间时选得鸟数张牌，其中鸟牌以胡牌方为第一序位。当鸟牌是1、5、9时，为胡牌方A的中鸟牌，2、6为胡牌方的下家B的鸟牌，3、7为胡牌方的对家C的鸟牌，4、8为胡牌方的上家D的鸟牌，（ 3人麻将时，4、8为空位）。\n\n六、特殊规则\n1、通炮：玩家打一张牌出来，被几个玩家抓炮，为“通炮”\n2、补张：\nA、所有杠后，如果听牌了，可选择“杠”或“补”，没有听牌则只能选择“补”。\n杠：杠后丢1个骰子，根据骰子点数从底牌最后一墩开始数墩数，拿该墩上面的那张牌，如果墩数不够则拿最前面的那张牌，如果补的这张牌可以胡，算“杠上花”大胡，如果不能胡则必须打出这张补的牌，打出的这张牌被其他玩家胡了算“杠上炮”大胡（可通炮），开杠后该玩家摸的任何牌如果不能胡的话必须打出，也不可再“吃”“碰”“杠”，手牌不可再变动，直到胡牌或放炮为止。\n补：杠后直接从底牌最后一墩补一张牌，如果补的这张牌能胡，算小胡自摸，如果不能胡可以随意打出一张（按正常出牌处理）。\nB、如果补张时只剩下海底牌，则补海底牌，此局则无海底牌。\n3、漏胡：如果玩家漏掉了炮胡，则在玩家摸牌前禁止炮胡，摸牌后一切正常，只对该玩家有效，其他玩家正常。\n\n七、积分规则\n1、小胡自摸：每人输2分，总得分2×3=6分；庄家自摸，每人输3分。\n2、小胡接炮：点炮方输1分，总得分=1分；庄家接炮，点炮方输2分。\n3、大胡自摸：每人输6分，总得分6×3=18分；庄家自摸每人输7分。\n4、大胡接炮：点炮方输6分，总得分=6分。庄家接炮，点炮方输7分。\n注：大胡之间可以累计计算（算加法）如：七小对+清一色+海底捞月。\n\n抓鸟：\nA、中鸟加分：中1个鸟算1分\n如：4人房，庄家小胡自摸，胡牌方中鸟1个，则其他人多输1分，则最终赢得分数为（小胡2分x3）+（庄1分x3）+（鸟1分x3）=12分。\nB、中鸟翻倍：\n中1个鸟分值翻1倍，总分值x2；\n中2个鸟分值翻2倍，总分值x2x2；\nC、中鸟加倍：中1个鸟加1翻，总分值x中鸟数。";
},
coures_zzmj: function() {
return "转转麻将\n人数：2人、3人、4人\n转转麻将打法简单、节奏快速、极易胡牌。\n\n一、牌数\n转转麻将，共108张；筒、索、万、不带东、南、西、北、中、发、白（红中癞子玩法除外）。\n2人房间中只有1-9万和东、南、西、北、中、发、白。\n\n二、摸牌\n摸牌开始，庄家得14张牌，闲家得13张牌，庄家从牌中选1张丢出。其他3家有权要那张丢出的牌，只能胡、碰、杠，不能吃。\n红中癞子：红中可代替任意一张牌，但不可辅助其他牌来碰和杠。\n\n三、杠\n1、明杠：A 手上有3张相同的牌，其他玩家打了第4张相同的牌即可开杠。\n举例：碰了一万，自摸一张一万，即可开杠。\n2、暗杠：手上抓了四张相同的牌，可以选择暗杠。\n\n四、庄家分配\n1、第一局房主为庄家。\n2、以后谁胡牌，下局谁坐庄。\n3、如果出现通炮情况，则下轮由放炮玩家当庄家。\n4、如流局，则下局轮给当局最后摸牌的人坐庄。\n\n五、积分规则\n1、自摸：每人输2分，胡牌玩家赢6分，如庄家自摸，闲家每人输3分。\n2、小胡接炮：点炮方输1分，胡牌玩家赢1分，如点炮方为庄家，则庄家多输1分，如接炮方为庄家，点炮的闲家多输1分。\n3、开杠：\nA、暗杠：相当于自摸，每人出2分；\nB、明杠：碰牌之后，再抓上一个所碰的牌开杠，每人出1分；\nC、抓杠：手抓了3个相同的牌，然后有人打了1个相同的牌，开杠的话，放杠者出3分。\n注：杠牌后如果流局依然算杠分。\n4、扎鸟：扎鸟在胡牌后进行，由胡牌方进行扎鸟（一炮多响时由点炮玩家进行扎鸟），红中、1、5、9为中鸟，中1个鸟2分。\n\n六、特殊规则\n1、通炮：即几个玩家可胡同一张牌，此牌即为通炮。\n2、漏胡：如果玩家漏掉炮胡，则该玩家摸牌前禁止炮胡，摸牌后正常；只对该玩家漏胡，其他玩家正常。\n3、红中癞子玩法： \nA、红中在手中可以做万能牌使用。\nB、红中不能碰，不能杠。\nC、红中不能和其他牌组合碰杠。比如：1万、1万、红中，别人打1万，是不能杠1万的，只能碰。";
},
coures_hzmj: function() {
return "红中麻将\n游戏人数：3人、4人。\n\n一、牌数\n包括筒、索、万，1-9各4张，外加4张红中，共112张牌。\n\n二、起手摸牌数量\n起手，只有庄家14张，其余13张，能碰不能吃，不能放炮。\n\n三、庄家\n1、第一局由房主坐庄。\n2、以后谁胡牌，下局谁坐庄。\n3、如流局，则下局轮给当局最后摸牌的人坐庄。\n\n四、规则\n1、碰牌\n其他玩家打出的牌，自己手里有两个，则可以碰，碰完要出牌。\n\n2、杠\n明杠：先碰了牌，再自己摸到一张相同的牌，则可以杠（公杠必须第一时间杠，如果没有第一时间杠，则不能再杠）\n暗杠：手里有4张相同的牌，可以选择杠（不需第一时间杠，只要有这个牌型，每一轮都可以杠）\n放杠：自己打出一张牌，同桌有玩家手里有3张一样的该牌，则可以“接杠”打出该牌的玩家就是“放杠”\n3、一句话：同系列的三个连续的牌。\n4、一坎牌：三个一样的牌。\n\n5、出牌\n1）庄家先出牌，庄家打牌后，如果没人“碰”、“杠”则下家摸牌，然后自主选择一张手上的牌打出，以此类推，直至有人胡牌或流局。\n2）打出的牌，其余的人都可以碰或杠，不能吃或胡。\n3）红中为王牌，可以代替任意一张牌。\n\n6、胡牌\n1）胡牌必须手里有一个对子，剩余的牌必须是“一坎牌”或者“一句话”。\n2）手上有4个红中，可以直接胡牌。\n3）抢杠胡：A玩家选择明杠，此时B玩家胡这牌，则B玩家可以选择“抢杠胡”，A需要包赔，按照正常抓鸟，但是所有的分全部由被抢杠的人出。比如：抢杠后，胡牌玩家中两个鸟，则每人出6分，赢家进18分，这个18分全部由被抢玩家出。\n\n7、抓鸟\n根据抓鸟的数量，最后要留对应数量的牌不能摸，比如：选择4个鸟的玩法，那么倒数第五张被摸后，依然无人胡牌，则臭庄。\n有人胡牌后，从墩上摸牌，如果牌上的点数为1,5,9（红中算1），则算中鸟，中一个鸟，则每人多出2分，中4个，则每人多出8分。\n\n五、积分规则\n基础分改为2分。\n自摸：进6分，每家出2分。\n明杠：进3分，每家出1分。\n抓杠：进3分，放杠者出3分。\n暗杠：进6分，每家出2分。\n抢杠胡：包赔当局所有分值，按自摸计算，正常扎鸟。\n扎鸟：中1个鸟进6分，每家出2分；中2个鸟进12分，每家出4分，以此类推。一鸟全中：1万、1条、1筒、红中算10分，2-9万条筒算2-9分。";
},
coures_glmj: function() {
return "桂柳麻将\n游戏人数：2人、3人、4人。\n\n一、牌数\n万、筒、条108张，以及东南西北中发白28张，共136张牌。\n\n二、基本规则\n翻倍：游戏中胡牌时牌型符合制定条件会使的胡牌翻2倍。\n庄家：游戏过程中第一个拿牌以及第一个出牌的玩家。\n闲家：庄家之外的其他三家都称为闲家。\n方位：为了区分闲家，所有玩家按东南西北四个方位就坐。\n翻醒：赢家胡牌之后才有的权利。赢家从剩下的牌中抓出第一张来，在自己的胡牌的牌中寻找上醒与下醒，上醒与下醒之和叫做醒数，醒数决定胡牌加成。\n一醒得到一子得分。\n\n碰：\n碰指在玩家打出一张牌，其他玩家拿出2张同样的牌与这张牌组成刻子（AAA）此时就产生了碰牌，碰牌放在桌面上亮明。\n触发条件：\n玩家打出一张牌A，当其他玩家手中有AA时，其他玩家就能执行碰的操作。优先级为（胡>(碰|杠) >吃）。\n\n吃：\n下家拿出两张牌与上家打出的牌能够组成顺子，则执行吃的操作，吃后的牌放在桌上亮明。只能下家吃上家的牌\n\n杠：\n1.蓄杠\n为玩家碰了别家的牌A,他自己又摸到一张A。这时玩家选择“杠”的操作就\n为蓄杠。蓄杠是若被抢杠胡则杠钱被取消,其他家不必支付杠钱。\n触发实例\n东家碰了西家的牌“一万”,在后续的打牌过程中,东家又摸到一张\n此时东家选择杠牌,完成蓄杠。西家支付3子的分数给东家。(即时支付)\n2.暗杠\n为玩家摸到4张一样的牌,这时候它选择杠的操作,这时的杠就为暗杠。\n东家原本有3张一万在手上为亮明。在随后的摸牌过程中,又摸到一张一\n万。东家选择杠牌,完成暗杠的操作。暗杠的牌扣3张,将最上方的那一张\n亮明。其他玩家每人支付2子的分数给东家。\n\n将对子:两张相同的牌。\n碰刻子:三张相同的牌。\n顺子:相同花色连续三张单牌。\n杠:四张相同的牌。\n烂牌:由3种花色147、258、369这样间隔数值大于等于三的序数牌(甚至\n可以只有1张) 以及东南西北中发白这7张之中的至少5张组合而成的十四张\n单张组成的胡牌。\n七星烂:东南西北中发白全都含有的烂牌。\n七对:14张牌由7个对子组成。\n豪七对:七对之中有两个对子是一样的。\n碰碰胡:4个刻子一对将组成的14张牌。\n普通牌型:牌型中有顺子,有不同花色的胡牌。\n清一色:牌型为同一种花色。\n字一色:牌型由风牌或者箭牌组成,此种牌特殊能胡任意的风牌或箭牌。\n门清:从开始到结尾没进行过吃、碰、杠的操作。\n全求人：手中的牌经过吃、碰、杠最后剩下一张牌留在手上\n\n3.点杠\n为玩家甲本身有3张一样的牌AAA(没碰过),玩家乙打出了另一张A,玩\n家甲选择了杠牌,这时玩家乙就点杠了。\n触发实例\n东家原本有3张一万在手上未亮明。在随后的打牌过程中南家打出了一万\n东家选择杠牌,完成杠牌的操作。南家支付3子的分数给东家。(即时支付)\n\n胡: \n玩家手上的牌与别人打出的牌或者自己摸到的牌组成胡牌模式,这时玩\n家就可以选择胡牌的操作。胡牌模式必须符合以下的标准才能触发胡牌。\n\n基础的胡牌牌型：\n一：123、123、123、123、11\n二：123、123、123、111（1111下同）、11\n三：123、123、111、111、11\n四：123、111、111、111、11\n五：111、111、111、111、11\n1=单张11将、对子11子11123=顺子\n\n特殊的胡牌牌型：\n一、烂牌\n由3种花色147、258、369这样间隔数值大于等于三的序数牌以及东南西北\n中发白这7张之中的至少5张组合而成的十四张单张组成的胡牌。\n二、七星烂\n牌型中东南西北中发白全部含有的烂牌胡牌称之为七星烂。\n三、七对\n14张牌含有7对,7张牌各不相同。\n豪华七对\n14张牌含有7对,其中2个对子是AAAA的形式。注:七对必须不求人(门清)。\n字一色\n手上的牌全部由风牌和字牌构成,此种牌型特殊,能与任意张字牌或风牌组成胡牌牌型。\n\n过：玩家本来可以选择“吃、碰、胡”，而不执行操作就叫过。";
},
coures_dczb: function() {
return "都昌栽宝\n一、 简介：\n游戏人数：4人。\n都昌栽宝是都昌地区广泛流传的麻将玩法。极具地特色,开局翻花杠翻宝,打法比较简单,一般只能碰和杠,不能吃牌。而且胡牌加番的特殊牌型较少,加番主要依靠栽宝,令人热血沸腾。\n二、牌数\n都昌栽宝麻将一共包含以下136张牌:\n序数牌(合计108张)\n一至九筒各4张,共计36张。\n一至九索各4张,共计36张。\n一至九万各4张,共计36张。\n三元牌：红中4张、发财4张、白板4张,共12张。\n四风牌：东南西北各4张,共计16张。\n注：其中四风牌中任意不同的三个算一坎牌,中发白算一坎牌。\n三、基础名词\n自摸: 即听牌后,自己摸到所需胡的牌。手上无宝，摸到宝可选择胡牌，也可选择栽宝。\n荒庄: 摸到最后一张牌没人胡牌,荒庄不计杠分，宝分。\n花杠牌: 发完牌后翻一张牌作为杠牌,打出去可以换一张牌,没打出当原来的牌算。花杠可以暗杠不能碰和明杠。\n宝牌: 翻出那张牌向上加一(东南西北、中发白分开,即翻出来北,宝就是东，翻出来白，宝就是中),宝牌在胡牌的时候可以当癞子用,但是手里至多有一张,有两张或两张以上的时候需要打出。宝牌不可碰杠,先显示的时候提到手牌最前面。\n七对: 胡牌时手中凑齐7个对子,可以有2对相同的牌(若发生暗杠动作则七对不成立)。\n碰碰胡:除了将牌、剩下其他牌全是刻子或者杠( 不论是否落地)。\n烂牌: 玩家手中的任意两张“万、筒、条”的序数牌之间都不能靠牌或重复(包括147、148、149、158、159、169、258、259、269、369),风牌、三元牌任意两两间不重复(此时东南西北、中发白不再视作顺子)。满足此要求的牌型成为烂牌。\n幺九牌: 手里14张牌(包括碰牌)都是1、9(条、万、筒)加字牌(东西南北中发白)构成,其中1、9筒、条、万不需要全部出现,张数也不受限制,符合条件即可胡牌。\n四、庄家规则\n第一局房主做庄家。\n如果庄家胡牌，则下轮继续坐庄。\n如果不是庄家胡牌，则庄家下家做庄。\n荒庄则庄家连庄。\n五、打牌规则\n可碰、杠、胡。不带吃。\n只能自摸胡。\n杠牌可过，此后每局都提醒。\n牌抓完后如果没人胡牌，则视为荒庄。\n在抓牌之前定杠宝。\n六、积分规则\n平胡：2分\n庄家：+1进出都是\n幺胡：+1\n七对：+1\n烂胡：+1\n烂胡7字齐全： +2\n碰碰胡：+1\n清一色：+1\n杠上花：+1\n杠：胡牌后+1，可叠加\n无档：+1（无档：胡牌手上无宝牌，载的宝不算）\n宝：栽出一个宝并胡牌+10\n    栽出两个宝并胡牌+30\n    栽出三个宝并胡牌+60\n    栽出四个宝并胡牌+100\n所有牌型累计叠加：比如栽出一个宝，胡了幺胡无档：宝10+平胡2+幺胡1+无档1+庄家1+杠1=16，里面如有其他符合牌型，则加符合牌型分，比如幺胡有可能组成碰碰胡，则多+1";
},
coures_paguo: function() {
return "扒锅\n一、基本规则\n游戏人数：4人。\n两副牌，去掉3、4，留8张底牌，始终2、7、王为常主。\n定庄：第一局由系统随机定庄家，后面的局由定主抢庄，庄家赢则下局继续坐庄，庄家输则下局轮给下家坐庄。\n发牌：每人发21张牌，从庄家开始发牌，一张一张的分发给玩家，发牌过程中玩家可以根据已发的手牌中7的花色进行叫主，只能叫一次，谁先叫主优先谁，当发到20张牌后如果没有玩家叫主，再从庄家开始选择是否要叫主：\nA、如果选择叫主则每个玩家再发一张牌，然后再进行买双7最终定主抢庄过程，从叫主的玩家开始轮流选择是否要买双7定主：\na、如果选择要买双7则由该玩家做庄，然后系统判断买双7的玩家手牌中是否有该主花色的7，如果没有则需要和其他玩家进行交换（如：我买红桃双7，我手上没有红桃7，则我要选择放2张牌放到桌面上，有红桃7的玩家也必须要把红桃7拿出来放到桌面上与庄家进行换牌，庄家可以自由选择已摆出去的2张牌，用哪张牌和哪个玩家进行互换）。\nb、如果4家都不选择买双7，则由叫主的玩家做庄，然后系统判断该玩家手牌中是否有2张该主花色的7，如果没有2张则需要和其他玩家进行交换一张（如：我叫的红桃7，我手上只有一张红桃7，则我要选择放1张牌放到桌面上，有红桃7的玩家也必须要把红桃7拿出来放到桌面上与庄家进行换牌）。\nB、如果选择不叫，就再发一张牌给该玩家，然后轮给下家选择是否要叫主，如果4家都选择不叫，就又轮给庄家开始选择是否要买双7，如果4家都不要则流局。\n买完双7最终定主定庄后由庄家拿底牌（底牌不能明牌，只有庄家才能看得到），其它花色牌均为副牌，庄家再选择8张牌进行埋牌。\n二、出牌规则\n第一轮牌由庄家方先出牌，以后每轮牌都由前轮牌大者首先出牌，首家可以出同花色中的拖拉机、对子、单牌，如果不是首家出牌方，则在出牌时必须先出首家出的花色。\n如：\n1、首家出的单张红桃副牌，则如果其他玩家有红桃就要先出红桃，没有红桃时可以用主牌杀之或垫其它花色的牌。\n2、首家出的1对红桃副牌，则其他玩家有红桃对子就先出红桃对子，没有红桃对子就出2个任意红桃单牌，没有红桃可以出1对主牌杀之或者出其它花色的牌垫上。\n3、首家出拖拉机，则有该花色的对子就必须要出对子（不限拖拉机），没有对子就出该花色的单牌，没有该花色的牌可以用主牌拖拉机杀之或者同数量的散牌垫上。\n报副：当玩家打完手上最后一张主牌后，则立即在该玩家方显示 “报副”，当所有闲家都报副后，则自动在庄家方显示还剩多少张副牌。\n甩主：当所有闲家都报副后，庄家可以自由选择一次性出多少张主牌，不限次序，闲家则必须出同样张数的牌。\n抠底：当局结束时，最后一轮牌若是闲家以副牌大则只可以察看底牌（不能获得底牌中的分牌），若闲家以主牌大则可以获得底牌中的分牌。\n认输：庄家拿底牌后可以选择认输\n三、计分规则\n5、10、K为分牌，分别代表5、10、10分。\n叫主：0分为过庄大光，5~20分为过庄小光，25~75分为过庄，80~120分为下庄，125~160分为下庄小光，满165分为下庄大光。\n买双7：0分为过庄大光，5~20分为过庄，25~45分为下庄，50~70分为下庄小光，满75分为下庄大光。\n认输：叫主认输为下庄，买双7认输为下庄小光\n过庄大光：庄家进18分，闲家每人出6分\n过庄小光：庄家进12分，闲家每人出4分\n过庄：庄家进6分，闲家每人出2分\n下庄：庄家出6分，闲家每人进2分\n下庄小光：庄家出12分，闲家每人进4分\n下庄大光：庄家出18分，闲家每人进6分";
},
coures_phz: function() {
return "长沙跑胡子\n一、基本规则\n1、 长沙跑胡子一共 80 张, 小字 “ 一 “ 到 “ 十 ” 各4 张共 40 张, 大宇 “ 壹 “ 到 “各4 张共 40 张. 其中大小写的 2、 7、 10 为红色， 其他的全部为黑色\n2、 砌牌： 跑胡子为 3 人同玩， 庄家砌 21 张. 其他方位砌 20 张. 留 19 张在墩上\n3、 一对牌： 砌牌后， 手中 2 个相同的牌为 1 对\n4、 一坎牌： 砌牌后， 手中 3 个相同的牌为 1 坎。 一坎牌不能拆散与其他牌组合。 (手上有默认组合成一副 )\n5、 一提牌： 砌牌后， 手中 4 个相同的牌为 1 提。 一提牌不能拆散与其他牌组合。 在第一张牌之前，必须放到桌面示众\n6、 一句话： 砌牌后， 手中的牌依据规则组合成相连的三张， 比如小4、 5、 6称为句话. 另外 2、 7、 10 组合也成为一句话\n7、 绞牌： 当一对大牌与一张相同的小牌. 或者一对小牌与一张相同的大牌组合吋成为绞牌，如一对小九与一张大玖。\n二、玩法规则\n1、偎牌：摸牌吋，如果所摸的牌正好是手中的一对牌，则必须将牌由手上放到桌上但不明示 ( 三张暗牌 )\n2、 臭偎 ： 忍碰之后， 又偎牌， 称为臭偎， 臭偎必须明示 ( 两张暗一张明 )\n3、 提牌 ： 提牌吋， 如果所摸的牌正好是手中的一坎牌 . 则必须将牌由手上放到桌上但不明示\n4、 碰牌 ： 当别人打或摸的牌自己手中有一对 ， 则可以碰牌 ， 碰牌后将牌放到桌面\n5、 跑牌 ： 当别人打或摸的牌自己手中一坎， 或是已经偎牌的牌 ， 则可以跑牌 .牌后将牌放到桌面. 或者当别人从墩上摸的牌， 是自己已经碰的牌， 则同样可以跑如果没有跑牌，称为走跑。\n6、摸牌吋，除偎牌与提牌外，必须首先明示，在别人不碰或不跑的情况下才可以吃牌。\n7、 忍碰 ： 当有机会碰牌时 ， 而自己不碰 ， 则称为忍碰\n8、 重蹈： 当跑的牌超过 1 次时， 称为八快。 如跑了小二， 再跑小三, 称为八快。时不用从手中打牌出去 ， 而要让下家摸牌。 不能忍偎 ， 忍跑。\n9、 吃牌 ： 上家出的或者自己摸的牌 ， 示众后没有人碰牌或者跑牌 ， 则可以与自己中的牌组合成一句话， 或者绞牌 (如 l 张小九与一张大玖绞一张小九或大玖), 放到桌面 ， 称为吃牌。\n10、 过张 ： 当有机会 ， 吃 ， 碰时 ， 自己却没有吃、 碰的牌 ， 称为过张， 过张后 ， 自不能再吃 ， 碰 ， 直到这局游戏结束\n11、 比牌 ： 当吃的牌手中还有时 ， 必须要将手中的这张牌根据某种组合 . 也要放到桌面， 称为摆火。 如： 手中有小1、 2、 3、 4、 5, 此吋. 以4、 5组合吃小3, 那么手的小3, 必须以1、 2、 3的组合同时放到桌面。 如果玩家符合吃牌的条件但达不到牌 (摆火) 的条件， 即要比的那张牌无法和手上剩下的牌组成吃的牌型， 则不允许吃牌。\n12、 一方门子 ： 比如一句话 . 一绞牌、 一碰 、 一提 、 一偎 、 一跑都成为一方门子.有跑牌或提牌吋 ， 一对牌可以称为一方门子， 叫做将 ， 跑牌或提牌时， 必须有一对将，否则就要钓将\n13、 每进一张 ， 必须打出一张 ， 重跑重提除外。\n三、名堂\n1. 天胡： 庄家起手胡牌， 番数： 5\n2. 地胡 ： 胡庄家打的第一张牌 . 番数：5 \n3.碰碰胡： 胡牌吋， 7方门子全部是碰牌、 提牌、 跑牌、 臭偎牌、 对子 (如果有跑牌或提牌 ) 组成的 ， 番数 ： 5\n4. 黑胡 ： 胡牌吋 ， 全是黑宇 ， 番数 ： 5\n5.十红： 胡牌吋， 有10张红字， 番数： 2, 每多一个红字加1 番\n6. 一点红 ： 胡牌吋 ， 只有一张红宇 ， 番数：4 \n7.十八大： 胡牌吋， 有18张大字, 番数： 5, 每多一个大字多计1 番\n8.十八小： 胡牌吋， 有18 张小字， 番数： 5, 每多一个小宇多计1 番\n9. 二比： 胡牌吋， 有且只有两个相同的红字， 番数：2\n10. 三比： 胡牌吋， 有且只有三个相同的红字， 番数：3\n11. 四比： 胡牌吋， 有且只有四个相同的红字， 番数：4\n12. 双飘： 胡牌吋. 有且只有两张红色牌. 番数：2\n如果有两个或以上名堂的，总番数按各名堂的番数累加\n四、计分规则\n1、 总胡息为各个门子产生的息数累加 ， 最低 15 胡才能胡牌；\n碰小牌为 1 胡息， 大牌 3 胡息， 偎小牌 3 胡忠， 大牌 6 胡息， 跑小牌 6 胡息， 大牌9胡息， 提小牌9胡息. 大牌12胡息。 一句话小1、 2、 3或2、 7、 10有3胡息， 大2、 3或2、 7、 10有6胡息， 一句话其他没有息。 绞牌没有息\n2、 囤数计算： 从15胡息开始计算， 15胡息为1囤， 每增加3胡息增加1囤， 不满胡不算囤。 如15胡息为1囤， 17胡息也为1囤， 20胡息为2囤\n3、胡牌.满足以下条件可以胡牌\n(1) 满 15 胡\n(2) 手里的与桌上的牌  有 7 方门子\n(3) 只能胡墩上的牌 ， 示众后的牌， 可以胡过张， 胡自己或其他人要碰、 跑的牌不能胡任何人提或偎的牌\n4、 计分： 基本单位为囤， 最小单位为胡 (息), 分数 = 囤数*番数\n5、 有上限 5 番和无上限玩法两种玩法。";
},
coures_qmt: function() {
return "常德全名堂\n一、基本规则\n1.一共80张牌,小写“一”到“十”各4张共40张,大写“壹“到“拾”各4张 共40张。其中大小写的2、7、10为红色,其他的全部为黑色。\n2.砌牌:3人同玩,庄家砌21张,其他方位砌20张,留19张在墩上。庄家砌的最后一张必须示众。\n3.一对牌:砌牌后,手中2个相同的牌为1对。\n4.一坎牌:砌牌后,手中3个相同的牌为1坎。一坎牌不能拆散与其他牌组合。(即手上有默认组合成一副)。\n5.一提牌:砌牌后,手中4个相同的牌为1提。一提牌不能拆散与其他牌组合。在进第一张牌之前,必须放到桌面示众。\n6.顺子:如一二三、五六七、八九十等顺序连在一起的牌为顺子,只有小字和小字大字和大字才能构成顺子;吃牌全亮。\n7.绞牌:两张大字与一张小字或者两张小字与一张大字组成的牌型。\n二、玩法规则\n1.偎牌:摸牌时,如果所摸的牌正好是手中的一对牌,则必须将牌由手上放到桌上(别人看不偎牌,有偎必偎牌,系统自动操作)。\n2.提牌:提牌时,如果所摸的牌正好是手中的一坎牌,则必须将牌由手上放到桌上必须示众(三张暗,一张明示)。起手若有2提及以上时,需要先打出一张牌,再碰或者再吃时,跳过出牌直接进入摸牌阶段。\n3.碰牌:当别人打或摸的牌自己手中有一对,则可以碰牌,碰牌后将牌放到桌面(三张明)。\n4.跑牌:当别人打或摸的牌自己手中一坎,或是已经偎牌的牌,则可以跑牌,跑牌后将牌放到桌面。或者当别人从墩上摸的牌,是自己已经碰的牌,则同样可以跑牌(第次跑需要打出一张牌,之后若再跑不需要打牌,直接给下家发牌)。\n5.摸牌时,除偎牌与提牌外,必须首先明示,在别人不碰或不跑的情况下才可以吃牌\n6.忍碰:当有机会碰牌时,而自己不碰,则称为忍碰\n7.重跑:当跑的牌超过1次时,称为八快。此时不用从手中打牌出去,而要让下家摸牌。不能忍偎,忍跑。\n8.吃牌:上家出的或者自己摸的牌,示众后没有人碰牌或者跑牌,则可以与自己手中的牌组合成顺子,或者绞牌(如1张小九与一张大玖绞一张小九或大玖),放到桌面称为吃牌\n9.过张:当有机会,吃,碰时,自己却没有吃、碰的牌,称为过张,过张后,自己不能再吃,碰,直到这局游戏结束\n下伙:当吃的牌手中还有时,必须要将手中的这张牌根据某种组合,也要放到桌面如:手中有小1、2、3、4、5,此时,以4、5组合吃小3,那么手中的小3,必须以1、2、3的组合同时放到桌面。\n10.如果玩家符合吃牌的条件但达不到下伙的条件,即要比的那张牌无法和手上剩下的牌组成吃的牌型,则不允许吃牌。\n11.每进一张,必须打出一张,重跑重提除外。\n三、名堂\n1.红胡:胡牌时,红字大于或等于10只,为红胡。每多一个红字多1番,起始3番\n2.点胡:胡牌时,红字有且仅有1只。6番。\n3.乌胡:胡牌时,手上没有红字。8番。\n4.对对胡:胡牌时,7方门子中全部是碰牌、提牌、跑牌、臭偎牌、对子(如果有跑牌或提牌)组成的。8番。\n5.海底胡:玩家所胡的牌是墩中最后的一只牌。6番。\n6大字胡:胡牌时,玩家的牌中,大字大于等于18只(以18只为基数,每多1只大字加1番。8番起始)。\n7.小字胡:胡牌时,玩家的牌中,小字大于等于16只(以16只为基数,每多1只小字加1番。10番起始)。 \n8.耍猴:手上只剩1张牌时胡牌。8番\n9.黄番:上局出现黄庄,下一局开始番数翻倍,黄一次*2,黄二次*3黄三次*4,以此类推。\n10.自摸:胡牌时,所胡的那只牌是玩家自己从墩上摸上来的。加3息(或1囤),不加番。\n11.天胡:\n1）.玩家手中有3提或5坎;6番\n2）.庄家起手胡牌。庄家算自摸。6番。\n3）.闲家所胡的牌为庄家的亮张牌。6番\n12.听胡:没有进牌就胡牌。6番。天胡算听胡。\n13.大团圆:跑或提了两个相同的牌,如大玖和小九,8番。\n14.行行息:七方门子全都是有息的牌,8番。\n15.如果有两个或以上名堂的,总番数按各名堂的番数累加。\n四、胡牌计分规则\n1总胡息为各门子产生的息数的累加,最低15胡息才能胡牌碰小牌为1胡息,大牌3胡息,偎小牌3胡息,大牌6胡息,跑小牌6胡息,大牌9胡息,提小牌9胡息,大牌12胡息。一句话小1、2、3或2、7、10有3胡息,大2、3或2、7、10有6胡息,一句话其他没有息。绞牌没有息。\n2.一方门子:比如一句话,一绞牌、一碰、一提、一偎、一跑都成为1方门子。当有跑牌或提牌时,一对牌可以称为1方门子,叫做将,跑牌或者提牌时,必须有一对将，否则就要吊将。\n3.胡牌\n(1)满15胡息\n(2)手里的与桌上的牌组合有7方门子\n(3)胡牌只能胡墩上示众后的牌,可以胡过张,胡自己或其他人要碰,跑的牌。不能胡任何人提或偎的牌。\n4.算分:从15胡息开始计算,15胡息为1囤,每增加3胡息增加1围。如18胡息为2囤,20胡息也为2囤,21胡息为3囤,一囤等于1分。分数=番数*囤数。\n5.黄庄:当墩上的牌摸完时,三个玩家还没有胡牌,称为黄庄";
}
});
cc._RF.pop();
}, {} ],
CreateRole: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d56bFYy/REb77pQCq9YHh6", "CreateRole");
cc.Class({
extends: cc.Component,
properties: {
inputName: cc.EditBox
},
onRandomBtnClicked: function() {
var e = [ "上官", "欧阳", "东方", "端木", "独孤", "司马", "南宫", "夏侯", "诸葛", "皇甫", "长孙", "宇文", "轩辕", "东郭", "子车", "东阳", "子言" ], t = [ "雀圣", "赌侠", "赌圣", "稳赢", "不输", "好运", "自摸", "有钱", "土豪" ], i = Math.floor(Math.random() * (e.length - 1)), n = Math.floor(Math.random() * (t.length - 1));
this.inputName.string = e[i] + t[n];
},
onLoad: function() {
this.onRandomBtnClicked();
},
onBtnConfirmClicked: function() {
cc.vv.audioMgr.playBtnClick();
var e = this.inputName.string;
if ("" != e) {
console.log(e);
cc.vv.userMgr.create(e);
} else console.log("invalid name.");
}
});
cc._RF.pop();
}, {} ],
CreateRoom_13S: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "ac4e4SzF8VI16LvfcaExyMi", "CreateRoom_13S");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
},
btnType2: {
default: null,
type: cc.Toggle
},
goldInfo: {
default: null,
type: cc.Prefab
}
},
onLoad: function() {
this._radioArr = [];
this.base_paodekuai = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/13shui");
cc.find("Canvas/CreateRoom/up_group/right_Node").addChild(cc.instantiate(this.goldInfo));
var e = this.base_paodekuai.getChildByName("ruleType"), t = e.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(t);
var i = e.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this.jushu_j = this.base_paodekuai.getChildByName("jushu_j");
var n = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(n);
var a = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this.jushu_f = this.base_paodekuai.getChildByName("jushu_f");
var s = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(s);
var c = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.renshu = this.base_paodekuai.getChildByName("renshu");
var r = this.renshu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(r);
var o = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.base_paodekuai.getChildByName("wanfa"), l = h.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(l);
var d = h.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(d);
this.wanfa = this.base_paodekuai.getChildByName("wanfa");
this.kwanfa = this.base_paodekuai.getChildByName("kwanfa");
this.initData();
this._gameType = 1;
this.checkType(this._gameType);
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
checkType: function(e) {
this.wanfa.active = !1;
this.kwanfa.active = !1;
1 == e && (this.wanfa.active = !0);
2 == e && (this.kwanfa.active = !0);
},
onBtn13S_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
onBtnPDK_TypeClick: function(e) {
cc.vv.audioMgr.playBtnClick();
this._gameType = e.checkEvents[0].customEventData;
this.checkType(this._gameType);
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
createRoom: function() {
var e = 1 << this._gameType, t = 0;
if (this._radioArr[0].isChecked) {
console.log("移位：19");
t = 1 << 19;
}
if (this._radioArr[1].isChecked) {
console.log("移位：20");
t = 1 << 20;
}
if (1 == this.jushu_j.active) {
if (this._radioArr[2].isChecked) {
console.log("移位：1");
t += 2;
}
if (this._radioArr[3].isChecked) {
console.log("移位：2");
t += 4;
}
}
if (1 == this.jushu_f.active) {
if (this._radioArr[4].isChecked) {
console.log("移位：1");
t += 2;
}
if (this._radioArr[5].isChecked) {
console.log("移位：2");
t += 4;
}
}
if (1 == this.renshu.active) {
this._radioArr[6].isChecked && (t += 16);
this._radioArr[7].isChecked && (t += 8);
}
this._radioArr[8].isChecked && (t += 128);
this._radioArr[9].isChecked && (t += 64);
this.base_paodekuai.getChildByName("kwanfa").getChildByName("rule5").getComponent(cc.Toggle).isChecked && (t += 512);
this.base_paodekuai.getChildByName("kwanfa").getChildByName("rule6").getComponent(cc.Toggle).isChecked && (t += 1024);
this.base_paodekuai.getChildByName("teshu").getChildByName("rule12").getComponent(cc.Toggle).isChecked && (t += 256);
var i = {
server_code: 20009,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20009, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20009");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !1;
this.btnType2.isChecked = !1;
t.type_index = t.type_index >> 1;
switch (t.type_index) {
case 1:
this.btnType1.isChecked = !0;
break;

case 2:
this.btnType2.isChecked = !0;
}
this.checkType(t.type_index);
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 16 & t.rule_index;
this._radioArr[7].isChecked = 8 & t.rule_index;
this._radioArr[8].isChecked = 128 & t.rule_index;
this._radioArr[9].isChecked = 64 & t.rule_index;
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.base_paodekuai.getChildByName("kwanfa").getChildByName("rule5").getComponent(cc.Toggle).isChecked = 512 & t.rule_index;
this.base_paodekuai.getChildByName("kwanfa").getChildByName("rule6").getComponent(cc.Toggle).isChecked = 1024 & t.rule_index;
this.base_paodekuai.getChildByName("teshu").getChildByName("rule12").getComponent(cc.Toggle).isChecked = 256 & t.rule_index;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else this.openShowPanel("十三水", 20009, e.roomid, t_index, r_index, 10);
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20009");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20009: "GameNetMgr20009"
} ],
CreateRoom_21D: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "8d5aec5OT9B/pYvEJCmGfU0", "CreateRoom_21D");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.renshu = e.getChildByName("renshu");
var o = this.renshu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(h);
var l = this.renshu.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(l);
this.wanfa = e.getChildByName("wanfa");
var d = this.wanfa.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(d);
var u = this.wanfa.getChildByName("rule7").getComponent(cc.Toggle);
this._radioArr.push(u);
var v = this.wanfa.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(v);
var g = e.getChildByName("k_wanfa");
u = g.getChildByName("rule8").getComponent(cc.Toggle);
this._radioArr.push(u);
var _ = g.getChildByName("rule9").getComponent(cc.Toggle);
this._radioArr.push(_);
this.xianzhu = e.getChildByName("xianzhu");
var f = this.xianzhu.getChildByName("rule14").getComponent(cc.Toggle);
this._radioArr.push(f);
var p = this.xianzhu.getChildByName("rule15").getComponent(cc.Toggle);
this._radioArr.push(p);
var m = this.xianzhu.getChildByName("rule16").getComponent(cc.Toggle);
this._radioArr.push(m);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtn3G_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (7 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
} else if (6 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
}
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 32);
this._radioArr[9].isChecked && (t += 64);
this._radioArr[10].isChecked && (t += 128);
this._radioArr[11].isChecked && (t += 1024);
this._radioArr[12] && this._radioArr[12].isChecked && (t += 2048);
this._radioArr[13] && this._radioArr[13].isChecked && (t += 4096);
this._radioArr[14].isChecked && (t += 32768);
this._radioArr[15].isChecked && (t += 65536);
this._radioArr[16].isChecked && (t += 1 << 17);
var i = {
server_code: 20007,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20007, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20007");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !0;
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 8 & t.rule_index;
this._radioArr[7].isChecked = 16 & t.rule_index;
this._radioArr[8].isChecked = 32 & t.rule_index;
this._radioArr[9].isChecked = 64 & t.rule_index;
this._radioArr[10].isChecked = 128 & t.rule_index;
this._radioArr[11].isChecked = 1024 & t.rule_index;
this._radioArr[12].isChecked = 2048 & t.rule_index;
this._radioArr[13].isChecked = 4096 & t.rule_index;
this._radioArr[14].isChecked = 32768 & t.rule_index;
this._radioArr[15].isChecked = 65536 & t.rule_index;
this._radioArr[16].isChecked = t.rule_index & 1 << 17;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20007"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("21点", 20007, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20007");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20007: "GameNetMgr20007"
} ],
CreateRoom_3DH: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "abb9bPPg25BeLKJpzYxgu8W", "CreateRoom_3DH");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
this._radioArr = [];
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/13shui"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this._radioArr.push(r);
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.wanfa = e.getChildByName("wanfa");
var o = this.wanfa.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.wanfa.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(h);
this._gameType = "2";
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "6局 (1          )";
this.jushu_j_2.string = "12局 (2          )";
this.jushu_f_1.string = "6局 (1          )";
this.jushu_f_2.string = "12局 (2          )";
this.jushu_j_1_sl.string = "6局 (1          )";
this.jushu_j_2_sl.string = "12局 (2          )";
this.jushu_f_1_sl.string = "6局 (1          )";
this.jushu_f_2_sl.string = "12局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtn3DH_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
var i = {
server_code: 20010,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20010, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20010");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !0;
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[6].getComponent(cc.Toggle).isChecked = 8 & t.rule_index;
this._radioArr[7].getComponent(cc.Toggle).isChecked = 16 & t.rule_index;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "6局 ( 免费 )";
t.jushu_j_2.string = "12局 ( 免费 )";
t.jushu_f_1.string = "6局 ( 免费 )";
t.jushu_f_2.string = "12局 ( 免费 )";
t.jushu_j_1_sl.string = "6局 ( 免费 )";
t.jushu_j_2_sl.string = "12局 ( 免费 )";
t.jushu_f_1_sl.string = "6局 ( 免费 )";
t.jushu_f_2_sl.string = "12局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20010"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("三打哈", 20010, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20010");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20010: "GameNetMgr20010"
} ],
CreateRoom_3G: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "f46d1DyeZxJ8q+5dgDhn70W", "CreateRoom_3G");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = (e.getChildByName("lineBg"), 
e.getChildByName("ruleType")), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.renshu = e.getChildByName("renshu");
var o = this.renshu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(h);
var l = this.renshu.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(l);
this.wanfa = e.getChildByName("wanfa");
var d = this.wanfa.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(d);
var u = this.wanfa.getChildByName("rule7").getComponent(cc.Toggle);
this._radioArr.push(u);
var v = this.wanfa.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(v);
var g = this.wanfa.getChildByName("rule12").getComponent(cc.Toggle);
this._radioArr.push(g);
var _ = this.wanfa.getChildByName("rule13").getComponent(cc.Toggle);
this._radioArr.push(_);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtn3G_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (7 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
} else if (6 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
}
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 32);
this._radioArr[9].isChecked && (t += 64);
this._radioArr[10].isChecked && (t += 128);
this._radioArr[11].isChecked && (t += 1024);
this._radioArr[12].isChecked && (t += 256);
this._radioArr[13].isChecked && (t += 512);
t += 2048;
t += 4096;
var i = {
server_code: 20008,
type_index: e,
rule_index: t += 8192
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20008, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20008");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !0;
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 8 & t.rule_index;
this._radioArr[7].isChecked = 16 & t.rule_index;
this._radioArr[8].isChecked = 32 & t.rule_index;
this._radioArr[9].isChecked = 64 & t.rule_index;
this._radioArr[10].isChecked = 128 & t.rule_index;
this._radioArr[11].isChecked = 1024 & t.rule_index;
this._radioArr[12].isChecked = 256 & t.rule_index;
this._radioArr[13].isChecked = 512 & t.rule_index;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20008"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("三公", 20008, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20008");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20008: "GameNetMgr20008"
} ],
CreateRoom_DDZ: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "9dab7FUXC9Daamu1diZanP6", "CreateRoom_DDZ");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
this._radioArr = [];
this.base_doudizhu = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/doudizhu");
var e = this.base_doudizhu.getChildByName("ruleType"), t = e.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(t);
var i = e.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this.jushu_j = this.base_doudizhu.getChildByName("jushu_j");
var n = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(n);
var a = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this.jushu_f = this.base_doudizhu.getChildByName("jushu_f");
var s = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(s);
var c = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.pai_fu = this.base_doudizhu.getChildByName("pai_fu");
this.rule3 = this.pai_fu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(this.rule3);
this.rule4 = this.pai_fu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(this.rule4);
this.wanfa = this.base_doudizhu.getChildByName("wanfa");
this.rule10 = this.wanfa.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(this.rule10);
this.rule11 = this.wanfa.getChildByName("rule11").getComponent(cc.Toggle);
this._radioArr.push(this.rule11);
this._gameType = "2";
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtnDDZ_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
onBtnDDZ_TypeClick: function(e) {
cc.vv.audioMgr.playBtnClick();
this._gameType = e.checkEvents[0].customEventData;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
if (1 == this.pai_fu.active) {
this._radioArr[6].isChecked && (t += 4096);
this._radioArr[7].isChecked && (t += 8192);
} else this._radioArr[6].isChecked && (t += 4096);
this._radioArr[8].isChecked && (t += 16384);
this._radioArr[9].isChecked && (t += 32768);
var i = {
server_code: 20002,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20002, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20002");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !0;
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 4096 & t.rule_index;
this._radioArr[7].isChecked = 8192 & t.rule_index;
this._radioArr[8].isChecked = 16384 & t.rule_index;
this._radioArr[9].isChecked = 32768 & t.rule_index;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20002"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("斗地主", 20002, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20002");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20002: "GameNetMgr20002"
} ],
CreateRoom_DNN: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "71a5cSFOmZEEJ6xFWlBO0wk", "CreateRoom_DNN");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
},
btnType2: {
default: null,
type: cc.Toggle
},
btnType3: {
default: null,
type: cc.Toggle
},
btnType4: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
this._radioArr = [];
this.base_dnn_node = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/douniuniu");
var e = this.base_dnn_node.getChildByName("ruleType"), t = e.getChildByName("rule19");
this._radioArr.push(t);
var i = e.getChildByName("rule20");
this._radioArr.push(i);
this.jushu = this.base_dnn_node.getChildByName("jushu");
this.jushu_f = this.jushu.getChildByName("jushu_f");
var n = this.jushu_f.getChildByName("rule1");
this._radioArr.push(n);
var a = this.jushu_f.getChildByName("rule2");
this._radioArr.push(a);
this.jushu_j = this.jushu.getChildByName("jushu_j");
var s = this.jushu_j.getChildByName("rule1");
this._radioArr.push(s);
var c = this.jushu_j.getChildByName("rule2");
this._radioArr.push(c);
this.zhuang = this.base_dnn_node.getChildByName("zhuang");
this.zhuang_j = this.zhuang.getChildByName("zhuang_j");
var r = this.zhuang_j.getChildByName("rule1");
this._radioArr.push(r);
var o = this.zhuang_j.getChildByName("rule2");
this._radioArr.push(o);
this.zhuang_f = this.zhuang.getChildByName("zhuang_f");
var h = this.zhuang_f.getChildByName("rule1");
this._radioArr.push(h);
var l = this.zhuang_f.getChildByName("rule2");
this._radioArr.push(l);
this.renshu = this.base_dnn_node.getChildByName("renshu");
var d = this.renshu.getChildByName("rule3");
this._radioArr.push(d);
var u = this.renshu.getChildByName("rule4");
this._radioArr.push(u);
var v = this.renshu.getChildByName("rule5");
this._radioArr.push(v);
this.beilv = this.base_dnn_node.getChildByName("beilv");
this.beilv_showLab = this.beilv.getChildByName("changed_button").getChildByName("showlab").getComponent(cc.Label);
this.beilv_show = this.beilv.getChildByName("beilv_show");
var g = this.beilv_show.getChildByName("rule3");
this._radioArr.push(g);
var _ = this.beilv_show.getChildByName("rule4");
this._radioArr.push(_);
this.paixing = this.base_dnn_node.getChildByName("paixing");
this.paixing_showLab = this.paixing.getChildByName("changed_button").getChildByName("showlab").getComponent(cc.Label);
this.paixing_show = this.paixing.getChildByName("paixing_show");
var f = this.paixing_show.getChildByName("rule21");
this._rule21_lb1 = f.getChildByName("lb_1");
this._rule21_lb2 = f.getChildByName("lb_2");
this._radioArr.push(f);
var p = this.paixing_show.getChildByName("rule22");
this._rule22_lb1 = p.getChildByName("lb_1");
this._rule22_lb2 = p.getChildByName("lb_2");
this._rule22_lb3 = p.getChildByName("lb_3");
this._rule22_lb1_s = p.getChildByName("checkmark").getChildByName("lb_1");
this._rule22_lb2_s = p.getChildByName("checkmark").getChildByName("lb_2");
this._rule22_lb3_s = p.getChildByName("checkmark").getChildByName("lb_3");
this._radioArr.push(p);
this.wanfa = this.base_dnn_node.getChildByName("wanfa");
var m = this.wanfa.getChildByName("rule6");
this._radioArr.push(m);
var C = this.wanfa.getChildByName("rule7");
this._radioArr.push(C);
var y = this.wanfa.getChildByName("rule8");
this._radioArr.push(y);
var b = this.wanfa.getChildByName("rule9");
this._radioArr.push(b);
var M = this.wanfa.getChildByName("rule10");
this._radioArr.push(M);
var N = this.wanfa.getChildByName("rule11");
this._radioArr.push(N);
this.wanfaNode = this.base_dnn_node.getChildByName("wanfaNode");
var S = this.wanfaNode.getChildByName("paishu"), A = S.getChildByName("rule13");
this._radioArr.push(A);
var I = S.getChildByName("rule14");
this._radioArr.push(I);
var E = S.getChildByName("rule15");
this._radioArr.push(E);
this.k_wanfa = this.wanfaNode.getChildByName("k_wanfa");
var B = this.k_wanfa.getChildByName("rule11");
this._radioArr.push(B);
var w = this.k_wanfa.getChildByName("rule12");
this._radioArr.push(w);
this.wz_showlab = N.getChildByName("wuz").getChildByName("changed_button").getChildByName("showlab").getComponent(cc.Label);
this.wz_show = N.getChildByName("wuz").getChildByName("wz_show");
var k = this.wz_show.getChildByName("rule13");
this._radioArr.push(k);
var T = this.wz_show.getChildByName("rule14");
this._radioArr.push(T);
var L = this.wz_show.getChildByName("rule15");
this._radioArr.push(L);
var O = this.wz_show.getChildByName("rule16");
this._radioArr.push(O);
var x = this.wz_show.getChildByName("rule17");
this._radioArr.push(x);
this.zhuang_j_1 = this.zhuang_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.zhuang_j_2 = this.zhuang_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.zhuang_f_1 = this.zhuang_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.zhuang_f_2 = this.zhuang_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.zhuang_j_1_s = this.zhuang_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.zhuang_j_2_s = this.zhuang_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.zhuang_f_1_s = this.zhuang_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.zhuang_f_2_s = this.zhuang_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond5 = this.zhuang_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond6 = this.zhuang_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond7 = this.zhuang_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond8 = this.zhuang_f.getChildByName("rule2").getChildByName("fangka2");
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_s = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_s = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_s = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_s = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this._gameType = "2";
this.checkType(this._gameType);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
onclick_beilvButton: function() {
this.beilv_show.active = !0;
},
onclick_beilvRule: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].getComponent(cc.Toggle).isChecked) {
13 == (t = Math.floor(t)) && (this.beilv_showLab.string = "牛七x2  牛八x3  牛九x4  牛牛x5");
14 == t && (this.beilv_showLab.string = "牛八x2  牛九x3  牛牛x4");
this.beilv_show.active = !1;
} else {
this._radioArr[t].getComponent(cc.Toggle).isChecked = !0;
this.beilv_show.active = !1;
}
},
onclick_paixingButton: function() {
this.paixing_show.active = !0;
},
onclick_paixingRule: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].getComponent(cc.Toggle).isChecked) {
"15" == (t = Math.floor(t)) && (this.paixing_showLab.string = "牌型一");
"16" == t && (this.paixing_showLab.string = "牌型二");
this.paixing_show.active = !1;
} else {
this._radioArr[t].getComponent(cc.Toggle).isChecked = !0;
this.paixing_show.active = !1;
}
},
onclick_wzButton: function() {
this._radioArr[22] && this._radioArr[22].getComponent(cc.Toggle).isChecked && (this.wz_show.active = !0);
},
onclick_wzgRule: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].getComponent(cc.Toggle).isChecked) {
var i = "2分";
28 == (t = Math.floor(t)) && (i = "2分");
29 == t && (i = "4分");
30 == t && (i = "6分");
31 == t && (i = "8分");
32 == t && (i = "10分");
this.wz_showlab.string = "无庄通比：" + i;
this.wz_show.active = !1;
} else {
this._radioArr[t].getComponent(cc.Toggle).isChecked = !0;
this.wz_show.active = !1;
}
},
initData: function() {
this.beilv_show.active = !1;
this.jushu.active = !0;
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.zhuang.active = !1;
this.zhuang_f.active = !0;
this.zhuang_j.active = !1;
this.isXianMian = !1;
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_s.string = "10局 (1          )";
this.jushu_j_2_s.string = "20局 (2          )";
this.jushu_f_1_s.string = "10局 (1          )";
this.jushu_f_2_s.string = "20局 (2          )";
this.zhuang_j_1.string = "一圈庄 (1          )";
this.zhuang_j_2.string = "二圈庄 (2          )";
this.zhuang_f_1.string = "一圈庄 (1          )";
this.zhuang_f_2.string = "二圈庄 (2          )";
this.zhuang_j_1_s.string = "一圈庄 (1          )";
this.zhuang_j_2_s.string = "二圈庄 (2          )";
this.zhuang_f_1_s.string = "一圈庄 (1          )";
this.zhuang_f_2_s.string = "二圈庄 (2          )";
this.beilv_show.active = !1;
this.beilv_showLab.string = "牛七x2  牛八x3  牛九x4  牛牛x5";
this.paixing_show.active = !1;
this.paixing_showLab.string = "牌型一";
this._rule22_lb1.active = !0;
this._rule22_lb2.active = !0;
this._rule22_lb3.active = !1;
this._rule22_lb1_s.active = !0;
this._rule22_lb2_s.active = !0;
this._rule22_lb3_s.active = !1;
this._rule21_lb1.active = !0;
this._rule21_lb2.active = !0;
this.wz_show.active = !1;
},
checkType: function(e) {
this.jushu.active = !1;
this.zhuang.active = !1;
this.wanfa.active = !1;
this._rule22_lb1.active = !0;
this._rule22_lb2.active = !0;
this._rule22_lb3.active = !1;
this._rule22_lb1_s.active = !0;
this._rule22_lb2_s.active = !0;
this._rule22_lb3_s.active = !1;
1 == this._radioArr[0].getComponent(cc.Toggle).isChecked ? this.updateDNNCheck(0) : this.updateDNNCheck(1);
switch (e) {
case "2":
case "32":
this.jushu.active = !0;
this.wanfa.active = !0;
this.wanfaNode.setPosition(-466, -536);
break;

case "4":
this.jushu.active = !0;
this.wanfa.active = !0;
this.wanfaNode.setPosition(-466, -536);
this._rule22_lb3.active = !0;
this._rule22_lb1.active = !1;
this._rule22_lb2.active = !1;
this._rule22_lb3_s.active = !0;
this._rule22_lb1_s.active = !1;
this._rule22_lb2_s.active = !1;
break;

case "8":
this.zhuang.active = !0;
this.wanfaNode.setPosition(-466, -415);
break;

case "16":
this.zhuang.active = !0;
this.wanfaNode.setPosition(-466, -415);
this._rule22_lb3.active = !0;
this._rule22_lb1.active = !1;
this._rule22_lb2.active = !1;
this._rule22_lb3_s.active = !0;
this._rule22_lb1_s.active = !1;
this._rule22_lb2_s.active = !1;
}
},
onBtnDNN_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
0 != this._radioArr[t].getComponent(cc.Toggle).isChecked ? this.updateDNNCheck(t) : this._radioArr[t].getComponent(cc.Toggle).isChecked = !0;
},
updateDNNCheck: function(e) {
if ("2" == this._gameType || "4" == this._gameType || "32" == this._gameType) {
this.jushu.active = !0;
this.zhuang.active = !1;
if (1 == this._radioArr[11].isChecked) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
this.jushu_j_1_s.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_s.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_s.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2_s.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
} else if (1 == this._radioArr[10].isChecked) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_j_1_s.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_s.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_s.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2_s.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
}
if ("1" == e) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if ("0" == e) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else if ("8" == this._gameType || "16" == this._gameType) {
this.jushu.active = !1;
this.zhuang.active = !0;
if (1 == this._radioArr[11].getComponent(cc.Toggle).isChecked) {
this.zhuang_j_1.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (1          )";
this.zhuang_j_2.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (2          )";
this.zhuang_f_1.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (2          )";
this.zhuang_f_2.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (4          )";
this.zhuang_j_1_s.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (1          )";
this.zhuang_j_2_s.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (2          )";
this.zhuang_f_1_s.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (2          )";
this.zhuang_f_2_s.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (4          )";
} else if (1 == this._radioArr[10].getComponent(cc.Toggle).isChecked) {
this.zhuang_j_1.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (1          )";
this.zhuang_j_2.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (2          )";
this.zhuang_f_1.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (1          )";
this.zhuang_f_2.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (2          )";
this.zhuang_j_1_s.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (1          )";
this.zhuang_j_2_s.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (2          )";
this.zhuang_f_1_s.string = this.isXianMian ? "一圈庄 ( 免费 )" : "一圈庄 (1          )";
this.zhuang_f_2_s.string = this.isXianMian ? "二圈庄 ( 免费 )" : "二圈庄 (2          )";
}
if ("1" == e) {
this.zhuang_j.active = !0;
this.zhuang_f.active = !1;
} else if ("0" == e) {
this.zhuang_j.active = !1;
this.zhuang_f.active = !0;
}
}
"22" != e && (this.wz_show.active = !1);
},
onBtnDNN_TypeClick: function(e) {
cc.vv.audioMgr.playBtnClick();
this._gameType = e.checkEvents[0].customEventData;
this.checkType(this._gameType);
},
createRoom: function() {
var e = this._gameType;
"32" == this._gameType && (e = 32);
var t = 0;
this._radioArr[0].getComponent(cc.Toggle).isChecked && (t = 1 << 19);
this._radioArr[1].getComponent(cc.Toggle).isChecked && (t = 1 << 20);
if (1 == this.jushu.active) {
if (1 == this.jushu_f.active) {
this._radioArr[2].getComponent(cc.Toggle).isChecked && (t += 2);
this._radioArr[3].getComponent(cc.Toggle).isChecked && (t += 4);
}
if (1 == this.jushu_j.active) {
this._radioArr[4].getComponent(cc.Toggle).isChecked && (t += 2);
this._radioArr[5].getComponent(cc.Toggle).isChecked && (t += 4);
}
}
if (1 == this.zhuang.active) {
if (1 == this.zhuang_j.active) {
this._radioArr[6].getComponent(cc.Toggle).isChecked && (t += 2);
this._radioArr[7].getComponent(cc.Toggle).isChecked && (t += 4);
}
if (1 == this.zhuang_f.active) {
this._radioArr[8].getComponent(cc.Toggle).isChecked && (t += 2);
this._radioArr[9].getComponent(cc.Toggle).isChecked && (t += 4);
}
t += 128;
}
this._radioArr[10].getComponent(cc.Toggle).isChecked && (t += 8);
this._radioArr[11].getComponent(cc.Toggle).isChecked && (t += 16);
this._radioArr[12].getComponent(cc.Toggle).isChecked && (t += 32);
this._radioArr[13].getComponent(cc.Toggle).isChecked && (t += 65536);
this._radioArr[15].getComponent(cc.Toggle).isChecked && (t += 1 << 21);
this._radioArr[16].getComponent(cc.Toggle).isChecked && (t += 1 << 22);
if (1 == this.wanfa.active) {
this._radioArr[17] && this._radioArr[17].getComponent(cc.Toggle).isChecked && (t += 64);
this._radioArr[18] && this._radioArr[18].getComponent(cc.Toggle).isChecked && (t += 128);
this._radioArr[19] && this._radioArr[19].getComponent(cc.Toggle).isChecked && (t += 256);
this._radioArr[20] && this._radioArr[20].getComponent(cc.Toggle).isChecked && (t += 512);
this._radioArr[21] && this._radioArr[21].getComponent(cc.Toggle).isChecked && (t += 1024);
if (this._radioArr[22] && this._radioArr[22].getComponent(cc.Toggle).isChecked) {
t += 1 << 17;
this._radioArr[28].getComponent(cc.Toggle).isChecked && (t += 1 << 18);
this._radioArr[29].getComponent(cc.Toggle).isChecked && (t += 1 << 23);
this._radioArr[30].getComponent(cc.Toggle).isChecked && (t += 1 << 24);
this._radioArr[31].getComponent(cc.Toggle).isChecked && (t += 1 << 25);
this._radioArr[32].getComponent(cc.Toggle).isChecked && (t += 1 << 26);
}
}
this._radioArr[26] && this._radioArr[26].getComponent(cc.Toggle).isChecked && (t += 2048);
this._radioArr[27] && this._radioArr[27].getComponent(cc.Toggle).isChecked && (t += 4096);
this._radioArr[23] && this._radioArr[23].getComponent(cc.Toggle).isChecked && (t += 8192);
this._radioArr[24] && this._radioArr[24].getComponent(cc.Toggle).isChecked && (t += 16384);
this._radioArr[25] && this._radioArr[25].getComponent(cc.Toggle).isChecked && (t += 32768);
var i = {
server_code: 20003,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20001, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20003");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !1;
this.btnType2.isChecked = !1;
this.btnType3.isChecked = !1;
this.btnType4.isChecked = !1;
var i = Number(t.type_index);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
if (2 == i || 4 == i) {
this.zhuang.active = !1;
this.wanfa.active = !0;
this.jushu.active = !0;
this.wanfaNode.setPosition(-466, -536);
if (2 == i) {
this.btnType1.isChecked = !0;
this._gameType = "2";
} else if (4 == i) {
this.btnType2.isChecked = !0;
this._gameType = "4";
}
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
} else if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
}
} else if (8 == i || 16 == i) {
this.wanfa.active = !1;
this.jushu.active = !1;
this.zhuang.active = !0;
this.wanfaNode.setPosition(-466, -415);
if (8 == i) {
this.btnType3.isChecked = !0;
this._gameType = "8";
} else if (16 == i) {
this.btnType4.isChecked = !0;
this._gameType = "16";
}
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.zhuang_j.active = !1;
this.zhuang_f.active = !0;
this._radioArr[8].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[9].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
} else if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.zhuang_j.active = !0;
this.zhuang_f.active = !1;
this._radioArr[6].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[7].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
}
}
this._radioArr[10].getComponent(cc.Toggle).isChecked = 8 & t.rule_index;
this._radioArr[11].getComponent(cc.Toggle).isChecked = 16 & t.rule_index;
this._radioArr[12].getComponent(cc.Toggle).isChecked = 32 & t.rule_index;
this._radioArr[13].getComponent(cc.Toggle).isChecked = 65536 & t.rule_index;
if (this._radioArr[13].getComponent(cc.Toggle).isChecked = 65536 & t.rule_index) this.beilv_showLab.string = "牛七x2  牛八x3  牛九x4  牛牛x5"; else {
this._radioArr[14].getComponent(cc.Toggle).isChecked = !0;
this.beilv_showLab.string = "牛八x2  牛九x3  牛牛x4";
}
this._radioArr[15].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 21;
this._radioArr[16].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 22;
(this._radioArr[15].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 21) && (this.paixing_showLab.string = "牌型一");
(this._radioArr[16].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 22) && (this.paixing_showLab.string = "牌型二");
this._radioArr[17].getComponent(cc.Toggle).isChecked = 64 & t.rule_index;
this._radioArr[18].getComponent(cc.Toggle).isChecked = 128 & t.rule_index;
this._radioArr[19].getComponent(cc.Toggle).isChecked = 256 & t.rule_index;
this._radioArr[20].getComponent(cc.Toggle).isChecked = 512 & t.rule_index;
this._radioArr[21].getComponent(cc.Toggle).isChecked = 1024 & t.rule_index;
this._radioArr[22].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 17;
this._radioArr[28].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 18;
this._radioArr[29].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 23;
this._radioArr[30].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 24;
this._radioArr[31].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 25;
this._radioArr[32].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 26;
(this._radioArr[28].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 18) && (this.wz_showlab.string = "无庄通比：2分");
(this._radioArr[29].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 23) && (this.wz_showlab.string = "无庄通比：4分");
(this._radioArr[30].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 24) && (this.wz_showlab.string = "无庄通比：6分");
(this._radioArr[31].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 25) && (this.wz_showlab.string = "无庄通比：8分");
(this._radioArr[32].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 26) && (this.wz_showlab.string = "无庄通比：10分");
"无庄通比：2分" == this.wz_showlab.string && (this._radioArr[28].getComponent(cc.Toggle).isChecked = !0);
"无庄通比：4分" == this.wz_showlab.string && (this._radioArr[29].getComponent(cc.Toggle).isChecked = !0);
"无庄通比：6分" == this.wz_showlab.string && (this._radioArr[30].getComponent(cc.Toggle).isChecked = !0);
"无庄通比：8分" == this.wz_showlab.string && (this._radioArr[31].getComponent(cc.Toggle).isChecked = !0);
"无庄通比：10分" == this.wz_showlab.string && (this._radioArr[32].getComponent(cc.Toggle).isChecked = !0);
this._radioArr[26].getComponent(cc.Toggle).isChecked = 2048 & t.rule_index;
this._radioArr[27].getComponent(cc.Toggle).isChecked = 4096 & t.rule_index;
this._radioArr[23].getComponent(cc.Toggle).isChecked = 8192 & t.rule_index;
this._radioArr[24].getComponent(cc.Toggle).isChecked = 16384 & t.rule_index;
this._radioArr[25].getComponent(cc.Toggle).isChecked = 32768 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_s.string = "10局 ( 免费 )";
t.jushu_j_2_s.string = "20局 ( 免费 )";
t.jushu_f_1_s.string = "10局 ( 免费 )";
t.jushu_f_2_s.string = "20局 ( 免费 )";
t.zhuang_j_1.string = "一圈庄 ( 免费 )";
t.zhuang_j_2.string = "二圈庄 ( 免费 )";
t.zhuang_f_1.string = "一圈庄 ( 免费 )";
t.zhuang_f_2.string = "二圈庄 ( 免费 )";
t.zhuang_j_1_s.string = "一圈庄 ( 免费 )";
t.zhuang_j_2_s.string = "二圈庄 ( 免费 )";
t.zhuang_f_1_s.string = "一圈庄 ( 免费 )";
t.zhuang_f_2_s.string = "二圈庄 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.icon_diamond5.active = !1;
t.icon_diamond6.active = !1;
t.icon_diamond7.active = !1;
t.icon_diamond8.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20003"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("斗牛牛", 20003, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20003");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20003: "GameNetMgr20003"
} ],
CreateRoom_DZPK: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "09623Al6fFCG5FXF3nidLKp", "CreateRoom_DZPK");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.renshu = e.getChildByName("renshu");
var o = this.renshu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(h);
var l = this.renshu.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(l);
this.difen = e.getChildByName("difen");
var d = this.difen.getChildByName("rule13").getComponent(cc.Toggle);
this._radioArr.push(d);
var u = this.difen.getChildByName("rule14").getComponent(cc.Toggle);
this._radioArr.push(u);
var v = this.difen.getChildByName("rule15").getComponent(cc.Toggle);
this._radioArr.push(v);
var g = e.getChildByName("k_wanfa").getChildByName("rule8").getComponent(cc.Toggle);
this._radioArr.push(g);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtnDZPK_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (7 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
} else if (6 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
}
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 32);
this._radioArr[9].isChecked && (t += 8192);
this._radioArr[10].isChecked && (t += 16384);
this._radioArr[11].isChecked && (t += 32768);
this._radioArr[12] && this._radioArr[12].isChecked && (t += 2048);
var i = {
server_code: 20005,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20005, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20005");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !0;
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 8 & t.rule_index;
this._radioArr[7].isChecked = 16 & t.rule_index;
this._radioArr[8].isChecked = 32 & t.rule_index;
this._radioArr[9].isChecked = 8192 & t.rule_index;
this._radioArr[10].isChecked = 16384 & t.rule_index;
this._radioArr[11].isChecked = 32768 & t.rule_index;
this._radioArr[12].isChecked = 2048 & t.rule_index;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "8局 ( 免费 )";
t.jushu_j_2.string = "16局 ( 免费 )";
t.jushu_f_1.string = "8局 ( 免费 )";
t.jushu_f_2.string = "16局 ( 免费 )";
t.jushu_j_1_sl.string = "8局 ( 免费 )";
t.jushu_j_2_sl.string = "16局 ( 免费 )";
t.jushu_f_1_sl.string = "8局 ( 免费 )";
t.jushu_f_2_sl.string = "16局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20005"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("德州扑克", 20005, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20005");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20005: "GameNetMgr20005"
} ],
CreateRoom_FLY: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "0b2dapePsxAoJCUKk4I4Zc7", "CreateRoom_FLY");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
this._radioArr = [];
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/13shui"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
var c = this.jushu_j.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(c);
this.jushu_f = e.getChildByName("jushu_f");
var r = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(r);
var o = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.jushu_f.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(h);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_1 = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_1 = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_3 = this.jushu_j.getChildByName("rule3").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_3_1 = this.jushu_j.getChildByName("rule3").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_1 = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_1 = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_3 = this.jushu_f.getChildByName("rule3").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_3_1 = this.jushu_f.getChildByName("rule3").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_j.getChildByName("rule3").getChildByName("fangka3");
this.icon_diamond4 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond5 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond6 = this.jushu_f.getChildByName("rule3").getChildByName("fangka3");
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.renshu = e.getChildByName("renshu");
var l = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(l);
var d = this.renshu.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(d);
this.wanfa = e.getChildByName("wanfa");
var u = this.wanfa.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(u);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "1局 (1          )";
this.jushu_j_2.string = "3局 (3          )";
this.jushu_j_3.string = "5局 (5          )";
this.jushu_f_1.string = "1局 (1          )";
this.jushu_f_2.string = "3局 (3          )";
this.jushu_f_3.string = "5局 (5          )";
this.jushu_j_1_1.string = "1局 (1          )";
this.jushu_j_2_1.string = "3局 (3          )";
this.jushu_j_3_1.string = "5局 (5          )";
this.jushu_f_1_1.string = "1局 (1          )";
this.jushu_f_2_1.string = "3局 (3          )";
this.jushu_f_3_1.string = "5局 (5          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
if (this._radioArr[0].isChecked) {
console.log("移位：19");
t = 1 << 19;
this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle).isChecked && (t += 32);
this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle).isChecked && (t += 64);
this.jushu_f.getChildByName("rule3").getComponent(cc.Toggle).isChecked && (t += 128);
}
if (this._radioArr[1].isChecked) {
console.log("移位：20");
t = 1 << 20;
this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle).isChecked && (t += 32);
this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle).isChecked && (t += 64);
this.jushu_j.getChildByName("rule3").getComponent(cc.Toggle).isChecked && (t += 128);
}
this.renshu.getChildByName("rule4").getComponent(cc.Toggle).isChecked && (t += 16);
this.renshu.getChildByName("rule5").getComponent(cc.Toggle).isChecked && (t += 4);
var i = {
server_code: 3e4,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(3e4, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_30000");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_j.active = !1;
this.jushu_f.active = !0;
this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle).isChecked = 32 & t.rule_index;
this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle).isChecked = 64 & t.rule_index;
this.jushu_f.getChildByName("rule3").getComponent(cc.Toggle).isChecked = 128 & t.rule_index;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle).isChecked = 32 & t.rule_index;
this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle).isChecked = 64 & t.rule_index;
this.jushu_j.getChildByName("rule3").getComponent(cc.Toggle).isChecked = 128 & t.rule_index;
}
this.renshu.getChildByName("rule4").getComponent(cc.Toggle).isChecked = 16 & t.rule_index;
this.renshu.getChildByName("rule5").getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "1局 ( 免费 )";
t.jushu_j_1_1.string = "1局 ( 免费 )";
t.jushu_j_2.string = "3局 ( 免费 )";
t.jushu_j_2_1.string = "3局 ( 免费 )";
t.jushu_j_3.string = "5局 ( 免费 )";
t.jushu_j_3_1.string = "5局 ( 免费 )";
t.jushu_f_1.string = "1局 ( 免费 )";
t.jushu_f_1_1.string = "1局 ( 免费 )";
t.jushu_f_2.string = "3局 ( 免费 )";
t.jushu_f_2_1.string = "3局 ( 免费 )";
t.jushu_f_3.string = "5局 ( 免费 )";
t.jushu_f_3_1.string = "5局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.icon_diamond5.active = !1;
t.icon_diamond6.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else this.openShowPanel("飞行棋", 3e4, e.roomid, t_index, r_index, 1);
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30000");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr30000: "GameNetMgr30000"
} ],
CreateRoom_FPF: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "563c8lUvBhKJKLAcOtQy6/F", "CreateRoom_FPF");
var i;
function a(e, t, i) {
t in e ? Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i;
return e;
}
cc.Class((a(i = {
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle), n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle), s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle), r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "8局 (1          )";
this.jushu_j_2.string = "16局 (2          )";
this.jushu_f_1.string = "8局 (1          )";
this.jushu_f_2.string = "16局 (2          )";
this.jushu_j_1_sl.string = "8局 (1          )";
this.jushu_j_2_sl.string = "16局 (2          )";
this.jushu_f_1_sl.string = "8局 (1          )";
this.jushu_f_2_sl.string = "16局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
var i = {
server_code: 30006,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(30006, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
start: function() {
var e = this.node.getChildByName("CreateRoom").getChildByName("btn_ok").getChildByName("lb_str").getComponent(cc.Label);
1 == cc.vv.userMgr.isDaiKaiRoom ? e.string = "代开房间" : e.string = "确定";
var t = cc.sys.localStorage.getItem("conf_30006");
t && this.revertButton(t);
}
}, "btnyinxiao", function() {
cc.vv.audioMgr.playBtnClick();
}), a(i, "openShowPanel", function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
}), a(i, "activityRequest", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
}), a(i, "revertButton", function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
}), a(i, "initMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
}), a(i, "onMsgGetActivity", function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "8局 ( 免费 )";
t.jushu_j_2.string = "16局 ( 免费 )";
t.jushu_f_1.string = "8局 ( 免费 )";
t.jushu_f_2.string = "16局 ( 免费 )";
t.jushu_j_1_sl.string = "8局 ( 免费 )";
t.jushu_j_2_sl.string = "16局 ( 免费 )";
t.jushu_f_1_sl.string = "8局 ( 免费 )";
t.jushu_f_2_sl.string = "16局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
}), a(i, "onMsgCreateAgentRoom", function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_30006"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("娄底放炮罚", 30006, e.roomid, a, s, 8);
}
}), a(i, "onMsgCreatePrivateRoom", function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30006");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
}), a(i, "removeMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
}), a(i, "onDestroy", function() {
this.removeMsgHandler();
}), i));
cc._RF.pop();
}, {
GameNetMgr30006: "GameNetMgr30006"
} ],
CreateRoom_GLZP: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "f1146+u2llK95J4xg3vyL40", "CreateRoom_GLZP");
var i;
function a(e, t, i) {
t in e ? Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i;
return e;
}
cc.Class((a(i = {
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle), n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle), s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle), r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this._radioArr.push(r);
this.wanfa1 = e.getChildByName("wanfa1");
var o = this.wanfa1.getChildByName("rule3").getComponent(cc.Toggle), h = this.wanfa1.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(o);
this._radioArr.push(h);
this.wanfa2 = e.getChildByName("wanfa2");
var l = this.wanfa2.getChildByName("rule5").getComponent(cc.Toggle), d = this.wanfa2.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(l);
this._radioArr.push(d);
this.wanfa3 = e.getChildByName("wanfa3");
var u = this.wanfa3.getChildByName("rule7").getComponent(cc.Toggle), v = this.wanfa3.getChildByName("rule8").getComponent(cc.Toggle);
this._radioArr.push(u);
this._radioArr.push(v);
this.paoType = e.getChildByName("paoType");
var g = this.paoType.getChildByName("rule9").getComponent(cc.Toggle), _ = this.paoType.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(g);
this._radioArr.push(_);
this.fanxing = e.getChildByName("fanxing");
var f = this.fanxing.getChildByName("rule11").getComponent(cc.Toggle), p = this.fanxing.getChildByName("rule12").getComponent(cc.Toggle), m = this.fanxing.getChildByName("rule13").getComponent(cc.Toggle), C = this.fanxing.getChildByName("rule14").getComponent(cc.Toggle), y = this.fanxing.getChildByName("rule15").getComponent(cc.Toggle);
this._radioArr.push(f);
this._radioArr.push(p);
this._radioArr.push(m);
this._radioArr.push(C);
this._radioArr.push(y);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
this.initMsgHandler();
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
this.activityRequest();
}.bind(this))));
},
initData: function() {
this.jushu_j_1.string = "8局 (1          )";
this.jushu_j_2.string = "16局 (2          )";
this.jushu_f_1.string = "8局 (1          )";
this.jushu_f_2.string = "16局 (2          )";
this.jushu_j_1_sl.string = "8局 (1          )";
this.jushu_j_2_sl.string = "16局 (2          )";
this.jushu_f_1_sl.string = "8局 (1          )";
this.jushu_f_2_sl.string = "16局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 64);
this._radioArr[9].isChecked && (t += 32);
this._radioArr[10].isChecked && (t += 128);
this._radioArr[11].isChecked && (t += 256);
this._radioArr[12].isChecked && (t += 512);
this._radioArr[13].isChecked && (t += 1024);
this._radioArr[14].isChecked && (t += 2048);
this._radioArr[15].isChecked && (t += 4096);
this._radioArr[16].isChecked && (t += 8192);
this._radioArr[17].isChecked && (t += 16384);
this._radioArr[18].isChecked && (t += 32768);
var i = {
server_code: 30002,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
console.log(n);
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(30002, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
start: function() {
var e = this.node.getChildByName("CreateRoom").getChildByName("btn_ok").getChildByName("lb_str").getComponent(cc.Label);
1 == cc.vv.userMgr.isDaiKaiRoom ? e.string = "代开房间" : e.string = "确定";
var t = cc.sys.localStorage.getItem("conf_30002");
t && this.revertButton(t);
}
}, "btnyinxiao", function() {
cc.vv.audioMgr.playBtnClick();
}), a(i, "openShowPanel", function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
}), a(i, "activityRequest", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
}), a(i, "revertButton", function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[6].getComponent(cc.Toggle).isChecked = 8 & t.rule_index;
this._radioArr[7].getComponent(cc.Toggle).isChecked = 16 & t.rule_index;
this._radioArr[8].getComponent(cc.Toggle).isChecked = 64 & t.rule_index;
this._radioArr[9].getComponent(cc.Toggle).isChecked = 32 & t.rule_index;
this._radioArr[10].getComponent(cc.Toggle).isChecked = 128 & t.rule_index;
this._radioArr[11].getComponent(cc.Toggle).isChecked = 256 & t.rule_index;
this._radioArr[12].getComponent(cc.Toggle).isChecked = 512 & t.rule_index;
this._radioArr[13].getComponent(cc.Toggle).isChecked = 1024 & t.rule_index;
this._radioArr[14].getComponent(cc.Toggle).isChecked = 2048 & t.rule_index;
this._radioArr[15].getComponent(cc.Toggle).isChecked = 4096 & t.rule_index;
this._radioArr[16].getComponent(cc.Toggle).isChecked = 8192 & t.rule_index;
this._radioArr[17].getComponent(cc.Toggle).isChecked = 16384 & t.rule_index;
this._radioArr[18].getComponent(cc.Toggle).isChecked = 32768 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
}), a(i, "initMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
}), a(i, "onMsgGetActivity", function(e) {
if (0 == (e = e.detail).errcode) {
for (var t = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP, i = (Date.parse(new Date()), 
0); i < e.activitys.length; i++) if (t == e.activitys[i].server_type && (e.bigen_time = -1)) {
this.jushu_j_1.string = "8局 ( 免费 )";
this.jushu_j_2.string = "16局 ( 免费 )";
this.jushu_f_1.string = "8局 ( 免费 )";
this.jushu_f_2.string = "16局 ( 免费 )";
this.jushu_j_1_sl.string = "8局 ( 免费 )";
this.jushu_j_2_sl.string = "16局 ( 免费 )";
this.jushu_f_1_sl.string = "8局 ( 免费 )";
this.jushu_f_2_sl.string = "16局 ( 免费 )";
this.icon_diamond1.active = !1;
this.icon_diamond2.active = !1;
this.icon_diamond3.active = !1;
this.icon_diamond4.active = !1;
this.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
}), a(i, "onMsgCreateAgentRoom", function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_30002"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("桂林字牌", 30002, e.roomid, a, s, 8);
}
}), a(i, "onMsgCreatePrivateRoom", function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30002");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
}), a(i, "removeMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
}), a(i, "onDestroy", function() {
this.removeMsgHandler();
}), i));
cc._RF.pop();
}, {
GameNetMgr30002: "GameNetMgr30002"
} ],
CreateRoom_HGW: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "9cba8iHA3xKBaTBwhH1Y+fx", "CreateRoom_HGW");
var i;
function a(e, t, i) {
t in e ? Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i;
return e;
}
cc.Class((a(i = {
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle), n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle), s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle), r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "8局 (1          )";
this.jushu_j_2.string = "16局 (2          )";
this.jushu_f_1.string = "8局 (1          )";
this.jushu_f_2.string = "16局 (2          )";
this.jushu_j_1_sl.string = "8局 (1          )";
this.jushu_j_2_sl.string = "16局 (2          )";
this.jushu_f_1_sl.string = "8局 (1          )";
this.jushu_f_2_sl.string = "16局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
var i = {
server_code: 30005,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(30005, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
start: function() {
var e = this.node.getChildByName("CreateRoom").getChildByName("btn_ok").getChildByName("lb_str").getComponent(cc.Label);
1 == cc.vv.userMgr.isDaiKaiRoom ? e.string = "代开房间" : e.string = "确定";
var t = cc.sys.localStorage.getItem("conf_30005");
t && this.revertButton(t);
}
}, "btnyinxiao", function() {
cc.vv.audioMgr.playBtnClick();
}), a(i, "openShowPanel", function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
}), a(i, "activityRequest", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
}), a(i, "revertButton", function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
}), a(i, "initMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
}), a(i, "onMsgGetActivity", function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "8局 ( 免费 )";
t.jushu_j_2.string = "16局 ( 免费 )";
t.jushu_f_1.string = "8局 ( 免费 )";
t.jushu_f_2.string = "16局 ( 免费 )";
t.jushu_j_1_sl.string = "8局 ( 免费 )";
t.jushu_j_2_sl.string = "16局 ( 免费 )";
t.jushu_f_1_sl.string = "8局 ( 免费 )";
t.jushu_f_2_sl.string = "16局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
}), a(i, "onMsgCreateAgentRoom", function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_30005"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("娄底放炮罚", 30005, e.roomid, a, s, 8);
}
}), a(i, "onMsgCreatePrivateRoom", function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30005");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
}), a(i, "removeMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
}), a(i, "onDestroy", function() {
this.removeMsgHandler();
}), i));
cc._RF.pop();
}, {
GameNetMgr30005: "GameNetMgr30005"
} ],
CreateRoom_HYLH: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "1c79daPCKZHuKCoYWT8+Oyu", "CreateRoom_HYLH");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
this.initNode();
this.initMsgHandler();
this.activityRequest();
},
initNode: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19"), n = t.getChildByName("rule20");
this._radioArr.push(i);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1"), s = this.jushu_j.getChildByName("rule2");
this._radioArr.push(a);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1"), r = this.jushu_f.getChildByName("rule2");
this._radioArr.push(c);
this._radioArr.push(r);
this.fanXingNode = e.getChildByName("xing_Node");
var o = this.fanXingNode.getChildByName("rule3"), h = this.fanXingNode.getChildByName("rule4"), l = this.fanXingNode.getChildByName("rule5");
this._radioArr.push(o);
this._radioArr.push(h);
this._radioArr.push(l);
this.wanFaNode = e.getChildByName("wanFa_Node");
var d = this.wanFaNode.getChildByName("rule6"), u = this.wanFaNode.getChildByName("rule7");
this._radioArr.push(d);
this._radioArr.push(u);
this.k_wanFaNode = e.getChildByName("k_wanfa_Node");
var v = this.k_wanFaNode.getChildByName("rule8"), g = this.k_wanFaNode.getChildByName("rule9"), _ = this.k_wanFaNode.getChildByName("rule10"), f = this.k_wanFaNode.getChildByName("rule11"), p = this.k_wanFaNode.getChildByName("rule12");
this._radioArr.push(v);
this._radioArr.push(g);
this._radioArr.push(_);
this._radioArr.push(f);
this._radioArr.push(p);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
},
initData: function() {
this.jushu_j_1.string = "8局 (1          )";
this.jushu_j_2.string = "16局 (2          )";
this.jushu_f_1.string = "8局 (1          )";
this.jushu_f_2.string = "16局 (2          )";
this.jushu_j_1_sl.string = "8局 (1          )";
this.jushu_j_2_sl.string = "16局 (2          )";
this.jushu_f_1_sl.string = "8局 (1          )";
this.jushu_f_2_sl.string = "16局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].getComponent(cc.Toggle).isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].getComponent(cc.Toggle).isChecked = !0;
},
onBtn_RuleClick1: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData, i = this._radioArr[t].getComponent(cc.Toggle);
i.getComponent(cc.Toggle).isChecked, i.getComponent(cc.Toggle).isChecked;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].getComponent(cc.Toggle).isChecked && (t = 1 << 19);
this._radioArr[1].getComponent(cc.Toggle).isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].getComponent(cc.Toggle).isChecked && (t += 2);
this._radioArr[3].getComponent(cc.Toggle).isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].getComponent(cc.Toggle).isChecked && (t += 2);
this._radioArr[5].getComponent(cc.Toggle).isChecked && (t += 4);
}
this._radioArr[6].getComponent(cc.Toggle).isChecked && (t += 8);
this._radioArr[7].getComponent(cc.Toggle).isChecked && (t += 16);
this._radioArr[8].getComponent(cc.Toggle).isChecked && (t += 32);
this._radioArr[9].getComponent(cc.Toggle).isChecked || this._radioArr[10].getComponent(cc.Toggle).isChecked || (t += 64);
this._radioArr[9].getComponent(cc.Toggle).isChecked && (t += 128);
this._radioArr[10].getComponent(cc.Toggle).isChecked && (t += 256);
this._radioArr[11].getComponent(cc.Toggle).isChecked && (t += 512);
this._radioArr[12].getComponent(cc.Toggle).isChecked && (t += 1024);
this._radioArr[13].getComponent(cc.Toggle).isChecked && (t += 2048);
this._radioArr[14].getComponent(cc.Toggle).isChecked && (t += 4096);
this._radioArr[15].getComponent(cc.Toggle).isChecked && (t += 8192);
var i = {
server_code: 30004,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
console.log(JSON.stringify(i));
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
start: function() {
var e = this.node.getChildByName("CreateRoom").getChildByName("btn_ok").getChildByName("lb_str").getComponent(cc.Label);
1 == cc.vv.userMgr.isDaiKaiRoom ? e.string = "代开房间" : e.string = "确定";
var t = cc.sys.localStorage.getItem("conf_30004");
t && this.revertButton(t);
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[6].getComponent(cc.Toggle).isChecked = 8 & t.rule_index;
this._radioArr[7].getComponent(cc.Toggle).isChecked = 16 & t.rule_index;
this._radioArr[8].getComponent(cc.Toggle).isChecked = 32 & t.rule_index;
this._radioArr[9].getComponent(cc.Toggle).isChecked || this._radioArr[10].getComponent(cc.Toggle).isChecked || (r_index += 64);
this._radioArr[9].getComponent(cc.Toggle).isChecked = 128 & t.rule_index;
this._radioArr[10].getComponent(cc.Toggle).isChecked = 256 & t.rule_index;
this._radioArr[11].getComponent(cc.Toggle).isChecked = 512 & t.rule_index;
this._radioArr[12].getComponent(cc.Toggle).isChecked = 1024 & t.rule_index;
this._radioArr[13].getComponent(cc.Toggle).isChecked = 2048 & t.rule_index;
this._radioArr[14].getComponent(cc.Toggle).isChecked = 4096 & t.rule_index;
this._radioArr[15].getComponent(cc.Toggle).isChecked = 8192 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "8局 ( 免费 )";
t.jushu_j_2.string = "16局 ( 免费 )";
t.jushu_f_1.string = "8局 ( 免费 )";
t.jushu_f_2.string = "16局 ( 免费 )";
t.jushu_j_1_sl.string = "8局 ( 免费 )";
t.jushu_j_2_sl.string = "16局 ( 免费 )";
t.jushu_f_1_sl.string = "8局 ( 免费 )";
t.jushu_f_2_sl.string = "16局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_30004"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("衡阳六胡抢", 30004, e.roomid, a, s, 8);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30004");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr30004: "GameNetMgr30004"
} ],
CreateRoom_PAGUO: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "12787qmrexG+JT6ZCoK7qr9", "CreateRoom_PAGUO");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
this._radioArr = [];
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/13shui"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this._radioArr.push(r);
var o = e.getChildByName("wanfa").getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
this.initData();
this._gameType = "2";
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "6局 (1          )";
this.jushu_j_2.string = "12局 (2          )";
this.jushu_f_1.string = "6局 (1          )";
this.jushu_f_2.string = "12局 (2          )";
this.jushu_j_1_sl.string = "6局 (1          )";
this.jushu_j_2_sl.string = "12局 (2          )";
this.jushu_f_1_sl.string = "6局 (1          )";
this.jushu_f_2_sl.string = "12局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtn3DH_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
var i = {
server_code: 20012,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
console.log(n);
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20012, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20012");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[6].getComponent(cc.Toggle).isChecked = 8 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "6局 ( 免费 )";
t.jushu_j_2.string = "12局 ( 免费 )";
t.jushu_f_1.string = "6局 ( 免费 )";
t.jushu_f_2.string = "12局 ( 免费 )";
t.jushu_j_1_sl.string = "6局 ( 免费 )";
t.jushu_j_2_sl.string = "12局 ( 免费 )";
t.jushu_f_1_sl.string = "6局 ( 免费 )";
t.jushu_f_2_sl.string = "12局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20012"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("扒锅", 20012, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20012");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20012: "GameNetMgr20012"
} ],
CreateRoom_PDK: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "a664etXsIFKJI85UtMtABJP", "CreateRoom_PDK");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
},
btnType2: {
default: null,
type: cc.Toggle
},
btnType3: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
this._radioArr = [];
cc.log(this.node);
var e = cc.vv.utils.seekNodeByName("CreateRoom", this.node);
this.base_paodekuai = cc.vv.utils.seekNodeByName("paodekuai", e);
var t = this.base_paodekuai.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = this.base_paodekuai.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = this.base_paodekuai.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(r);
this.renshu = this.base_paodekuai.getChildByName("renshu");
var o = this.renshu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(h);
this.rule5 = this.renshu.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(this.rule5);
this.pai_fu = this.base_paodekuai.getChildByName("pai_fu");
this.rule12 = this.pai_fu.getChildByName("rule12").getComponent(cc.Toggle);
this._radioArr.push(this.rule12);
var l = this.pai_fu.getChildByName("rule13").getComponent(cc.Toggle);
this._radioArr.push(l);
this.pai_num = this.base_paodekuai.getChildByName("pai_num");
var d = this.pai_num.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(d);
var u = this.pai_num.getChildByName("rule11").getComponent(cc.Toggle);
this._radioArr.push(u);
var v = this.base_paodekuai.getChildByName("wanfa"), g = v.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(g);
this.heitao3 = v.getChildByName("rule7");
var _ = this.heitao3.getComponent(cc.Toggle);
this._radioArr.push(_);
var f = v.getChildByName("rule8").getComponent(cc.Toggle);
this._radioArr.push(f);
this.zhaniao = v.getChildByName("rule9");
var p = this.zhaniao.getComponent(cc.Toggle);
this._radioArr.push(p);
d = v.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(d);
this._gameType = "2";
this.checkType(this._gameType);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
checkType: function(e) {
this.renshu.active = !0;
this.pai_fu.active = !1;
this.pai_num.active = !1;
this.zhaniao.active = !1;
switch (e) {
case "2":
case "4":
this.zhaniao.active = !0;
break;

case "8":
this.pai_num.active = !0;
break;

case "16":
this.renshu.active = !1;
this.pai_fu.active = !0;
}
},
onBtnPDK_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
9 == t ? this.heitao3.active = !0 : 10 == t && (this.heitao3.active = !1);
} else this._radioArr[t].isChecked = !0;
},
onBtnPDK_TypeClick: function(e) {
cc.vv.audioMgr.playBtnClick();
this._gameType = e.checkEvents[0].customEventData;
this.checkType(this._gameType);
},
createRoom: function() {
var e = this._gameType, t = 0;
if (this._radioArr[0].isChecked) {
console.log("移位：19");
t = 1 << 19;
}
if (this._radioArr[1].isChecked) {
console.log("移位：20");
t = 1 << 20;
}
if (1 == this.jushu_j.active) {
if (this._radioArr[2].isChecked) {
console.log("移位：1");
t += 2;
}
if (this._radioArr[3].isChecked) {
console.log("移位：2");
t += 4;
}
}
if (1 == this.jushu_f.active) {
if (this._radioArr[4].isChecked) {
console.log("移位：1");
t += 2;
}
if (this._radioArr[5].isChecked) {
console.log("移位：2");
t += 4;
}
}
if (1 == this.renshu.active) {
if (this._radioArr[6].isChecked) {
console.log("移位：3");
t += 8;
}
if (this._radioArr[7].isChecked) {
console.log("移位：4");
t += 16;
}
}
if (1 == this.pai_fu.active) {
if (this._radioArr[9].isChecked) {
t += 4096;
console.log("移位：12");
}
if (this._radioArr[10].isChecked) {
t += 8192;
console.log("移位：13");
}
t += 32;
console.log("移位：5");
}
if (1 == this.pai_num.active) {
if (this._radioArr[11].isChecked) {
t += 1024;
console.log("移位：10");
}
if (this._radioArr[12].isChecked) {
t += 2048;
console.log("移位：11");
}
}
if (this._radioArr[13].isChecked) {
console.log("移位：6");
t += 64;
}
if (1 == this.heitao3.active && this._radioArr[14].isChecked) {
t += 128;
console.log("移位：7");
}
if (this._radioArr[15].isChecked) {
t += 256;
console.log("移位：8");
}
if (1 == this.zhaniao.active && this._radioArr[16].isChecked) {
t += 512;
console.log("移位：9");
}
this._radioArr[17].isChecked && (t += 16384);
var i = {
server_code: 20001,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20001, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
var e = cc.vv.utils.seekNodeByName("CreateRoom", this.node), t = cc.vv.utils.seekNodeByName("lb_str", e);
1 == cc.vv.userMgr.isDaiKaiRoom ? t.getComponent(cc.Label).string = "代开房间" : t.getComponent(cc.Label).string = "确定";
var i = cc.sys.localStorage.getItem("conf_20001");
i && this.revertButton(i);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !1;
this.btnType2.isChecked = !1;
this.btnType3.isChecked = !1;
this._gameType = t.type_index;
switch (t.type_index) {
case "2":
this.btnType1.isChecked = !0;
break;

case "4":
this.btnType2.isChecked = !0;
break;

case "16":
this.btnType3.isChecked = !0;
}
this.checkType(t.type_index);
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 8 & t.rule_index;
this._radioArr[7].isChecked = 16 & t.rule_index;
this._radioArr[8].isChecked = !1;
this._radioArr[9].isChecked = !0;
this._radioArr[10].isChecked = 8192 & t.rule_index;
this._radioArr[11].isChecked = 1024 & t.rule_index;
this._radioArr[12].isChecked = 2048 & t.rule_index;
this._radioArr[13].isChecked = 64 & t.rule_index;
this._radioArr[14].isChecked = 128 & t.rule_index;
this._radioArr[15].isChecked = 256 & t.rule_index;
this._radioArr[16].isChecked = 512 & t.rule_index;
this._radioArr[17].isChecked = 16384 & t.rule_index;
0 == this._radioArr[6].isChecked && 0 == this._radioArr[7].isChecked && (this._radioArr[6].isChecked = !0);
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20001"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("跑得快", 20001, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.toast.showToast({
txt: t
});
} else {
var i = n("GameNetMgr20001");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20001: "GameNetMgr20001"
} ],
CreateRoom_PHZ: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "08360vcUipN+Z7VKBATa2Za", "CreateRoom_PHZ");
var i;
function a(e, t, i) {
t in e ? Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i;
return e;
}
cc.Class((a(i = {
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.vv.utils.seekNodeByName("rulePanle", this.node), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle), n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle), s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle), r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this._radioArr.push(r);
this.wanfa1 = e.getChildByName("wanfa1");
var o = this.wanfa1.getChildByName("rule3").getComponent(cc.Toggle), h = this.wanfa1.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(o);
this._radioArr.push(h);
this.wanfa2 = e.getChildByName("wanfa2");
a = this.wanfa2.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "8局 (1          )";
this.jushu_j_2.string = "16局 (2          )";
this.jushu_f_1.string = "8局 (1          )";
this.jushu_f_2.string = "16局 (2          )";
this.jushu_j_1_sl.string = "8局 (1          )";
this.jushu_j_2_sl.string = "16局 (2          )";
this.jushu_f_1_sl.string = "8局 (1          )";
this.jushu_f_2_sl.string = "16局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 32);
console.log("log----------------this._radioArr[8].isChecked=:", this._radioArr[8].isChecked);
var i = {
server_code: 30003,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(30003, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
start: function() {
var e = this.node.getChildByName("CreateRoom").getChildByName("btn_ok").getChildByName("lb_str").getComponent(cc.Label);
1 == cc.vv.userMgr.isDaiKaiRoom ? e.string = "代开房间" : e.string = "确定";
var t = cc.sys.localStorage.getItem("conf_30003");
t && this.revertButton(t);
}
}, "btnyinxiao", function() {
cc.vv.audioMgr.playBtnClick();
}), a(i, "openShowPanel", function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
}), a(i, "activityRequest", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
}), a(i, "revertButton", function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[6].getComponent(cc.Toggle).isChecked = 8 & t.rule_index;
this._radioArr[7].getComponent(cc.Toggle).isChecked = 16 & t.rule_index;
this._radioArr[8].getComponent(cc.Toggle).isChecked = 32 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
}), a(i, "initMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
}), a(i, "onMsgGetActivity", function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "8局 ( 免费 )";
t.jushu_j_2.string = "16局 ( 免费 )";
t.jushu_f_1.string = "8局 ( 免费 )";
t.jushu_f_2.string = "16局 ( 免费 )";
t.jushu_j_1_sl.string = "8局 ( 免费 )";
t.jushu_j_2_sl.string = "16局 ( 免费 )";
t.jushu_f_1_sl.string = "8局 ( 免费 )";
t.jushu_f_2_sl.string = "16局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
}), a(i, "onMsgCreateAgentRoom", function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_30003"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("长沙跑胡子", 30003, e.roomid, a, s, 8);
}
}), a(i, "onMsgCreatePrivateRoom", function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30003");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
}), a(i, "removeMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
}), a(i, "onDestroy", function() {
this.removeMsgHandler();
}), i));
cc._RF.pop();
}, {
GameNetMgr30003: "GameNetMgr30003"
} ],
CreateRoom_PPL: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "085deFprhRPCITKmkNgWcvn", "CreateRoom_PPL");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
this.node.active = !1;
cc.director.loadScene("hall");
cc.vv.audioMgr.playBtnClick();
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
onBtnMJ_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
onBtnMJ_check_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
var i = {
server_code: 20013,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20013, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20013");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20013"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("拼拼乐", 20013, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20013");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20013: "GameNetMgr20013"
} ],
CreateRoom_QMT: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "6aa4d5j2zlDuK07LYQ9hdqf", "CreateRoom_QMT");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle), n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle), s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle), r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this._radioArr.push(r);
var o = this.node.getChildByName("left_group"), h = o.getChildByName("btn_1").getComponent(cc.Toggle), l = o.getChildByName("btn_2").getComponent(cc.Toggle);
this._radioArr.push(h);
this._radioArr.push(l);
this.fanshu = e.getChildByName("fanshu");
a = this.fanshu.getChildByName("rule1").getComponent(cc.Toggle), s = this.fanshu.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this._radioArr.push(s);
this.wanfa = e.getChildByName("wanfa");
for (var d = 1; d <= 21; d++) {
var u = this.wanfa.getChildByName("rule" + d).getComponent(cc.Toggle);
this._radioArr.push(u);
}
h.isChecked = !0;
l.isChecked = !1;
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.lb_gameName = this.node.getChildByName("up_group").getChildByName("left_Node").getChildByName("gameName").getComponent(cc.Label);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "8局 (1          )";
this.jushu_j_2.string = "16局 (2          )";
this.jushu_f_1.string = "8局 (1          )";
this.jushu_f_2.string = "16局 (2          )";
this.jushu_j_1_sl.string = "8局 (1          )";
this.jushu_j_2_sl.string = "16局 (2          )";
this.jushu_f_1_sl.string = "8局 (1          )";
this.jushu_f_2_sl.string = "16局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else 6 == t ? this.lb_gameName.string = "【常德全明堂】" : 7 == t && (this.lb_gameName.string = "【常德红黑点】");
this.showWanFaNode();
this.showWanFaNode1();
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 64);
this._radioArr[9].isChecked && (t += 128);
this._radioArr[10].isChecked && (t += 256);
this._radioArr[11].isChecked && (t += 512);
this._radioArr[12].isChecked && (t += 1024);
this._radioArr[13].isChecked && (t += 2048);
this._radioArr[14].isChecked && (t += 4096);
this._radioArr[15].isChecked && (t += 8192);
this._radioArr[16].isChecked && (t += 16384);
this._radioArr[17].isChecked && (t += 32768);
this._radioArr[18].isChecked && (t += 65536);
this._radioArr[19].isChecked && (t += 1 << 17);
this._radioArr[20].isChecked && (t += 1 << 18);
this._radioArr[21].isChecked && (t += 1 << 21);
this._radioArr[22].isChecked && (t += 1 << 22);
this._radioArr[23].isChecked && (t += 1 << 23);
this._radioArr[24].isChecked && (t += 1 << 24);
this._radioArr[25].isChecked && (t += 1 << 25);
this._radioArr[26].isChecked && (t += 1 << 26);
this._radioArr[27].isChecked && (t += 1 << 27);
this._radioArr[28].isChecked && (t += 1 << 28);
this._radioArr[29].isChecked && (t += 1 << 29);
this._radioArr[30].isChecked && (t += 32);
var i = {
server_code: 30008,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(30008, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
this.decodeRule(t);
},
decodeRule: function(e) {
e & 1 << 19 && console.log("log-------------房卡开房");
e & 1 << 20 && console.log("log-------------砖石开房");
2 & e && console.log("log-------------8局");
4 & e && console.log("log-------------10局");
8 & e && console.log("log-------------全名堂");
16 & e && console.log("log-------------红黑点");
64 & e && console.log("log-------------全名堂（6-8番)");
128 & e && console.log("log-------------全名堂（8-10番)");
256 & e && console.log("log-------------天胡");
512 & e && console.log("log-------------地胡");
1024 & e && console.log("log-------------点胡");
2048 & e && console.log("log-------------红胡");
4096 & e && console.log("log-------------乌胡");
8192 & e && console.log("log-------------对对胡");
16384 & e && console.log("log-------------大字胡");
32768 & e && console.log("log-------------小字胡");
65536 & e && console.log("log-------------海底胡");
16384 & e && console.log("log-------------大字胡");
e & 1 << 17 && console.log("log-------------听胡");
e & 1 << 18 && console.log("log-------------红乌");
e & 1 << 21 && console.log("log-------------项项息");
e & 1 << 22 && console.log("log-------------印");
e & 1 << 23 && console.log("log-------------耍猴");
e & 1 << 24 && console.log("log-------------黄番");
e & 1 << 25 && console.log("log-------------大团圆");
e & 1 << 26 && console.log("log-------------七行息");
e & 1 << 27 && console.log("log-------------假行行");
e & 1 << 28 && console.log("log-------------四七红");
e & 1 << 29 && console.log("log-------------背靠背");
32 & e && console.log("log-------------自动托管");
},
start: function() {
var e = this.node.getChildByName("CreateRoom").getChildByName("btn_ok").getChildByName("lb_str").getComponent(cc.Label);
1 == cc.vv.userMgr.isDaiKaiRoom ? e.string = "代开房间" : e.string = "确定";
var t = cc.sys.localStorage.getItem("conf_30008");
t && this.revertButton(t);
this.showGameName();
this.showWanFaNode();
this.showWanFaNode1();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 8 & t.rule_index;
this._radioArr[7].isChecked = 16 & t.rule_index;
this._radioArr[8].isChecked && (t.r_index += 64);
this._radioArr[9].isChecked && (t.r_index += 128);
this._radioArr[10].isChecked && (t.r_index += 256);
this._radioArr[11].isChecked && (t.r_index += 512);
this._radioArr[12].isChecked && (t.r_index += 1024);
this._radioArr[13].isChecked && (t.r_index += 2048);
this._radioArr[14].isChecked && (t.r_index += 4096);
this._radioArr[15].isChecked && (t.r_index += 8192);
this._radioArr[16].isChecked && (t.r_index += 16384);
this._radioArr[17].isChecked && (t.r_index += 32768);
this._radioArr[18].isChecked && (t.r_index += 65536);
this._radioArr[19].isChecked && (t.r_index += 1 << 17);
this._radioArr[20].isChecked && (t.r_index += 1 << 18);
this._radioArr[22].isChecked && (t.r_index += 1 << 22);
this._radioArr[23].isChecked && (t.r_index += 1 << 23);
this._radioArr[24].isChecked && (t.r_index += 1 << 24);
this._radioArr[25].isChecked && (t.r_index += 1 << 25);
this._radioArr[26].isChecked && (t.r_index += 1 << 26);
this._radioArr[27].isChecked && (t.r_index += 1 << 27);
this._radioArr[28].isChecked && (t.r_index += 1 << 28);
this._radioArr[29].isChecked && (t.r_index += 1 << 29);
this._radioArr[30].isChecked && (t.r_index += 32);
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
},
showGameName: function() {
this._radioArr[6].isChecked ? this.lb_gameName.string = "【常德全明堂】" : this._radioArr[7].isChecked && (this.lb_gameName.string = "【常德红黑点】");
},
showWanFaNode: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/label_Node"), t = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/tou_Node"), i = e.getChildByName("label_3"), n = e.getChildByName("label_4"), a = t.getChildByName("tou_4");
if (this._radioArr[6].isChecked) {
var s = [];
this.fanshu.active = !0;
i.active = !0;
a.active = !0;
this.wanfa.setPosition(-470, 70);
n.setPosition(-423, 10);
var c = this.wanfa.getChildByName("rule11"), r = this.wanfa.getChildByName("rule21");
c.active = !1;
for (o = 1; o <= 10; o++) {
(l = this.wanfa.getChildByName("rule" + o)).getComponent(cc.Toggle).isChecked = !0;
s.push(l);
l.active = !0;
}
for (var o = 0; o < s.length; o++) {
s[o].setPosition(140 + o % 5 * 190, 0 - 71 * Math.floor(o / 5));
s[o].active = !0;
}
this._radioArr[20].isChecked = !1;
this._radioArr[8].isChecked || this._radioArr[9].isChecked || (this._radioArr[8].isChecked = !0);
} else {
this.fanshu.active = !1;
i.active = !1;
a.active = !1;
this.wanfa.setPosition(-470, 135);
n.setPosition(-423, 75);
var h = [];
for (o = 1; o <= 11; o++) {
var l;
(l = this.wanfa.getChildByName("rule" + o)).active = !1;
}
var d = this.wanfa.getChildByName("rule4"), u = this.wanfa.getChildByName("rule3"), v = (c = this.wanfa.getChildByName("rule11"), 
this.wanfa.getChildByName("rule5")), g = d.getChildByName("Background").getChildByName("New Label"), _ = d.getChildByName("checkmark").getChildByName("New Label");
g.getComponent(cc.Label).string = "红胡:2";
_.getComponent(cc.Label).string = "红胡:2";
var f = u.getChildByName("Background").getChildByName("New Label"), p = u.getChildByName("checkmark").getChildByName("New Label");
f.getComponent(cc.Label).string = "点胡:3";
p.getComponent(cc.Label).string = "点胡:3";
var m = c.getChildByName("Background").getChildByName("New Label"), C = c.getChildByName("checkmark").getChildByName("New Label");
m.getComponent(cc.Label).string = "红乌:4";
C.getComponent(cc.Label).string = "红乌:4";
var y = v.getChildByName("Background").getChildByName("New Label"), b = v.getChildByName("checkmark").getChildByName("New Label");
y.getComponent(cc.Label).string = "乌胡:5";
b.getComponent(cc.Label).string = "乌胡:5";
(r = this.wanfa.getChildByName("rule21")).getComponent(cc.Toggle).isChecked = !1;
r.setPosition(140, -71);
h.push(d);
h.push(u);
h.push(c);
h.push(v);
for (o = 0; o < h.length; o++) {
h[o].setPosition(140 + o % 4 * 190, 0 - 71 * Math.floor(o / 4));
h[o].getComponent(cc.Toggle).isChecked = !0;
h[o].active = !0;
}
this._radioArr[8].isChecked = !1;
this._radioArr[9].isChecked = !1;
this._radioArr[10].isChecked = !1;
this._radioArr[11].isChecked = !1;
this._radioArr[15].isChecked = !1;
this._radioArr[16].isChecked = !1;
this._radioArr[17].isChecked = !1;
this._radioArr[18].isChecked = !1;
this._radioArr[19].isChecked = !1;
for (o = 0; o < 9; o++) {
var M = this.wanfa.getChildByName("rule" + (o + 12));
M.getComponent(cc.Toggle).isChecked = !1;
M.active = !1;
}
}
},
showWanFaNode1: function() {
if (this._radioArr[6].isChecked) if (this._radioArr[8].isChecked) {
for (var e = 0; e < 9; e++) {
(s = this.wanfa.getChildByName("rule" + (e + 12))).getComponent(cc.Toggle).isChecked = !1;
s.active = e < 2;
(a = this.wanfa.getChildByName("rule21")).getComponent(cc.Toggle).isChecked = !1;
a.setPosition(140, -213);
}
var t = [ "天胡:6", "地胡:6", "点胡:4", "红胡:2+n", "乌胡:6", "对对胡:6", "大字胡:6", "小字胡:8", "海底胡:6", "听胡:6", "", "项项息:3", "印:2*n", "", "", "", "", "", "", "" ];
for (e = 1; e <= 20; e++) {
var i = (s = this.wanfa.getChildByName("rule" + e)).getChildByName("Background").getChildByName("New Label"), n = s.getChildByName("checkmark").getChildByName("New Label");
i.getComponent(cc.Label).string = t[e - 1];
n.getComponent(cc.Label).string = t[e - 1];
}
} else {
for (e = 0; e < 9; e++) {
var a;
(s = this.wanfa.getChildByName("rule" + (e + 12))).getComponent(cc.Toggle).isChecked = !1;
if (e < 2) s.active = !1; else {
s.active = !0;
s.setPosition(140 + (e - 2) % 5 * 190, -142 - 71 * Math.floor((e - 2) / 5));
}
(a = this.wanfa.getChildByName("rule21")).getComponent(cc.Toggle).isChecked = !1;
a.setPosition(140, -284);
}
for (t = [ "天胡:6", "地胡:6", "点胡:6", "红胡:3+n", "乌胡:8", "对对胡:8", "大字胡:8+n", "小字胡:10+n", "海底胡:6", "听胡:6", "", "", "", "耍猴:8", "黄番:总番数*2", "大团圆:8", "七行息:8", "假行行:4", "四七红:3", "背靠背:8" ], 
e = 1; e <= 20; e++) {
var s;
i = (s = this.wanfa.getChildByName("rule" + e)).getChildByName("Background").getChildByName("New Label"), 
n = s.getChildByName("checkmark").getChildByName("New Label");
i.getComponent(cc.Label).string = t[e - 1];
n.getComponent(cc.Label).string = t[e - 1];
}
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "8局 ( 免费 )";
t.jushu_j_2.string = "16局 ( 免费 )";
t.jushu_f_1.string = "8局 ( 免费 )";
t.jushu_f_2.string = "16局 ( 免费 )";
t.jushu_j_1_sl.string = "8局 ( 免费 )";
t.jushu_j_2_sl.string = "16局 ( 免费 )";
t.jushu_f_1_sl.string = "8局 ( 免费 )";
t.jushu_f_2_sl.string = "16局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_30008"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("常德全明堂", 30008, e.roomid, a, s, 8);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30008");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr30008: "GameNetMgr30008"
} ],
CreateRoom_SDB: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "6e295WkkDxJ+bMfCXg7dKSC", "CreateRoom_SDB");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2,
btnType1: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.renshu = e.getChildByName("renshu");
var o = this.renshu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(h);
var l = this.renshu.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(l);
this.wanfa = e.getChildByName("wanfa");
var d = this.wanfa.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(d);
var u = this.wanfa.getChildByName("rule7").getComponent(cc.Toggle);
this._radioArr.push(u);
var v = this.wanfa.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(v);
var g = e.getChildByName("k_wanfa");
u = g.getChildByName("rule8").getComponent(cc.Toggle);
this._radioArr.push(u);
var _ = g.getChildByName("rule9").getComponent(cc.Toggle);
this._radioArr.push(_);
this.xianzhu = e.getChildByName("xianzhu");
var f = this.xianzhu.getChildByName("rule14").getComponent(cc.Toggle);
this._radioArr.push(f);
var p = this.xianzhu.getChildByName("rule15").getComponent(cc.Toggle);
this._radioArr.push(p);
var m = this.xianzhu.getChildByName("rule16").getComponent(cc.Toggle);
this._radioArr.push(m);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtnSDB_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (7 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
} else if (6 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "16局 (2          )";
}
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 32);
this._radioArr[9].isChecked && (t += 64);
this._radioArr[10].isChecked && (t += 128);
this._radioArr[11].isChecked && (t += 1024);
this._radioArr[12] && this._radioArr[12].isChecked && (t += 2048);
this._radioArr[13] && this._radioArr[13].isChecked && (t += 4096);
this._radioArr[14].isChecked && (t += 32768);
this._radioArr[15].isChecked && (t += 65536);
this._radioArr[16].isChecked && (t += 1 << 17);
var i = {
server_code: 20011,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20011, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20011");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this.btnType1.isChecked = !0;
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 8 & t.rule_index;
this._radioArr[7].isChecked = 16 & t.rule_index;
this._radioArr[8].isChecked = 32 & t.rule_index;
this._radioArr[9].isChecked = 64 & t.rule_index;
this._radioArr[10].isChecked = 128 & t.rule_index;
this._radioArr[11].isChecked = 1024 & t.rule_index;
this._radioArr[12].isChecked = 2048 & t.rule_index;
this._radioArr[13].isChecked = 4096 & t.rule_index;
this._radioArr[14].isChecked = 32768 & t.rule_index;
this._radioArr[15].isChecked = 65536 & t.rule_index;
this._radioArr[16].isChecked = t.rule_index & 1 << 17;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
} else {
this.jushu_f.active = !1;
this.jushu_j.active = !0;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20011"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("十点半", 20011, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20011");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20011: "GameNetMgr20011"
} ],
CreateRoom_WHZ: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "d0b6cJZwzpPLZCZn83lK4uu", "CreateRoom_WHZ");
var i;
function a(e, t, i) {
t in e ? Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i;
return e;
}
cc.Class((a(i = {
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle), n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(i);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle), s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(a);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle), r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(c);
this._radioArr.push(r);
this.wanfa = e.getChildByName("wanfa");
a = this.wanfa.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "8局 (1          )";
this.jushu_j_2.string = "16局 (2          )";
this.jushu_f_1.string = "8局 (1          )";
this.jushu_f_2.string = "16局 (2          )";
this.jushu_j_1_sl.string = "8局 (1          )";
this.jushu_j_2_sl.string = "16局 (2          )";
this.jushu_f_1_sl.string = "8局 (1          )";
this.jushu_f_2_sl.string = "16局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
onBtn_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
var i = {
server_code: 30007,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(30007, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
start: function() {
var e = this.node.getChildByName("CreateRoom").getChildByName("btn_ok").getChildByName("lb_str").getComponent(cc.Label);
1 == cc.vv.userMgr.isDaiKaiRoom ? e.string = "代开房间" : e.string = "确定";
var t = cc.sys.localStorage.getItem("conf_30007");
t && this.revertButton(t);
}
}, "btnyinxiao", function() {
cc.vv.audioMgr.playBtnClick();
}), a(i, "openShowPanel", function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
}), a(i, "activityRequest", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
}), a(i, "revertButton", function(e) {
var t = JSON.parse(e);
this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19;
this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20;
this._radioArr[2].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[3].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[4].getComponent(cc.Toggle).isChecked = 2 & t.rule_index;
this._radioArr[5].getComponent(cc.Toggle).isChecked = 4 & t.rule_index;
this._radioArr[6].getComponent(cc.Toggle).isChecked = 8 & t.rule_index;
if (this._radioArr[0].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].getComponent(cc.Toggle).isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
}), a(i, "initMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
}), a(i, "onMsgGetActivity", function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "8局 ( 免费 )";
t.jushu_j_2.string = "16局 ( 免费 )";
t.jushu_f_1.string = "8局 ( 免费 )";
t.jushu_f_2.string = "16局 ( 免费 )";
t.jushu_j_1_sl.string = "8局 ( 免费 )";
t.jushu_j_2_sl.string = "16局 ( 免费 )";
t.jushu_f_1_sl.string = "8局 ( 免费 )";
t.jushu_f_2_sl.string = "16局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
}), a(i, "onMsgCreateAgentRoom", function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_30007"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("岳阳歪胡子", 30007, e.roomid, a, s, 8);
}
}), a(i, "onMsgCreatePrivateRoom", function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr30007");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
}), a(i, "removeMsgHandler", function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
}), a(i, "onDestroy", function() {
this.removeMsgHandler();
}), i));
cc._RF.pop();
}, {
GameNetMgr30007: "GameNetMgr30007"
} ],
CreateRoom_ZJH: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "7f3429oyJJPBLK3yEW6rAhK", "CreateRoom_ZJH");
cc.Class({
extends: cc.Component,
properties: {
_radioArr: [],
_gameType: 2
},
onLoad: function() {
var e = cc.find("Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle"), t = e.getChildByName("ruleType"), i = t.getChildByName("rule19").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getChildByName("rule20").getComponent(cc.Toggle);
this._radioArr.push(n);
this.jushu_j = e.getChildByName("jushu_j");
var a = this.jushu_j.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this.jushu_j.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(s);
this.jushu_f = e.getChildByName("jushu_f");
var c = this.jushu_f.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(c);
var r = this.jushu_f.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(r);
this.jushu_j_1 = this.jushu_j.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2 = this.jushu_j.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1 = this.jushu_f.getChildByName("rule1").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2 = this.jushu_f.getChildByName("rule2").getChildByName("Background").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_1_sl = this.jushu_j.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_j_2_sl = this.jushu_j.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_1_sl = this.jushu_f.getChildByName("rule1").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.jushu_f_2_sl = this.jushu_f.getChildByName("rule2").getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label);
this.icon_diamond1 = this.jushu_j.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond2 = this.jushu_j.getChildByName("rule2").getChildByName("fangka2");
this.icon_diamond3 = this.jushu_f.getChildByName("rule1").getChildByName("fangka1");
this.icon_diamond4 = this.jushu_f.getChildByName("rule2").getChildByName("fangka2");
this.renshu = e.getChildByName("renshu");
var o = this.renshu.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(o);
var h = this.renshu.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(h);
var l = this.renshu.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(l);
this.difen = e.getChildByName("difen");
var d = this.difen.getChildByName("rule8").getComponent(cc.Toggle);
this._radioArr.push(d);
var u = this.difen.getChildByName("rule9").getComponent(cc.Toggle);
this._radioArr.push(u);
var v = this.difen.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(v);
this._dingfen = e.getChildByName("dingfen");
var g = this._dingfen.getChildByName("rule13").getComponent(cc.Toggle);
this._radioArr.push(g);
var _ = this._dingfen.getChildByName("rule14").getComponent(cc.Toggle);
this._radioArr.push(_);
var f = this._dingfen.getChildByName("rule15").getComponent(cc.Toggle);
this._radioArr.push(f);
this._bipai = e.getChildByName("bipai");
var p = this._bipai.getChildByName("rule16").getComponent(cc.Toggle);
this._radioArr.push(p);
var m = this._bipai.getChildByName("rule17").getComponent(cc.Toggle);
this._radioArr.push(m);
var C = this._bipai.getChildByName("rule18").getComponent(cc.Toggle);
this._radioArr.push(C);
this._menpai = e.getChildByName("menpai");
var y = this._menpai.getChildByName("rule21").getComponent(cc.Toggle);
this._radioArr.push(y);
var b = this._menpai.getChildByName("rule22").getComponent(cc.Toggle);
this._radioArr.push(b);
var M = this._menpai.getChildByName("rule23").getComponent(cc.Toggle);
this._radioArr.push(M);
var N = this._menpai.getChildByName("rule24").getComponent(cc.Toggle);
this._radioArr.push(N);
var S = e.getChildByName("k_wanfa"), A = S.getChildByName("rule11").getComponent(cc.Toggle);
this._radioArr.push(A);
var I = S.getChildByName("rule12").getComponent(cc.Toggle);
this._radioArr.push(I);
this.initData();
this.initMsgHandler();
this.activityRequest();
},
initData: function() {
this.jushu_j_1.string = "10局 (1          )";
this.jushu_j_2.string = "20局 (2          )";
this.jushu_f_1.string = "10局 (1          )";
this.jushu_f_2.string = "20局 (2          )";
this.jushu_j_1_sl.string = "10局 (1          )";
this.jushu_j_2_sl.string = "20局 (2          )";
this.jushu_f_1_sl.string = "10局 (1          )";
this.jushu_f_2_sl.string = "20局 (2          )";
this.jushu_f.active = !0;
this.jushu_j.active = !1;
this.isXianMian = !1;
},
onBtnZJH_RuleClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
if (0 != this._radioArr[t].isChecked) {
if (1 == t) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
} else if (0 == t) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (7 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (2          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (4          )";
} else if (6 == t) {
this.jushu_j_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_j_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_j_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
this.jushu_f_1_sl.string = this.isXianMian ? "10局 ( 免费 )" : "10局 (1          )";
this.jushu_f_2_sl.string = this.isXianMian ? "20局 ( 免费 )" : "20局 (2          )";
}
} else this._radioArr[t].isChecked = !0;
},
createRoom: function() {
var e = this._gameType, t = 0;
this._radioArr[0].isChecked && (t = 1 << 19);
this._radioArr[1].isChecked && (t = 1 << 20);
if (1 == this.jushu_j.active) {
this._radioArr[2].isChecked && (t += 2);
this._radioArr[3].isChecked && (t += 4);
}
if (1 == this.jushu_f.active) {
this._radioArr[4].isChecked && (t += 2);
this._radioArr[5].isChecked && (t += 4);
}
this._radioArr[6].isChecked && (t += 8);
this._radioArr[7].isChecked && (t += 16);
this._radioArr[8].isChecked && (t += 32);
t += 128;
this._radioArr[9].isChecked && (t += 256);
this._radioArr[10].isChecked && (t += 512);
this._radioArr[11].isChecked && (t += 1024);
this._radioArr[22] && this._radioArr[22].isChecked && (t += 2048);
this._radioArr[23] && this._radioArr[23].isChecked && (t += 4096);
this._radioArr[12].isChecked && (t += 8192);
this._radioArr[13].isChecked && (t += 16384);
this._radioArr[14].isChecked && (t += 32768);
this._radioArr[15].isChecked && (t += 65536);
this._radioArr[16].isChecked && (t += 1 << 17);
this._radioArr[17].isChecked && (t += 1 << 18);
this._radioArr[18].isChecked && (t += 1 << 21);
this._radioArr[19].isChecked && (t += 1 << 22);
this._radioArr[20].isChecked && (t += 1 << 23);
this._radioArr[21].isChecked && (t += 1 << 24);
var i = {
server_code: 20004,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(20004, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").emit("refreshCommonGame");
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.createRoom();
},
btnyinxiao: function() {
cc.vv.audioMgr.playBtnClick();
},
start: function() {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
var e = cc.sys.localStorage.getItem("conf_20004");
e && this.revertButton(e);
},
openShowPanel: function(e, t, i, n, a, s) {
var c = {};
c.name = e;
c.server_code = t;
c.roomid = i;
c.t_index = n;
c.r_index = a;
c.num = s;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
},
activityRequest: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
},
revertButton: function(e) {
var t = JSON.parse(e);
this._radioArr[0].isChecked = t.rule_index & 1 << 19;
this._radioArr[1].isChecked = t.rule_index & 1 << 20;
this._radioArr[2].isChecked = 2 & t.rule_index;
this._radioArr[3].isChecked = 4 & t.rule_index;
this._radioArr[4].isChecked = 2 & t.rule_index;
this._radioArr[5].isChecked = 4 & t.rule_index;
this._radioArr[6].isChecked = 8 & t.rule_index;
this._radioArr[7].isChecked = 16 & t.rule_index;
this._radioArr[8].isChecked = 32 & t.rule_index;
this._radioArr[9].isChecked = 256 & t.rule_index;
this._radioArr[10].isChecked = 512 & t.rule_index;
this._radioArr[11].isChecked = 1024 & t.rule_index;
this._radioArr[12].isChecked = 8192 & t.rule_index;
this._radioArr[13].isChecked = 16384 & t.rule_index;
this._radioArr[14].isChecked = 32768 & t.rule_index;
this._radioArr[15].isChecked = 65536 & t.rule_index;
this._radioArr[16].isChecked = t.rule_index & 1 << 17;
this._radioArr[17].isChecked = t.rule_index & 1 << 18;
this._radioArr[18].isChecked = t.rule_index & 1 << 21;
this._radioArr[19].isChecked = t.rule_index & 1 << 22;
this._radioArr[20].isChecked = t.rule_index & 1 << 23;
this._radioArr[21].isChecked = t.rule_index & 1 << 24;
this._radioArr[22].isChecked = 2048 & t.rule_index;
this._radioArr[23].isChecked = 4096 & t.rule_index;
if (this._radioArr[0].isChecked = t.rule_index & 1 << 19) {
this.jushu_f.active = !0;
this.jushu_j.active = !1;
}
if (this._radioArr[1].isChecked = t.rule_index & 1 << 20) {
this.jushu_j.active = !0;
this.jushu_f.active = !1;
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
},
onMsgGetActivity: function(e) {
var t = this;
if (0 == (e = e.detail).errcode) {
for (var i = cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH, n = (Date.parse(new Date()), 
0); n < e.activitys.length; n++) if (i == e.activitys[n].server_type && (e.bigen_time = -1)) {
t.jushu_j_1.string = "10局 ( 免费 )";
t.jushu_j_2.string = "20局 ( 免费 )";
t.jushu_f_1.string = "10局 ( 免费 )";
t.jushu_f_2.string = "20局 ( 免费 )";
t.jushu_j_1_sl.string = "10局 ( 免费 )";
t.jushu_j_2_sl.string = "20局 ( 免费 )";
t.jushu_f_1_sl.string = "10局 ( 免费 )";
t.jushu_f_2_sl.string = "20局 ( 免费 )";
t.icon_diamond1.active = !1;
t.icon_diamond2.active = !1;
t.icon_diamond3.active = !1;
t.icon_diamond4.active = !1;
t.isXianMian = !0;
}
} else {
cc.vv.wc.hide();
8004 == e.errcode ? cc.vv.alert.show("提示", "订单提交过于频繁，请5分钟后尝试") : cc.vv.alert.show("提示", "订单请求失败错误码" + e.errcode);
}
},
onMsgCreateAgentRoom: function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_20004"), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openShowPanel("炸金花", 20004, e.roomid, a, s, 10);
}
},
onMsgCreatePrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = n("GameNetMgr20004");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {
GameNetMgr20004: "GameNetMgr20004"
} ],
CreateRoom: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "045b5zsCQFDUKGe5ODwBE3B", "CreateRoom");
cc.Class({
extends: cc.Component,
properties: {
createRoom_PDK: cc.Node,
createRoom_DDZ: cc.Node,
createRoom_DNN: cc.Node,
createRoom_ZJH: cc.Node,
createRoom_DZPK: cc.Node,
createRoom_3G: cc.Node,
createRoom_21D: cc.Node,
createRoom_13S: cc.Node,
createRoom_3DH: cc.Node,
createRoom_SDB: cc.Node,
createRoom_MJ: cc.Node,
createRoom_FLY: cc.Node,
_btnName: "paodekuai",
rulePanel: cc.Node
},
onLoad: function() {
this.pdk = cc.find("Canvas/CreateRoom/rulePanle/paodekuai").getComponent("CreateRoom_PDK");
this.ddz = cc.find("Canvas/CreateRoom/rulePanle/doudizhu").getComponent("CreateRoom_DDZ");
this.dnn = cc.find("Canvas/CreateRoom/rulePanle/douniuniu").getComponent("CreateRoom_DNN");
this.zjh = cc.find("Canvas/CreateRoom/rulePanle/zhajinhua").getComponent("CreateRoom_ZJH");
this.dzpk = cc.find("Canvas/CreateRoom/rulePanle/dezhoupuke").getComponent("CreateRoom_DZPK");
this.g3 = cc.find("Canvas/CreateRoom/rulePanle/3gong").getComponent("CreateRoom_3G");
this.d21 = cc.find("Canvas/CreateRoom/rulePanle/21dian").getComponent("CreateRoom_21D");
this.sss = cc.find("Canvas/CreateRoom/rulePanle/13shui").getComponent("CreateRoom_13S");
this.dh3 = cc.find("Canvas/CreateRoom/rulePanle/3daha").getComponent("CreateRoom_3DH");
this.sdb = cc.find("Canvas/CreateRoom/rulePanle/sdb").getComponent("CreateRoom_SDB");
this.mj = cc.find("Canvas/CreateRoom/rulePanle/majian").getComponent("CreateRoom_MJ");
this.fly = cc.find("Canvas/CreateRoom/rulePanle/fly").getComponent("CreateRoom_FLY");
this.onHidePage();
this.createRoom_PDK.active = !0;
},
onHidePage: function() {
this.createRoom_PDK.active = !1;
this.createRoom_DDZ.active = !1;
this.createRoom_DNN.active = !1;
this.createRoom_ZJH.active = !1;
this.createRoom_DZPK.active = !1;
this.createRoom_3G.active = !1;
this.createRoom_21D.active = !1;
this.createRoom_3DH.active = !1;
this.createRoom_13S.active = !1;
this.createRoom_SDB.active = !1;
this.createRoom_MJ.active = !1;
this.createRoom_FLY.active = !1;
},
onBtnBack: function() {
this.node.active = !1;
cc.vv.audioMgr.playBtnClick();
},
onBtnOK: function() {
cc.vv.audioMgr.playBtnClick();
this.node.active = !1;
this.createRoom();
},
onBtnTypeClick: function(e) {
cc.vv.audioMgr.playBtnClick();
this.doBtnTypeClick(e);
},
doBtnTypeClick: function(e) {
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.find("Canvas/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "代开房间" : cc.find("Canvas/CreateRoom/btn_ok/lb_str").getComponent(cc.Label).string = "确定";
this.rulePanel.active = !0;
this._btnName = e.target.name;
this.onHidePage();
"paodekuai" == this._btnName ? this.createRoom_PDK.active = !0 : "doudizhu" == this._btnName ? this.createRoom_DDZ.active = !0 : "douniuniu" == this._btnName ? this.createRoom_DNN.active = !0 : "zhajinhua" == this._btnName ? this.createRoom_ZJH.active = !0 : "dezhoupuke" == this._btnName ? this.createRoom_DZPK.active = !0 : "3gong" == this._btnName ? this.createRoom_3G.active = !0 : "21dian" == this._btnName ? this.createRoom_21D.active = !0 : "13shui" == this._btnName ? this.createRoom_13S.active = !0 : "3dh" == this._btnName ? this.createRoom_3DH.active = !0 : "sdb" == this._btnName ? this.createRoom_SDB.active = !0 : "majian" == this._btnName ? this.createRoom_MJ.active = !0 : "fly" == this._btnName && (this.createRoom_FLY.active = !0);
},
createRoom: function() {
"paodekuai" == this._btnName ? this.pdk.createRoom() : "doudizhu" == this._btnName ? this.ddz.createRoom() : "douniuniu" == this._btnName ? this.dnn.createRoom() : "zhajinhua" == this._btnName ? this.zjh.createRoom() : "dezhoupuke" == this._btnName ? this.dzpk.createRoom() : "3gong" == this._btnName ? this.g3.createRoom() : "21dian" == this._btnName ? this.d21.createRoom() : "13shui" == this._btnName ? this.sss.createRoom() : "3dh" == this._btnName ? this.dh3.createRoom() : "sdb" == this._btnName ? this.sdb.createRoom() : "majian" == this._btnName ? this.mj.createRoom() : "fly" == this._btnName && this.fly.createRoom();
}
});
cc._RF.pop();
}, {} ],
1: [ function(e, t, i) {
var n = i;
n.bignum = e("bn.js");
n.define = e("./asn1/api").define;
n.base = e("./asn1/base");
n.constants = e("./asn1/constants");
n.decoders = e("./asn1/decoders");
n.encoders = e("./asn1/encoders");
}, {
"./asn1/api": 2,
"./asn1/base": 4,
"./asn1/constants": 8,
"./asn1/decoders": 10,
"./asn1/encoders": 13,
"bn.js": 16
} ],
2: [ function(e, t, i) {
var n = e("../asn1"), a = e("inherits");
i.define = function(e, t) {
return new s(e, t);
};
function s(e, t) {
this.name = e;
this.body = t;
this.decoders = {};
this.encoders = {};
}
s.prototype._createNamed = function(t) {
var i;
try {
i = e("vm").runInThisContext("(function " + this.name + "(entity) {\n  this._initNamed(entity);\n})");
} catch (e) {
i = function(e) {
this._initNamed(e);
};
}
a(i, t);
i.prototype._initNamed = function(e) {
t.call(this, e);
};
return new i(this);
};
s.prototype._getDecoder = function(e) {
e = e || "der";
this.decoders.hasOwnProperty(e) || (this.decoders[e] = this._createNamed(n.decoders[e]));
return this.decoders[e];
};
s.prototype.decode = function(e, t, i) {
return this._getDecoder(t).decode(e, i);
};
s.prototype._getEncoder = function(e) {
e = e || "der";
this.encoders.hasOwnProperty(e) || (this.encoders[e] = this._createNamed(n.encoders[e]));
return this.encoders[e];
};
s.prototype.encode = function(e, t, i) {
return this._getEncoder(t).encode(e, i);
};
}, {
"../asn1": 1,
inherits: 101,
vm: 155
} ],
3: [ function(e, t, i) {
var n = e("inherits"), a = e("../base").Reporter, s = e("buffer").Buffer;
function c(e, t) {
a.call(this, t);
if (s.isBuffer(e)) {
this.base = e;
this.offset = 0;
this.length = e.length;
} else this.error("Input not Buffer");
}
n(c, a);
(i.DecoderBuffer = c).prototype.save = function() {
return {
offset: this.offset,
reporter: a.prototype.save.call(this)
};
};
c.prototype.restore = function(e) {
var t = new c(this.base);
t.offset = e.offset;
t.length = this.offset;
this.offset = e.offset;
a.prototype.restore.call(this, e.reporter);
return t;
};
c.prototype.isEmpty = function() {
return this.offset === this.length;
};
c.prototype.readUInt8 = function(e) {
return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(e || "DecoderBuffer overrun");
};
c.prototype.skip = function(e, t) {
if (!(this.offset + e <= this.length)) return this.error(t || "DecoderBuffer overrun");
var i = new c(this.base);
i._reporterState = this._reporterState;
i.offset = this.offset;
i.length = this.offset + e;
this.offset += e;
return i;
};
c.prototype.raw = function(e) {
return this.base.slice(e ? e.offset : this.offset, this.length);
};
function r(e, t) {
if (Array.isArray(e)) {
this.length = 0;
this.value = e.map(function(e) {
e instanceof r || (e = new r(e, t));
this.length += e.length;
return e;
}, this);
} else if ("number" == typeof e) {
if (!(0 <= e && e <= 255)) return t.error("non-byte EncoderBuffer value");
this.value = e;
this.length = 1;
} else if ("string" == typeof e) {
this.value = e;
this.length = s.byteLength(e);
} else {
if (!s.isBuffer(e)) return t.error("Unsupported type: " + typeof e);
this.value = e;
this.length = e.length;
}
}
(i.EncoderBuffer = r).prototype.join = function(t, i) {
t || (t = new s(this.length));
i || (i = 0);
if (0 === this.length) return t;
if (Array.isArray(this.value)) this.value.forEach(function(e) {
e.join(t, i);
i += e.length;
}); else {
"number" == typeof this.value ? t[i] = this.value : "string" == typeof this.value ? t.write(this.value, i) : s.isBuffer(this.value) && this.value.copy(t, i);
i += this.length;
}
return t;
};
}, {
"../base": 4,
buffer: 47,
inherits: 101
} ],
4: [ function(e, t, i) {
var n = i;
n.Reporter = e("./reporter").Reporter;
n.DecoderBuffer = e("./buffer").DecoderBuffer;
n.EncoderBuffer = e("./buffer").EncoderBuffer;
n.Node = e("./node");
}, {
"./buffer": 3,
"./node": 5,
"./reporter": 6
} ],
5: [ function(e, t, i) {
var l = e("../base").Reporter, n = e("../base").EncoderBuffer, v = e("../base").DecoderBuffer, a = e("minimalistic-assert"), s = [ "seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr" ], c = [ "key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains" ].concat(s);
function r(e, t) {
var i = {};
(this._baseState = i).enc = e;
i.parent = t || null;
i.children = null;
i.tag = null;
i.args = null;
i.reverseArgs = null;
i.choice = null;
i.optional = !1;
i.any = !1;
i.obj = !1;
i.use = null;
i.useDecoder = null;
i.key = null;
i.default = null;
i.explicit = null;
i.implicit = null;
i.contains = null;
if (!i.parent) {
i.children = [];
this._wrap();
}
}
t.exports = r;
var o = [ "enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains" ];
r.prototype.clone = function() {
var t = this._baseState, i = {};
o.forEach(function(e) {
i[e] = t[e];
});
var e = new this.constructor(i.parent);
e._baseState = i;
return e;
};
r.prototype._wrap = function() {
var i = this._baseState;
c.forEach(function(t) {
this[t] = function() {
var e = new this.constructor(this);
i.children.push(e);
return e[t].apply(e, arguments);
};
}, this);
};
r.prototype._init = function(e) {
var t = this._baseState;
a(null === t.parent);
e.call(this);
t.children = t.children.filter(function(e) {
return e._baseState.parent === this;
}, this);
a.equal(t.children.length, 1, "Root node can have only one child");
};
r.prototype._useArgs = function(e) {
var t = this._baseState, i = e.filter(function(e) {
return e instanceof this.constructor;
}, this);
e = e.filter(function(e) {
return !(e instanceof this.constructor);
}, this);
if (0 !== i.length) {
a(null === t.children);
(t.children = i).forEach(function(e) {
e._baseState.parent = this;
}, this);
}
if (0 !== e.length) {
a(null === t.args);
t.args = e;
t.reverseArgs = e.map(function(i) {
if ("object" != typeof i || i.constructor !== Object) return i;
var n = {};
Object.keys(i).forEach(function(e) {
e == (0 | e) && (e |= 0);
var t = i[e];
n[t] = e;
});
return n;
});
}
};
[ "_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool" ].forEach(function(t) {
r.prototype[t] = function() {
var e = this._baseState;
throw new Error(t + " not implemented for encoding: " + e.enc);
};
});
s.forEach(function(i) {
r.prototype[i] = function() {
var e = this._baseState, t = Array.prototype.slice.call(arguments);
a(null === e.tag);
e.tag = i;
this._useArgs(t);
return this;
};
});
r.prototype.use = function(e) {
a(e);
var t = this._baseState;
a(null === t.use);
t.use = e;
return this;
};
r.prototype.optional = function() {
this._baseState.optional = !0;
return this;
};
r.prototype.def = function(e) {
var t = this._baseState;
a(null === t.default);
t.default = e;
t.optional = !0;
return this;
};
r.prototype.explicit = function(e) {
var t = this._baseState;
a(null === t.explicit && null === t.implicit);
t.explicit = e;
return this;
};
r.prototype.implicit = function(e) {
var t = this._baseState;
a(null === t.explicit && null === t.implicit);
t.implicit = e;
return this;
};
r.prototype.obj = function() {
var e = this._baseState, t = Array.prototype.slice.call(arguments);
e.obj = !0;
0 !== t.length && this._useArgs(t);
return this;
};
r.prototype.key = function(e) {
var t = this._baseState;
a(null === t.key);
t.key = e;
return this;
};
r.prototype.any = function() {
this._baseState.any = !0;
return this;
};
r.prototype.choice = function(t) {
var e = this._baseState;
a(null === e.choice);
e.choice = t;
this._useArgs(Object.keys(t).map(function(e) {
return t[e];
}));
return this;
};
r.prototype.contains = function(e) {
var t = this._baseState;
a(null === t.use);
t.contains = e;
return this;
};
r.prototype._decode = function(t, i) {
var e = this._baseState;
if (null === e.parent) return t.wrapResult(e.children[0]._decode(t, i));
var n, a = e.default, s = !0, c = null;
null !== e.key && (c = t.enterKey(e.key));
if (e.optional) {
var r = null;
null !== e.explicit ? r = e.explicit : null !== e.implicit ? r = e.implicit : null !== e.tag && (r = e.tag);
if (null !== r || e.any) {
s = this._peekTag(t, r, e.any);
if (t.isError(s)) return s;
} else {
var o = t.save();
try {
null === e.choice ? this._decodeGeneric(e.tag, t, i) : this._decodeChoice(t, i);
s = !0;
} catch (e) {
s = !1;
}
t.restore(o);
}
}
e.obj && s && (n = t.enterObject());
if (s) {
if (null !== e.explicit) {
var h = this._decodeTag(t, e.explicit);
if (t.isError(h)) return h;
t = h;
}
var l = t.offset;
if (null === e.use && null === e.choice) {
if (e.any) o = t.save();
var d = this._decodeTag(t, null !== e.implicit ? e.implicit : e.tag, e.any);
if (t.isError(d)) return d;
e.any ? a = t.raw(o) : t = d;
}
i && i.track && null !== e.tag && i.track(t.path(), l, t.length, "tagged");
i && i.track && null !== e.tag && i.track(t.path(), t.offset, t.length, "content");
a = e.any ? a : null === e.choice ? this._decodeGeneric(e.tag, t, i) : this._decodeChoice(t, i);
if (t.isError(a)) return a;
e.any || null !== e.choice || null === e.children || e.children.forEach(function(e) {
e._decode(t, i);
});
if (e.contains && ("octstr" === e.tag || "bitstr" === e.tag)) {
var u = new v(a);
a = this._getUse(e.contains, t._reporterState.obj)._decode(u, i);
}
}
e.obj && s && (a = t.leaveObject(n));
null === e.key || null === a && !0 !== s ? null !== c && t.exitKey(c) : t.leaveKey(c, e.key, a);
return a;
};
r.prototype._decodeGeneric = function(e, t, i) {
var n = this._baseState;
return "seq" === e || "set" === e ? null : "seqof" === e || "setof" === e ? this._decodeList(t, e, n.args[0], i) : /str$/.test(e) ? this._decodeStr(t, e, i) : "objid" === e && n.args ? this._decodeObjid(t, n.args[0], n.args[1], i) : "objid" === e ? this._decodeObjid(t, null, null, i) : "gentime" === e || "utctime" === e ? this._decodeTime(t, e, i) : "null_" === e ? this._decodeNull(t, i) : "bool" === e ? this._decodeBool(t, i) : "objDesc" === e ? this._decodeStr(t, e, i) : "int" === e || "enum" === e ? this._decodeInt(t, n.args && n.args[0], i) : null !== n.use ? this._getUse(n.use, t._reporterState.obj)._decode(t, i) : t.error("unknown tag: " + e);
};
r.prototype._getUse = function(e, t) {
var i = this._baseState;
i.useDecoder = this._use(e, t);
a(null === i.useDecoder._baseState.parent);
i.useDecoder = i.useDecoder._baseState.children[0];
if (i.implicit !== i.useDecoder._baseState.implicit) {
i.useDecoder = i.useDecoder.clone();
i.useDecoder._baseState.implicit = i.implicit;
}
return i.useDecoder;
};
r.prototype._decodeChoice = function(a, s) {
var c = this._baseState, r = null, o = !1;
Object.keys(c.choice).some(function(e) {
var t = a.save(), i = c.choice[e];
try {
var n = i._decode(a, s);
if (a.isError(n)) return !1;
r = {
type: e,
value: n
};
o = !0;
} catch (e) {
a.restore(t);
return !1;
}
return !0;
}, this);
return o ? r : a.error("Choice not matched");
};
r.prototype._createEncoderBuffer = function(e) {
return new n(e, this.reporter);
};
r.prototype._encode = function(e, t, i) {
var n = this._baseState;
if (null === n.default || n.default !== e) {
var a = this._encodeValue(e, t, i);
if (void 0 !== a && !this._skipDefault(a, t, i)) return a;
}
};
r.prototype._encodeValue = function(n, a, e) {
var t = this._baseState;
if (null === t.parent) return t.children[0]._encode(n, a || new l());
var i = null;
this.reporter = a;
if (t.optional && void 0 === n) {
if (null === t.default) return;
n = t.default;
}
var s = null, c = !1;
if (t.any) i = this._createEncoderBuffer(n); else if (t.choice) i = this._encodeChoice(n, a); else if (t.contains) {
s = this._getUse(t.contains, e)._encode(n, a);
c = !0;
} else if (t.children) {
s = t.children.map(function(e) {
if ("null_" === e._baseState.tag) return e._encode(null, a, n);
if (null === e._baseState.key) return a.error("Child should have a key");
var t = a.enterKey(e._baseState.key);
if ("object" != typeof n) return a.error("Child expected, but input is not object");
var i = e._encode(n[e._baseState.key], a, n);
a.leaveKey(t);
return i;
}, this).filter(function(e) {
return e;
});
s = this._createEncoderBuffer(s);
} else if ("seqof" === t.tag || "setof" === t.tag) {
if (!t.args || 1 !== t.args.length) return a.error("Too many args for : " + t.tag);
if (!Array.isArray(n)) return a.error("seqof/setof, but data is not Array");
var r = this.clone();
r._baseState.implicit = null;
s = this._createEncoderBuffer(n.map(function(e) {
var t = this._baseState;
return this._getUse(t.args[0], n)._encode(e, a);
}, r));
} else if (null !== t.use) i = this._getUse(t.use, e)._encode(n, a); else {
s = this._encodePrimitive(t.tag, n);
c = !0;
}
if (!t.any && null === t.choice) {
var o = null !== t.implicit ? t.implicit : t.tag, h = null === t.implicit ? "universal" : "context";
null === o ? null === t.use && a.error("Tag could be omitted only for .use()") : null === t.use && (i = this._encodeComposite(o, c, h, s));
}
null !== t.explicit && (i = this._encodeComposite(t.explicit, !1, "context", i));
return i;
};
r.prototype._encodeChoice = function(e, t) {
var i = this._baseState, n = i.choice[e.type];
n || a(!1, e.type + " not found in " + JSON.stringify(Object.keys(i.choice)));
return n._encode(e.value, t);
};
r.prototype._encodePrimitive = function(e, t) {
var i = this._baseState;
if (/str$/.test(e)) return this._encodeStr(t, e);
if ("objid" === e && i.args) return this._encodeObjid(t, i.reverseArgs[0], i.args[1]);
if ("objid" === e) return this._encodeObjid(t, null, null);
if ("gentime" === e || "utctime" === e) return this._encodeTime(t, e);
if ("null_" === e) return this._encodeNull();
if ("int" === e || "enum" === e) return this._encodeInt(t, i.args && i.reverseArgs[0]);
if ("bool" === e) return this._encodeBool(t);
if ("objDesc" === e) return this._encodeStr(t, e);
throw new Error("Unsupported tag: " + e);
};
r.prototype._isNumstr = function(e) {
return /^[0-9 ]*$/.test(e);
};
r.prototype._isPrintstr = function(e) {
return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(e);
};
}, {
"../base": 4,
"minimalistic-assert": 105
} ],
6: [ function(e, t, i) {
var n = e("inherits");
function a(e) {
this._reporterState = {
obj: null,
path: [],
options: e || {},
errors: []
};
}
(i.Reporter = a).prototype.isError = function(e) {
return e instanceof s;
};
a.prototype.save = function() {
var e = this._reporterState;
return {
obj: e.obj,
pathLen: e.path.length
};
};
a.prototype.restore = function(e) {
var t = this._reporterState;
t.obj = e.obj;
t.path = t.path.slice(0, e.pathLen);
};
a.prototype.enterKey = function(e) {
return this._reporterState.path.push(e);
};
a.prototype.exitKey = function(e) {
var t = this._reporterState;
t.path = t.path.slice(0, e - 1);
};
a.prototype.leaveKey = function(e, t, i) {
var n = this._reporterState;
this.exitKey(e);
null !== n.obj && (n.obj[t] = i);
};
a.prototype.path = function() {
return this._reporterState.path.join("/");
};
a.prototype.enterObject = function() {
var e = this._reporterState, t = e.obj;
e.obj = {};
return t;
};
a.prototype.leaveObject = function(e) {
var t = this._reporterState, i = t.obj;
t.obj = e;
return i;
};
a.prototype.error = function(e) {
var t, i = this._reporterState, n = e instanceof s;
t = n ? e : new s(i.path.map(function(e) {
return "[" + JSON.stringify(e) + "]";
}).join(""), e.message || e, e.stack);
if (!i.options.partial) throw t;
n || i.errors.push(t);
return t;
};
a.prototype.wrapResult = function(e) {
var t = this._reporterState;
return t.options.partial ? {
result: this.isError(e) ? null : e,
errors: t.errors
} : e;
};
function s(e, t) {
this.path = e;
this.rethrow(t);
}
n(s, Error);
s.prototype.rethrow = function(e) {
this.message = e + " at: " + (this.path || "(shallow)");
Error.captureStackTrace && Error.captureStackTrace(this, s);
if (!this.stack) try {
throw new Error(this.message);
} catch (e) {
this.stack = e.stack;
}
return this;
};
}, {
inherits: 101
} ],
7: [ function(e, t, i) {
var n = e("../constants");
i.tagClass = {
0: "universal",
1: "application",
2: "context",
3: "private"
};
i.tagClassByName = n._reverse(i.tagClass);
i.tag = {
0: "end",
1: "bool",
2: "int",
3: "bitstr",
4: "octstr",
5: "null_",
6: "objid",
7: "objDesc",
8: "external",
9: "real",
10: "enum",
11: "embed",
12: "utf8str",
13: "relativeOid",
16: "seq",
17: "set",
18: "numstr",
19: "printstr",
20: "t61str",
21: "videostr",
22: "ia5str",
23: "utctime",
24: "gentime",
25: "graphstr",
26: "iso646str",
27: "genstr",
28: "unistr",
29: "charstr",
30: "bmpstr"
};
i.tagByName = n._reverse(i.tag);
}, {
"../constants": 8
} ],
8: [ function(e, t, i) {
var n = i;
n._reverse = function(i) {
var n = {};
Object.keys(i).forEach(function(e) {
(0 | e) == e && (e |= 0);
var t = i[e];
n[t] = e;
});
return n;
};
n.der = e("./der");
}, {
"./der": 7
} ],
9: [ function(e, t, i) {
var n = e("inherits"), a = e("../../asn1"), s = a.base, c = a.bignum, r = a.constants.der;
function o(e) {
this.enc = "der";
this.name = e.name;
this.entity = e;
this.tree = new h();
this.tree._init(e.body);
}
(t.exports = o).prototype.decode = function(e, t) {
e instanceof s.DecoderBuffer || (e = new s.DecoderBuffer(e, t));
return this.tree._decode(e, t);
};
function h(e) {
s.Node.call(this, "der", e);
}
n(h, s.Node);
h.prototype._peekTag = function(e, t, i) {
if (e.isEmpty()) return !1;
var n = e.save(), a = l(e, 'Failed to peek tag: "' + t + '"');
if (e.isError(a)) return a;
e.restore(n);
return a.tag === t || a.tagStr === t || a.tagStr + "of" === t || i;
};
h.prototype._decodeTag = function(e, t, i) {
var n = l(e, 'Failed to decode tag of "' + t + '"');
if (e.isError(n)) return n;
var a = d(e, n.primitive, 'Failed to get length of "' + t + '"');
if (e.isError(a)) return a;
if (!i && n.tag !== t && n.tagStr !== t && n.tagStr + "of" !== t) return e.error('Failed to match tag: "' + t + '"');
if (n.primitive || null !== a) return e.skip(a, 'Failed to match body of: "' + t + '"');
var s = e.save(), c = this._skipUntilEnd(e, 'Failed to skip indefinite length body: "' + this.tag + '"');
if (e.isError(c)) return c;
a = e.offset - s.offset;
e.restore(s);
return e.skip(a, 'Failed to match body of: "' + t + '"');
};
h.prototype._skipUntilEnd = function(e, t) {
for (;;) {
var i = l(e, t);
if (e.isError(i)) return i;
var n, a = d(e, i.primitive, t);
if (e.isError(a)) return a;
n = i.primitive || null !== a ? e.skip(a) : this._skipUntilEnd(e, t);
if (e.isError(n)) return n;
if ("end" === i.tagStr) break;
}
};
h.prototype._decodeList = function(e, t, i, n) {
for (var a = []; !e.isEmpty(); ) {
var s = this._peekTag(e, "end");
if (e.isError(s)) return s;
var c = i.decode(e, "der", n);
if (e.isError(c) && s) break;
a.push(c);
}
return a;
};
h.prototype._decodeStr = function(e, t) {
if ("bitstr" === t) {
var i = e.readUInt8();
return e.isError(i) ? i : {
unused: i,
data: e.raw()
};
}
if ("bmpstr" === t) {
var n = e.raw();
if (n.length % 2 == 1) return e.error("Decoding of string type: bmpstr length mismatch");
for (var a = "", s = 0; s < n.length / 2; s++) a += String.fromCharCode(n.readUInt16BE(2 * s));
return a;
}
if ("numstr" === t) {
var c = e.raw().toString("ascii");
return this._isNumstr(c) ? c : e.error("Decoding of string type: numstr unsupported characters");
}
if ("octstr" === t) return e.raw();
if ("objDesc" === t) return e.raw();
if ("printstr" === t) {
var r = e.raw().toString("ascii");
return this._isPrintstr(r) ? r : e.error("Decoding of string type: printstr unsupported characters");
}
return /str$/.test(t) ? e.raw().toString() : e.error("Decoding of string type: " + t + " unsupported");
};
h.prototype._decodeObjid = function(e, t, i) {
for (var n, a = [], s = 0; !e.isEmpty(); ) {
var c = e.readUInt8();
s <<= 7;
s |= 127 & c;
if (0 == (128 & c)) {
a.push(s);
s = 0;
}
}
128 & c && a.push(s);
var r = a[0] / 40 | 0, o = a[0] % 40;
n = i ? a : [ r, o ].concat(a.slice(1));
if (t) {
var h = t[n.join(" ")];
void 0 === h && (h = t[n.join(".")]);
void 0 !== h && (n = h);
}
return n;
};
h.prototype._decodeTime = function(e, t) {
var i = e.raw().toString();
if ("gentime" === t) var n = 0 | i.slice(0, 4), a = 0 | i.slice(4, 6), s = 0 | i.slice(6, 8), c = 0 | i.slice(8, 10), r = 0 | i.slice(10, 12), o = 0 | i.slice(12, 14); else {
if ("utctime" !== t) return e.error("Decoding " + t + " time is not supported yet");
n = 0 | i.slice(0, 2), a = 0 | i.slice(2, 4), s = 0 | i.slice(4, 6), c = 0 | i.slice(6, 8), 
r = 0 | i.slice(8, 10), o = 0 | i.slice(10, 12);
n = n < 70 ? 2e3 + n : 1900 + n;
}
return Date.UTC(n, a - 1, s, c, r, o, 0);
};
h.prototype._decodeNull = function(e) {
return null;
};
h.prototype._decodeBool = function(e) {
var t = e.readUInt8();
return e.isError(t) ? t : 0 !== t;
};
h.prototype._decodeInt = function(e, t) {
var i = e.raw(), n = new c(i);
t && (n = t[n.toString(10)] || n);
return n;
};
h.prototype._use = function(e, t) {
"function" == typeof e && (e = e(t));
return e._getDecoder("der").tree;
};
function l(e, t) {
var i = e.readUInt8(t);
if (e.isError(i)) return i;
var n = r.tagClass[i >> 6], a = 0 == (32 & i);
if (31 == (31 & i)) {
var s = i;
i = 0;
for (;128 == (128 & s); ) {
s = e.readUInt8(t);
if (e.isError(s)) return s;
i <<= 7;
i |= 127 & s;
}
} else i &= 31;
return {
cls: n,
primitive: a,
tag: i,
tagStr: r.tag[i]
};
}
function d(e, t, i) {
var n = e.readUInt8(i);
if (e.isError(n)) return n;
if (!t && 128 === n) return null;
if (0 == (128 & n)) return n;
var a = 127 & n;
if (4 < a) return e.error("length octect is too long");
for (var s = n = 0; s < a; s++) {
n <<= 8;
var c = e.readUInt8(i);
if (e.isError(c)) return c;
n |= c;
}
return n;
}
}, {
"../../asn1": 1,
inherits: 101
} ],
10: [ function(e, t, i) {
var n = i;
n.der = e("./der");
n.pem = e("./pem");
}, {
"./der": 9,
"./pem": 11
} ],
11: [ function(e, t, i) {
var n = e("inherits"), d = e("buffer").Buffer, u = e("./der");
function a(e) {
u.call(this, e);
this.enc = "pem";
}
n(a, u);
(t.exports = a).prototype.decode = function(e, t) {
for (var i = e.toString().split(/[\r\n]+/g), n = t.label.toUpperCase(), a = /^-----(BEGIN|END) ([^-]+)-----$/, s = -1, c = -1, r = 0; r < i.length; r++) {
var o = i[r].match(a);
if (null !== o && o[2] === n) {
if (-1 !== s) {
if ("END" !== o[1]) break;
c = r;
break;
}
if ("BEGIN" !== o[1]) break;
s = r;
}
}
if (-1 === s || -1 === c) throw new Error("PEM section not found for: " + n);
var h = i.slice(s + 1, c).join("");
h.replace(/[^a-z0-9\+\/=]+/gi, "");
var l = new d(h, "base64");
return u.prototype.decode.call(this, l, t);
};
}, {
"./der": 9,
buffer: 47,
inherits: 101
} ],
12: [ function(e, t, i) {
var n = e("inherits"), h = e("buffer").Buffer, a = e("../../asn1"), s = a.base, l = a.constants.der;
function c(e) {
this.enc = "der";
this.name = e.name;
this.entity = e;
this.tree = new r();
this.tree._init(e.body);
}
(t.exports = c).prototype.encode = function(e, t) {
return this.tree._encode(e, t).join();
};
function r(e) {
s.Node.call(this, "der", e);
}
n(r, s.Node);
r.prototype._encodeComposite = function(e, t, i, n) {
var a = function(e, t, i, n) {
var a;
"seqof" === e ? e = "seq" : "setof" === e && (e = "set");
if (l.tagByName.hasOwnProperty(e)) a = l.tagByName[e]; else {
if ("number" != typeof e || (0 | e) !== e) return n.error("Unknown tag: " + e);
a = e;
}
if (31 <= a) return n.error("Multi-octet tag encoding unsupported");
t || (a |= 32);
return a |= l.tagClassByName[i || "universal"] << 6;
}(e, t, i, this.reporter);
if (n.length < 128) {
var s;
(s = new h(2))[0] = a;
s[1] = n.length;
return this._createEncoderBuffer([ s, n ]);
}
for (var c = 1, r = n.length; 256 <= r; r >>= 8) c++;
(s = new h(2 + c))[0] = a;
s[1] = 128 | c;
r = 1 + c;
for (var o = n.length; 0 < o; r--, o >>= 8) s[r] = 255 & o;
return this._createEncoderBuffer([ s, n ]);
};
r.prototype._encodeStr = function(e, t) {
if ("bitstr" === t) return this._createEncoderBuffer([ 0 | e.unused, e.data ]);
if ("bmpstr" === t) {
for (var i = new h(2 * e.length), n = 0; n < e.length; n++) i.writeUInt16BE(e.charCodeAt(n), 2 * n);
return this._createEncoderBuffer(i);
}
return "numstr" === t ? this._isNumstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === t ? this._isPrintstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(t) ? this._createEncoderBuffer(e) : "objDesc" === t ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: " + t + " unsupported");
};
r.prototype._encodeObjid = function(e, t, i) {
if ("string" == typeof e) {
if (!t) return this.reporter.error("string objid given, but no values map found");
if (!t.hasOwnProperty(e)) return this.reporter.error("objid not found in values map");
e = t[e].split(/[\s\.]+/g);
for (var n = 0; n < e.length; n++) e[n] |= 0;
} else if (Array.isArray(e)) {
e = e.slice();
for (n = 0; n < e.length; n++) e[n] |= 0;
}
if (!Array.isArray(e)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(e));
if (!i) {
if (40 <= e[1]) return this.reporter.error("Second objid identifier OOB");
e.splice(0, 2, 40 * e[0] + e[1]);
}
var a = 0;
for (n = 0; n < e.length; n++) {
var s = e[n];
for (a++; 128 <= s; s >>= 7) a++;
}
var c = new h(a), r = c.length - 1;
for (n = e.length - 1; 0 <= n; n--) {
s = e[n];
c[r--] = 127 & s;
for (;0 < (s >>= 7); ) c[r--] = 128 | 127 & s;
}
return this._createEncoderBuffer(c);
};
function o(e) {
return e < 10 ? "0" + e : e;
}
r.prototype._encodeTime = function(e, t) {
var i, n = new Date(e);
"gentime" === t ? i = [ o(n.getFullYear()), o(n.getUTCMonth() + 1), o(n.getUTCDate()), o(n.getUTCHours()), o(n.getUTCMinutes()), o(n.getUTCSeconds()), "Z" ].join("") : "utctime" === t ? i = [ o(n.getFullYear() % 100), o(n.getUTCMonth() + 1), o(n.getUTCDate()), o(n.getUTCHours()), o(n.getUTCMinutes()), o(n.getUTCSeconds()), "Z" ].join("") : this.reporter.error("Encoding " + t + " time is not supported yet");
return this._encodeStr(i, "octstr");
};
r.prototype._encodeNull = function() {
return this._createEncoderBuffer("");
};
r.prototype._encodeInt = function(e, t) {
if ("string" == typeof e) {
if (!t) return this.reporter.error("String int or enum given, but no values map");
if (!t.hasOwnProperty(e)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(e));
e = t[e];
}
if ("number" != typeof e && !h.isBuffer(e)) {
var i = e.toArray();
!e.sign && 128 & i[0] && i.unshift(0);
e = new h(i);
}
if (h.isBuffer(e)) {
var n = e.length;
0 === e.length && n++;
var a = new h(n);
e.copy(a);
0 === e.length && (a[0] = 0);
return this._createEncoderBuffer(a);
}
if (e < 128) return this._createEncoderBuffer(e);
if (e < 256) return this._createEncoderBuffer([ 0, e ]);
n = 1;
for (var s = e; 256 <= s; s >>= 8) n++;
for (s = (a = new Array(n)).length - 1; 0 <= s; s--) {
a[s] = 255 & e;
e >>= 8;
}
128 & a[0] && a.unshift(0);
return this._createEncoderBuffer(new h(a));
};
r.prototype._encodeBool = function(e) {
return this._createEncoderBuffer(e ? 255 : 0);
};
r.prototype._use = function(e, t) {
"function" == typeof e && (e = e(t));
return e._getEncoder("der").tree;
};
r.prototype._skipDefault = function(e, t, i) {
var n, a = this._baseState;
if (null === a.default) return !1;
var s = e.join();
void 0 === a.defaultBuffer && (a.defaultBuffer = this._encodeValue(a.default, t, i).join());
if (s.length !== a.defaultBuffer.length) return !1;
for (n = 0; n < s.length; n++) if (s[n] !== a.defaultBuffer[n]) return !1;
return !0;
};
}, {
"../../asn1": 1,
buffer: 47,
inherits: 101
} ],
13: [ function(e, t, i) {
var n = i;
n.der = e("./der");
n.pem = e("./pem");
}, {
"./der": 12,
"./pem": 14
} ],
14: [ function(e, t, i) {
var n = e("inherits"), s = e("./der");
function a(e) {
s.call(this, e);
this.enc = "pem";
}
n(a, s);
(t.exports = a).prototype.encode = function(e, t) {
for (var i = s.prototype.encode.call(this, e).toString("base64"), n = [ "-----BEGIN " + t.label + "-----" ], a = 0; a < i.length; a += 64) n.push(i.slice(a, a + 64));
n.push("-----END " + t.label + "-----");
return n.join("\n");
};
}, {
"./der": 12,
inherits: 101
} ],
15: [ function(e, t, i) {
"use strict";
i.byteLength = function(e) {
var t = v(e), i = t[0], n = t[1];
return 3 * (i + n) / 4 - n;
};
i.toByteArray = function(e) {
for (var t, i = v(e), n = i[0], a = i[1], s = new u((h = n, l = a, 3 * (h + l) / 4 - l)), c = 0, r = 0 < a ? n - 4 : n, o = 0; o < r; o += 4) {
t = d[e.charCodeAt(o)] << 18 | d[e.charCodeAt(o + 1)] << 12 | d[e.charCodeAt(o + 2)] << 6 | d[e.charCodeAt(o + 3)];
s[c++] = t >> 16 & 255;
s[c++] = t >> 8 & 255;
s[c++] = 255 & t;
}
var h, l;
if (2 === a) {
t = d[e.charCodeAt(o)] << 2 | d[e.charCodeAt(o + 1)] >> 4;
s[c++] = 255 & t;
}
if (1 === a) {
t = d[e.charCodeAt(o)] << 10 | d[e.charCodeAt(o + 1)] << 4 | d[e.charCodeAt(o + 2)] >> 2;
s[c++] = t >> 8 & 255;
s[c++] = 255 & t;
}
return s;
};
i.fromByteArray = function(e) {
for (var t, i = e.length, n = i % 3, a = [], s = 0, c = i - n; s < c; s += 16383) a.push(o(e, s, c < s + 16383 ? c : s + 16383));
if (1 === n) {
t = e[i - 1];
a.push(r[t >> 2] + r[t << 4 & 63] + "==");
} else if (2 === n) {
t = (e[i - 2] << 8) + e[i - 1];
a.push(r[t >> 10] + r[t >> 4 & 63] + r[t << 2 & 63] + "=");
}
return a.join("");
};
for (var r = [], d = [], u = "undefined" != typeof Uint8Array ? Uint8Array : Array, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, s = n.length; a < s; ++a) {
r[a] = n[a];
d[n.charCodeAt(a)] = a;
}
d["-".charCodeAt(0)] = 62;
d["_".charCodeAt(0)] = 63;
function v(e) {
var t = e.length;
if (0 < t % 4) throw new Error("Invalid string. Length must be a multiple of 4");
var i = e.indexOf("=");
-1 === i && (i = t);
return [ i, i === t ? 0 : 4 - i % 4 ];
}
function o(e, t, i) {
for (var n, a, s = [], c = t; c < i; c += 3) {
n = (e[c] << 16 & 16711680) + (e[c + 1] << 8 & 65280) + (255 & e[c + 2]);
s.push(r[(a = n) >> 18 & 63] + r[a >> 12 & 63] + r[a >> 6 & 63] + r[63 & a]);
}
return s.join("");
}
}, {} ],
16: [ function(N, e, t) {
(function(e, t) {
"use strict";
function f(e, t) {
if (!e) throw new Error(t || "Assertion failed");
}
function i(e, t) {
e.super_ = t;
var i = function() {};
i.prototype = t.prototype;
e.prototype = new i();
e.prototype.constructor = e;
}
function p(e, t, i) {
if (p.isBN(e)) return e;
this.negative = 0;
this.words = null;
this.length = 0;
if ((this.red = null) !== e) {
if ("le" === t || "be" === t) {
i = t;
t = 10;
}
this._init(e || 0, t || 10, i || "be");
}
}
"object" == typeof e ? e.exports = p : t.BN = p;
(p.BN = p).wordSize = 26;
var n;
try {
n = N("buffer").Buffer;
} catch (e) {}
p.isBN = function(e) {
return e instanceof p || null !== e && "object" == typeof e && e.constructor.wordSize === p.wordSize && Array.isArray(e.words);
};
p.max = function(e, t) {
return 0 < e.cmp(t) ? e : t;
};
p.min = function(e, t) {
return e.cmp(t) < 0 ? e : t;
};
p.prototype._init = function(e, t, i) {
if ("number" == typeof e) return this._initNumber(e, t, i);
if ("object" == typeof e) return this._initArray(e, t, i);
"hex" === t && (t = 16);
f(t === (0 | t) && 2 <= t && t <= 36);
var n = 0;
"-" === (e = e.toString().replace(/\s+/g, ""))[0] && n++;
16 === t ? this._parseHex(e, n) : this._parseBase(e, t, n);
"-" === e[0] && (this.negative = 1);
this.strip();
"le" === i && this._initArray(this.toArray(), t, i);
};
p.prototype._initNumber = function(e, t, i) {
if (e < 0) {
this.negative = 1;
e = -e;
}
if (e < 67108864) {
this.words = [ 67108863 & e ];
this.length = 1;
} else if (e < 4503599627370496) {
this.words = [ 67108863 & e, e / 67108864 & 67108863 ];
this.length = 2;
} else {
f(e < 9007199254740992);
this.words = [ 67108863 & e, e / 67108864 & 67108863, 1 ];
this.length = 3;
}
"le" === i && this._initArray(this.toArray(), t, i);
};
p.prototype._initArray = function(e, t, i) {
f("number" == typeof e.length);
if (e.length <= 0) {
this.words = [ 0 ];
this.length = 1;
return this;
}
this.length = Math.ceil(e.length / 3);
this.words = new Array(this.length);
for (var n = 0; n < this.length; n++) this.words[n] = 0;
var a, s, c = 0;
if ("be" === i) for (n = e.length - 1, a = 0; 0 <= n; n -= 3) {
s = e[n] | e[n - 1] << 8 | e[n - 2] << 16;
this.words[a] |= s << c & 67108863;
this.words[a + 1] = s >>> 26 - c & 67108863;
if (26 <= (c += 24)) {
c -= 26;
a++;
}
} else if ("le" === i) for (a = n = 0; n < e.length; n += 3) {
s = e[n] | e[n + 1] << 8 | e[n + 2] << 16;
this.words[a] |= s << c & 67108863;
this.words[a + 1] = s >>> 26 - c & 67108863;
if (26 <= (c += 24)) {
c -= 26;
a++;
}
}
return this.strip();
};
function c(e, t, i) {
for (var n = 0, a = Math.min(e.length, i), s = t; s < a; s++) {
var c = e.charCodeAt(s) - 48;
n <<= 4;
n |= 49 <= c && c <= 54 ? c - 49 + 10 : 17 <= c && c <= 22 ? c - 17 + 10 : 15 & c;
}
return n;
}
p.prototype._parseHex = function(e, t) {
this.length = Math.ceil((e.length - t) / 6);
this.words = new Array(this.length);
for (var i = 0; i < this.length; i++) this.words[i] = 0;
var n, a, s = 0;
for (i = e.length - 6, n = 0; t <= i; i -= 6) {
a = c(e, i, i + 6);
this.words[n] |= a << s & 67108863;
this.words[n + 1] |= a >>> 26 - s & 4194303;
if (26 <= (s += 24)) {
s -= 26;
n++;
}
}
if (i + 6 !== t) {
a = c(e, t, i + 6);
this.words[n] |= a << s & 67108863;
this.words[n + 1] |= a >>> 26 - s & 4194303;
}
this.strip();
};
function d(e, t, i, n) {
for (var a = 0, s = Math.min(e.length, i), c = t; c < s; c++) {
var r = e.charCodeAt(c) - 48;
a *= n;
a += 49 <= r ? r - 49 + 10 : 17 <= r ? r - 17 + 10 : r;
}
return a;
}
p.prototype._parseBase = function(e, t, i) {
this.words = [ 0 ];
for (var n = 0, a = this.length = 1; a <= 67108863; a *= t) n++;
n--;
a = a / t | 0;
for (var s = e.length - i, c = s % n, r = Math.min(s, s - c) + i, o = 0, h = i; h < r; h += n) {
o = d(e, h, h + n, t);
this.imuln(a);
this.words[0] + o < 67108864 ? this.words[0] += o : this._iaddn(o);
}
if (0 !== c) {
var l = 1;
o = d(e, h, e.length, t);
for (h = 0; h < c; h++) l *= t;
this.imuln(l);
this.words[0] + o < 67108864 ? this.words[0] += o : this._iaddn(o);
}
};
p.prototype.copy = function(e) {
e.words = new Array(this.length);
for (var t = 0; t < this.length; t++) e.words[t] = this.words[t];
e.length = this.length;
e.negative = this.negative;
e.red = this.red;
};
p.prototype.clone = function() {
var e = new p(null);
this.copy(e);
return e;
};
p.prototype._expand = function(e) {
for (;this.length < e; ) this.words[this.length++] = 0;
return this;
};
p.prototype.strip = function() {
for (;1 < this.length && 0 === this.words[this.length - 1]; ) this.length--;
return this._normSign();
};
p.prototype._normSign = function() {
1 === this.length && 0 === this.words[0] && (this.negative = 0);
return this;
};
p.prototype.inspect = function() {
return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
};
var u = [ "", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000" ], v = [ 0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ], g = [ 0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176 ];
p.prototype.toString = function(e, t) {
t = 0 | t || 1;
var i;
if (16 === (e = e || 10) || "hex" === e) {
i = "";
for (var n = 0, a = 0, s = 0; s < this.length; s++) {
var c = this.words[s], r = (16777215 & (c << n | a)).toString(16);
i = 0 !== (a = c >>> 24 - n & 16777215) || s !== this.length - 1 ? u[6 - r.length] + r + i : r + i;
if (26 <= (n += 2)) {
n -= 26;
s--;
}
}
0 !== a && (i = a.toString(16) + i);
for (;i.length % t != 0; ) i = "0" + i;
0 !== this.negative && (i = "-" + i);
return i;
}
if (e === (0 | e) && 2 <= e && e <= 36) {
var o = v[e], h = g[e];
i = "";
var l = this.clone();
l.negative = 0;
for (;!l.isZero(); ) {
var d = l.modn(h).toString(e);
i = (l = l.idivn(h)).isZero() ? d + i : u[o - d.length] + d + i;
}
this.isZero() && (i = "0" + i);
for (;i.length % t != 0; ) i = "0" + i;
0 !== this.negative && (i = "-" + i);
return i;
}
f(!1, "Base should be between 2 and 36");
};
p.prototype.toNumber = function() {
var e = this.words[0];
2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : 2 < this.length && f(!1, "Number can only safely store up to 53 bits");
return 0 !== this.negative ? -e : e;
};
p.prototype.toJSON = function() {
return this.toString(16);
};
p.prototype.toBuffer = function(e, t) {
f("undefined" != typeof n);
return this.toArrayLike(n, e, t);
};
p.prototype.toArray = function(e, t) {
return this.toArrayLike(Array, e, t);
};
p.prototype.toArrayLike = function(e, t, i) {
var n = this.byteLength(), a = i || Math.max(1, n);
f(n <= a, "byte array longer than desired length");
f(0 < a, "Requested array length <= 0");
this.strip();
var s, c, r = "le" === t, o = new e(a), h = this.clone();
if (r) {
for (c = 0; !h.isZero(); c++) {
s = h.andln(255);
h.iushrn(8);
o[c] = s;
}
for (;c < a; c++) o[c] = 0;
} else {
for (c = 0; c < a - n; c++) o[c] = 0;
for (c = 0; !h.isZero(); c++) {
s = h.andln(255);
h.iushrn(8);
o[a - c - 1] = s;
}
}
return o;
};
p.prototype._countBits = Math.clz32 ? function(e) {
return 32 - Math.clz32(e);
} : function(e) {
var t = e, i = 0;
if (4096 <= t) {
i += 13;
t >>>= 13;
}
if (64 <= t) {
i += 7;
t >>>= 7;
}
if (8 <= t) {
i += 4;
t >>>= 4;
}
if (2 <= t) {
i += 2;
t >>>= 2;
}
return i + t;
};
p.prototype._zeroBits = function(e) {
if (0 === e) return 26;
var t = e, i = 0;
if (0 == (8191 & t)) {
i += 13;
t >>>= 13;
}
if (0 == (127 & t)) {
i += 7;
t >>>= 7;
}
if (0 == (15 & t)) {
i += 4;
t >>>= 4;
}
if (0 == (3 & t)) {
i += 2;
t >>>= 2;
}
0 == (1 & t) && i++;
return i;
};
p.prototype.bitLength = function() {
var e = this.words[this.length - 1], t = this._countBits(e);
return 26 * (this.length - 1) + t;
};
p.prototype.zeroBits = function() {
if (this.isZero()) return 0;
for (var e = 0, t = 0; t < this.length; t++) {
var i = this._zeroBits(this.words[t]);
e += i;
if (26 !== i) break;
}
return e;
};
p.prototype.byteLength = function() {
return Math.ceil(this.bitLength() / 8);
};
p.prototype.toTwos = function(e) {
return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone();
};
p.prototype.fromTwos = function(e) {
return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone();
};
p.prototype.isNeg = function() {
return 0 !== this.negative;
};
p.prototype.neg = function() {
return this.clone().ineg();
};
p.prototype.ineg = function() {
this.isZero() || (this.negative ^= 1);
return this;
};
p.prototype.iuor = function(e) {
for (;this.length < e.length; ) this.words[this.length++] = 0;
for (var t = 0; t < e.length; t++) this.words[t] = this.words[t] | e.words[t];
return this.strip();
};
p.prototype.ior = function(e) {
f(0 == (this.negative | e.negative));
return this.iuor(e);
};
p.prototype.or = function(e) {
return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this);
};
p.prototype.uor = function(e) {
return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this);
};
p.prototype.iuand = function(e) {
var t;
t = this.length > e.length ? e : this;
for (var i = 0; i < t.length; i++) this.words[i] = this.words[i] & e.words[i];
this.length = t.length;
return this.strip();
};
p.prototype.iand = function(e) {
f(0 == (this.negative | e.negative));
return this.iuand(e);
};
p.prototype.and = function(e) {
return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this);
};
p.prototype.uand = function(e) {
return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this);
};
p.prototype.iuxor = function(e) {
var t, i;
if (this.length > e.length) {
t = this;
i = e;
} else {
t = e;
i = this;
}
for (var n = 0; n < i.length; n++) this.words[n] = t.words[n] ^ i.words[n];
if (this !== t) for (;n < t.length; n++) this.words[n] = t.words[n];
this.length = t.length;
return this.strip();
};
p.prototype.ixor = function(e) {
f(0 == (this.negative | e.negative));
return this.iuxor(e);
};
p.prototype.xor = function(e) {
return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this);
};
p.prototype.uxor = function(e) {
return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this);
};
p.prototype.inotn = function(e) {
f("number" == typeof e && 0 <= e);
var t = 0 | Math.ceil(e / 26), i = e % 26;
this._expand(t);
0 < i && t--;
for (var n = 0; n < t; n++) this.words[n] = 67108863 & ~this.words[n];
0 < i && (this.words[n] = ~this.words[n] & 67108863 >> 26 - i);
return this.strip();
};
p.prototype.notn = function(e) {
return this.clone().inotn(e);
};
p.prototype.setn = function(e, t) {
f("number" == typeof e && 0 <= e);
var i = e / 26 | 0, n = e % 26;
this._expand(i + 1);
this.words[i] = t ? this.words[i] | 1 << n : this.words[i] & ~(1 << n);
return this.strip();
};
p.prototype.iadd = function(e) {
var t, i, n;
if (0 !== this.negative && 0 === e.negative) {
this.negative = 0;
t = this.isub(e);
this.negative ^= 1;
return this._normSign();
}
if (0 === this.negative && 0 !== e.negative) {
e.negative = 0;
t = this.isub(e);
e.negative = 1;
return t._normSign();
}
if (this.length > e.length) {
i = this;
n = e;
} else {
i = e;
n = this;
}
for (var a = 0, s = 0; s < n.length; s++) {
t = (0 | i.words[s]) + (0 | n.words[s]) + a;
this.words[s] = 67108863 & t;
a = t >>> 26;
}
for (;0 !== a && s < i.length; s++) {
t = (0 | i.words[s]) + a;
this.words[s] = 67108863 & t;
a = t >>> 26;
}
this.length = i.length;
if (0 !== a) {
this.words[this.length] = a;
this.length++;
} else if (i !== this) for (;s < i.length; s++) this.words[s] = i.words[s];
return this;
};
p.prototype.add = function(e) {
var t;
if (0 !== e.negative && 0 === this.negative) {
e.negative = 0;
t = this.sub(e);
e.negative ^= 1;
return t;
}
if (0 === e.negative && 0 !== this.negative) {
this.negative = 0;
t = e.sub(this);
this.negative = 1;
return t;
}
return this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this);
};
p.prototype.isub = function(e) {
if (0 !== e.negative) {
e.negative = 0;
var t = this.iadd(e);
e.negative = 1;
return t._normSign();
}
if (0 !== this.negative) {
this.negative = 0;
this.iadd(e);
this.negative = 1;
return this._normSign();
}
var i, n, a = this.cmp(e);
if (0 === a) {
this.negative = 0;
this.length = 1;
this.words[0] = 0;
return this;
}
if (0 < a) {
i = this;
n = e;
} else {
i = e;
n = this;
}
for (var s = 0, c = 0; c < n.length; c++) {
s = (t = (0 | i.words[c]) - (0 | n.words[c]) + s) >> 26;
this.words[c] = 67108863 & t;
}
for (;0 !== s && c < i.length; c++) {
s = (t = (0 | i.words[c]) + s) >> 26;
this.words[c] = 67108863 & t;
}
if (0 === s && c < i.length && i !== this) for (;c < i.length; c++) this.words[c] = i.words[c];
this.length = Math.max(this.length, c);
i !== this && (this.negative = 1);
return this.strip();
};
p.prototype.sub = function(e) {
return this.clone().isub(e);
};
function a(e, t, i) {
i.negative = t.negative ^ e.negative;
var n = e.length + t.length | 0;
n = (i.length = n) - 1 | 0;
var a = 0 | e.words[0], s = 0 | t.words[0], c = a * s, r = 67108863 & c, o = c / 67108864 | 0;
i.words[0] = r;
for (var h = 1; h < n; h++) {
for (var l = o >>> 26, d = 67108863 & o, u = Math.min(h, t.length - 1), v = Math.max(0, h - e.length + 1); v <= u; v++) {
var g = h - v | 0;
l += (c = (a = 0 | e.words[g]) * (s = 0 | t.words[v]) + d) / 67108864 | 0;
d = 67108863 & c;
}
i.words[h] = 0 | d;
o = 0 | l;
}
0 !== o ? i.words[h] = 0 | o : i.length--;
return i.strip();
}
var s = function(e, t, i) {
var n, a, s, c = e.words, r = t.words, o = i.words, h = 0, l = 0 | c[0], d = 8191 & l, u = l >>> 13, v = 0 | c[1], g = 8191 & v, _ = v >>> 13, f = 0 | c[2], p = 8191 & f, m = f >>> 13, C = 0 | c[3], y = 8191 & C, b = C >>> 13, M = 0 | c[4], N = 8191 & M, S = M >>> 13, A = 0 | c[5], I = 8191 & A, E = A >>> 13, B = 0 | c[6], w = 8191 & B, k = B >>> 13, T = 0 | c[7], L = 8191 & T, O = T >>> 13, x = 0 | c[8], R = 8191 & x, P = x >>> 13, D = 0 | c[9], H = 8191 & D, G = D >>> 13, j = 0 | r[0], F = 8191 & j, U = j >>> 13, z = 0 | r[1], J = 8191 & z, K = z >>> 13, V = 0 | r[2], Y = 8191 & V, W = V >>> 13, Z = 0 | r[3], q = 8191 & Z, X = Z >>> 13, Q = 0 | r[4], $ = 8191 & Q, ee = Q >>> 13, te = 0 | r[5], ie = 8191 & te, ne = te >>> 13, ae = 0 | r[6], se = 8191 & ae, ce = ae >>> 13, re = 0 | r[7], oe = 8191 & re, he = re >>> 13, le = 0 | r[8], de = 8191 & le, ue = le >>> 13, ve = 0 | r[9], ge = 8191 & ve, _e = ve >>> 13;
i.negative = e.negative ^ t.negative;
i.length = 19;
var fe = (h + (n = Math.imul(d, F)) | 0) + ((8191 & (a = (a = Math.imul(d, U)) + Math.imul(u, F) | 0)) << 13) | 0;
h = ((s = Math.imul(u, U)) + (a >>> 13) | 0) + (fe >>> 26) | 0;
fe &= 67108863;
n = Math.imul(g, F);
a = (a = Math.imul(g, U)) + Math.imul(_, F) | 0;
s = Math.imul(_, U);
var pe = (h + (n = n + Math.imul(d, J) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, K) | 0) + Math.imul(u, J) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, K) | 0) + (a >>> 13) | 0) + (pe >>> 26) | 0;
pe &= 67108863;
n = Math.imul(p, F);
a = (a = Math.imul(p, U)) + Math.imul(m, F) | 0;
s = Math.imul(m, U);
n = n + Math.imul(g, J) | 0;
a = (a = a + Math.imul(g, K) | 0) + Math.imul(_, J) | 0;
s = s + Math.imul(_, K) | 0;
var me = (h + (n = n + Math.imul(d, Y) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, W) | 0) + Math.imul(u, Y) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, W) | 0) + (a >>> 13) | 0) + (me >>> 26) | 0;
me &= 67108863;
n = Math.imul(y, F);
a = (a = Math.imul(y, U)) + Math.imul(b, F) | 0;
s = Math.imul(b, U);
n = n + Math.imul(p, J) | 0;
a = (a = a + Math.imul(p, K) | 0) + Math.imul(m, J) | 0;
s = s + Math.imul(m, K) | 0;
n = n + Math.imul(g, Y) | 0;
a = (a = a + Math.imul(g, W) | 0) + Math.imul(_, Y) | 0;
s = s + Math.imul(_, W) | 0;
var Ce = (h + (n = n + Math.imul(d, q) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, X) | 0) + Math.imul(u, q) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, X) | 0) + (a >>> 13) | 0) + (Ce >>> 26) | 0;
Ce &= 67108863;
n = Math.imul(N, F);
a = (a = Math.imul(N, U)) + Math.imul(S, F) | 0;
s = Math.imul(S, U);
n = n + Math.imul(y, J) | 0;
a = (a = a + Math.imul(y, K) | 0) + Math.imul(b, J) | 0;
s = s + Math.imul(b, K) | 0;
n = n + Math.imul(p, Y) | 0;
a = (a = a + Math.imul(p, W) | 0) + Math.imul(m, Y) | 0;
s = s + Math.imul(m, W) | 0;
n = n + Math.imul(g, q) | 0;
a = (a = a + Math.imul(g, X) | 0) + Math.imul(_, q) | 0;
s = s + Math.imul(_, X) | 0;
var ye = (h + (n = n + Math.imul(d, $) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, ee) | 0) + Math.imul(u, $) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, ee) | 0) + (a >>> 13) | 0) + (ye >>> 26) | 0;
ye &= 67108863;
n = Math.imul(I, F);
a = (a = Math.imul(I, U)) + Math.imul(E, F) | 0;
s = Math.imul(E, U);
n = n + Math.imul(N, J) | 0;
a = (a = a + Math.imul(N, K) | 0) + Math.imul(S, J) | 0;
s = s + Math.imul(S, K) | 0;
n = n + Math.imul(y, Y) | 0;
a = (a = a + Math.imul(y, W) | 0) + Math.imul(b, Y) | 0;
s = s + Math.imul(b, W) | 0;
n = n + Math.imul(p, q) | 0;
a = (a = a + Math.imul(p, X) | 0) + Math.imul(m, q) | 0;
s = s + Math.imul(m, X) | 0;
n = n + Math.imul(g, $) | 0;
a = (a = a + Math.imul(g, ee) | 0) + Math.imul(_, $) | 0;
s = s + Math.imul(_, ee) | 0;
var be = (h + (n = n + Math.imul(d, ie) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, ne) | 0) + Math.imul(u, ie) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, ne) | 0) + (a >>> 13) | 0) + (be >>> 26) | 0;
be &= 67108863;
n = Math.imul(w, F);
a = (a = Math.imul(w, U)) + Math.imul(k, F) | 0;
s = Math.imul(k, U);
n = n + Math.imul(I, J) | 0;
a = (a = a + Math.imul(I, K) | 0) + Math.imul(E, J) | 0;
s = s + Math.imul(E, K) | 0;
n = n + Math.imul(N, Y) | 0;
a = (a = a + Math.imul(N, W) | 0) + Math.imul(S, Y) | 0;
s = s + Math.imul(S, W) | 0;
n = n + Math.imul(y, q) | 0;
a = (a = a + Math.imul(y, X) | 0) + Math.imul(b, q) | 0;
s = s + Math.imul(b, X) | 0;
n = n + Math.imul(p, $) | 0;
a = (a = a + Math.imul(p, ee) | 0) + Math.imul(m, $) | 0;
s = s + Math.imul(m, ee) | 0;
n = n + Math.imul(g, ie) | 0;
a = (a = a + Math.imul(g, ne) | 0) + Math.imul(_, ie) | 0;
s = s + Math.imul(_, ne) | 0;
var Me = (h + (n = n + Math.imul(d, se) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, ce) | 0) + Math.imul(u, se) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, ce) | 0) + (a >>> 13) | 0) + (Me >>> 26) | 0;
Me &= 67108863;
n = Math.imul(L, F);
a = (a = Math.imul(L, U)) + Math.imul(O, F) | 0;
s = Math.imul(O, U);
n = n + Math.imul(w, J) | 0;
a = (a = a + Math.imul(w, K) | 0) + Math.imul(k, J) | 0;
s = s + Math.imul(k, K) | 0;
n = n + Math.imul(I, Y) | 0;
a = (a = a + Math.imul(I, W) | 0) + Math.imul(E, Y) | 0;
s = s + Math.imul(E, W) | 0;
n = n + Math.imul(N, q) | 0;
a = (a = a + Math.imul(N, X) | 0) + Math.imul(S, q) | 0;
s = s + Math.imul(S, X) | 0;
n = n + Math.imul(y, $) | 0;
a = (a = a + Math.imul(y, ee) | 0) + Math.imul(b, $) | 0;
s = s + Math.imul(b, ee) | 0;
n = n + Math.imul(p, ie) | 0;
a = (a = a + Math.imul(p, ne) | 0) + Math.imul(m, ie) | 0;
s = s + Math.imul(m, ne) | 0;
n = n + Math.imul(g, se) | 0;
a = (a = a + Math.imul(g, ce) | 0) + Math.imul(_, se) | 0;
s = s + Math.imul(_, ce) | 0;
var Ne = (h + (n = n + Math.imul(d, oe) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, he) | 0) + Math.imul(u, oe) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, he) | 0) + (a >>> 13) | 0) + (Ne >>> 26) | 0;
Ne &= 67108863;
n = Math.imul(R, F);
a = (a = Math.imul(R, U)) + Math.imul(P, F) | 0;
s = Math.imul(P, U);
n = n + Math.imul(L, J) | 0;
a = (a = a + Math.imul(L, K) | 0) + Math.imul(O, J) | 0;
s = s + Math.imul(O, K) | 0;
n = n + Math.imul(w, Y) | 0;
a = (a = a + Math.imul(w, W) | 0) + Math.imul(k, Y) | 0;
s = s + Math.imul(k, W) | 0;
n = n + Math.imul(I, q) | 0;
a = (a = a + Math.imul(I, X) | 0) + Math.imul(E, q) | 0;
s = s + Math.imul(E, X) | 0;
n = n + Math.imul(N, $) | 0;
a = (a = a + Math.imul(N, ee) | 0) + Math.imul(S, $) | 0;
s = s + Math.imul(S, ee) | 0;
n = n + Math.imul(y, ie) | 0;
a = (a = a + Math.imul(y, ne) | 0) + Math.imul(b, ie) | 0;
s = s + Math.imul(b, ne) | 0;
n = n + Math.imul(p, se) | 0;
a = (a = a + Math.imul(p, ce) | 0) + Math.imul(m, se) | 0;
s = s + Math.imul(m, ce) | 0;
n = n + Math.imul(g, oe) | 0;
a = (a = a + Math.imul(g, he) | 0) + Math.imul(_, oe) | 0;
s = s + Math.imul(_, he) | 0;
var Se = (h + (n = n + Math.imul(d, de) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, ue) | 0) + Math.imul(u, de) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, ue) | 0) + (a >>> 13) | 0) + (Se >>> 26) | 0;
Se &= 67108863;
n = Math.imul(H, F);
a = (a = Math.imul(H, U)) + Math.imul(G, F) | 0;
s = Math.imul(G, U);
n = n + Math.imul(R, J) | 0;
a = (a = a + Math.imul(R, K) | 0) + Math.imul(P, J) | 0;
s = s + Math.imul(P, K) | 0;
n = n + Math.imul(L, Y) | 0;
a = (a = a + Math.imul(L, W) | 0) + Math.imul(O, Y) | 0;
s = s + Math.imul(O, W) | 0;
n = n + Math.imul(w, q) | 0;
a = (a = a + Math.imul(w, X) | 0) + Math.imul(k, q) | 0;
s = s + Math.imul(k, X) | 0;
n = n + Math.imul(I, $) | 0;
a = (a = a + Math.imul(I, ee) | 0) + Math.imul(E, $) | 0;
s = s + Math.imul(E, ee) | 0;
n = n + Math.imul(N, ie) | 0;
a = (a = a + Math.imul(N, ne) | 0) + Math.imul(S, ie) | 0;
s = s + Math.imul(S, ne) | 0;
n = n + Math.imul(y, se) | 0;
a = (a = a + Math.imul(y, ce) | 0) + Math.imul(b, se) | 0;
s = s + Math.imul(b, ce) | 0;
n = n + Math.imul(p, oe) | 0;
a = (a = a + Math.imul(p, he) | 0) + Math.imul(m, oe) | 0;
s = s + Math.imul(m, he) | 0;
n = n + Math.imul(g, de) | 0;
a = (a = a + Math.imul(g, ue) | 0) + Math.imul(_, de) | 0;
s = s + Math.imul(_, ue) | 0;
var Ae = (h + (n = n + Math.imul(d, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(d, _e) | 0) + Math.imul(u, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(u, _e) | 0) + (a >>> 13) | 0) + (Ae >>> 26) | 0;
Ae &= 67108863;
n = Math.imul(H, J);
a = (a = Math.imul(H, K)) + Math.imul(G, J) | 0;
s = Math.imul(G, K);
n = n + Math.imul(R, Y) | 0;
a = (a = a + Math.imul(R, W) | 0) + Math.imul(P, Y) | 0;
s = s + Math.imul(P, W) | 0;
n = n + Math.imul(L, q) | 0;
a = (a = a + Math.imul(L, X) | 0) + Math.imul(O, q) | 0;
s = s + Math.imul(O, X) | 0;
n = n + Math.imul(w, $) | 0;
a = (a = a + Math.imul(w, ee) | 0) + Math.imul(k, $) | 0;
s = s + Math.imul(k, ee) | 0;
n = n + Math.imul(I, ie) | 0;
a = (a = a + Math.imul(I, ne) | 0) + Math.imul(E, ie) | 0;
s = s + Math.imul(E, ne) | 0;
n = n + Math.imul(N, se) | 0;
a = (a = a + Math.imul(N, ce) | 0) + Math.imul(S, se) | 0;
s = s + Math.imul(S, ce) | 0;
n = n + Math.imul(y, oe) | 0;
a = (a = a + Math.imul(y, he) | 0) + Math.imul(b, oe) | 0;
s = s + Math.imul(b, he) | 0;
n = n + Math.imul(p, de) | 0;
a = (a = a + Math.imul(p, ue) | 0) + Math.imul(m, de) | 0;
s = s + Math.imul(m, ue) | 0;
var Ie = (h + (n = n + Math.imul(g, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(g, _e) | 0) + Math.imul(_, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(_, _e) | 0) + (a >>> 13) | 0) + (Ie >>> 26) | 0;
Ie &= 67108863;
n = Math.imul(H, Y);
a = (a = Math.imul(H, W)) + Math.imul(G, Y) | 0;
s = Math.imul(G, W);
n = n + Math.imul(R, q) | 0;
a = (a = a + Math.imul(R, X) | 0) + Math.imul(P, q) | 0;
s = s + Math.imul(P, X) | 0;
n = n + Math.imul(L, $) | 0;
a = (a = a + Math.imul(L, ee) | 0) + Math.imul(O, $) | 0;
s = s + Math.imul(O, ee) | 0;
n = n + Math.imul(w, ie) | 0;
a = (a = a + Math.imul(w, ne) | 0) + Math.imul(k, ie) | 0;
s = s + Math.imul(k, ne) | 0;
n = n + Math.imul(I, se) | 0;
a = (a = a + Math.imul(I, ce) | 0) + Math.imul(E, se) | 0;
s = s + Math.imul(E, ce) | 0;
n = n + Math.imul(N, oe) | 0;
a = (a = a + Math.imul(N, he) | 0) + Math.imul(S, oe) | 0;
s = s + Math.imul(S, he) | 0;
n = n + Math.imul(y, de) | 0;
a = (a = a + Math.imul(y, ue) | 0) + Math.imul(b, de) | 0;
s = s + Math.imul(b, ue) | 0;
var Ee = (h + (n = n + Math.imul(p, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(p, _e) | 0) + Math.imul(m, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(m, _e) | 0) + (a >>> 13) | 0) + (Ee >>> 26) | 0;
Ee &= 67108863;
n = Math.imul(H, q);
a = (a = Math.imul(H, X)) + Math.imul(G, q) | 0;
s = Math.imul(G, X);
n = n + Math.imul(R, $) | 0;
a = (a = a + Math.imul(R, ee) | 0) + Math.imul(P, $) | 0;
s = s + Math.imul(P, ee) | 0;
n = n + Math.imul(L, ie) | 0;
a = (a = a + Math.imul(L, ne) | 0) + Math.imul(O, ie) | 0;
s = s + Math.imul(O, ne) | 0;
n = n + Math.imul(w, se) | 0;
a = (a = a + Math.imul(w, ce) | 0) + Math.imul(k, se) | 0;
s = s + Math.imul(k, ce) | 0;
n = n + Math.imul(I, oe) | 0;
a = (a = a + Math.imul(I, he) | 0) + Math.imul(E, oe) | 0;
s = s + Math.imul(E, he) | 0;
n = n + Math.imul(N, de) | 0;
a = (a = a + Math.imul(N, ue) | 0) + Math.imul(S, de) | 0;
s = s + Math.imul(S, ue) | 0;
var Be = (h + (n = n + Math.imul(y, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(y, _e) | 0) + Math.imul(b, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(b, _e) | 0) + (a >>> 13) | 0) + (Be >>> 26) | 0;
Be &= 67108863;
n = Math.imul(H, $);
a = (a = Math.imul(H, ee)) + Math.imul(G, $) | 0;
s = Math.imul(G, ee);
n = n + Math.imul(R, ie) | 0;
a = (a = a + Math.imul(R, ne) | 0) + Math.imul(P, ie) | 0;
s = s + Math.imul(P, ne) | 0;
n = n + Math.imul(L, se) | 0;
a = (a = a + Math.imul(L, ce) | 0) + Math.imul(O, se) | 0;
s = s + Math.imul(O, ce) | 0;
n = n + Math.imul(w, oe) | 0;
a = (a = a + Math.imul(w, he) | 0) + Math.imul(k, oe) | 0;
s = s + Math.imul(k, he) | 0;
n = n + Math.imul(I, de) | 0;
a = (a = a + Math.imul(I, ue) | 0) + Math.imul(E, de) | 0;
s = s + Math.imul(E, ue) | 0;
var we = (h + (n = n + Math.imul(N, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(N, _e) | 0) + Math.imul(S, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(S, _e) | 0) + (a >>> 13) | 0) + (we >>> 26) | 0;
we &= 67108863;
n = Math.imul(H, ie);
a = (a = Math.imul(H, ne)) + Math.imul(G, ie) | 0;
s = Math.imul(G, ne);
n = n + Math.imul(R, se) | 0;
a = (a = a + Math.imul(R, ce) | 0) + Math.imul(P, se) | 0;
s = s + Math.imul(P, ce) | 0;
n = n + Math.imul(L, oe) | 0;
a = (a = a + Math.imul(L, he) | 0) + Math.imul(O, oe) | 0;
s = s + Math.imul(O, he) | 0;
n = n + Math.imul(w, de) | 0;
a = (a = a + Math.imul(w, ue) | 0) + Math.imul(k, de) | 0;
s = s + Math.imul(k, ue) | 0;
var ke = (h + (n = n + Math.imul(I, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(I, _e) | 0) + Math.imul(E, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(E, _e) | 0) + (a >>> 13) | 0) + (ke >>> 26) | 0;
ke &= 67108863;
n = Math.imul(H, se);
a = (a = Math.imul(H, ce)) + Math.imul(G, se) | 0;
s = Math.imul(G, ce);
n = n + Math.imul(R, oe) | 0;
a = (a = a + Math.imul(R, he) | 0) + Math.imul(P, oe) | 0;
s = s + Math.imul(P, he) | 0;
n = n + Math.imul(L, de) | 0;
a = (a = a + Math.imul(L, ue) | 0) + Math.imul(O, de) | 0;
s = s + Math.imul(O, ue) | 0;
var Te = (h + (n = n + Math.imul(w, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(w, _e) | 0) + Math.imul(k, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(k, _e) | 0) + (a >>> 13) | 0) + (Te >>> 26) | 0;
Te &= 67108863;
n = Math.imul(H, oe);
a = (a = Math.imul(H, he)) + Math.imul(G, oe) | 0;
s = Math.imul(G, he);
n = n + Math.imul(R, de) | 0;
a = (a = a + Math.imul(R, ue) | 0) + Math.imul(P, de) | 0;
s = s + Math.imul(P, ue) | 0;
var Le = (h + (n = n + Math.imul(L, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(L, _e) | 0) + Math.imul(O, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(O, _e) | 0) + (a >>> 13) | 0) + (Le >>> 26) | 0;
Le &= 67108863;
n = Math.imul(H, de);
a = (a = Math.imul(H, ue)) + Math.imul(G, de) | 0;
s = Math.imul(G, ue);
var Oe = (h + (n = n + Math.imul(R, ge) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(R, _e) | 0) + Math.imul(P, ge) | 0)) << 13) | 0;
h = ((s = s + Math.imul(P, _e) | 0) + (a >>> 13) | 0) + (Oe >>> 26) | 0;
Oe &= 67108863;
var xe = (h + (n = Math.imul(H, ge)) | 0) + ((8191 & (a = (a = Math.imul(H, _e)) + Math.imul(G, ge) | 0)) << 13) | 0;
h = ((s = Math.imul(G, _e)) + (a >>> 13) | 0) + (xe >>> 26) | 0;
xe &= 67108863;
o[0] = fe;
o[1] = pe;
o[2] = me;
o[3] = Ce;
o[4] = ye;
o[5] = be;
o[6] = Me;
o[7] = Ne;
o[8] = Se;
o[9] = Ae;
o[10] = Ie;
o[11] = Ee;
o[12] = Be;
o[13] = we;
o[14] = ke;
o[15] = Te;
o[16] = Le;
o[17] = Oe;
o[18] = xe;
if (0 !== h) {
o[19] = h;
i.length++;
}
return i;
};
Math.imul || (s = a);
function r(e, t, i) {
return new o().mulp(e, t, i);
}
p.prototype.mulTo = function(e, t) {
var i = this.length + e.length;
return 10 === this.length && 10 === e.length ? s(this, e, t) : i < 63 ? a(this, e, t) : i < 1024 ? function(e, t, i) {
i.negative = t.negative ^ e.negative;
i.length = e.length + t.length;
for (var n = 0, a = 0, s = 0; s < i.length - 1; s++) {
var c = a;
a = 0;
for (var r = 67108863 & n, o = Math.min(s, t.length - 1), h = Math.max(0, s - e.length + 1); h <= o; h++) {
var l = s - h, d = (0 | e.words[l]) * (0 | t.words[h]), u = 67108863 & d;
r = 67108863 & (u = u + r | 0);
a += (c = (c = c + (d / 67108864 | 0) | 0) + (u >>> 26) | 0) >>> 26;
c &= 67108863;
}
i.words[s] = r;
n = c;
c = a;
}
0 !== n ? i.words[s] = n : i.length--;
return i.strip();
}(this, e, t) : r(this, e, t);
};
function o(e, t) {
this.x = e;
this.y = t;
}
o.prototype.makeRBT = function(e) {
for (var t = new Array(e), i = p.prototype._countBits(e) - 1, n = 0; n < e; n++) t[n] = this.revBin(n, i, e);
return t;
};
o.prototype.revBin = function(e, t, i) {
if (0 === e || e === i - 1) return e;
for (var n = 0, a = 0; a < t; a++) {
n |= (1 & e) << t - a - 1;
e >>= 1;
}
return n;
};
o.prototype.permute = function(e, t, i, n, a, s) {
for (var c = 0; c < s; c++) {
n[c] = t[e[c]];
a[c] = i[e[c]];
}
};
o.prototype.transform = function(e, t, i, n, a, s) {
this.permute(s, e, t, i, n, a);
for (var c = 1; c < a; c <<= 1) for (var r = c << 1, o = Math.cos(2 * Math.PI / r), h = Math.sin(2 * Math.PI / r), l = 0; l < a; l += r) for (var d = o, u = h, v = 0; v < c; v++) {
var g = i[l + v], _ = n[l + v], f = i[l + v + c], p = n[l + v + c], m = d * f - u * p;
p = d * p + u * f;
f = m;
i[l + v] = g + f;
n[l + v] = _ + p;
i[l + v + c] = g - f;
n[l + v + c] = _ - p;
if (v !== r) {
m = o * d - h * u;
u = o * u + h * d;
d = m;
}
}
};
o.prototype.guessLen13b = function(e, t) {
var i = 1 | Math.max(t, e), n = 1 & i, a = 0;
for (i = i / 2 | 0; i; i >>>= 1) a++;
return 1 << a + 1 + n;
};
o.prototype.conjugate = function(e, t, i) {
if (!(i <= 1)) for (var n = 0; n < i / 2; n++) {
var a = e[n];
e[n] = e[i - n - 1];
e[i - n - 1] = a;
a = t[n];
t[n] = -t[i - n - 1];
t[i - n - 1] = -a;
}
};
o.prototype.normalize13b = function(e, t) {
for (var i = 0, n = 0; n < t / 2; n++) {
var a = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + i;
e[n] = 67108863 & a;
i = a < 67108864 ? 0 : a / 67108864 | 0;
}
return e;
};
o.prototype.convert13b = function(e, t, i, n) {
for (var a = 0, s = 0; s < t; s++) {
a += 0 | e[s];
i[2 * s] = 8191 & a;
a >>>= 13;
i[2 * s + 1] = 8191 & a;
a >>>= 13;
}
for (s = 2 * t; s < n; ++s) i[s] = 0;
f(0 === a);
f(0 == (-8192 & a));
};
o.prototype.stub = function(e) {
for (var t = new Array(e), i = 0; i < e; i++) t[i] = 0;
return t;
};
o.prototype.mulp = function(e, t, i) {
var n = 2 * this.guessLen13b(e.length, t.length), a = this.makeRBT(n), s = this.stub(n), c = new Array(n), r = new Array(n), o = new Array(n), h = new Array(n), l = new Array(n), d = new Array(n), u = i.words;
u.length = n;
this.convert13b(e.words, e.length, c, n);
this.convert13b(t.words, t.length, h, n);
this.transform(c, s, r, o, n, a);
this.transform(h, s, l, d, n, a);
for (var v = 0; v < n; v++) {
var g = r[v] * l[v] - o[v] * d[v];
o[v] = r[v] * d[v] + o[v] * l[v];
r[v] = g;
}
this.conjugate(r, o, n);
this.transform(r, o, u, s, n, a);
this.conjugate(u, s, n);
this.normalize13b(u, n);
i.negative = e.negative ^ t.negative;
i.length = e.length + t.length;
return i.strip();
};
p.prototype.mul = function(e) {
var t = new p(null);
t.words = new Array(this.length + e.length);
return this.mulTo(e, t);
};
p.prototype.mulf = function(e) {
var t = new p(null);
t.words = new Array(this.length + e.length);
return r(this, e, t);
};
p.prototype.imul = function(e) {
return this.clone().mulTo(e, this);
};
p.prototype.imuln = function(e) {
f("number" == typeof e);
f(e < 67108864);
for (var t = 0, i = 0; i < this.length; i++) {
var n = (0 | this.words[i]) * e, a = (67108863 & n) + (67108863 & t);
t >>= 26;
t += n / 67108864 | 0;
t += a >>> 26;
this.words[i] = 67108863 & a;
}
if (0 !== t) {
this.words[i] = t;
this.length++;
}
return this;
};
p.prototype.muln = function(e) {
return this.clone().imuln(e);
};
p.prototype.sqr = function() {
return this.mul(this);
};
p.prototype.isqr = function() {
return this.imul(this.clone());
};
p.prototype.pow = function(e) {
var t = function(e) {
for (var t = new Array(e.bitLength()), i = 0; i < t.length; i++) {
var n = i / 26 | 0, a = i % 26;
t[i] = (e.words[n] & 1 << a) >>> a;
}
return t;
}(e);
if (0 === t.length) return new p(1);
for (var i = this, n = 0; n < t.length && 0 === t[n]; n++, i = i.sqr()) ;
if (++n < t.length) for (var a = i.sqr(); n < t.length; n++, a = a.sqr()) 0 !== t[n] && (i = i.mul(a));
return i;
};
p.prototype.iushln = function(e) {
f("number" == typeof e && 0 <= e);
var t, i = e % 26, n = (e - i) / 26, a = 67108863 >>> 26 - i << 26 - i;
if (0 !== i) {
var s = 0;
for (t = 0; t < this.length; t++) {
var c = this.words[t] & a, r = (0 | this.words[t]) - c << i;
this.words[t] = r | s;
s = c >>> 26 - i;
}
if (s) {
this.words[t] = s;
this.length++;
}
}
if (0 !== n) {
for (t = this.length - 1; 0 <= t; t--) this.words[t + n] = this.words[t];
for (t = 0; t < n; t++) this.words[t] = 0;
this.length += n;
}
return this.strip();
};
p.prototype.ishln = function(e) {
f(0 === this.negative);
return this.iushln(e);
};
p.prototype.iushrn = function(e, t, i) {
f("number" == typeof e && 0 <= e);
var n;
n = t ? (t - t % 26) / 26 : 0;
var a = e % 26, s = Math.min((e - a) / 26, this.length), c = 67108863 ^ 67108863 >>> a << a, r = i;
n -= s;
n = Math.max(0, n);
if (r) {
for (var o = 0; o < s; o++) r.words[o] = this.words[o];
r.length = s;
}
if (0 === s) ; else if (this.length > s) {
this.length -= s;
for (o = 0; o < this.length; o++) this.words[o] = this.words[o + s];
} else {
this.words[0] = 0;
this.length = 1;
}
var h = 0;
for (o = this.length - 1; 0 <= o && (0 !== h || n <= o); o--) {
var l = 0 | this.words[o];
this.words[o] = h << 26 - a | l >>> a;
h = l & c;
}
r && 0 !== h && (r.words[r.length++] = h);
if (0 === this.length) {
this.words[0] = 0;
this.length = 1;
}
return this.strip();
};
p.prototype.ishrn = function(e, t, i) {
f(0 === this.negative);
return this.iushrn(e, t, i);
};
p.prototype.shln = function(e) {
return this.clone().ishln(e);
};
p.prototype.ushln = function(e) {
return this.clone().iushln(e);
};
p.prototype.shrn = function(e) {
return this.clone().ishrn(e);
};
p.prototype.ushrn = function(e) {
return this.clone().iushrn(e);
};
p.prototype.testn = function(e) {
f("number" == typeof e && 0 <= e);
var t = e % 26, i = (e - t) / 26, n = 1 << t;
return !(this.length <= i) && !!(this.words[i] & n);
};
p.prototype.imaskn = function(e) {
f("number" == typeof e && 0 <= e);
var t = e % 26, i = (e - t) / 26;
f(0 === this.negative, "imaskn works only with positive numbers");
if (this.length <= i) return this;
0 !== t && i++;
this.length = Math.min(i, this.length);
if (0 !== t) {
var n = 67108863 ^ 67108863 >>> t << t;
this.words[this.length - 1] &= n;
}
return this.strip();
};
p.prototype.maskn = function(e) {
return this.clone().imaskn(e);
};
p.prototype.iaddn = function(e) {
f("number" == typeof e);
f(e < 67108864);
if (e < 0) return this.isubn(-e);
if (0 !== this.negative) {
if (1 === this.length && (0 | this.words[0]) < e) {
this.words[0] = e - (0 | this.words[0]);
this.negative = 0;
return this;
}
this.negative = 0;
this.isubn(e);
this.negative = 1;
return this;
}
return this._iaddn(e);
};
p.prototype._iaddn = function(e) {
this.words[0] += e;
for (var t = 0; t < this.length && 67108864 <= this.words[t]; t++) {
this.words[t] -= 67108864;
t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
}
this.length = Math.max(this.length, t + 1);
return this;
};
p.prototype.isubn = function(e) {
f("number" == typeof e);
f(e < 67108864);
if (e < 0) return this.iaddn(-e);
if (0 !== this.negative) {
this.negative = 0;
this.iaddn(e);
this.negative = 1;
return this;
}
this.words[0] -= e;
if (1 === this.length && this.words[0] < 0) {
this.words[0] = -this.words[0];
this.negative = 1;
} else for (var t = 0; t < this.length && this.words[t] < 0; t++) {
this.words[t] += 67108864;
this.words[t + 1] -= 1;
}
return this.strip();
};
p.prototype.addn = function(e) {
return this.clone().iaddn(e);
};
p.prototype.subn = function(e) {
return this.clone().isubn(e);
};
p.prototype.iabs = function() {
this.negative = 0;
return this;
};
p.prototype.abs = function() {
return this.clone().iabs();
};
p.prototype._ishlnsubmul = function(e, t, i) {
var n, a, s = e.length + i;
this._expand(s);
var c = 0;
for (n = 0; n < e.length; n++) {
a = (0 | this.words[n + i]) + c;
var r = (0 | e.words[n]) * t;
c = ((a -= 67108863 & r) >> 26) - (r / 67108864 | 0);
this.words[n + i] = 67108863 & a;
}
for (;n < this.length - i; n++) {
c = (a = (0 | this.words[n + i]) + c) >> 26;
this.words[n + i] = 67108863 & a;
}
if (0 === c) return this.strip();
f(-1 === c);
for (n = c = 0; n < this.length; n++) {
c = (a = -(0 | this.words[n]) + c) >> 26;
this.words[n] = 67108863 & a;
}
this.negative = 1;
return this.strip();
};
p.prototype._wordDiv = function(e, t) {
var i = (this.length, e.length), n = this.clone(), a = e, s = 0 | a.words[a.length - 1];
if (0 !== (i = 26 - this._countBits(s))) {
a = a.ushln(i);
n.iushln(i);
s = 0 | a.words[a.length - 1];
}
var c, r = n.length - a.length;
if ("mod" !== t) {
(c = new p(null)).length = r + 1;
c.words = new Array(c.length);
for (var o = 0; o < c.length; o++) c.words[o] = 0;
}
var h = n.clone()._ishlnsubmul(a, 1, r);
if (0 === h.negative) {
n = h;
c && (c.words[r] = 1);
}
for (var l = r - 1; 0 <= l; l--) {
var d = 67108864 * (0 | n.words[a.length + l]) + (0 | n.words[a.length + l - 1]);
d = Math.min(d / s | 0, 67108863);
n._ishlnsubmul(a, d, l);
for (;0 !== n.negative; ) {
d--;
n.negative = 0;
n._ishlnsubmul(a, 1, l);
n.isZero() || (n.negative ^= 1);
}
c && (c.words[l] = d);
}
c && c.strip();
n.strip();
"div" !== t && 0 !== i && n.iushrn(i);
return {
div: c || null,
mod: n
};
};
p.prototype.divmod = function(e, t, i) {
f(!e.isZero());
if (this.isZero()) return {
div: new p(0),
mod: new p(0)
};
var n, a, s;
if (0 !== this.negative && 0 === e.negative) {
s = this.neg().divmod(e, t);
"mod" !== t && (n = s.div.neg());
if ("div" !== t) {
a = s.mod.neg();
i && 0 !== a.negative && a.iadd(e);
}
return {
div: n,
mod: a
};
}
if (0 === this.negative && 0 !== e.negative) {
s = this.divmod(e.neg(), t);
"mod" !== t && (n = s.div.neg());
return {
div: n,
mod: s.mod
};
}
if (0 != (this.negative & e.negative)) {
s = this.neg().divmod(e.neg(), t);
if ("div" !== t) {
a = s.mod.neg();
i && 0 !== a.negative && a.isub(e);
}
return {
div: s.div,
mod: a
};
}
return e.length > this.length || this.cmp(e) < 0 ? {
div: new p(0),
mod: this
} : 1 === e.length ? "div" === t ? {
div: this.divn(e.words[0]),
mod: null
} : "mod" === t ? {
div: null,
mod: new p(this.modn(e.words[0]))
} : {
div: this.divn(e.words[0]),
mod: new p(this.modn(e.words[0]))
} : this._wordDiv(e, t);
};
p.prototype.div = function(e) {
return this.divmod(e, "div", !1).div;
};
p.prototype.mod = function(e) {
return this.divmod(e, "mod", !1).mod;
};
p.prototype.umod = function(e) {
return this.divmod(e, "mod", !0).mod;
};
p.prototype.divRound = function(e) {
var t = this.divmod(e);
if (t.mod.isZero()) return t.div;
var i = 0 !== t.div.negative ? t.mod.isub(e) : t.mod, n = e.ushrn(1), a = e.andln(1), s = i.cmp(n);
return s < 0 || 1 === a && 0 === s ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1);
};
p.prototype.modn = function(e) {
f(e <= 67108863);
for (var t = (1 << 26) % e, i = 0, n = this.length - 1; 0 <= n; n--) i = (t * i + (0 | this.words[n])) % e;
return i;
};
p.prototype.idivn = function(e) {
f(e <= 67108863);
for (var t = 0, i = this.length - 1; 0 <= i; i--) {
var n = (0 | this.words[i]) + 67108864 * t;
this.words[i] = n / e | 0;
t = n % e;
}
return this.strip();
};
p.prototype.divn = function(e) {
return this.clone().idivn(e);
};
p.prototype.egcd = function(e) {
f(0 === e.negative);
f(!e.isZero());
var t = this, i = e.clone();
t = 0 !== t.negative ? t.umod(e) : t.clone();
for (var n = new p(1), a = new p(0), s = new p(0), c = new p(1), r = 0; t.isEven() && i.isEven(); ) {
t.iushrn(1);
i.iushrn(1);
++r;
}
for (var o = i.clone(), h = t.clone(); !t.isZero(); ) {
for (var l = 0, d = 1; 0 == (t.words[0] & d) && l < 26; ++l, d <<= 1) ;
if (0 < l) {
t.iushrn(l);
for (;0 < l--; ) {
if (n.isOdd() || a.isOdd()) {
n.iadd(o);
a.isub(h);
}
n.iushrn(1);
a.iushrn(1);
}
}
for (var u = 0, v = 1; 0 == (i.words[0] & v) && u < 26; ++u, v <<= 1) ;
if (0 < u) {
i.iushrn(u);
for (;0 < u--; ) {
if (s.isOdd() || c.isOdd()) {
s.iadd(o);
c.isub(h);
}
s.iushrn(1);
c.iushrn(1);
}
}
if (0 <= t.cmp(i)) {
t.isub(i);
n.isub(s);
a.isub(c);
} else {
i.isub(t);
s.isub(n);
c.isub(a);
}
}
return {
a: s,
b: c,
gcd: i.iushln(r)
};
};
p.prototype._invmp = function(e) {
f(0 === e.negative);
f(!e.isZero());
var t = this, i = e.clone();
t = 0 !== t.negative ? t.umod(e) : t.clone();
for (var n, a = new p(1), s = new p(0), c = i.clone(); 0 < t.cmpn(1) && 0 < i.cmpn(1); ) {
for (var r = 0, o = 1; 0 == (t.words[0] & o) && r < 26; ++r, o <<= 1) ;
if (0 < r) {
t.iushrn(r);
for (;0 < r--; ) {
a.isOdd() && a.iadd(c);
a.iushrn(1);
}
}
for (var h = 0, l = 1; 0 == (i.words[0] & l) && h < 26; ++h, l <<= 1) ;
if (0 < h) {
i.iushrn(h);
for (;0 < h--; ) {
s.isOdd() && s.iadd(c);
s.iushrn(1);
}
}
if (0 <= t.cmp(i)) {
t.isub(i);
a.isub(s);
} else {
i.isub(t);
s.isub(a);
}
}
(n = 0 === t.cmpn(1) ? a : s).cmpn(0) < 0 && n.iadd(e);
return n;
};
p.prototype.gcd = function(e) {
if (this.isZero()) return e.abs();
if (e.isZero()) return this.abs();
var t = this.clone(), i = e.clone();
t.negative = 0;
for (var n = i.negative = 0; t.isEven() && i.isEven(); n++) {
t.iushrn(1);
i.iushrn(1);
}
for (;;) {
for (;t.isEven(); ) t.iushrn(1);
for (;i.isEven(); ) i.iushrn(1);
var a = t.cmp(i);
if (a < 0) {
var s = t;
t = i;
i = s;
} else if (0 === a || 0 === i.cmpn(1)) break;
t.isub(i);
}
return i.iushln(n);
};
p.prototype.invm = function(e) {
return this.egcd(e).a.umod(e);
};
p.prototype.isEven = function() {
return 0 == (1 & this.words[0]);
};
p.prototype.isOdd = function() {
return 1 == (1 & this.words[0]);
};
p.prototype.andln = function(e) {
return this.words[0] & e;
};
p.prototype.bincn = function(e) {
f("number" == typeof e);
var t = e % 26, i = (e - t) / 26, n = 1 << t;
if (this.length <= i) {
this._expand(i + 1);
this.words[i] |= n;
return this;
}
for (var a = n, s = i; 0 !== a && s < this.length; s++) {
var c = 0 | this.words[s];
a = (c += a) >>> 26;
c &= 67108863;
this.words[s] = c;
}
if (0 !== a) {
this.words[s] = a;
this.length++;
}
return this;
};
p.prototype.isZero = function() {
return 1 === this.length && 0 === this.words[0];
};
p.prototype.cmpn = function(e) {
var t, i = e < 0;
if (0 !== this.negative && !i) return -1;
if (0 === this.negative && i) return 1;
this.strip();
if (1 < this.length) t = 1; else {
i && (e = -e);
f(e <= 67108863, "Number is too big");
var n = 0 | this.words[0];
t = n === e ? 0 : n < e ? -1 : 1;
}
return 0 !== this.negative ? 0 | -t : t;
};
p.prototype.cmp = function(e) {
if (0 !== this.negative && 0 === e.negative) return -1;
if (0 === this.negative && 0 !== e.negative) return 1;
var t = this.ucmp(e);
return 0 !== this.negative ? 0 | -t : t;
};
p.prototype.ucmp = function(e) {
if (this.length > e.length) return 1;
if (this.length < e.length) return -1;
for (var t = 0, i = this.length - 1; 0 <= i; i--) {
var n = 0 | this.words[i], a = 0 | e.words[i];
if (n !== a) {
n < a ? t = -1 : a < n && (t = 1);
break;
}
}
return t;
};
p.prototype.gtn = function(e) {
return 1 === this.cmpn(e);
};
p.prototype.gt = function(e) {
return 1 === this.cmp(e);
};
p.prototype.gten = function(e) {
return 0 <= this.cmpn(e);
};
p.prototype.gte = function(e) {
return 0 <= this.cmp(e);
};
p.prototype.ltn = function(e) {
return -1 === this.cmpn(e);
};
p.prototype.lt = function(e) {
return -1 === this.cmp(e);
};
p.prototype.lten = function(e) {
return this.cmpn(e) <= 0;
};
p.prototype.lte = function(e) {
return this.cmp(e) <= 0;
};
p.prototype.eqn = function(e) {
return 0 === this.cmpn(e);
};
p.prototype.eq = function(e) {
return 0 === this.cmp(e);
};
p.red = function(e) {
return new b(e);
};
p.prototype.toRed = function(e) {
f(!this.red, "Already a number in reduction context");
f(0 === this.negative, "red works only with positives");
return e.convertTo(this)._forceRed(e);
};
p.prototype.fromRed = function() {
f(this.red, "fromRed works only with numbers in reduction context");
return this.red.convertFrom(this);
};
p.prototype._forceRed = function(e) {
this.red = e;
return this;
};
p.prototype.forceRed = function(e) {
f(!this.red, "Already a number in reduction context");
return this._forceRed(e);
};
p.prototype.redAdd = function(e) {
f(this.red, "redAdd works only with red numbers");
return this.red.add(this, e);
};
p.prototype.redIAdd = function(e) {
f(this.red, "redIAdd works only with red numbers");
return this.red.iadd(this, e);
};
p.prototype.redSub = function(e) {
f(this.red, "redSub works only with red numbers");
return this.red.sub(this, e);
};
p.prototype.redISub = function(e) {
f(this.red, "redISub works only with red numbers");
return this.red.isub(this, e);
};
p.prototype.redShl = function(e) {
f(this.red, "redShl works only with red numbers");
return this.red.shl(this, e);
};
p.prototype.redMul = function(e) {
f(this.red, "redMul works only with red numbers");
this.red._verify2(this, e);
return this.red.mul(this, e);
};
p.prototype.redIMul = function(e) {
f(this.red, "redMul works only with red numbers");
this.red._verify2(this, e);
return this.red.imul(this, e);
};
p.prototype.redSqr = function() {
f(this.red, "redSqr works only with red numbers");
this.red._verify1(this);
return this.red.sqr(this);
};
p.prototype.redISqr = function() {
f(this.red, "redISqr works only with red numbers");
this.red._verify1(this);
return this.red.isqr(this);
};
p.prototype.redSqrt = function() {
f(this.red, "redSqrt works only with red numbers");
this.red._verify1(this);
return this.red.sqrt(this);
};
p.prototype.redInvm = function() {
f(this.red, "redInvm works only with red numbers");
this.red._verify1(this);
return this.red.invm(this);
};
p.prototype.redNeg = function() {
f(this.red, "redNeg works only with red numbers");
this.red._verify1(this);
return this.red.neg(this);
};
p.prototype.redPow = function(e) {
f(this.red && !e.red, "redPow(normalNum)");
this.red._verify1(this);
return this.red.pow(this, e);
};
var h = {
k256: null,
p224: null,
p192: null,
p25519: null
};
function l(e, t) {
this.name = e;
this.p = new p(t, 16);
this.n = this.p.bitLength();
this.k = new p(1).iushln(this.n).isub(this.p);
this.tmp = this._tmp();
}
l.prototype._tmp = function() {
var e = new p(null);
e.words = new Array(Math.ceil(this.n / 13));
return e;
};
l.prototype.ireduce = function(e) {
var t, i = e;
do {
this.split(i, this.tmp);
t = (i = (i = this.imulK(i)).iadd(this.tmp)).bitLength();
} while (t > this.n);
var n = t < this.n ? -1 : i.ucmp(this.p);
if (0 === n) {
i.words[0] = 0;
i.length = 1;
} else 0 < n ? i.isub(this.p) : i.strip();
return i;
};
l.prototype.split = function(e, t) {
e.iushrn(this.n, 0, t);
};
l.prototype.imulK = function(e) {
return e.imul(this.k);
};
function _() {
l.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
}
i(_, l);
_.prototype.split = function(e, t) {
for (var i = Math.min(e.length, 9), n = 0; n < i; n++) t.words[n] = e.words[n];
t.length = i;
if (e.length <= 9) {
e.words[0] = 0;
e.length = 1;
} else {
var a = e.words[9];
t.words[t.length++] = 4194303 & a;
for (n = 10; n < e.length; n++) {
var s = 0 | e.words[n];
e.words[n - 10] = (4194303 & s) << 4 | a >>> 22;
a = s;
}
a >>>= 22;
0 === (e.words[n - 10] = a) && 10 < e.length ? e.length -= 10 : e.length -= 9;
}
};
_.prototype.imulK = function(e) {
e.words[e.length] = 0;
e.words[e.length + 1] = 0;
e.length += 2;
for (var t = 0, i = 0; i < e.length; i++) {
var n = 0 | e.words[i];
t += 977 * n;
e.words[i] = 67108863 & t;
t = 64 * n + (t / 67108864 | 0);
}
if (0 === e.words[e.length - 1]) {
e.length--;
0 === e.words[e.length - 1] && e.length--;
}
return e;
};
function m() {
l.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
}
i(m, l);
function C() {
l.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
}
i(C, l);
function y() {
l.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
}
i(y, l);
y.prototype.imulK = function(e) {
for (var t = 0, i = 0; i < e.length; i++) {
var n = 19 * (0 | e.words[i]) + t, a = 67108863 & n;
n >>>= 26;
e.words[i] = a;
t = n;
}
0 !== t && (e.words[e.length++] = t);
return e;
};
p._prime = function(e) {
if (h[e]) return h[e];
var t;
if ("k256" === e) t = new _(); else if ("p224" === e) t = new m(); else if ("p192" === e) t = new C(); else {
if ("p25519" !== e) throw new Error("Unknown prime " + e);
t = new y();
}
return h[e] = t;
};
function b(e) {
if ("string" == typeof e) {
var t = p._prime(e);
this.m = t.p;
this.prime = t;
} else {
f(e.gtn(1), "modulus must be greater than 1");
this.m = e;
this.prime = null;
}
}
b.prototype._verify1 = function(e) {
f(0 === e.negative, "red works only with positives");
f(e.red, "red works only with red numbers");
};
b.prototype._verify2 = function(e, t) {
f(0 == (e.negative | t.negative), "red works only with positives");
f(e.red && e.red === t.red, "red works only with red numbers");
};
b.prototype.imod = function(e) {
return this.prime ? this.prime.ireduce(e)._forceRed(this) : e.umod(this.m)._forceRed(this);
};
b.prototype.neg = function(e) {
return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this);
};
b.prototype.add = function(e, t) {
this._verify2(e, t);
var i = e.add(t);
0 <= i.cmp(this.m) && i.isub(this.m);
return i._forceRed(this);
};
b.prototype.iadd = function(e, t) {
this._verify2(e, t);
var i = e.iadd(t);
0 <= i.cmp(this.m) && i.isub(this.m);
return i;
};
b.prototype.sub = function(e, t) {
this._verify2(e, t);
var i = e.sub(t);
i.cmpn(0) < 0 && i.iadd(this.m);
return i._forceRed(this);
};
b.prototype.isub = function(e, t) {
this._verify2(e, t);
var i = e.isub(t);
i.cmpn(0) < 0 && i.iadd(this.m);
return i;
};
b.prototype.shl = function(e, t) {
this._verify1(e);
return this.imod(e.ushln(t));
};
b.prototype.imul = function(e, t) {
this._verify2(e, t);
return this.imod(e.imul(t));
};
b.prototype.mul = function(e, t) {
this._verify2(e, t);
return this.imod(e.mul(t));
};
b.prototype.isqr = function(e) {
return this.imul(e, e.clone());
};
b.prototype.sqr = function(e) {
return this.mul(e, e);
};
b.prototype.sqrt = function(e) {
if (e.isZero()) return e.clone();
var t = this.m.andln(3);
f(t % 2 == 1);
if (3 === t) {
var i = this.m.add(new p(1)).iushrn(2);
return this.pow(e, i);
}
for (var n = this.m.subn(1), a = 0; !n.isZero() && 0 === n.andln(1); ) {
a++;
n.iushrn(1);
}
f(!n.isZero());
var s = new p(1).toRed(this), c = s.redNeg(), r = this.m.subn(1).iushrn(1), o = this.m.bitLength();
o = new p(2 * o * o).toRed(this);
for (;0 !== this.pow(o, r).cmp(c); ) o.redIAdd(c);
for (var h = this.pow(o, n), l = this.pow(e, n.addn(1).iushrn(1)), d = this.pow(e, n), u = a; 0 !== d.cmp(s); ) {
for (var v = d, g = 0; 0 !== v.cmp(s); g++) v = v.redSqr();
f(g < u);
var _ = this.pow(h, new p(1).iushln(u - g - 1));
l = l.redMul(_);
h = _.redSqr();
d = d.redMul(h);
u = g;
}
return l;
};
b.prototype.invm = function(e) {
var t = e._invmp(this.m);
if (0 !== t.negative) {
t.negative = 0;
return this.imod(t).redNeg();
}
return this.imod(t);
};
b.prototype.pow = function(e, t) {
if (t.isZero()) return new p(1).toRed(this);
if (0 === t.cmpn(1)) return e.clone();
var i = new Array(16);
i[0] = new p(1).toRed(this);
i[1] = e;
for (var n = 2; n < i.length; n++) i[n] = this.mul(i[n - 1], e);
var a = i[0], s = 0, c = 0, r = t.bitLength() % 26;
0 === r && (r = 26);
for (n = t.length - 1; 0 <= n; n--) {
for (var o = t.words[n], h = r - 1; 0 <= h; h--) {
var l = o >> h & 1;
a !== i[0] && (a = this.sqr(a));
if (0 !== l || 0 !== s) {
s <<= 1;
s |= l;
if (4 === ++c || 0 === n && 0 === h) {
a = this.mul(a, i[s]);
s = c = 0;
}
} else c = 0;
}
r = 26;
}
return a;
};
b.prototype.convertTo = function(e) {
var t = e.umod(this.m);
return t === e ? t.clone() : t;
};
b.prototype.convertFrom = function(e) {
var t = e.clone();
t.red = null;
return t;
};
p.mont = function(e) {
return new M(e);
};
function M(e) {
b.call(this, e);
this.shift = this.m.bitLength();
this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26);
this.r = new p(1).iushln(this.shift);
this.r2 = this.imod(this.r.sqr());
this.rinv = this.r._invmp(this.m);
this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
this.minv = this.minv.umod(this.r);
this.minv = this.r.sub(this.minv);
}
i(M, b);
M.prototype.convertTo = function(e) {
return this.imod(e.ushln(this.shift));
};
M.prototype.convertFrom = function(e) {
var t = this.imod(e.mul(this.rinv));
t.red = null;
return t;
};
M.prototype.imul = function(e, t) {
if (e.isZero() || t.isZero()) {
e.words[0] = 0;
e.length = 1;
return e;
}
var i = e.imul(t), n = i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), a = i.isub(n).iushrn(this.shift), s = a;
0 <= a.cmp(this.m) ? s = a.isub(this.m) : a.cmpn(0) < 0 && (s = a.iadd(this.m));
return s._forceRed(this);
};
M.prototype.mul = function(e, t) {
if (e.isZero() || t.isZero()) return new p(0)._forceRed(this);
var i = e.mul(t), n = i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), a = i.isub(n).iushrn(this.shift), s = a;
0 <= a.cmp(this.m) ? s = a.isub(this.m) : a.cmpn(0) < 0 && (s = a.iadd(this.m));
return s._forceRed(this);
};
M.prototype.invm = function(e) {
return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this);
};
})("undefined" == typeof e || e, this);
}, {
buffer: 18
} ],
17: [ function(e, t, i) {
var n;
t.exports = function(e) {
n || (n = new a(null));
return n.generate(e);
};
function a(e) {
this.rand = e;
}
(t.exports.Rand = a).prototype.generate = function(e) {
return this._rand(e);
};
a.prototype._rand = function(e) {
if (this.rand.getBytes) return this.rand.getBytes(e);
for (var t = new Uint8Array(e), i = 0; i < t.length; i++) t[i] = this.rand.getByte();
return t;
};
if ("object" == typeof self) self.crypto && self.crypto.getRandomValues ? a.prototype._rand = function(e) {
var t = new Uint8Array(e);
self.crypto.getRandomValues(t);
return t;
} : self.msCrypto && self.msCrypto.getRandomValues ? a.prototype._rand = function(e) {
var t = new Uint8Array(e);
self.msCrypto.getRandomValues(t);
return t;
} : "object" == typeof window && (a.prototype._rand = function() {
throw new Error("Not implemented yet");
}); else try {
var s = e("crypto");
if ("function" != typeof s.randomBytes) throw new Error("Not supported");
a.prototype._rand = function(e) {
return s.randomBytes(e);
};
} catch (e) {}
}, {
crypto: 18
} ],
18: [ function(e, t, i) {}, {} ],
19: [ function(e, t, i) {
var a = e("safe-buffer").Buffer;
function s(e) {
a.isBuffer(e) || (e = a.from(e));
for (var t = e.length / 4 | 0, i = new Array(t), n = 0; n < t; n++) i[n] = e.readUInt32BE(4 * n);
return i;
}
function n(e) {
for (;0 < e.length; e++) e[0] = 0;
}
function c(e, t, i, n, a) {
for (var s, c, r, o, h = i[0], l = i[1], d = i[2], u = i[3], v = e[0] ^ t[0], g = e[1] ^ t[1], _ = e[2] ^ t[2], f = e[3] ^ t[3], p = 4, m = 1; m < a; m++) {
s = h[v >>> 24] ^ l[g >>> 16 & 255] ^ d[_ >>> 8 & 255] ^ u[255 & f] ^ t[p++];
c = h[g >>> 24] ^ l[_ >>> 16 & 255] ^ d[f >>> 8 & 255] ^ u[255 & v] ^ t[p++];
r = h[_ >>> 24] ^ l[f >>> 16 & 255] ^ d[v >>> 8 & 255] ^ u[255 & g] ^ t[p++];
o = h[f >>> 24] ^ l[v >>> 16 & 255] ^ d[g >>> 8 & 255] ^ u[255 & _] ^ t[p++];
v = s;
g = c;
_ = r;
f = o;
}
s = (n[v >>> 24] << 24 | n[g >>> 16 & 255] << 16 | n[_ >>> 8 & 255] << 8 | n[255 & f]) ^ t[p++];
c = (n[g >>> 24] << 24 | n[_ >>> 16 & 255] << 16 | n[f >>> 8 & 255] << 8 | n[255 & v]) ^ t[p++];
r = (n[_ >>> 24] << 24 | n[f >>> 16 & 255] << 16 | n[v >>> 8 & 255] << 8 | n[255 & g]) ^ t[p++];
o = (n[f >>> 24] << 24 | n[v >>> 16 & 255] << 16 | n[g >>> 8 & 255] << 8 | n[255 & _]) ^ t[p++];
return [ s >>>= 0, c >>>= 0, r >>>= 0, o >>>= 0 ];
}
var d = [ 0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54 ], u = function() {
for (var e = new Array(256), t = 0; t < 256; t++) e[t] = t < 128 ? t << 1 : t << 1 ^ 283;
for (var i = [], n = [], a = [ [], [], [], [] ], s = [ [], [], [], [] ], c = 0, r = 0, o = 0; o < 256; ++o) {
var h = r ^ r << 1 ^ r << 2 ^ r << 3 ^ r << 4;
h = h >>> 8 ^ 255 & h ^ 99;
var l = e[n[i[c] = h] = c], d = e[l], u = e[d], v = 257 * e[h] ^ 16843008 * h;
a[0][c] = v << 24 | v >>> 8;
a[1][c] = v << 16 | v >>> 16;
a[2][c] = v << 8 | v >>> 24;
a[3][c] = v;
v = 16843009 * u ^ 65537 * d ^ 257 * l ^ 16843008 * c;
s[0][h] = v << 24 | v >>> 8;
s[1][h] = v << 16 | v >>> 16;
s[2][h] = v << 8 | v >>> 24;
s[3][h] = v;
if (0 === c) c = r = 1; else {
c = l ^ e[e[e[u ^ l]]];
r ^= e[e[r]];
}
}
return {
SBOX: i,
INV_SBOX: n,
SUB_MIX: a,
INV_SUB_MIX: s
};
}();
function r(e) {
this._key = s(e);
this._reset();
}
r.blockSize = 16;
r.keySize = 32;
r.prototype.blockSize = r.blockSize;
r.prototype.keySize = r.keySize;
r.prototype._reset = function() {
for (var e = this._key, t = e.length, i = t + 6, n = 4 * (i + 1), a = [], s = 0; s < t; s++) a[s] = e[s];
for (s = t; s < n; s++) {
var c = a[s - 1];
if (s % t == 0) {
c = c << 8 | c >>> 24;
c = u.SBOX[c >>> 24] << 24 | u.SBOX[c >>> 16 & 255] << 16 | u.SBOX[c >>> 8 & 255] << 8 | u.SBOX[255 & c];
c ^= d[s / t | 0] << 24;
} else 6 < t && s % t == 4 && (c = u.SBOX[c >>> 24] << 24 | u.SBOX[c >>> 16 & 255] << 16 | u.SBOX[c >>> 8 & 255] << 8 | u.SBOX[255 & c]);
a[s] = a[s - t] ^ c;
}
for (var r = [], o = 0; o < n; o++) {
var h = n - o, l = a[h - (o % 4 ? 0 : 4)];
r[o] = o < 4 || h <= 4 ? l : u.INV_SUB_MIX[0][u.SBOX[l >>> 24]] ^ u.INV_SUB_MIX[1][u.SBOX[l >>> 16 & 255]] ^ u.INV_SUB_MIX[2][u.SBOX[l >>> 8 & 255]] ^ u.INV_SUB_MIX[3][u.SBOX[255 & l]];
}
this._nRounds = i;
this._keySchedule = a;
this._invKeySchedule = r;
};
r.prototype.encryptBlockRaw = function(e) {
return c(e = s(e), this._keySchedule, u.SUB_MIX, u.SBOX, this._nRounds);
};
r.prototype.encryptBlock = function(e) {
var t = this.encryptBlockRaw(e), i = a.allocUnsafe(16);
i.writeUInt32BE(t[0], 0);
i.writeUInt32BE(t[1], 4);
i.writeUInt32BE(t[2], 8);
i.writeUInt32BE(t[3], 12);
return i;
};
r.prototype.decryptBlock = function(e) {
var t = (e = s(e))[1];
e[1] = e[3];
e[3] = t;
var i = c(e, this._invKeySchedule, u.INV_SUB_MIX, u.INV_SBOX, this._nRounds), n = a.allocUnsafe(16);
n.writeUInt32BE(i[0], 0);
n.writeUInt32BE(i[3], 4);
n.writeUInt32BE(i[2], 8);
n.writeUInt32BE(i[1], 12);
return n;
};
r.prototype.scrub = function() {
n(this._keySchedule);
n(this._invKeySchedule);
n(this._key);
};
t.exports.AES = r;
}, {
"safe-buffer": 143
} ],
20: [ function(e, t, i) {
var c = e("./aes"), h = e("safe-buffer").Buffer, r = e("cipher-base"), n = e("inherits"), l = e("./ghash"), a = e("buffer-xor"), d = e("./incr32");
function s(e, t, i, n) {
r.call(this);
var a = h.alloc(4, 0);
this._cipher = new c.AES(t);
var s = this._cipher.encryptBlock(a);
this._ghash = new l(s);
i = function(e, t, i) {
if (12 === t.length) {
e._finID = h.concat([ t, h.from([ 0, 0, 0, 1 ]) ]);
return h.concat([ t, h.from([ 0, 0, 0, 2 ]) ]);
}
var n = new l(i), a = t.length, s = a % 16;
n.update(t);
if (s) {
s = 16 - s;
n.update(h.alloc(s, 0));
}
n.update(h.alloc(8, 0));
var c = 8 * a, r = h.alloc(8);
r.writeUIntBE(c, 0, 8);
n.update(r);
e._finID = n.state;
var o = h.from(e._finID);
d(o);
return o;
}(this, i, s);
this._prev = h.from(i);
this._cache = h.allocUnsafe(0);
this._secCache = h.allocUnsafe(0);
this._decrypt = n;
this._alen = 0;
this._len = 0;
this._mode = e;
this._authTag = null;
this._called = !1;
}
n(s, r);
s.prototype._update = function(e) {
if (!this._called && this._alen) {
var t = 16 - this._alen % 16;
if (t < 16) {
t = h.alloc(t, 0);
this._ghash.update(t);
}
}
this._called = !0;
var i = this._mode.encrypt(this, e);
this._decrypt ? this._ghash.update(e) : this._ghash.update(i);
this._len += e.length;
return i;
};
s.prototype._final = function() {
if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
var e = a(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
if (this._decrypt && function(e, t) {
var i = 0;
e.length !== t.length && i++;
for (var n = Math.min(e.length, t.length), a = 0; a < n; ++a) i += e[a] ^ t[a];
return i;
}(e, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
this._authTag = e;
this._cipher.scrub();
};
s.prototype.getAuthTag = function() {
if (this._decrypt || !h.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
return this._authTag;
};
s.prototype.setAuthTag = function(e) {
if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
this._authTag = e;
};
s.prototype.setAAD = function(e) {
if (this._called) throw new Error("Attempting to set AAD in unsupported state");
this._ghash.update(e);
this._alen += e.length;
};
t.exports = s;
}, {
"./aes": 19,
"./ghash": 24,
"./incr32": 25,
"buffer-xor": 46,
"cipher-base": 49,
inherits: 101,
"safe-buffer": 143
} ],
21: [ function(e, t, i) {
var n = e("./encrypter"), a = e("./decrypter"), s = e("./modes/list.json");
i.createCipher = i.Cipher = n.createCipher;
i.createCipheriv = i.Cipheriv = n.createCipheriv;
i.createDecipher = i.Decipher = a.createDecipher;
i.createDecipheriv = i.Decipheriv = a.createDecipheriv;
i.listCiphers = i.getCiphers = function() {
return Object.keys(s);
};
}, {
"./decrypter": 22,
"./encrypter": 23,
"./modes/list.json": 33
} ],
22: [ function(e, t, i) {
var a = e("./authCipher"), s = e("safe-buffer").Buffer, c = e("./modes"), r = e("./streamCipher"), n = e("cipher-base"), o = e("./aes"), h = e("evp_bytestokey");
function l(e, t, i) {
n.call(this);
this._cache = new d();
this._last = void 0;
this._cipher = new o.AES(t);
this._prev = s.from(i);
this._mode = e;
this._autopadding = !0;
}
e("inherits")(l, n);
l.prototype._update = function(e) {
this._cache.add(e);
for (var t, i, n = []; t = this._cache.get(this._autopadding); ) {
i = this._mode.decrypt(this, t);
n.push(i);
}
return s.concat(n);
};
l.prototype._final = function() {
var e = this._cache.flush();
if (this._autopadding) return function(e) {
var t = e[15];
if (t < 1 || 16 < t) throw new Error("unable to decrypt data");
var i = -1;
for (;++i < t; ) if (e[i + (16 - t)] !== t) throw new Error("unable to decrypt data");
if (16 === t) return;
return e.slice(0, 16 - t);
}(this._mode.decrypt(this, e));
if (e) throw new Error("data not multiple of block length");
};
l.prototype.setAutoPadding = function(e) {
this._autopadding = !!e;
return this;
};
function d() {
this.cache = s.allocUnsafe(0);
}
d.prototype.add = function(e) {
this.cache = s.concat([ this.cache, e ]);
};
d.prototype.get = function(e) {
var t;
if (e) {
if (16 < this.cache.length) {
t = this.cache.slice(0, 16);
this.cache = this.cache.slice(16);
return t;
}
} else if (16 <= this.cache.length) {
t = this.cache.slice(0, 16);
this.cache = this.cache.slice(16);
return t;
}
return null;
};
d.prototype.flush = function() {
if (this.cache.length) return this.cache;
};
function u(e, t, i) {
var n = c[e.toLowerCase()];
if (!n) throw new TypeError("invalid suite type");
"string" == typeof i && (i = s.from(i));
if ("GCM" !== n.mode && i.length !== n.iv) throw new TypeError("invalid iv length " + i.length);
"string" == typeof t && (t = s.from(t));
if (t.length !== n.key / 8) throw new TypeError("invalid key length " + t.length);
return "stream" === n.type ? new r(n.module, t, i, !0) : "auth" === n.type ? new a(n.module, t, i, !0) : new l(n.module, t, i);
}
i.createDecipher = function(e, t) {
var i = c[e.toLowerCase()];
if (!i) throw new TypeError("invalid suite type");
var n = h(t, !1, i.key, i.iv);
return u(e, n.key, n.iv);
};
i.createDecipheriv = u;
}, {
"./aes": 19,
"./authCipher": 20,
"./modes": 32,
"./streamCipher": 35,
"cipher-base": 49,
evp_bytestokey: 84,
inherits: 101,
"safe-buffer": 143
} ],
23: [ function(e, t, i) {
var a = e("./modes"), s = e("./authCipher"), c = e("safe-buffer").Buffer, r = e("./streamCipher"), n = e("cipher-base"), o = e("./aes"), h = e("evp_bytestokey");
function l(e, t, i) {
n.call(this);
this._cache = new u();
this._cipher = new o.AES(t);
this._prev = c.from(i);
this._mode = e;
this._autopadding = !0;
}
e("inherits")(l, n);
l.prototype._update = function(e) {
this._cache.add(e);
for (var t, i, n = []; t = this._cache.get(); ) {
i = this._mode.encrypt(this, t);
n.push(i);
}
return c.concat(n);
};
var d = c.alloc(16, 16);
l.prototype._final = function() {
var e = this._cache.flush();
if (this._autopadding) {
e = this._mode.encrypt(this, e);
this._cipher.scrub();
return e;
}
if (!e.equals(d)) {
this._cipher.scrub();
throw new Error("data not multiple of block length");
}
};
l.prototype.setAutoPadding = function(e) {
this._autopadding = !!e;
return this;
};
function u() {
this.cache = c.allocUnsafe(0);
}
u.prototype.add = function(e) {
this.cache = c.concat([ this.cache, e ]);
};
u.prototype.get = function() {
if (15 < this.cache.length) {
var e = this.cache.slice(0, 16);
this.cache = this.cache.slice(16);
return e;
}
return null;
};
u.prototype.flush = function() {
for (var e = 16 - this.cache.length, t = c.allocUnsafe(e), i = -1; ++i < e; ) t.writeUInt8(e, i);
return c.concat([ this.cache, t ]);
};
function v(e, t, i) {
var n = a[e.toLowerCase()];
if (!n) throw new TypeError("invalid suite type");
"string" == typeof t && (t = c.from(t));
if (t.length !== n.key / 8) throw new TypeError("invalid key length " + t.length);
"string" == typeof i && (i = c.from(i));
if ("GCM" !== n.mode && i.length !== n.iv) throw new TypeError("invalid iv length " + i.length);
return "stream" === n.type ? new r(n.module, t, i) : "auth" === n.type ? new s(n.module, t, i) : new l(n.module, t, i);
}
i.createCipheriv = v;
i.createCipher = function(e, t) {
var i = a[e.toLowerCase()];
if (!i) throw new TypeError("invalid suite type");
var n = h(t, !1, i.key, i.iv);
return v(e, n.key, n.iv);
};
}, {
"./aes": 19,
"./authCipher": 20,
"./modes": 32,
"./streamCipher": 35,
"cipher-base": 49,
evp_bytestokey: 84,
inherits: 101,
"safe-buffer": 143
} ],
24: [ function(e, t, i) {
var n = e("safe-buffer").Buffer, a = n.alloc(16, 0);
function c(e) {
var t = n.allocUnsafe(16);
t.writeUInt32BE(e[0] >>> 0, 0);
t.writeUInt32BE(e[1] >>> 0, 4);
t.writeUInt32BE(e[2] >>> 0, 8);
t.writeUInt32BE(e[3] >>> 0, 12);
return t;
}
function s(e) {
this.h = e;
this.state = n.alloc(16, 0);
this.cache = n.allocUnsafe(0);
}
s.prototype.ghash = function(e) {
for (var t = -1; ++t < e.length; ) this.state[t] ^= e[t];
this._multiply();
};
s.prototype._multiply = function() {
for (var e, t, i, n = [ (e = this.h).readUInt32BE(0), e.readUInt32BE(4), e.readUInt32BE(8), e.readUInt32BE(12) ], a = [ 0, 0, 0, 0 ], s = -1; ++s < 128; ) {
if (0 != (this.state[~~(s / 8)] & 1 << 7 - s % 8)) {
a[0] ^= n[0];
a[1] ^= n[1];
a[2] ^= n[2];
a[3] ^= n[3];
}
i = 0 != (1 & n[3]);
for (t = 3; 0 < t; t--) n[t] = n[t] >>> 1 | (1 & n[t - 1]) << 31;
n[0] = n[0] >>> 1;
i && (n[0] = n[0] ^ 225 << 24);
}
this.state = c(a);
};
s.prototype.update = function(e) {
this.cache = n.concat([ this.cache, e ]);
for (var t; 16 <= this.cache.length; ) {
t = this.cache.slice(0, 16);
this.cache = this.cache.slice(16);
this.ghash(t);
}
};
s.prototype.final = function(e, t) {
this.cache.length && this.ghash(n.concat([ this.cache, a ], 16));
this.ghash(c([ 0, e, 0, t ]));
return this.state;
};
t.exports = s;
}, {
"safe-buffer": 143
} ],
25: [ function(e, t, i) {
t.exports = function(e) {
for (var t, i = e.length; i--; ) {
if (255 !== (t = e.readUInt8(i))) {
t++;
e.writeUInt8(t, i);
break;
}
e.writeUInt8(0, i);
}
};
}, {} ],
26: [ function(e, t, i) {
var a = e("buffer-xor");
i.encrypt = function(e, t) {
var i = a(t, e._prev);
e._prev = e._cipher.encryptBlock(i);
return e._prev;
};
i.decrypt = function(e, t) {
var i = e._prev;
e._prev = t;
var n = e._cipher.decryptBlock(t);
return a(n, i);
};
}, {
"buffer-xor": 46
} ],
27: [ function(e, t, i) {
var s = e("safe-buffer").Buffer, c = e("buffer-xor");
function r(e, t, i) {
var n = t.length, a = c(t, e._cache);
e._cache = e._cache.slice(n);
e._prev = s.concat([ e._prev, i ? t : a ]);
return a;
}
i.encrypt = function(e, t, i) {
for (var n, a = s.allocUnsafe(0); t.length; ) {
if (0 === e._cache.length) {
e._cache = e._cipher.encryptBlock(e._prev);
e._prev = s.allocUnsafe(0);
}
if (!(e._cache.length <= t.length)) {
a = s.concat([ a, r(e, t, i) ]);
break;
}
n = e._cache.length;
a = s.concat([ a, r(e, t.slice(0, n), i) ]);
t = t.slice(n);
}
return a;
};
}, {
"buffer-xor": 46,
"safe-buffer": 143
} ],
28: [ function(e, t, i) {
var c = e("safe-buffer").Buffer;
function r(e, t, i) {
for (var n, a, s = -1, c = 0; ++s < 8; ) {
n = t & 1 << 7 - s ? 128 : 0;
c += (128 & (a = e._cipher.encryptBlock(e._prev)[0] ^ n)) >> s % 8;
e._prev = o(e._prev, i ? n : a);
}
return c;
}
function o(e, t) {
var i = e.length, n = -1, a = c.allocUnsafe(e.length);
e = c.concat([ e, c.from([ t ]) ]);
for (;++n < i; ) a[n] = e[n] << 1 | e[n + 1] >> 7;
return a;
}
i.encrypt = function(e, t, i) {
for (var n = t.length, a = c.allocUnsafe(n), s = -1; ++s < n; ) a[s] = r(e, t[s], i);
return a;
};
}, {
"safe-buffer": 143
} ],
29: [ function(e, t, i) {
var c = e("safe-buffer").Buffer;
function r(e, t, i) {
var n = e._cipher.encryptBlock(e._prev)[0] ^ t;
e._prev = c.concat([ e._prev.slice(1), c.from([ i ? t : n ]) ]);
return n;
}
i.encrypt = function(e, t, i) {
for (var n = t.length, a = c.allocUnsafe(n), s = -1; ++s < n; ) a[s] = r(e, t[s], i);
return a;
};
}, {
"safe-buffer": 143
} ],
30: [ function(e, t, i) {
var o = e("buffer-xor"), h = e("safe-buffer").Buffer, n = e("../incr32");
function l(e) {
var t = e._cipher.encryptBlockRaw(e._prev);
n(e._prev);
return t;
}
i.encrypt = function(e, t) {
var i = Math.ceil(t.length / 16), n = e._cache.length;
e._cache = h.concat([ e._cache, h.allocUnsafe(16 * i) ]);
for (var a = 0; a < i; a++) {
var s = l(e), c = n + 16 * a;
e._cache.writeUInt32BE(s[0], c + 0);
e._cache.writeUInt32BE(s[1], c + 4);
e._cache.writeUInt32BE(s[2], c + 8);
e._cache.writeUInt32BE(s[3], c + 12);
}
var r = e._cache.slice(0, t.length);
e._cache = e._cache.slice(t.length);
return o(t, r);
};
}, {
"../incr32": 25,
"buffer-xor": 46,
"safe-buffer": 143
} ],
31: [ function(e, t, i) {
i.encrypt = function(e, t) {
return e._cipher.encryptBlock(t);
};
i.decrypt = function(e, t) {
return e._cipher.decryptBlock(t);
};
}, {} ],
32: [ function(e, t, i) {
var n = {
ECB: e("./ecb"),
CBC: e("./cbc"),
CFB: e("./cfb"),
CFB8: e("./cfb8"),
CFB1: e("./cfb1"),
OFB: e("./ofb"),
CTR: e("./ctr"),
GCM: e("./ctr")
}, a = e("./list.json");
for (var s in a) a[s].module = n[a[s].mode];
t.exports = a;
}, {
"./cbc": 26,
"./cfb": 27,
"./cfb1": 28,
"./cfb8": 29,
"./ctr": 30,
"./ecb": 31,
"./list.json": 33,
"./ofb": 34
} ],
33: [ function(e, t, i) {
t.exports = {
"aes-128-ecb": {
cipher: "AES",
key: 128,
iv: 0,
mode: "ECB",
type: "block"
},
"aes-192-ecb": {
cipher: "AES",
key: 192,
iv: 0,
mode: "ECB",
type: "block"
},
"aes-256-ecb": {
cipher: "AES",
key: 256,
iv: 0,
mode: "ECB",
type: "block"
},
"aes-128-cbc": {
cipher: "AES",
key: 128,
iv: 16,
mode: "CBC",
type: "block"
},
"aes-192-cbc": {
cipher: "AES",
key: 192,
iv: 16,
mode: "CBC",
type: "block"
},
"aes-256-cbc": {
cipher: "AES",
key: 256,
iv: 16,
mode: "CBC",
type: "block"
},
aes128: {
cipher: "AES",
key: 128,
iv: 16,
mode: "CBC",
type: "block"
},
aes192: {
cipher: "AES",
key: 192,
iv: 16,
mode: "CBC",
type: "block"
},
aes256: {
cipher: "AES",
key: 256,
iv: 16,
mode: "CBC",
type: "block"
},
"aes-128-cfb": {
cipher: "AES",
key: 128,
iv: 16,
mode: "CFB",
type: "stream"
},
"aes-192-cfb": {
cipher: "AES",
key: 192,
iv: 16,
mode: "CFB",
type: "stream"
},
"aes-256-cfb": {
cipher: "AES",
key: 256,
iv: 16,
mode: "CFB",
type: "stream"
},
"aes-128-cfb8": {
cipher: "AES",
key: 128,
iv: 16,
mode: "CFB8",
type: "stream"
},
"aes-192-cfb8": {
cipher: "AES",
key: 192,
iv: 16,
mode: "CFB8",
type: "stream"
},
"aes-256-cfb8": {
cipher: "AES",
key: 256,
iv: 16,
mode: "CFB8",
type: "stream"
},
"aes-128-cfb1": {
cipher: "AES",
key: 128,
iv: 16,
mode: "CFB1",
type: "stream"
},
"aes-192-cfb1": {
cipher: "AES",
key: 192,
iv: 16,
mode: "CFB1",
type: "stream"
},
"aes-256-cfb1": {
cipher: "AES",
key: 256,
iv: 16,
mode: "CFB1",
type: "stream"
},
"aes-128-ofb": {
cipher: "AES",
key: 128,
iv: 16,
mode: "OFB",
type: "stream"
},
"aes-192-ofb": {
cipher: "AES",
key: 192,
iv: 16,
mode: "OFB",
type: "stream"
},
"aes-256-ofb": {
cipher: "AES",
key: 256,
iv: 16,
mode: "OFB",
type: "stream"
},
"aes-128-ctr": {
cipher: "AES",
key: 128,
iv: 16,
mode: "CTR",
type: "stream"
},
"aes-192-ctr": {
cipher: "AES",
key: 192,
iv: 16,
mode: "CTR",
type: "stream"
},
"aes-256-ctr": {
cipher: "AES",
key: 256,
iv: 16,
mode: "CTR",
type: "stream"
},
"aes-128-gcm": {
cipher: "AES",
key: 128,
iv: 12,
mode: "GCM",
type: "auth"
},
"aes-192-gcm": {
cipher: "AES",
key: 192,
iv: 12,
mode: "GCM",
type: "auth"
},
"aes-256-gcm": {
cipher: "AES",
key: 256,
iv: 12,
mode: "GCM",
type: "auth"
}
};
}, {} ],
34: [ function(e, t, i) {
(function(n) {
var a = e("buffer-xor");
function s(e) {
e._prev = e._cipher.encryptBlock(e._prev);
return e._prev;
}
i.encrypt = function(e, t) {
for (;e._cache.length < t.length; ) e._cache = n.concat([ e._cache, s(e) ]);
var i = e._cache.slice(0, t.length);
e._cache = e._cache.slice(t.length);
return a(t, i);
};
}).call(this, e("buffer").Buffer);
}, {
buffer: 47,
"buffer-xor": 46
} ],
35: [ function(e, t, i) {
var a = e("./aes"), s = e("safe-buffer").Buffer, c = e("cipher-base");
function n(e, t, i, n) {
c.call(this);
this._cipher = new a.AES(t);
this._prev = s.from(i);
this._cache = s.allocUnsafe(0);
this._secCache = s.allocUnsafe(0);
this._decrypt = n;
this._mode = e;
}
e("inherits")(n, c);
n.prototype._update = function(e) {
return this._mode.encrypt(this, e, this._decrypt);
};
n.prototype._final = function() {
this._cipher.scrub();
};
t.exports = n;
}, {
"./aes": 19,
"cipher-base": 49,
inherits: 101,
"safe-buffer": 143
} ],
36: [ function(e, t, i) {
var n = e("browserify-des"), a = e("browserify-aes/browser"), s = e("browserify-aes/modes"), c = e("browserify-des/modes"), r = e("evp_bytestokey");
function o(e, t, i) {
e = e.toLowerCase();
if (s[e]) return a.createCipheriv(e, t, i);
if (c[e]) return new n({
key: t,
iv: i,
mode: e
});
throw new TypeError("invalid suite type");
}
function h(e, t, i) {
e = e.toLowerCase();
if (s[e]) return a.createDecipheriv(e, t, i);
if (c[e]) return new n({
key: t,
iv: i,
mode: e,
decrypt: !0
});
throw new TypeError("invalid suite type");
}
i.createCipher = i.Cipher = function(e, t) {
e = e.toLowerCase();
var i, n;
if (s[e]) {
i = s[e].key;
n = s[e].iv;
} else {
if (!c[e]) throw new TypeError("invalid suite type");
i = 8 * c[e].key;
n = c[e].iv;
}
var a = r(t, !1, i, n);
return o(e, a.key, a.iv);
};
i.createCipheriv = i.Cipheriv = o;
i.createDecipher = i.Decipher = function(e, t) {
e = e.toLowerCase();
var i, n;
if (s[e]) {
i = s[e].key;
n = s[e].iv;
} else {
if (!c[e]) throw new TypeError("invalid suite type");
i = 8 * c[e].key;
n = c[e].iv;
}
var a = r(t, !1, i, n);
return h(e, a.key, a.iv);
};
i.createDecipheriv = i.Decipheriv = h;
i.listCiphers = i.getCiphers = function() {
return Object.keys(c).concat(a.getCiphers());
};
}, {
"browserify-aes/browser": 21,
"browserify-aes/modes": 32,
"browserify-des": 37,
"browserify-des/modes": 38,
evp_bytestokey: 84
} ],
37: [ function(n, a, e) {
(function(c) {
var r = n("cipher-base"), e = n("des.js"), t = n("inherits"), o = {
"des-ede3-cbc": e.CBC.instantiate(e.EDE),
"des-ede3": e.EDE,
"des-ede-cbc": e.CBC.instantiate(e.EDE),
"des-ede": e.EDE,
"des-cbc": e.CBC.instantiate(e.DES),
"des-ecb": e.DES
};
o.des = o["des-cbc"];
o.des3 = o["des-ede3-cbc"];
t(a.exports = i, r);
function i(e) {
r.call(this);
var t, i = e.mode.toLowerCase(), n = o[i];
t = e.decrypt ? "decrypt" : "encrypt";
var a = e.key;
"des-ede" !== i && "des-ede-cbc" !== i || (a = c.concat([ a, a.slice(0, 8) ]));
var s = e.iv;
this._des = n.create({
key: a,
iv: s,
type: t
});
}
i.prototype._update = function(e) {
return new c(this._des.update(e));
};
i.prototype._final = function() {
return new c(this._des.final());
};
}).call(this, n("buffer").Buffer);
}, {
buffer: 47,
"cipher-base": 49,
"des.js": 57,
inherits: 101
} ],
38: [ function(e, t, i) {
i["des-ecb"] = {
key: 8,
iv: 0
};
i["des-cbc"] = i.des = {
key: 8,
iv: 8
};
i["des-ede3-cbc"] = i.des3 = {
key: 24,
iv: 8
};
i["des-ede3"] = {
key: 24,
iv: 0
};
i["des-ede-cbc"] = {
key: 16,
iv: 8
};
i["des-ede"] = {
key: 16,
iv: 0
};
}, {} ],
39: [ function(t, i, e) {
(function(_) {
var f = t("bn.js"), n = t("randombytes");
function e(e, t) {
var i, n, a = {
blinder: (n = p(i = t)).toRed(f.mont(i.modulus)).redPow(new f(i.publicExponent)).fromRed(),
unblinder: n.invm(i.modulus)
}, s = t.modulus.byteLength(), c = (f.mont(t.modulus), new f(e).mul(a.blinder).umod(t.modulus)), r = c.toRed(f.mont(t.prime1)), o = c.toRed(f.mont(t.prime2)), h = t.coefficient, l = t.prime1, d = t.prime2, u = r.redPow(t.exponent1), v = o.redPow(t.exponent2);
u = u.fromRed();
v = v.fromRed();
var g = u.isub(v).imul(h).umod(l);
g.imul(d);
v.iadd(g);
return new _(v.imul(a.unblinder).umod(t.modulus).toArray(!1, s));
}
(i.exports = e).getr = p;
function p(e) {
for (var t = e.modulus.byteLength(), i = new f(n(t)); 0 <= i.cmp(e.modulus) || !i.umod(e.prime1) || !i.umod(e.prime2); ) i = new f(n(t));
return i;
}
}).call(this, t("buffer").Buffer);
}, {
"bn.js": 16,
buffer: 47,
randombytes: 125
} ],
40: [ function(e, t, i) {
t.exports = e("./browser/algorithms.json");
}, {
"./browser/algorithms.json": 41
} ],
41: [ function(e, t, i) {
t.exports = {
sha224WithRSAEncryption: {
sign: "rsa",
hash: "sha224",
id: "302d300d06096086480165030402040500041c"
},
"RSA-SHA224": {
sign: "ecdsa/rsa",
hash: "sha224",
id: "302d300d06096086480165030402040500041c"
},
sha256WithRSAEncryption: {
sign: "rsa",
hash: "sha256",
id: "3031300d060960864801650304020105000420"
},
"RSA-SHA256": {
sign: "ecdsa/rsa",
hash: "sha256",
id: "3031300d060960864801650304020105000420"
},
sha384WithRSAEncryption: {
sign: "rsa",
hash: "sha384",
id: "3041300d060960864801650304020205000430"
},
"RSA-SHA384": {
sign: "ecdsa/rsa",
hash: "sha384",
id: "3041300d060960864801650304020205000430"
},
sha512WithRSAEncryption: {
sign: "rsa",
hash: "sha512",
id: "3051300d060960864801650304020305000440"
},
"RSA-SHA512": {
sign: "ecdsa/rsa",
hash: "sha512",
id: "3051300d060960864801650304020305000440"
},
"RSA-SHA1": {
sign: "rsa",
hash: "sha1",
id: "3021300906052b0e03021a05000414"
},
"ecdsa-with-SHA1": {
sign: "ecdsa",
hash: "sha1",
id: ""
},
sha256: {
sign: "ecdsa",
hash: "sha256",
id: ""
},
sha224: {
sign: "ecdsa",
hash: "sha224",
id: ""
},
sha384: {
sign: "ecdsa",
hash: "sha384",
id: ""
},
sha512: {
sign: "ecdsa",
hash: "sha512",
id: ""
},
"DSA-SHA": {
sign: "dsa",
hash: "sha1",
id: ""
},
"DSA-SHA1": {
sign: "dsa",
hash: "sha1",
id: ""
},
DSA: {
sign: "dsa",
hash: "sha1",
id: ""
},
"DSA-WITH-SHA224": {
sign: "dsa",
hash: "sha224",
id: ""
},
"DSA-SHA224": {
sign: "dsa",
hash: "sha224",
id: ""
},
"DSA-WITH-SHA256": {
sign: "dsa",
hash: "sha256",
id: ""
},
"DSA-SHA256": {
sign: "dsa",
hash: "sha256",
id: ""
},
"DSA-WITH-SHA384": {
sign: "dsa",
hash: "sha384",
id: ""
},
"DSA-SHA384": {
sign: "dsa",
hash: "sha384",
id: ""
},
"DSA-WITH-SHA512": {
sign: "dsa",
hash: "sha512",
id: ""
},
"DSA-SHA512": {
sign: "dsa",
hash: "sha512",
id: ""
},
"DSA-RIPEMD160": {
sign: "dsa",
hash: "rmd160",
id: ""
},
ripemd160WithRSA: {
sign: "rsa",
hash: "rmd160",
id: "3021300906052b2403020105000414"
},
"RSA-RIPEMD160": {
sign: "rsa",
hash: "rmd160",
id: "3021300906052b2403020105000414"
},
md5WithRSAEncryption: {
sign: "rsa",
hash: "md5",
id: "3020300c06082a864886f70d020505000410"
},
"RSA-MD5": {
sign: "rsa",
hash: "md5",
id: "3020300c06082a864886f70d020505000410"
}
};
}, {} ],
42: [ function(e, t, i) {
t.exports = {
"1.3.132.0.10": "secp256k1",
"1.3.132.0.33": "p224",
"1.2.840.10045.3.1.1": "p192",
"1.2.840.10045.3.1.7": "p256",
"1.3.132.0.34": "p384",
"1.3.132.0.35": "p521"
};
}, {} ],
43: [ function(d, u, e) {
(function(a) {
var i = d("create-hash"), n = d("stream"), e = d("inherits"), s = d("./sign"), c = d("./verify"), r = d("./algorithms.json");
Object.keys(r).forEach(function(e) {
r[e].id = new a(r[e].id, "hex");
r[e.toLowerCase()] = r[e];
});
function t(e) {
n.Writable.call(this);
var t = r[e];
if (!t) throw new Error("Unknown message digest");
this._hashType = t.hash;
this._hash = i(t.hash);
this._tag = t.id;
this._signType = t.sign;
}
e(t, n.Writable);
t.prototype._write = function(e, t, i) {
this._hash.update(e);
i();
};
t.prototype.update = function(e, t) {
"string" == typeof e && (e = new a(e, t));
this._hash.update(e);
return this;
};
t.prototype.sign = function(e, t) {
this.end();
var i = this._hash.digest(), n = s(i, e, this._hashType, this._signType, this._tag);
return t ? n.toString(t) : n;
};
function o(e) {
n.Writable.call(this);
var t = r[e];
if (!t) throw new Error("Unknown message digest");
this._hash = i(t.hash);
this._tag = t.id;
this._signType = t.sign;
}
e(o, n.Writable);
o.prototype._write = function(e, t, i) {
this._hash.update(e);
i();
};
o.prototype.update = function(e, t) {
"string" == typeof e && (e = new a(e, t));
this._hash.update(e);
return this;
};
o.prototype.verify = function(e, t, i) {
"string" == typeof t && (t = new a(t, i));
this.end();
var n = this._hash.digest();
return c(t, n, e, this._signType, this._tag);
};
function h(e) {
return new t(e);
}
function l(e) {
return new o(e);
}
u.exports = {
Sign: h,
Verify: l,
createSign: h,
createVerify: l
};
}).call(this, d("buffer").Buffer);
}, {
"./algorithms.json": 41,
"./sign": 44,
"./verify": 45,
buffer: 47,
"create-hash": 52,
inherits: 101,
stream: 152
} ],
44: [ function(e, t, i) {
(function(_) {
var h = e("create-hmac"), l = e("browserify-rsa"), d = e("elliptic").ec, f = e("bn.js"), u = e("parse-asn1"), v = e("./curves.json");
function p(e, t, i, n) {
if ((e = new _(e.toArray())).length < t.byteLength()) {
var a = new _(t.byteLength() - e.length);
a.fill(0);
e = _.concat([ a, e ]);
}
var s = i.length, c = function(e, t) {
e = (e = m(e, t)).mod(t);
var i = new _(e.toArray());
if (i.length < t.byteLength()) {
var n = new _(t.byteLength() - i.length);
n.fill(0);
i = _.concat([ n, i ]);
}
return i;
}(i, t), r = new _(s);
r.fill(1);
var o = new _(s);
o.fill(0);
o = h(n, o).update(r).update(new _([ 0 ])).update(e).update(c).digest();
r = h(n, o).update(r).digest();
return {
k: o = h(n, o).update(r).update(new _([ 1 ])).update(e).update(c).digest(),
v: r = h(n, o).update(r).digest()
};
}
function m(e, t) {
var i = new f(e), n = (e.length << 3) - t.bitLength();
0 < n && i.ishrn(n);
return i;
}
function C(e, t, i) {
var n, a;
do {
n = new _(0);
for (;8 * n.length < e.bitLength(); ) {
t.v = h(i, t.k).update(t.v).digest();
n = _.concat([ n, t.v ]);
}
a = m(n, e);
t.k = h(i, t.k).update(t.v).update(new _([ 0 ])).digest();
t.v = h(i, t.k).update(t.v).digest();
} while (-1 !== a.cmp(e));
return a;
}
t.exports = function(e, t, i, n, a) {
var s = u(t);
if (s.curve) {
if ("ecdsa" !== n && "ecdsa/rsa" !== n) throw new Error("wrong private key type");
return function(e, t) {
var i = v[t.curve.join(".")];
if (!i) throw new Error("unknown curve " + t.curve.join("."));
var n = new d(i).keyFromPrivate(t.privateKey).sign(e);
return new _(n.toDER());
}(e, s);
}
if ("dsa" === s.type) {
if ("dsa" !== n) throw new Error("wrong private key type");
return function(e, t, i) {
for (var n, a, s, c, r = t.params.priv_key, o = t.params.p, h = t.params.q, l = t.params.g, d = new f(0), u = m(e, h).mod(h), v = !1, g = p(r, h, e, i); !1 === v; ) {
n = C(h, g, i);
d = (a = n, s = o, c = h, l.toRed(f.mont(s)).redPow(a).fromRed().mod(c));
if (0 === (v = n.invm(h).imul(u.add(r.mul(d))).mod(h)).cmpn(0)) {
v = !1;
d = new f(0);
}
}
return function(e, t) {
e = e.toArray();
t = t.toArray();
128 & e[0] && (e = [ 0 ].concat(e));
128 & t[0] && (t = [ 0 ].concat(t));
var i = [ 48, e.length + t.length + 4, 2, e.length ];
i = i.concat(e, [ 2, t.length ], t);
return new _(i);
}(d, v);
}(e, s, i);
}
if ("rsa" !== n && "ecdsa/rsa" !== n) throw new Error("wrong private key type");
e = _.concat([ a, e ]);
for (var c = s.modulus.byteLength(), r = [ 0, 1 ]; e.length + r.length + 1 < c; ) r.push(255);
r.push(0);
for (var o = -1; ++o < e.length; ) r.push(e[o]);
return l(r, s);
};
t.exports.getKey = p;
t.exports.makeKey = C;
}).call(this, e("buffer").Buffer);
}, {
"./curves.json": 42,
"bn.js": 16,
"browserify-rsa": 39,
buffer: 47,
"create-hmac": 54,
elliptic: 67,
"parse-asn1": 111
} ],
45: [ function(e, t, i) {
(function(u) {
var v = e("bn.js"), g = e("elliptic").ec, _ = e("parse-asn1"), f = e("./curves.json");
function p(e, t) {
if (e.cmpn(0) <= 0) throw new Error("invalid sig");
if (e.cmp(t) >= t) throw new Error("invalid sig");
}
t.exports = function(e, t, i, n, a) {
var s = _(i);
if ("ec" === s.type) {
if ("ecdsa" !== n && "ecdsa/rsa" !== n) throw new Error("wrong public key type");
return function(e, t, i) {
var n = f[i.data.algorithm.curve.join(".")];
if (!n) throw new Error("unknown curve " + i.data.algorithm.curve.join("."));
var a = new g(n), s = i.data.subjectPrivateKey.data;
return a.verify(t, e, s);
}(e, t, s);
}
if ("dsa" === s.type) {
if ("dsa" !== n) throw new Error("wrong public key type");
return function(e, t, i) {
var n = i.data.p, a = i.data.q, s = i.data.g, c = i.data.pub_key, r = _.signature.decode(e, "der"), o = r.s, h = r.r;
p(o, a);
p(h, a);
var l = v.mont(n), d = o.invm(a);
return 0 === s.toRed(l).redPow(new v(t).mul(d).mod(a)).fromRed().mul(c.toRed(l).redPow(h.mul(d).mod(a)).fromRed()).mod(n).mod(a).cmp(h);
}(e, t, s);
}
if ("rsa" !== n && "ecdsa/rsa" !== n) throw new Error("wrong public key type");
t = u.concat([ a, t ]);
for (var c = s.modulus.byteLength(), r = [ 1 ], o = 0; t.length + r.length + 2 < c; ) {
r.push(255);
o++;
}
r.push(0);
for (var h = -1; ++h < t.length; ) r.push(t[h]);
r = new u(r);
var l = v.mont(s.modulus);
e = (e = new v(e).toRed(l)).redPow(new v(s.publicExponent));
e = new u(e.fromRed().toArray());
var d = o < 8 ? 1 : 0;
c = Math.min(e.length, r.length);
e.length !== r.length && (d = 1);
h = -1;
for (;++h < c; ) d |= e[h] ^ r[h];
return 0 === d;
};
}).call(this, e("buffer").Buffer);
}, {
"./curves.json": 42,
"bn.js": 16,
buffer: 47,
elliptic: 67,
"parse-asn1": 111
} ],
46: [ function(e, t, i) {
(function(s) {
t.exports = function(e, t) {
for (var i = Math.min(e.length, t.length), n = new s(i), a = 0; a < i; ++a) n[a] = e[a] ^ t[a];
return n;
};
}).call(this, e("buffer").Buffer);
}, {
buffer: 47
} ],
47: [ function(t, e, H) {
(function(e) {
"use strict";
var n = t("base64-js"), s = t("ieee754"), c = t("isarray");
H.Buffer = d;
H.SlowBuffer = function(e) {
+e != e && (e = 0);
return d.alloc(+e);
};
H.INSPECT_MAX_BYTES = 50;
d.TYPED_ARRAY_SUPPORT = void 0 !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : function() {
try {
var e = new Uint8Array(1);
e.__proto__ = {
__proto__: Uint8Array.prototype,
foo: function() {
return 42;
}
};
return 42 === e.foo() && "function" == typeof e.subarray && 0 === e.subarray(1, 1).byteLength;
} catch (e) {
return !1;
}
}();
H.kMaxLength = i();
function i() {
return d.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
}
function r(e, t) {
if (i() < t) throw new RangeError("Invalid typed array length");
if (d.TYPED_ARRAY_SUPPORT) (e = new Uint8Array(t)).__proto__ = d.prototype; else {
null === e && (e = new d(t));
e.length = t;
}
return e;
}
function d(e, t, i) {
if (!(d.TYPED_ARRAY_SUPPORT || this instanceof d)) return new d(e, t, i);
if ("number" == typeof e) {
if ("string" == typeof t) throw new Error("If encoding is specified then the first argument must be a string");
return h(this, e);
}
return a(this, e, t, i);
}
d.poolSize = 8192;
d._augment = function(e) {
e.__proto__ = d.prototype;
return e;
};
function a(e, t, i, n) {
if ("number" == typeof t) throw new TypeError('"value" argument must not be a number');
return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function(e, t, i, n) {
t.byteLength;
if (i < 0 || t.byteLength < i) throw new RangeError("'offset' is out of bounds");
if (t.byteLength < i + (n || 0)) throw new RangeError("'length' is out of bounds");
t = void 0 === i && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, i) : new Uint8Array(t, i, n);
d.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = d.prototype : e = l(e, t);
return e;
}(e, t, i, n) : "string" == typeof t ? function(e, t, i) {
"string" == typeof i && "" !== i || (i = "utf8");
if (!d.isEncoding(i)) throw new TypeError('"encoding" must be a valid string encoding');
var n = 0 | v(t, i), a = (e = r(e, n)).write(t, i);
a !== n && (e = e.slice(0, a));
return e;
}(e, t, i) : function(e, t) {
if (d.isBuffer(t)) {
var i = 0 | u(t.length);
if (0 === (e = r(e, i)).length) return e;
t.copy(e, 0, 0, i);
return e;
}
if (t) {
if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length" in t) return "number" != typeof t.length || (n = t.length) != n ? r(e, 0) : l(e, t);
if ("Buffer" === t.type && c(t.data)) return l(e, t.data);
}
var n;
throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
}(e, t);
}
d.from = function(e, t, i) {
return a(null, e, t, i);
};
if (d.TYPED_ARRAY_SUPPORT) {
d.prototype.__proto__ = Uint8Array.prototype;
d.__proto__ = Uint8Array;
"undefined" != typeof Symbol && Symbol.species && d[Symbol.species] === d && Object.defineProperty(d, Symbol.species, {
value: null,
configurable: !0
});
}
function o(e) {
if ("number" != typeof e) throw new TypeError('"size" argument must be a number');
if (e < 0) throw new RangeError('"size" argument must not be negative');
}
d.alloc = function(e, t, i) {
return function(e, t, i, n) {
o(t);
return t <= 0 ? r(e, t) : void 0 !== i ? "string" == typeof n ? r(e, t).fill(i, n) : r(e, t).fill(i) : r(e, t);
}(null, e, t, i);
};
function h(e, t) {
o(t);
e = r(e, t < 0 ? 0 : 0 | u(t));
if (!d.TYPED_ARRAY_SUPPORT) for (var i = 0; i < t; ++i) e[i] = 0;
return e;
}
d.allocUnsafe = function(e) {
return h(null, e);
};
d.allocUnsafeSlow = function(e) {
return h(null, e);
};
function l(e, t) {
var i = t.length < 0 ? 0 : 0 | u(t.length);
e = r(e, i);
for (var n = 0; n < i; n += 1) e[n] = 255 & t[n];
return e;
}
function u(e) {
if (e >= i()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + i().toString(16) + " bytes");
return 0 | e;
}
d.isBuffer = function(e) {
return !(null == e || !e._isBuffer);
};
d.compare = function(e, t) {
if (!d.isBuffer(e) || !d.isBuffer(t)) throw new TypeError("Arguments must be Buffers");
if (e === t) return 0;
for (var i = e.length, n = t.length, a = 0, s = Math.min(i, n); a < s; ++a) if (e[a] !== t[a]) {
i = e[a];
n = t[a];
break;
}
return i < n ? -1 : n < i ? 1 : 0;
};
d.isEncoding = function(e) {
switch (String(e).toLowerCase()) {
case "hex":
case "utf8":
case "utf-8":
case "ascii":
case "latin1":
case "binary":
case "base64":
case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return !0;

default:
return !1;
}
};
d.concat = function(e, t) {
if (!c(e)) throw new TypeError('"list" argument must be an Array of Buffers');
if (0 === e.length) return d.alloc(0);
var i;
if (void 0 === t) for (i = t = 0; i < e.length; ++i) t += e[i].length;
var n = d.allocUnsafe(t), a = 0;
for (i = 0; i < e.length; ++i) {
var s = e[i];
if (!d.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
s.copy(n, a);
a += s.length;
}
return n;
};
function v(e, t) {
if (d.isBuffer(e)) return e.length;
if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength;
"string" != typeof e && (e = "" + e);
var i = e.length;
if (0 === i) return 0;
for (var n = !1; ;) switch (t) {
case "ascii":
case "latin1":
case "binary":
return i;

case "utf8":
case "utf-8":
case void 0:
return R(e).length;

case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return 2 * i;

case "hex":
return i >>> 1;

case "base64":
return P(e).length;

default:
if (n) return R(e).length;
t = ("" + t).toLowerCase();
n = !0;
}
}
d.byteLength = v;
d.prototype._isBuffer = !0;
function g(e, t, i) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
d.prototype.swap16 = function() {
var e = this.length;
if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
for (var t = 0; t < e; t += 2) g(this, t, t + 1);
return this;
};
d.prototype.swap32 = function() {
var e = this.length;
if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
for (var t = 0; t < e; t += 4) {
g(this, t, t + 3);
g(this, t + 1, t + 2);
}
return this;
};
d.prototype.swap64 = function() {
var e = this.length;
if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
for (var t = 0; t < e; t += 8) {
g(this, t, t + 7);
g(this, t + 1, t + 6);
g(this, t + 2, t + 5);
g(this, t + 3, t + 4);
}
return this;
};
d.prototype.toString = function() {
var e = 0 | this.length;
return 0 === e ? "" : 0 === arguments.length ? y(this, 0, e) : function(e, t, i) {
var n = !1;
(void 0 === t || t < 0) && (t = 0);
if (t > this.length) return "";
(void 0 === i || i > this.length) && (i = this.length);
if (i <= 0) return "";
if ((i >>>= 0) <= (t >>>= 0)) return "";
e || (e = "utf8");
for (;;) switch (e) {
case "hex":
return S(this, t, i);

case "utf8":
case "utf-8":
return y(this, t, i);

case "ascii":
return M(this, t, i);

case "latin1":
case "binary":
return N(this, t, i);

case "base64":
return C(this, t, i);

case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return A(this, t, i);

default:
if (n) throw new TypeError("Unknown encoding: " + e);
e = (e + "").toLowerCase();
n = !0;
}
}.apply(this, arguments);
};
d.prototype.equals = function(e) {
if (!d.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
return this === e || 0 === d.compare(this, e);
};
d.prototype.inspect = function() {
var e = "", t = H.INSPECT_MAX_BYTES;
if (0 < this.length) {
e = this.toString("hex", 0, t).match(/.{2}/g).join(" ");
this.length > t && (e += " ... ");
}
return "<Buffer " + e + ">";
};
d.prototype.compare = function(e, t, i, n, a) {
if (!d.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
void 0 === t && (t = 0);
void 0 === i && (i = e ? e.length : 0);
void 0 === n && (n = 0);
void 0 === a && (a = this.length);
if (t < 0 || i > e.length || n < 0 || a > this.length) throw new RangeError("out of range index");
if (a <= n && i <= t) return 0;
if (a <= n) return -1;
if (i <= t) return 1;
if (this === e) return 0;
for (var s = (a >>>= 0) - (n >>>= 0), c = (i >>>= 0) - (t >>>= 0), r = Math.min(s, c), o = this.slice(n, a), h = e.slice(t, i), l = 0; l < r; ++l) if (o[l] !== h[l]) {
s = o[l];
c = h[l];
break;
}
return s < c ? -1 : c < s ? 1 : 0;
};
function _(e, t, i, n, a) {
if (0 === e.length) return -1;
if ("string" == typeof i) {
n = i;
i = 0;
} else 2147483647 < i ? i = 2147483647 : i < -2147483648 && (i = -2147483648);
i = +i;
isNaN(i) && (i = a ? 0 : e.length - 1);
i < 0 && (i = e.length + i);
if (i >= e.length) {
if (a) return -1;
i = e.length - 1;
} else if (i < 0) {
if (!a) return -1;
i = 0;
}
"string" == typeof t && (t = d.from(t, n));
if (d.isBuffer(t)) return 0 === t.length ? -1 : f(e, t, i, n, a);
if ("number" == typeof t) {
t &= 255;
return d.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? a ? Uint8Array.prototype.indexOf.call(e, t, i) : Uint8Array.prototype.lastIndexOf.call(e, t, i) : f(e, [ t ], i, n, a);
}
throw new TypeError("val must be string, number or Buffer");
}
function f(e, t, i, n, a) {
var s, c = 1, r = e.length, o = t.length;
if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
if (e.length < 2 || t.length < 2) return -1;
r /= c = 2;
o /= 2;
i /= 2;
}
function h(e, t) {
return 1 === c ? e[t] : e.readUInt16BE(t * c);
}
if (a) {
var l = -1;
for (s = i; s < r; s++) if (h(e, s) === h(t, -1 === l ? 0 : s - l)) {
-1 === l && (l = s);
if (s - l + 1 === o) return l * c;
} else {
-1 !== l && (s -= s - l);
l = -1;
}
} else {
r < i + o && (i = r - o);
for (s = i; 0 <= s; s--) {
for (var d = !0, u = 0; u < o; u++) if (h(e, s + u) !== h(t, u)) {
d = !1;
break;
}
if (d) return s;
}
}
return -1;
}
d.prototype.includes = function(e, t, i) {
return -1 !== this.indexOf(e, t, i);
};
d.prototype.indexOf = function(e, t, i) {
return _(this, e, t, i, !0);
};
d.prototype.lastIndexOf = function(e, t, i) {
return _(this, e, t, i, !1);
};
function p(e, t, i, n) {
i = Number(i) || 0;
var a = e.length - i;
n ? a < (n = Number(n)) && (n = a) : n = a;
var s = t.length;
if (s % 2 != 0) throw new TypeError("Invalid hex string");
s / 2 < n && (n = s / 2);
for (var c = 0; c < n; ++c) {
var r = parseInt(t.substr(2 * c, 2), 16);
if (isNaN(r)) return c;
e[i + c] = r;
}
return c;
}
function m(e, t, i, n) {
return D(function(e) {
for (var t = [], i = 0; i < e.length; ++i) t.push(255 & e.charCodeAt(i));
return t;
}(t), e, i, n);
}
d.prototype.write = function(e, t, i, n) {
if (void 0 === t) {
n = "utf8";
i = this.length;
t = 0;
} else if (void 0 === i && "string" == typeof t) {
n = t;
i = this.length;
t = 0;
} else {
if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
t |= 0;
if (isFinite(i)) {
i |= 0;
void 0 === n && (n = "utf8");
} else {
n = i;
i = void 0;
}
}
var a = this.length - t;
(void 0 === i || a < i) && (i = a);
if (0 < e.length && (i < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
n || (n = "utf8");
for (var s, c, r, o, h, l, d, u, v, g = !1; ;) switch (n) {
case "hex":
return p(this, e, t, i);

case "utf8":
case "utf-8":
return u = t, v = i, D(R(e, (d = this).length - u), d, u, v);

case "ascii":
return m(this, e, t, i);

case "latin1":
case "binary":
return m(this, e, t, i);

case "base64":
return o = this, h = t, l = i, D(P(e), o, h, l);

case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return c = t, r = i, D(function(e, t) {
for (var i, n, a, s = [], c = 0; c < e.length && !((t -= 2) < 0); ++c) {
i = e.charCodeAt(c);
n = i >> 8;
a = i % 256;
s.push(a);
s.push(n);
}
return s;
}(e, (s = this).length - c), s, c, r);

default:
if (g) throw new TypeError("Unknown encoding: " + n);
n = ("" + n).toLowerCase();
g = !0;
}
};
d.prototype.toJSON = function() {
return {
type: "Buffer",
data: Array.prototype.slice.call(this._arr || this, 0)
};
};
function C(e, t, i) {
return 0 === t && i === e.length ? n.fromByteArray(e) : n.fromByteArray(e.slice(t, i));
}
function y(e, t, i) {
i = Math.min(e.length, i);
for (var n = [], a = t; a < i; ) {
var s = e[a], c = null, r = 239 < s ? 4 : 223 < s ? 3 : 191 < s ? 2 : 1;
if (a + r <= i) {
var o, h, l, d;
switch (r) {
case 1:
s < 128 && (c = s);
break;

case 2:
128 == (192 & (o = e[a + 1])) && 127 < (d = (31 & s) << 6 | 63 & o) && (c = d);
break;

case 3:
o = e[a + 1];
h = e[a + 2];
128 == (192 & o) && 128 == (192 & h) && 2047 < (d = (15 & s) << 12 | (63 & o) << 6 | 63 & h) && (d < 55296 || 57343 < d) && (c = d);
break;

case 4:
o = e[a + 1];
h = e[a + 2];
l = e[a + 3];
128 == (192 & o) && 128 == (192 & h) && 128 == (192 & l) && 65535 < (d = (15 & s) << 18 | (63 & o) << 12 | (63 & h) << 6 | 63 & l) && d < 1114112 && (c = d);
}
}
if (null === c) {
c = 65533;
r = 1;
} else if (65535 < c) {
c -= 65536;
n.push(c >>> 10 & 1023 | 55296);
c = 56320 | 1023 & c;
}
n.push(c);
a += r;
}
return function(e) {
var t = e.length;
if (t <= b) return String.fromCharCode.apply(String, e);
var i = "", n = 0;
for (;n < t; ) i += String.fromCharCode.apply(String, e.slice(n, n += b));
return i;
}(n);
}
var b = 4096;
function M(e, t, i) {
var n = "";
i = Math.min(e.length, i);
for (var a = t; a < i; ++a) n += String.fromCharCode(127 & e[a]);
return n;
}
function N(e, t, i) {
var n = "";
i = Math.min(e.length, i);
for (var a = t; a < i; ++a) n += String.fromCharCode(e[a]);
return n;
}
function S(e, t, i) {
var n = e.length;
(!t || t < 0) && (t = 0);
(!i || i < 0 || n < i) && (i = n);
for (var a = "", s = t; s < i; ++s) a += x(e[s]);
return a;
}
function A(e, t, i) {
for (var n = e.slice(t, i), a = "", s = 0; s < n.length; s += 2) a += String.fromCharCode(n[s] + 256 * n[s + 1]);
return a;
}
d.prototype.slice = function(e, t) {
var i, n = this.length;
(e = ~~e) < 0 ? (e += n) < 0 && (e = 0) : n < e && (e = n);
(t = void 0 === t ? n : ~~t) < 0 ? (t += n) < 0 && (t = 0) : n < t && (t = n);
t < e && (t = e);
if (d.TYPED_ARRAY_SUPPORT) (i = this.subarray(e, t)).__proto__ = d.prototype; else {
var a = t - e;
i = new d(a, void 0);
for (var s = 0; s < a; ++s) i[s] = this[s + e];
}
return i;
};
function I(e, t, i) {
if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
if (i < e + t) throw new RangeError("Trying to access beyond buffer length");
}
d.prototype.readUIntLE = function(e, t, i) {
e |= 0;
t |= 0;
i || I(e, t, this.length);
for (var n = this[e], a = 1, s = 0; ++s < t && (a *= 256); ) n += this[e + s] * a;
return n;
};
d.prototype.readUIntBE = function(e, t, i) {
e |= 0;
t |= 0;
i || I(e, t, this.length);
for (var n = this[e + --t], a = 1; 0 < t && (a *= 256); ) n += this[e + --t] * a;
return n;
};
d.prototype.readUInt8 = function(e, t) {
t || I(e, 1, this.length);
return this[e];
};
d.prototype.readUInt16LE = function(e, t) {
t || I(e, 2, this.length);
return this[e] | this[e + 1] << 8;
};
d.prototype.readUInt16BE = function(e, t) {
t || I(e, 2, this.length);
return this[e] << 8 | this[e + 1];
};
d.prototype.readUInt32LE = function(e, t) {
t || I(e, 4, this.length);
return (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];
};
d.prototype.readUInt32BE = function(e, t) {
t || I(e, 4, this.length);
return 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
};
d.prototype.readIntLE = function(e, t, i) {
e |= 0;
t |= 0;
i || I(e, t, this.length);
for (var n = this[e], a = 1, s = 0; ++s < t && (a *= 256); ) n += this[e + s] * a;
(a *= 128) <= n && (n -= Math.pow(2, 8 * t));
return n;
};
d.prototype.readIntBE = function(e, t, i) {
e |= 0;
t |= 0;
i || I(e, t, this.length);
for (var n = t, a = 1, s = this[e + --n]; 0 < n && (a *= 256); ) s += this[e + --n] * a;
(a *= 128) <= s && (s -= Math.pow(2, 8 * t));
return s;
};
d.prototype.readInt8 = function(e, t) {
t || I(e, 1, this.length);
return 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
};
d.prototype.readInt16LE = function(e, t) {
t || I(e, 2, this.length);
var i = this[e] | this[e + 1] << 8;
return 32768 & i ? 4294901760 | i : i;
};
d.prototype.readInt16BE = function(e, t) {
t || I(e, 2, this.length);
var i = this[e + 1] | this[e] << 8;
return 32768 & i ? 4294901760 | i : i;
};
d.prototype.readInt32LE = function(e, t) {
t || I(e, 4, this.length);
return this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
};
d.prototype.readInt32BE = function(e, t) {
t || I(e, 4, this.length);
return this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
};
d.prototype.readFloatLE = function(e, t) {
t || I(e, 4, this.length);
return s.read(this, e, !0, 23, 4);
};
d.prototype.readFloatBE = function(e, t) {
t || I(e, 4, this.length);
return s.read(this, e, !1, 23, 4);
};
d.prototype.readDoubleLE = function(e, t) {
t || I(e, 8, this.length);
return s.read(this, e, !0, 52, 8);
};
d.prototype.readDoubleBE = function(e, t) {
t || I(e, 8, this.length);
return s.read(this, e, !1, 52, 8);
};
function E(e, t, i, n, a, s) {
if (!d.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
if (a < t || t < s) throw new RangeError('"value" argument is out of bounds');
if (i + n > e.length) throw new RangeError("Index out of range");
}
d.prototype.writeUIntLE = function(e, t, i, n) {
e = +e;
t |= 0;
i |= 0;
if (!n) {
E(this, e, t, i, Math.pow(2, 8 * i) - 1, 0);
}
var a = 1, s = 0;
this[t] = 255 & e;
for (;++s < i && (a *= 256); ) this[t + s] = e / a & 255;
return t + i;
};
d.prototype.writeUIntBE = function(e, t, i, n) {
e = +e;
t |= 0;
i |= 0;
if (!n) {
E(this, e, t, i, Math.pow(2, 8 * i) - 1, 0);
}
var a = i - 1, s = 1;
this[t + a] = 255 & e;
for (;0 <= --a && (s *= 256); ) this[t + a] = e / s & 255;
return t + i;
};
d.prototype.writeUInt8 = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 1, 255, 0);
d.TYPED_ARRAY_SUPPORT || (e = Math.floor(e));
this[t] = 255 & e;
return t + 1;
};
function B(e, t, i, n) {
t < 0 && (t = 65535 + t + 1);
for (var a = 0, s = Math.min(e.length - i, 2); a < s; ++a) e[i + a] = (t & 255 << 8 * (n ? a : 1 - a)) >>> 8 * (n ? a : 1 - a);
}
d.prototype.writeUInt16LE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 2, 65535, 0);
if (d.TYPED_ARRAY_SUPPORT) {
this[t] = 255 & e;
this[t + 1] = e >>> 8;
} else B(this, e, t, !0);
return t + 2;
};
d.prototype.writeUInt16BE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 2, 65535, 0);
if (d.TYPED_ARRAY_SUPPORT) {
this[t] = e >>> 8;
this[t + 1] = 255 & e;
} else B(this, e, t, !1);
return t + 2;
};
function w(e, t, i, n) {
t < 0 && (t = 4294967295 + t + 1);
for (var a = 0, s = Math.min(e.length - i, 4); a < s; ++a) e[i + a] = t >>> 8 * (n ? a : 3 - a) & 255;
}
d.prototype.writeUInt32LE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 4, 4294967295, 0);
if (d.TYPED_ARRAY_SUPPORT) {
this[t + 3] = e >>> 24;
this[t + 2] = e >>> 16;
this[t + 1] = e >>> 8;
this[t] = 255 & e;
} else w(this, e, t, !0);
return t + 4;
};
d.prototype.writeUInt32BE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 4, 4294967295, 0);
if (d.TYPED_ARRAY_SUPPORT) {
this[t] = e >>> 24;
this[t + 1] = e >>> 16;
this[t + 2] = e >>> 8;
this[t + 3] = 255 & e;
} else w(this, e, t, !1);
return t + 4;
};
d.prototype.writeIntLE = function(e, t, i, n) {
e = +e;
t |= 0;
if (!n) {
var a = Math.pow(2, 8 * i - 1);
E(this, e, t, i, a - 1, -a);
}
var s = 0, c = 1, r = 0;
this[t] = 255 & e;
for (;++s < i && (c *= 256); ) {
e < 0 && 0 === r && 0 !== this[t + s - 1] && (r = 1);
this[t + s] = (e / c >> 0) - r & 255;
}
return t + i;
};
d.prototype.writeIntBE = function(e, t, i, n) {
e = +e;
t |= 0;
if (!n) {
var a = Math.pow(2, 8 * i - 1);
E(this, e, t, i, a - 1, -a);
}
var s = i - 1, c = 1, r = 0;
this[t + s] = 255 & e;
for (;0 <= --s && (c *= 256); ) {
e < 0 && 0 === r && 0 !== this[t + s + 1] && (r = 1);
this[t + s] = (e / c >> 0) - r & 255;
}
return t + i;
};
d.prototype.writeInt8 = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 1, 127, -128);
d.TYPED_ARRAY_SUPPORT || (e = Math.floor(e));
e < 0 && (e = 255 + e + 1);
this[t] = 255 & e;
return t + 1;
};
d.prototype.writeInt16LE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 2, 32767, -32768);
if (d.TYPED_ARRAY_SUPPORT) {
this[t] = 255 & e;
this[t + 1] = e >>> 8;
} else B(this, e, t, !0);
return t + 2;
};
d.prototype.writeInt16BE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 2, 32767, -32768);
if (d.TYPED_ARRAY_SUPPORT) {
this[t] = e >>> 8;
this[t + 1] = 255 & e;
} else B(this, e, t, !1);
return t + 2;
};
d.prototype.writeInt32LE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 4, 2147483647, -2147483648);
if (d.TYPED_ARRAY_SUPPORT) {
this[t] = 255 & e;
this[t + 1] = e >>> 8;
this[t + 2] = e >>> 16;
this[t + 3] = e >>> 24;
} else w(this, e, t, !0);
return t + 4;
};
d.prototype.writeInt32BE = function(e, t, i) {
e = +e;
t |= 0;
i || E(this, e, t, 4, 2147483647, -2147483648);
e < 0 && (e = 4294967295 + e + 1);
if (d.TYPED_ARRAY_SUPPORT) {
this[t] = e >>> 24;
this[t + 1] = e >>> 16;
this[t + 2] = e >>> 8;
this[t + 3] = 255 & e;
} else w(this, e, t, !1);
return t + 4;
};
function k(e, t, i, n, a, s) {
if (i + n > e.length) throw new RangeError("Index out of range");
if (i < 0) throw new RangeError("Index out of range");
}
function T(e, t, i, n, a) {
a || k(e, 0, i, 4);
s.write(e, t, i, n, 23, 4);
return i + 4;
}
d.prototype.writeFloatLE = function(e, t, i) {
return T(this, e, t, !0, i);
};
d.prototype.writeFloatBE = function(e, t, i) {
return T(this, e, t, !1, i);
};
function L(e, t, i, n, a) {
a || k(e, 0, i, 8);
s.write(e, t, i, n, 52, 8);
return i + 8;
}
d.prototype.writeDoubleLE = function(e, t, i) {
return L(this, e, t, !0, i);
};
d.prototype.writeDoubleBE = function(e, t, i) {
return L(this, e, t, !1, i);
};
d.prototype.copy = function(e, t, i, n) {
i || (i = 0);
n || 0 === n || (n = this.length);
t >= e.length && (t = e.length);
t || (t = 0);
0 < n && n < i && (n = i);
if (n === i) return 0;
if (0 === e.length || 0 === this.length) return 0;
if (t < 0) throw new RangeError("targetStart out of bounds");
if (i < 0 || i >= this.length) throw new RangeError("sourceStart out of bounds");
if (n < 0) throw new RangeError("sourceEnd out of bounds");
n > this.length && (n = this.length);
e.length - t < n - i && (n = e.length - t + i);
var a, s = n - i;
if (this === e && i < t && t < n) for (a = s - 1; 0 <= a; --a) e[a + t] = this[a + i]; else if (s < 1e3 || !d.TYPED_ARRAY_SUPPORT) for (a = 0; a < s; ++a) e[a + t] = this[a + i]; else Uint8Array.prototype.set.call(e, this.subarray(i, i + s), t);
return s;
};
d.prototype.fill = function(e, t, i, n) {
if ("string" == typeof e) {
if ("string" == typeof t) {
n = t;
t = 0;
i = this.length;
} else if ("string" == typeof i) {
n = i;
i = this.length;
}
if (1 === e.length) {
var a = e.charCodeAt(0);
a < 256 && (e = a);
}
if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
if ("string" == typeof n && !d.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
} else "number" == typeof e && (e &= 255);
if (t < 0 || this.length < t || this.length < i) throw new RangeError("Out of range index");
if (i <= t) return this;
t >>>= 0;
i = void 0 === i ? this.length : i >>> 0;
e || (e = 0);
var s;
if ("number" == typeof e) for (s = t; s < i; ++s) this[s] = e; else {
var c = d.isBuffer(e) ? e : R(new d(e, n).toString()), r = c.length;
for (s = 0; s < i - t; ++s) this[s + t] = c[s % r];
}
return this;
};
var O = /[^+\/0-9A-Za-z-_]/g;
function x(e) {
return e < 16 ? "0" + e.toString(16) : e.toString(16);
}
function R(e, t) {
t = t || Infinity;
for (var i, n = e.length, a = null, s = [], c = 0; c < n; ++c) {
if (55295 < (i = e.charCodeAt(c)) && i < 57344) {
if (!a) {
if (56319 < i) {
-1 < (t -= 3) && s.push(239, 191, 189);
continue;
}
if (c + 1 === n) {
-1 < (t -= 3) && s.push(239, 191, 189);
continue;
}
a = i;
continue;
}
if (i < 56320) {
-1 < (t -= 3) && s.push(239, 191, 189);
a = i;
continue;
}
i = 65536 + (a - 55296 << 10 | i - 56320);
} else a && -1 < (t -= 3) && s.push(239, 191, 189);
a = null;
if (i < 128) {
if ((t -= 1) < 0) break;
s.push(i);
} else if (i < 2048) {
if ((t -= 2) < 0) break;
s.push(i >> 6 | 192, 63 & i | 128);
} else if (i < 65536) {
if ((t -= 3) < 0) break;
s.push(i >> 12 | 224, i >> 6 & 63 | 128, 63 & i | 128);
} else {
if (!(i < 1114112)) throw new Error("Invalid code point");
if ((t -= 4) < 0) break;
s.push(i >> 18 | 240, i >> 12 & 63 | 128, i >> 6 & 63 | 128, 63 & i | 128);
}
}
return s;
}
function P(e) {
return n.toByteArray(function(e) {
var t;
if ((e = (t = e, t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")).replace(O, "")).length < 2) return "";
for (;e.length % 4 != 0; ) e += "=";
return e;
}(e));
}
function D(e, t, i, n) {
for (var a = 0; a < n && !(a + i >= t.length || a >= e.length); ++a) t[a + i] = e[a];
return a;
}
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
"base64-js": 15,
ieee754: 99,
isarray: 48
} ],
48: [ function(e, t, i) {
var n = {}.toString;
t.exports = Array.isArray || function(e) {
return "[object Array]" == n.call(e);
};
}, {} ],
49: [ function(e, t, i) {
var a = e("safe-buffer").Buffer, n = e("stream").Transform, s = e("string_decoder").StringDecoder;
function c(e) {
n.call(this);
this.hashMode = "string" == typeof e;
this.hashMode ? this[e] = this._finalOrDigest : this.final = this._finalOrDigest;
if (this._final) {
this.__final = this._final;
this._final = null;
}
this._decoder = null;
this._encoding = null;
}
e("inherits")(c, n);
c.prototype.update = function(e, t, i) {
"string" == typeof e && (e = a.from(e, t));
var n = this._update(e);
if (this.hashMode) return this;
i && (n = this._toString(n, i));
return n;
};
c.prototype.setAutoPadding = function() {};
c.prototype.getAuthTag = function() {
throw new Error("trying to get auth tag in unsupported state");
};
c.prototype.setAuthTag = function() {
throw new Error("trying to set auth tag in unsupported state");
};
c.prototype.setAAD = function() {
throw new Error("trying to set aad in unsupported state");
};
c.prototype._transform = function(e, t, i) {
var n;
try {
this.hashMode ? this._update(e) : this.push(this._update(e));
} catch (e) {
n = e;
} finally {
i(n);
}
};
c.prototype._flush = function(e) {
var t;
try {
this.push(this.__final());
} catch (e) {
t = e;
}
e(t);
};
c.prototype._finalOrDigest = function(e) {
var t = this.__final() || a.alloc(0);
e && (t = this._toString(t, e, !0));
return t;
};
c.prototype._toString = function(e, t, i) {
if (!this._decoder) {
this._decoder = new s(t);
this._encoding = t;
}
if (this._encoding !== t) throw new Error("can't switch encodings");
var n = this._decoder.write(e);
i && (n += this._decoder.end());
return n;
};
t.exports = c;
}, {
inherits: 101,
"safe-buffer": 143,
stream: 152,
string_decoder: 153
} ],
50: [ function(e, t, i) {
(function(e) {
i.isArray = function(e) {
return Array.isArray ? Array.isArray(e) : "[object Array]" === t(e);
};
i.isBoolean = function(e) {
return "boolean" == typeof e;
};
i.isNull = function(e) {
return null === e;
};
i.isNullOrUndefined = function(e) {
return null == e;
};
i.isNumber = function(e) {
return "number" == typeof e;
};
i.isString = function(e) {
return "string" == typeof e;
};
i.isSymbol = function(e) {
return "symbol" == typeof e;
};
i.isUndefined = function(e) {
return void 0 === e;
};
i.isRegExp = function(e) {
return "[object RegExp]" === t(e);
};
i.isObject = function(e) {
return "object" == typeof e && null !== e;
};
i.isDate = function(e) {
return "[object Date]" === t(e);
};
i.isError = function(e) {
return "[object Error]" === t(e) || e instanceof Error;
};
i.isFunction = function(e) {
return "function" == typeof e;
};
i.isPrimitive = function(e) {
return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || "undefined" == typeof e;
};
i.isBuffer = e.isBuffer;
function t(e) {
return Object.prototype.toString.call(e);
}
}).call(this, {
isBuffer: e("../../is-buffer/index.js")
});
}, {
"../../is-buffer/index.js": 102
} ],
51: [ function(e, r, t) {
(function(s) {
var t = e("elliptic"), n = e("bn.js");
r.exports = function(e) {
return new a(e);
};
var i = {
secp256k1: {
name: "secp256k1",
byteLength: 32
},
secp224r1: {
name: "p224",
byteLength: 28
},
prime256v1: {
name: "p256",
byteLength: 32
},
prime192v1: {
name: "p192",
byteLength: 24
},
ed25519: {
name: "ed25519",
byteLength: 32
},
secp384r1: {
name: "p384",
byteLength: 48
},
secp521r1: {
name: "p521",
byteLength: 66
}
};
i.p224 = i.secp224r1;
i.p256 = i.secp256r1 = i.prime256v1;
i.p192 = i.secp192r1 = i.prime192v1;
i.p384 = i.secp384r1;
i.p521 = i.secp521r1;
function a(e) {
this.curveType = i[e];
this.curveType || (this.curveType = {
name: e
});
this.curve = new t.ec(this.curveType.name);
this.keys = void 0;
}
a.prototype.generateKeys = function(e, t) {
this.keys = this.curve.genKeyPair();
return this.getPublicKey(e, t);
};
a.prototype.computeSecret = function(e, t, i) {
t = t || "utf8";
s.isBuffer(e) || (e = new s(e, t));
return c(this.curve.keyFromPublic(e).getPublic().mul(this.keys.getPrivate()).getX(), i, this.curveType.byteLength);
};
a.prototype.getPublicKey = function(e, t) {
var i = this.keys.getPublic("compressed" === t, !0);
"hybrid" === t && (i[i.length - 1] % 2 ? i[0] = 7 : i[0] = 6);
return c(i, e);
};
a.prototype.getPrivateKey = function(e) {
return c(this.keys.getPrivate(), e);
};
a.prototype.setPublicKey = function(e, t) {
t = t || "utf8";
s.isBuffer(e) || (e = new s(e, t));
this.keys._importPublic(e);
return this;
};
a.prototype.setPrivateKey = function(e, t) {
t = t || "utf8";
s.isBuffer(e) || (e = new s(e, t));
var i = new n(e);
i = i.toString(16);
this.keys = this.curve.genKeyPair();
this.keys._importPrivate(i);
return this;
};
function c(e, t, i) {
Array.isArray(e) || (e = e.toArray());
var n = new s(e);
if (i && n.length < i) {
var a = new s(i - n.length);
a.fill(0);
n = s.concat([ a, n ]);
}
return t ? n.toString(t) : n;
}
}).call(this, e("buffer").Buffer);
}, {
"bn.js": 16,
buffer: 47,
elliptic: 67
} ],
52: [ function(e, t, i) {
"use strict";
var n = e("inherits"), a = e("md5.js"), s = e("ripemd160"), c = e("sha.js"), r = e("cipher-base");
function o(e) {
r.call(this, "digest");
this._hash = e;
}
n(o, r);
o.prototype._update = function(e) {
this._hash.update(e);
};
o.prototype._final = function() {
return this._hash.digest();
};
t.exports = function(e) {
return "md5" === (e = e.toLowerCase()) ? new a() : "rmd160" === e || "ripemd160" === e ? new s() : new o(c(e));
};
}, {
"cipher-base": 49,
inherits: 101,
"md5.js": 103,
ripemd160: 142,
"sha.js": 145
} ],
53: [ function(e, t, i) {
var n = e("md5.js");
t.exports = function(e) {
return new n().update(e).digest();
};
}, {
"md5.js": 103
} ],
54: [ function(e, t, i) {
"use strict";
var n = e("inherits"), a = e("./legacy"), c = e("cipher-base"), r = e("safe-buffer").Buffer, s = e("create-hash/md5"), o = e("ripemd160"), h = e("sha.js"), l = r.alloc(128);
function d(e, t) {
c.call(this, "digest");
"string" == typeof t && (t = r.from(t));
var i = "sha512" === e || "sha384" === e ? 128 : 64;
this._alg = e;
if ((this._key = t).length > i) {
t = ("rmd160" === e ? new o() : h(e)).update(t).digest();
} else t.length < i && (t = r.concat([ t, l ], i));
for (var n = this._ipad = r.allocUnsafe(i), a = this._opad = r.allocUnsafe(i), s = 0; s < i; s++) {
n[s] = 54 ^ t[s];
a[s] = 92 ^ t[s];
}
this._hash = "rmd160" === e ? new o() : h(e);
this._hash.update(n);
}
n(d, c);
d.prototype._update = function(e) {
this._hash.update(e);
};
d.prototype._final = function() {
var e = this._hash.digest();
return ("rmd160" === this._alg ? new o() : h(this._alg)).update(this._opad).update(e).digest();
};
t.exports = function(e, t) {
return "rmd160" === (e = e.toLowerCase()) || "ripemd160" === e ? new d("rmd160", t) : "md5" === e ? new a(s, t) : new d(e, t);
};
}, {
"./legacy": 55,
"cipher-base": 49,
"create-hash/md5": 53,
inherits: 101,
ripemd160: 142,
"safe-buffer": 143,
"sha.js": 145
} ],
55: [ function(e, t, i) {
"use strict";
var n = e("inherits"), s = e("safe-buffer").Buffer, c = e("cipher-base"), r = s.alloc(128);
function a(e, t) {
c.call(this, "digest");
"string" == typeof t && (t = s.from(t));
this._alg = e;
64 < (this._key = t).length ? t = e(t) : t.length < 64 && (t = s.concat([ t, r ], 64));
for (var i = this._ipad = s.allocUnsafe(64), n = this._opad = s.allocUnsafe(64), a = 0; a < 64; a++) {
i[a] = 54 ^ t[a];
n[a] = 92 ^ t[a];
}
this._hash = [ i ];
}
n(a, c);
a.prototype._update = function(e) {
this._hash.push(e);
};
a.prototype._final = function() {
var e = this._alg(s.concat(this._hash));
return this._alg(s.concat([ this._opad, e ]));
};
t.exports = a;
}, {
"cipher-base": 49,
inherits: 101,
"safe-buffer": 143
} ],
56: [ function(e, t, i) {
"use strict";
i.randomBytes = i.rng = i.pseudoRandomBytes = i.prng = e("randombytes");
i.createHash = i.Hash = e("create-hash");
i.createHmac = i.Hmac = e("create-hmac");
var n = e("browserify-sign/algos"), a = Object.keys(n), s = [ "sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160" ].concat(a);
i.getHashes = function() {
return s;
};
var c = e("pbkdf2");
i.pbkdf2 = c.pbkdf2;
i.pbkdf2Sync = c.pbkdf2Sync;
var r = e("browserify-cipher");
i.Cipher = r.Cipher;
i.createCipher = r.createCipher;
i.Cipheriv = r.Cipheriv;
i.createCipheriv = r.createCipheriv;
i.Decipher = r.Decipher;
i.createDecipher = r.createDecipher;
i.Decipheriv = r.Decipheriv;
i.createDecipheriv = r.createDecipheriv;
i.getCiphers = r.getCiphers;
i.listCiphers = r.listCiphers;
var o = e("diffie-hellman");
i.DiffieHellmanGroup = o.DiffieHellmanGroup;
i.createDiffieHellmanGroup = o.createDiffieHellmanGroup;
i.getDiffieHellman = o.getDiffieHellman;
i.createDiffieHellman = o.createDiffieHellman;
i.DiffieHellman = o.DiffieHellman;
var h = e("browserify-sign");
i.createSign = h.createSign;
i.Sign = h.Sign;
i.createVerify = h.createVerify;
i.Verify = h.Verify;
i.createECDH = e("create-ecdh");
var l = e("public-encrypt");
i.publicEncrypt = l.publicEncrypt;
i.privateEncrypt = l.privateEncrypt;
i.publicDecrypt = l.publicDecrypt;
i.privateDecrypt = l.privateDecrypt;
var d = e("randomfill");
i.randomFill = d.randomFill;
i.randomFillSync = d.randomFillSync;
i.createCredentials = function() {
throw new Error([ "sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify" ].join("\n"));
};
i.constants = {
DH_CHECK_P_NOT_SAFE_PRIME: 2,
DH_CHECK_P_NOT_PRIME: 1,
DH_UNABLE_TO_CHECK_GENERATOR: 4,
DH_NOT_SUITABLE_GENERATOR: 8,
NPN_ENABLED: 1,
ALPN_ENABLED: 1,
RSA_PKCS1_PADDING: 1,
RSA_SSLV23_PADDING: 2,
RSA_NO_PADDING: 3,
RSA_PKCS1_OAEP_PADDING: 4,
RSA_X931_PADDING: 5,
RSA_PKCS1_PSS_PADDING: 6,
POINT_CONVERSION_COMPRESSED: 2,
POINT_CONVERSION_UNCOMPRESSED: 4,
POINT_CONVERSION_HYBRID: 6
};
}, {
"browserify-cipher": 36,
"browserify-sign": 43,
"browserify-sign/algos": 40,
"create-ecdh": 51,
"create-hash": 52,
"create-hmac": 54,
"diffie-hellman": 63,
pbkdf2: 112,
"public-encrypt": 119,
randombytes: 125,
randomfill: 126
} ],
57: [ function(e, t, i) {
"use strict";
i.utils = e("./des/utils");
i.Cipher = e("./des/cipher");
i.DES = e("./des/des");
i.CBC = e("./des/cbc");
i.EDE = e("./des/ede");
}, {
"./des/cbc": 58,
"./des/cipher": 59,
"./des/des": 60,
"./des/ede": 61,
"./des/utils": 62
} ],
58: [ function(e, t, i) {
"use strict";
var n = e("minimalistic-assert"), s = e("inherits"), c = {};
function a(e) {
n.equal(e.length, 8, "Invalid IV length");
this.iv = new Array(8);
for (var t = 0; t < this.iv.length; t++) this.iv[t] = e[t];
}
i.instantiate = function(t) {
function i(e) {
t.call(this, e);
this._cbcInit();
}
s(i, t);
for (var e = Object.keys(c), n = 0; n < e.length; n++) {
var a = e[n];
i.prototype[a] = c[a];
}
i.create = function(e) {
return new i(e);
};
return i;
};
c._cbcInit = function() {
var e = new a(this.options.iv);
this._cbcState = e;
};
c._update = function(e, t, i, n) {
var a = this._cbcState, s = this.constructor.super_.prototype, c = a.iv;
if ("encrypt" === this.type) {
for (var r = 0; r < this.blockSize; r++) c[r] ^= e[t + r];
s._update.call(this, c, 0, i, n);
for (r = 0; r < this.blockSize; r++) c[r] = i[n + r];
} else {
s._update.call(this, e, t, i, n);
for (r = 0; r < this.blockSize; r++) i[n + r] ^= c[r];
for (r = 0; r < this.blockSize; r++) c[r] = e[t + r];
}
};
}, {
inherits: 101,
"minimalistic-assert": 105
} ],
59: [ function(e, t, i) {
"use strict";
var n = e("minimalistic-assert");
function a(e) {
this.options = e;
this.type = this.options.type;
this.blockSize = 8;
this._init();
this.buffer = new Array(this.blockSize);
this.bufferOff = 0;
}
(t.exports = a).prototype._init = function() {};
a.prototype.update = function(e) {
return 0 === e.length ? [] : "decrypt" === this.type ? this._updateDecrypt(e) : this._updateEncrypt(e);
};
a.prototype._buffer = function(e, t) {
for (var i = Math.min(this.buffer.length - this.bufferOff, e.length - t), n = 0; n < i; n++) this.buffer[this.bufferOff + n] = e[t + n];
this.bufferOff += i;
return i;
};
a.prototype._flushBuffer = function(e, t) {
this._update(this.buffer, 0, e, t);
this.bufferOff = 0;
return this.blockSize;
};
a.prototype._updateEncrypt = function(e) {
var t = 0, i = 0, n = (this.bufferOff + e.length) / this.blockSize | 0, a = new Array(n * this.blockSize);
if (0 !== this.bufferOff) {
t += this._buffer(e, t);
this.bufferOff === this.buffer.length && (i += this._flushBuffer(a, i));
}
for (var s = e.length - (e.length - t) % this.blockSize; t < s; t += this.blockSize) {
this._update(e, t, a, i);
i += this.blockSize;
}
for (;t < e.length; t++, this.bufferOff++) this.buffer[this.bufferOff] = e[t];
return a;
};
a.prototype._updateDecrypt = function(e) {
for (var t = 0, i = 0, n = Math.ceil((this.bufferOff + e.length) / this.blockSize) - 1, a = new Array(n * this.blockSize); 0 < n; n--) {
t += this._buffer(e, t);
i += this._flushBuffer(a, i);
}
t += this._buffer(e, t);
return a;
};
a.prototype.final = function(e) {
var t, i;
e && (t = this.update(e));
i = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt();
return t ? t.concat(i) : i;
};
a.prototype._pad = function(e, t) {
if (0 === t) return !1;
for (;t < e.length; ) e[t++] = 0;
return !0;
};
a.prototype._finalEncrypt = function() {
if (!this._pad(this.buffer, this.bufferOff)) return [];
var e = new Array(this.blockSize);
this._update(this.buffer, 0, e, 0);
return e;
};
a.prototype._unpad = function(e) {
return e;
};
a.prototype._finalDecrypt = function() {
n.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
var e = new Array(this.blockSize);
this._flushBuffer(e, 0);
return this._unpad(e);
};
}, {
"minimalistic-assert": 105
} ],
60: [ function(e, t, i) {
"use strict";
var c = e("minimalistic-assert"), n = e("inherits"), a = e("../des"), u = a.utils, s = a.Cipher;
function r() {
this.tmp = new Array(2);
this.keys = null;
}
function o(e) {
s.call(this, e);
var t = new r();
this._desState = t;
this.deriveKeys(t, e.key);
}
n(o, s);
(t.exports = o).create = function(e) {
return new o(e);
};
var h = [ 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1 ];
o.prototype.deriveKeys = function(e, t) {
e.keys = new Array(32);
c.equal(t.length, this.blockSize, "Invalid key length");
var i = u.readUInt32BE(t, 0), n = u.readUInt32BE(t, 4);
u.pc1(i, n, e.tmp, 0);
i = e.tmp[0];
n = e.tmp[1];
for (var a = 0; a < e.keys.length; a += 2) {
var s = h[a >>> 1];
i = u.r28shl(i, s);
n = u.r28shl(n, s);
u.pc2(i, n, e.keys, a);
}
};
o.prototype._update = function(e, t, i, n) {
var a = this._desState, s = u.readUInt32BE(e, t), c = u.readUInt32BE(e, t + 4);
u.ip(s, c, a.tmp, 0);
s = a.tmp[0];
c = a.tmp[1];
"encrypt" === this.type ? this._encrypt(a, s, c, a.tmp, 0) : this._decrypt(a, s, c, a.tmp, 0);
s = a.tmp[0];
c = a.tmp[1];
u.writeUInt32BE(i, s, n);
u.writeUInt32BE(i, c, n + 4);
};
o.prototype._pad = function(e, t) {
for (var i = e.length - t, n = t; n < e.length; n++) e[n] = i;
return !0;
};
o.prototype._unpad = function(e) {
for (var t = e[e.length - 1], i = e.length - t; i < e.length; i++) c.equal(e[i], t);
return e.slice(0, e.length - t);
};
o.prototype._encrypt = function(e, t, i, n, a) {
for (var s = t, c = i, r = 0; r < e.keys.length; r += 2) {
var o = e.keys[r], h = e.keys[r + 1];
u.expand(c, e.tmp, 0);
o ^= e.tmp[0];
h ^= e.tmp[1];
var l = u.substitute(o, h), d = c;
c = (s ^ u.permute(l)) >>> 0;
s = d;
}
u.rip(c, s, n, a);
};
o.prototype._decrypt = function(e, t, i, n, a) {
for (var s = i, c = t, r = e.keys.length - 2; 0 <= r; r -= 2) {
var o = e.keys[r], h = e.keys[r + 1];
u.expand(s, e.tmp, 0);
o ^= e.tmp[0];
h ^= e.tmp[1];
var l = u.substitute(o, h), d = s;
s = (c ^ u.permute(l)) >>> 0;
c = d;
}
u.rip(s, c, n, a);
};
}, {
"../des": 57,
inherits: 101,
"minimalistic-assert": 105
} ],
61: [ function(e, t, i) {
"use strict";
var s = e("minimalistic-assert"), n = e("inherits"), a = e("../des"), c = a.Cipher, r = a.DES;
function o(e, t) {
s.equal(t.length, 24, "Invalid key length");
var i = t.slice(0, 8), n = t.slice(8, 16), a = t.slice(16, 24);
this.ciphers = "encrypt" === e ? [ r.create({
type: "encrypt",
key: i
}), r.create({
type: "decrypt",
key: n
}), r.create({
type: "encrypt",
key: a
}) ] : [ r.create({
type: "decrypt",
key: a
}), r.create({
type: "encrypt",
key: n
}), r.create({
type: "decrypt",
key: i
}) ];
}
function h(e) {
c.call(this, e);
var t = new o(this.type, this.options.key);
this._edeState = t;
}
n(h, c);
(t.exports = h).create = function(e) {
return new h(e);
};
h.prototype._update = function(e, t, i, n) {
var a = this._edeState;
a.ciphers[0]._update(e, t, i, n);
a.ciphers[1]._update(i, n, i, n);
a.ciphers[2]._update(i, n, i, n);
};
h.prototype._pad = r.prototype._pad;
h.prototype._unpad = r.prototype._unpad;
}, {
"../des": 57,
inherits: 101,
"minimalistic-assert": 105
} ],
62: [ function(e, t, i) {
"use strict";
i.readUInt32BE = function(e, t) {
return (e[0 + t] << 24 | e[1 + t] << 16 | e[2 + t] << 8 | e[3 + t]) >>> 0;
};
i.writeUInt32BE = function(e, t, i) {
e[0 + i] = t >>> 24;
e[1 + i] = t >>> 16 & 255;
e[2 + i] = t >>> 8 & 255;
e[3 + i] = 255 & t;
};
i.ip = function(e, t, i, n) {
for (var a = 0, s = 0, c = 6; 0 <= c; c -= 2) {
for (var r = 0; r <= 24; r += 8) {
a <<= 1;
a |= t >>> r + c & 1;
}
for (r = 0; r <= 24; r += 8) {
a <<= 1;
a |= e >>> r + c & 1;
}
}
for (c = 6; 0 <= c; c -= 2) {
for (r = 1; r <= 25; r += 8) {
s <<= 1;
s |= t >>> r + c & 1;
}
for (r = 1; r <= 25; r += 8) {
s <<= 1;
s |= e >>> r + c & 1;
}
}
i[n + 0] = a >>> 0;
i[n + 1] = s >>> 0;
};
i.rip = function(e, t, i, n) {
for (var a = 0, s = 0, c = 0; c < 4; c++) for (var r = 24; 0 <= r; r -= 8) {
a <<= 1;
a |= t >>> r + c & 1;
a <<= 1;
a |= e >>> r + c & 1;
}
for (c = 4; c < 8; c++) for (r = 24; 0 <= r; r -= 8) {
s <<= 1;
s |= t >>> r + c & 1;
s <<= 1;
s |= e >>> r + c & 1;
}
i[n + 0] = a >>> 0;
i[n + 1] = s >>> 0;
};
i.pc1 = function(e, t, i, n) {
for (var a = 0, s = 0, c = 7; 5 <= c; c--) {
for (var r = 0; r <= 24; r += 8) {
a <<= 1;
a |= t >> r + c & 1;
}
for (r = 0; r <= 24; r += 8) {
a <<= 1;
a |= e >> r + c & 1;
}
}
for (r = 0; r <= 24; r += 8) {
a <<= 1;
a |= t >> r + c & 1;
}
for (c = 1; c <= 3; c++) {
for (r = 0; r <= 24; r += 8) {
s <<= 1;
s |= t >> r + c & 1;
}
for (r = 0; r <= 24; r += 8) {
s <<= 1;
s |= e >> r + c & 1;
}
}
for (r = 0; r <= 24; r += 8) {
s <<= 1;
s |= e >> r + c & 1;
}
i[n + 0] = a >>> 0;
i[n + 1] = s >>> 0;
};
i.r28shl = function(e, t) {
return e << t & 268435455 | e >>> 28 - t;
};
var o = [ 14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24 ];
i.pc2 = function(e, t, i, n) {
for (var a = 0, s = 0, c = o.length >>> 1, r = 0; r < c; r++) {
a <<= 1;
a |= e >>> o[r] & 1;
}
for (r = c; r < o.length; r++) {
s <<= 1;
s |= t >>> o[r] & 1;
}
i[n + 0] = a >>> 0;
i[n + 1] = s >>> 0;
};
i.expand = function(e, t, i) {
var n = 0, a = 0;
n = (1 & e) << 5 | e >>> 27;
for (var s = 23; 15 <= s; s -= 4) {
n <<= 6;
n |= e >>> s & 63;
}
for (s = 11; 3 <= s; s -= 4) {
a |= e >>> s & 63;
a <<= 6;
}
a |= (31 & e) << 1 | e >>> 31;
t[i + 0] = n >>> 0;
t[i + 1] = a >>> 0;
};
var a = [ 14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11 ];
i.substitute = function(e, t) {
for (var i = 0, n = 0; n < 4; n++) {
i <<= 4;
i |= a[64 * n + (e >>> 18 - 6 * n & 63)];
}
for (n = 0; n < 4; n++) {
i <<= 4;
i |= a[256 + 64 * n + (t >>> 18 - 6 * n & 63)];
}
return i >>> 0;
};
var n = [ 16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7 ];
i.permute = function(e) {
for (var t = 0, i = 0; i < n.length; i++) {
t <<= 1;
t |= e >>> n[i] & 1;
}
return t >>> 0;
};
i.padSplit = function(e, t, i) {
for (var n = e.toString(2); n.length < t; ) n = "0" + n;
for (var a = [], s = 0; s < t; s += i) a.push(n.slice(s, s + i));
return a.join(" ");
};
}, {} ],
63: [ function(e, t, i) {
(function(s) {
var c = e("./lib/generatePrime"), n = e("./lib/primes.json"), r = e("./lib/dh");
var o = {
binary: !0,
hex: !0,
base64: !0
};
i.DiffieHellmanGroup = i.createDiffieHellmanGroup = i.getDiffieHellman = function(e) {
var t = new s(n[e].prime, "hex"), i = new s(n[e].gen, "hex");
return new r(t, i);
};
i.createDiffieHellman = i.DiffieHellman = function e(t, i, n, a) {
if (s.isBuffer(i) || void 0 === o[i]) return e(t, "binary", i, n);
i = i || "binary";
a = a || "binary";
n = n || new s([ 2 ]);
s.isBuffer(n) || (n = new s(n, a));
if ("number" == typeof t) return new r(c(t, n), n, !0);
s.isBuffer(t) || (t = new s(t, i));
return new r(t, n, !0);
};
}).call(this, e("buffer").Buffer);
}, {
"./lib/dh": 64,
"./lib/generatePrime": 65,
"./lib/primes.json": 66,
buffer: 47
} ],
64: [ function(_, f, e) {
(function(s) {
var c = _("bn.js"), r = new (_("miller-rabin"))(), o = new c(24), h = new c(11), l = new c(10), d = new c(3), u = new c(7), v = _("./generatePrime"), e = _("randombytes");
f.exports = t;
function n(e, t) {
t = t || "utf8";
s.isBuffer(e) || (e = new s(e, t));
this._pub = new c(e);
return this;
}
function a(e, t) {
t = t || "utf8";
s.isBuffer(e) || (e = new s(e, t));
this._priv = new c(e);
return this;
}
var g = {};
function t(e, t, i) {
this.setGenerator(t);
this.__prime = new c(e);
this._prime = c.mont(this.__prime);
this._primeLen = e.length;
this._pub = void 0;
this._priv = void 0;
this._primeCode = void 0;
if (i) {
this.setPublicKey = n;
this.setPrivateKey = a;
} else this._primeCode = 8;
}
Object.defineProperty(t.prototype, "verifyError", {
enumerable: !0,
get: function() {
"number" != typeof this._primeCode && (this._primeCode = function(e, t) {
var i = t.toString("hex"), n = [ i, e.toString(16) ].join("_");
if (n in g) return g[n];
var a, s = 0;
if (e.isEven() || !v.simpleSieve || !v.fermatTest(e) || !r.test(e)) {
s += 1;
s += "02" === i || "05" === i ? 8 : 4;
return g[n] = s;
}
r.test(e.shrn(1)) || (s += 2);
switch (i) {
case "02":
e.mod(o).cmp(h) && (s += 8);
break;

case "05":
(a = e.mod(l)).cmp(d) && a.cmp(u) && (s += 8);
break;

default:
s += 4;
}
return g[n] = s;
}(this.__prime, this.__gen));
return this._primeCode;
}
});
t.prototype.generateKeys = function() {
this._priv || (this._priv = new c(e(this._primeLen)));
this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
return this.getPublicKey();
};
t.prototype.computeSecret = function(e) {
var t = (e = (e = new c(e)).toRed(this._prime)).redPow(this._priv).fromRed(), i = new s(t.toArray()), n = this.getPrime();
if (i.length < n.length) {
var a = new s(n.length - i.length);
a.fill(0);
i = s.concat([ a, i ]);
}
return i;
};
t.prototype.getPublicKey = function(e) {
return i(this._pub, e);
};
t.prototype.getPrivateKey = function(e) {
return i(this._priv, e);
};
t.prototype.getPrime = function(e) {
return i(this.__prime, e);
};
t.prototype.getGenerator = function(e) {
return i(this._gen, e);
};
t.prototype.setGenerator = function(e, t) {
t = t || "utf8";
s.isBuffer(e) || (e = new s(e, t));
this.__gen = e;
this._gen = new c(e);
return this;
};
function i(e, t) {
var i = new s(e.toArray());
return t ? i.toString(t) : i;
}
}).call(this, _("buffer").Buffer);
}, {
"./generatePrime": 65,
"bn.js": 16,
buffer: 47,
"miller-rabin": 104,
randombytes: 125
} ],
65: [ function(e, t, i) {
var a = e("randombytes");
(t.exports = n).simpleSieve = f;
n.fermatTest = p;
var s = e("bn.js"), c = new s(24), r = new (e("miller-rabin"))(), o = new s(1), h = new s(2), l = new s(5), d = (new s(16), 
new s(8), new s(10)), u = new s(3), v = (new s(7), new s(11)), g = new s(4), _ = (new s(12), 
null);
function f(e) {
for (var t = function() {
if (null !== _) return _;
var e = [];
e[0] = 2;
for (var t = 1, i = 3; i < 1048576; i += 2) {
for (var n = Math.ceil(Math.sqrt(i)), a = 0; a < t && e[a] <= n && i % e[a] != 0; a++) ;
t !== a && e[a] <= n || (e[t++] = i);
}
return _ = e;
}(), i = 0; i < t.length; i++) if (0 === e.modn(t[i])) return 0 === e.cmpn(t[i]);
return !0;
}
function p(e) {
var t = s.mont(e);
return 0 === h.toRed(t).redPow(e.subn(1)).fromRed().cmpn(1);
}
function n(e, t) {
if (e < 16) return new s(2 === t || 5 === t ? [ 140, 123 ] : [ 140, 39 ]);
t = new s(t);
for (var i, n; ;) {
i = new s(a(Math.ceil(e / 8)));
for (;i.bitLength() > e; ) i.ishrn(1);
i.isEven() && i.iadd(o);
i.testn(1) || i.iadd(h);
if (t.cmp(h)) {
if (!t.cmp(l)) for (;i.mod(d).cmp(u); ) i.iadd(g);
} else for (;i.mod(c).cmp(v); ) i.iadd(g);
if (f(n = i.shrn(1)) && f(i) && p(n) && p(i) && r.test(n) && r.test(i)) return i;
}
}
}, {
"bn.js": 16,
"miller-rabin": 104,
randombytes: 125
} ],
66: [ function(e, t, i) {
t.exports = {
modp1: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
},
modp2: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
},
modp5: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
},
modp14: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
},
modp15: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
},
modp16: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
},
modp17: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
},
modp18: {
gen: "02",
prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
}
};
}, {} ],
67: [ function(e, t, i) {
"use strict";
var n = i;
n.version = e("../package.json").version;
n.utils = e("./elliptic/utils");
n.rand = e("brorand");
n.curve = e("./elliptic/curve");
n.curves = e("./elliptic/curves");
n.ec = e("./elliptic/ec");
n.eddsa = e("./elliptic/eddsa");
}, {
"../package.json": 82,
"./elliptic/curve": 70,
"./elliptic/curves": 73,
"./elliptic/ec": 74,
"./elliptic/eddsa": 77,
"./elliptic/utils": 81,
brorand: 17
} ],
68: [ function(e, t, i) {
"use strict";
var n = e("bn.js"), a = e("../../elliptic").utils, A = a.getNAF, I = a.getJSF, d = a.assert;
function s(e, t) {
this.type = e;
this.p = new n(t.p, 16);
this.red = t.prime ? n.red(t.prime) : n.mont(this.p);
this.zero = new n(0).toRed(this.red);
this.one = new n(1).toRed(this.red);
this.two = new n(2).toRed(this.red);
this.n = t.n && new n(t.n, 16);
this.g = t.g && this.pointFromJSON(t.g, t.gRed);
this._wnafT1 = new Array(4);
this._wnafT2 = new Array(4);
this._wnafT3 = new Array(4);
this._wnafT4 = new Array(4);
var i = this.n && this.p.div(this.n);
if (!i || 0 < i.cmpn(100)) this.redN = null; else {
this._maxwellTrick = !0;
this.redN = this.n.toRed(this.red);
}
}
(t.exports = s).prototype.point = function() {
throw new Error("Not implemented");
};
s.prototype.validate = function() {
throw new Error("Not implemented");
};
s.prototype._fixedNafMul = function(e, t) {
d(e.precomputed);
var i = e._getDoubles(), n = A(t, 1), a = (1 << i.step + 1) - (i.step % 2 == 0 ? 2 : 1);
a /= 3;
for (var s = [], c = 0; c < n.length; c += i.step) {
var r = 0;
for (t = c + i.step - 1; c <= t; t--) r = (r << 1) + n[t];
s.push(r);
}
for (var o = this.jpoint(null, null, null), h = this.jpoint(null, null, null), l = a; 0 < l; l--) {
for (c = 0; c < s.length; c++) {
(r = s[c]) === l ? h = h.mixedAdd(i.points[c]) : r === -l && (h = h.mixedAdd(i.points[c].neg()));
}
o = o.add(h);
}
return o.toP();
};
s.prototype._wnafMul = function(e, t) {
var i = 4, n = e._getNAFPoints(i);
i = n.wnd;
for (var a = n.points, s = A(t, i), c = this.jpoint(null, null, null), r = s.length - 1; 0 <= r; r--) {
for (t = 0; 0 <= r && 0 === s[r]; r--) t++;
0 <= r && t++;
c = c.dblp(t);
if (r < 0) break;
var o = s[r];
d(0 !== o);
c = "affine" === e.type ? 0 < o ? c.mixedAdd(a[o - 1 >> 1]) : c.mixedAdd(a[-o - 1 >> 1].neg()) : 0 < o ? c.add(a[o - 1 >> 1]) : c.add(a[-o - 1 >> 1].neg());
}
return "affine" === e.type ? c.toP() : c;
};
s.prototype._wnafMulAdd = function(e, t, i, n, a) {
for (var s = this._wnafT1, c = this._wnafT2, r = this._wnafT3, o = 0, h = 0; h < n; h++) {
var l = (N = t[h])._getNAFPoints(e);
s[h] = l.wnd;
c[h] = l.points;
}
for (h = n - 1; 1 <= h; h -= 2) {
var d = h - 1, u = h;
if (1 === s[d] && 1 === s[u]) {
var v = [ t[d], null, null, t[u] ];
if (0 === t[d].y.cmp(t[u].y)) {
v[1] = t[d].add(t[u]);
v[2] = t[d].toJ().mixedAdd(t[u].neg());
} else if (0 === t[d].y.cmp(t[u].y.redNeg())) {
v[1] = t[d].toJ().mixedAdd(t[u]);
v[2] = t[d].add(t[u].neg());
} else {
v[1] = t[d].toJ().mixedAdd(t[u]);
v[2] = t[d].toJ().mixedAdd(t[u].neg());
}
var g = [ -3, -1, -5, -7, 0, 7, 5, 1, 3 ], _ = I(i[d], i[u]);
o = Math.max(_[0].length, o);
r[d] = new Array(o);
r[u] = new Array(o);
for (var f = 0; f < o; f++) {
var p = 0 | _[0][f], m = 0 | _[1][f];
r[d][f] = g[3 * (p + 1) + (m + 1)];
r[u][f] = 0;
c[d] = v;
}
} else {
r[d] = A(i[d], s[d]);
r[u] = A(i[u], s[u]);
o = Math.max(r[d].length, o);
o = Math.max(r[u].length, o);
}
}
var C = this.jpoint(null, null, null), y = this._wnafT4;
for (h = o; 0 <= h; h--) {
for (var b = 0; 0 <= h; ) {
var M = !0;
for (f = 0; f < n; f++) {
y[f] = 0 | r[f][h];
0 !== y[f] && (M = !1);
}
if (!M) break;
b++;
h--;
}
0 <= h && b++;
C = C.dblp(b);
if (h < 0) break;
for (f = 0; f < n; f++) {
var N, S = y[f];
if (0 !== S) {
0 < S ? N = c[f][S - 1 >> 1] : S < 0 && (N = c[f][-S - 1 >> 1].neg());
C = "affine" === N.type ? C.mixedAdd(N) : C.add(N);
}
}
}
for (h = 0; h < n; h++) c[h] = null;
return a ? C : C.toP();
};
function c(e, t) {
this.curve = e;
this.type = t;
this.precomputed = null;
}
(s.BasePoint = c).prototype.eq = function() {
throw new Error("Not implemented");
};
c.prototype.validate = function() {
return this.curve.validate(this);
};
s.prototype.decodePoint = function(e, t) {
e = a.toArray(e, t);
var i = this.p.byteLength();
if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * i) {
6 === e[0] ? d(e[e.length - 1] % 2 == 0) : 7 === e[0] && d(e[e.length - 1] % 2 == 1);
return this.point(e.slice(1, 1 + i), e.slice(1 + i, 1 + 2 * i));
}
if ((2 === e[0] || 3 === e[0]) && e.length - 1 === i) return this.pointFromX(e.slice(1, 1 + i), 3 === e[0]);
throw new Error("Unknown point format");
};
c.prototype.encodeCompressed = function(e) {
return this.encode(e, !0);
};
c.prototype._encode = function(e) {
var t = this.curve.p.byteLength(), i = this.getX().toArray("be", t);
return e ? [ this.getY().isEven() ? 2 : 3 ].concat(i) : [ 4 ].concat(i, this.getY().toArray("be", t));
};
c.prototype.encode = function(e, t) {
return a.encode(this._encode(t), e);
};
c.prototype.precompute = function(e) {
if (this.precomputed) return this;
var t = {
doubles: null,
naf: null,
beta: null
};
t.naf = this._getNAFPoints(8);
t.doubles = this._getDoubles(4, e);
t.beta = this._getBeta();
this.precomputed = t;
return this;
};
c.prototype._hasDoubles = function(e) {
if (!this.precomputed) return !1;
var t = this.precomputed.doubles;
return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step);
};
c.prototype._getDoubles = function(e, t) {
if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
for (var i = [ this ], n = this, a = 0; a < t; a += e) {
for (var s = 0; s < e; s++) n = n.dbl();
i.push(n);
}
return {
step: e,
points: i
};
};
c.prototype._getNAFPoints = function(e) {
if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
for (var t = [ this ], i = (1 << e) - 1, n = 1 === i ? null : this.dbl(), a = 1; a < i; a++) t[a] = t[a - 1].add(n);
return {
wnd: e,
points: t
};
};
c.prototype._getBeta = function() {
return null;
};
c.prototype.dblp = function(e) {
for (var t = this, i = 0; i < e; i++) t = t.dbl();
return t;
};
}, {
"../../elliptic": 67,
"bn.js": 16
} ],
69: [ function(e, t, i) {
"use strict";
var n = e("../curve"), a = e("../../elliptic"), o = e("bn.js"), s = e("inherits"), c = n.base, r = a.utils.assert;
function h(e) {
this.twisted = 1 != (0 | e.a);
this.mOneA = this.twisted && -1 == (0 | e.a);
this.extended = this.mOneA;
c.call(this, "edwards", e);
this.a = new o(e.a, 16).umod(this.red.m);
this.a = this.a.toRed(this.red);
this.c = new o(e.c, 16).toRed(this.red);
this.c2 = this.c.redSqr();
this.d = new o(e.d, 16).toRed(this.red);
this.dd = this.d.redAdd(this.d);
r(!this.twisted || 0 === this.c.fromRed().cmpn(1));
this.oneC = 1 == (0 | e.c);
}
s(h, c);
(t.exports = h).prototype._mulA = function(e) {
return this.mOneA ? e.redNeg() : this.a.redMul(e);
};
h.prototype._mulC = function(e) {
return this.oneC ? e : this.c.redMul(e);
};
h.prototype.jpoint = function(e, t, i, n) {
return this.point(e, t, i, n);
};
h.prototype.pointFromX = function(e, t) {
(e = new o(e, 16)).red || (e = e.toRed(this.red));
var i = e.redSqr(), n = this.c2.redSub(this.a.redMul(i)), a = this.one.redSub(this.c2.redMul(this.d).redMul(i)), s = n.redMul(a.redInvm()), c = s.redSqrt();
if (0 !== c.redSqr().redSub(s).cmp(this.zero)) throw new Error("invalid point");
var r = c.fromRed().isOdd();
(t && !r || !t && r) && (c = c.redNeg());
return this.point(e, c);
};
h.prototype.pointFromY = function(e, t) {
(e = new o(e, 16)).red || (e = e.toRed(this.red));
var i = e.redSqr(), n = i.redSub(this.one), a = i.redMul(this.d).redAdd(this.one), s = n.redMul(a.redInvm());
if (0 === s.cmp(this.zero)) {
if (t) throw new Error("invalid point");
return this.point(this.zero, e);
}
var c = s.redSqrt();
if (0 !== c.redSqr().redSub(s).cmp(this.zero)) throw new Error("invalid point");
c.isOdd() !== t && (c = c.redNeg());
return this.point(c, e);
};
h.prototype.validate = function(e) {
if (e.isInfinity()) return !0;
e.normalize();
var t = e.x.redSqr(), i = e.y.redSqr(), n = t.redMul(this.a).redAdd(i), a = this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(i)));
return 0 === n.cmp(a);
};
function l(e, t, i, n, a) {
c.BasePoint.call(this, e, "projective");
if (null === t && null === i && null === n) {
this.x = this.curve.zero;
this.y = this.curve.one;
this.z = this.curve.one;
this.t = this.curve.zero;
this.zOne = !0;
} else {
this.x = new o(t, 16);
this.y = new o(i, 16);
this.z = n ? new o(n, 16) : this.curve.one;
this.t = a && new o(a, 16);
this.x.red || (this.x = this.x.toRed(this.curve.red));
this.y.red || (this.y = this.y.toRed(this.curve.red));
this.z.red || (this.z = this.z.toRed(this.curve.red));
this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red));
this.zOne = this.z === this.curve.one;
if (this.curve.extended && !this.t) {
this.t = this.x.redMul(this.y);
this.zOne || (this.t = this.t.redMul(this.z.redInvm()));
}
}
}
s(l, c.BasePoint);
h.prototype.pointFromJSON = function(e) {
return l.fromJSON(this, e);
};
h.prototype.point = function(e, t, i, n) {
return new l(this, e, t, i, n);
};
l.fromJSON = function(e, t) {
return new l(e, t[0], t[1], t[2]);
};
l.prototype.inspect = function() {
return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
};
l.prototype.isInfinity = function() {
return 0 === this.x.cmpn(0) && 0 === this.y.cmp(this.z);
};
l.prototype._extDbl = function() {
var e = this.x.redSqr(), t = this.y.redSqr(), i = this.z.redSqr();
i = i.redIAdd(i);
var n = this.curve._mulA(e), a = this.x.redAdd(this.y).redSqr().redISub(e).redISub(t), s = n.redAdd(t), c = s.redSub(i), r = n.redSub(t), o = a.redMul(c), h = s.redMul(r), l = a.redMul(r), d = c.redMul(s);
return this.curve.point(o, h, d, l);
};
l.prototype._projDbl = function() {
var e, t, i, n = this.x.redAdd(this.y).redSqr(), a = this.x.redSqr(), s = this.y.redSqr();
if (this.curve.twisted) {
var c = (h = this.curve._mulA(a)).redAdd(s);
if (this.zOne) {
e = n.redSub(a).redSub(s).redMul(c.redSub(this.curve.two));
t = c.redMul(h.redSub(s));
i = c.redSqr().redSub(c).redSub(c);
} else {
var r = this.z.redSqr(), o = c.redSub(r).redISub(r);
e = n.redSub(a).redISub(s).redMul(o);
t = c.redMul(h.redSub(s));
i = c.redMul(o);
}
} else {
var h = a.redAdd(s);
r = this.curve._mulC(this.c.redMul(this.z)).redSqr(), o = h.redSub(r).redSub(r);
e = this.curve._mulC(n.redISub(h)).redMul(o);
t = this.curve._mulC(h).redMul(a.redISub(s));
i = h.redMul(o);
}
return this.curve.point(e, t, i);
};
l.prototype.dbl = function() {
return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
};
l.prototype._extAdd = function(e) {
var t = this.y.redSub(this.x).redMul(e.y.redSub(e.x)), i = this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)), n = this.t.redMul(this.curve.dd).redMul(e.t), a = this.z.redMul(e.z.redAdd(e.z)), s = i.redSub(t), c = a.redSub(n), r = a.redAdd(n), o = i.redAdd(t), h = s.redMul(c), l = r.redMul(o), d = s.redMul(o), u = c.redMul(r);
return this.curve.point(h, l, u, d);
};
l.prototype._projAdd = function(e) {
var t, i, n = this.z.redMul(e.z), a = n.redSqr(), s = this.x.redMul(e.x), c = this.y.redMul(e.y), r = this.curve.d.redMul(s).redMul(c), o = a.redSub(r), h = a.redAdd(r), l = this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(s).redISub(c), d = n.redMul(o).redMul(l);
if (this.curve.twisted) {
t = n.redMul(h).redMul(c.redSub(this.curve._mulA(s)));
i = o.redMul(h);
} else {
t = n.redMul(h).redMul(c.redSub(s));
i = this.curve._mulC(o).redMul(h);
}
return this.curve.point(d, t, i);
};
l.prototype.add = function(e) {
return this.isInfinity() ? e : e.isInfinity() ? this : this.curve.extended ? this._extAdd(e) : this._projAdd(e);
};
l.prototype.mul = function(e) {
return this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve._wnafMul(this, e);
};
l.prototype.mulAdd = function(e, t, i) {
return this.curve._wnafMulAdd(1, [ this, t ], [ e, i ], 2, !1);
};
l.prototype.jmulAdd = function(e, t, i) {
return this.curve._wnafMulAdd(1, [ this, t ], [ e, i ], 2, !0);
};
l.prototype.normalize = function() {
if (this.zOne) return this;
var e = this.z.redInvm();
this.x = this.x.redMul(e);
this.y = this.y.redMul(e);
this.t && (this.t = this.t.redMul(e));
this.z = this.curve.one;
this.zOne = !0;
return this;
};
l.prototype.neg = function() {
return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
};
l.prototype.getX = function() {
this.normalize();
return this.x.fromRed();
};
l.prototype.getY = function() {
this.normalize();
return this.y.fromRed();
};
l.prototype.eq = function(e) {
return this === e || 0 === this.getX().cmp(e.getX()) && 0 === this.getY().cmp(e.getY());
};
l.prototype.eqXToP = function(e) {
var t = e.toRed(this.curve.red).redMul(this.z);
if (0 === this.x.cmp(t)) return !0;
for (var i = e.clone(), n = this.curve.redN.redMul(this.z); ;) {
i.iadd(this.curve.n);
if (0 <= i.cmp(this.curve.p)) return !1;
t.redIAdd(n);
if (0 === this.x.cmp(t)) return !0;
}
return !1;
};
l.prototype.toP = l.prototype.normalize;
l.prototype.mixedAdd = l.prototype.add;
}, {
"../../elliptic": 67,
"../curve": 70,
"bn.js": 16,
inherits: 101
} ],
70: [ function(e, t, i) {
"use strict";
var n = i;
n.base = e("./base");
n.short = e("./short");
n.mont = e("./mont");
n.edwards = e("./edwards");
}, {
"./base": 68,
"./edwards": 69,
"./mont": 71,
"./short": 72
} ],
71: [ function(e, t, i) {
"use strict";
var n = e("../curve"), a = e("bn.js"), s = e("inherits"), c = n.base, r = e("../../elliptic").utils;
function o(e) {
c.call(this, "mont", e);
this.a = new a(e.a, 16).toRed(this.red);
this.b = new a(e.b, 16).toRed(this.red);
this.i4 = new a(4).toRed(this.red).redInvm();
this.two = new a(2).toRed(this.red);
this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
s(o, c);
(t.exports = o).prototype.validate = function(e) {
var t = e.normalize().x, i = t.redSqr(), n = i.redMul(t).redAdd(i.redMul(this.a)).redAdd(t);
return 0 === n.redSqrt().redSqr().cmp(n);
};
function h(e, t, i) {
c.BasePoint.call(this, e, "projective");
if (null === t && null === i) {
this.x = this.curve.one;
this.z = this.curve.zero;
} else {
this.x = new a(t, 16);
this.z = new a(i, 16);
this.x.red || (this.x = this.x.toRed(this.curve.red));
this.z.red || (this.z = this.z.toRed(this.curve.red));
}
}
s(h, c.BasePoint);
o.prototype.decodePoint = function(e, t) {
return this.point(r.toArray(e, t), 1);
};
o.prototype.point = function(e, t) {
return new h(this, e, t);
};
o.prototype.pointFromJSON = function(e) {
return h.fromJSON(this, e);
};
h.prototype.precompute = function() {};
h.prototype._encode = function() {
return this.getX().toArray("be", this.curve.p.byteLength());
};
h.fromJSON = function(e, t) {
return new h(e, t[0], t[1] || e.one);
};
h.prototype.inspect = function() {
return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
};
h.prototype.isInfinity = function() {
return 0 === this.z.cmpn(0);
};
h.prototype.dbl = function() {
var e = this.x.redAdd(this.z).redSqr(), t = this.x.redSub(this.z).redSqr(), i = e.redSub(t), n = e.redMul(t), a = i.redMul(t.redAdd(this.curve.a24.redMul(i)));
return this.curve.point(n, a);
};
h.prototype.add = function() {
throw new Error("Not supported on Montgomery curve");
};
h.prototype.diffAdd = function(e, t) {
var i = this.x.redAdd(this.z), n = this.x.redSub(this.z), a = e.x.redAdd(e.z), s = e.x.redSub(e.z).redMul(i), c = a.redMul(n), r = t.z.redMul(s.redAdd(c).redSqr()), o = t.x.redMul(s.redISub(c).redSqr());
return this.curve.point(r, o);
};
h.prototype.mul = function(e) {
for (var t = e.clone(), i = this, n = this.curve.point(null, null), a = []; 0 !== t.cmpn(0); t.iushrn(1)) a.push(t.andln(1));
for (var s = a.length - 1; 0 <= s; s--) if (0 === a[s]) {
i = i.diffAdd(n, this);
n = n.dbl();
} else {
n = i.diffAdd(n, this);
i = i.dbl();
}
return n;
};
h.prototype.mulAdd = function() {
throw new Error("Not supported on Montgomery curve");
};
h.prototype.jumlAdd = function() {
throw new Error("Not supported on Montgomery curve");
};
h.prototype.eq = function(e) {
return 0 === this.getX().cmp(e.getX());
};
h.prototype.normalize = function() {
this.x = this.x.redMul(this.z.redInvm());
this.z = this.curve.one;
return this;
};
h.prototype.getX = function() {
this.normalize();
return this.x.fromRed();
};
}, {
"../../elliptic": 67,
"../curve": 70,
"bn.js": 16,
inherits: 101
} ],
72: [ function(e, t, i) {
"use strict";
var n = e("../curve"), a = e("../../elliptic"), b = e("bn.js"), s = e("inherits"), c = n.base, r = a.utils.assert;
function o(e) {
c.call(this, "short", e);
this.a = new b(e.a, 16).toRed(this.red);
this.b = new b(e.b, 16).toRed(this.red);
this.tinv = this.two.redInvm();
this.zeroA = 0 === this.a.fromRed().cmpn(0);
this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3);
this.endo = this._getEndomorphism(e);
this._endoWnafT1 = new Array(4);
this._endoWnafT2 = new Array(4);
}
s(o, c);
(t.exports = o).prototype._getEndomorphism = function(e) {
if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
var t, i;
if (e.beta) t = new b(e.beta, 16).toRed(this.red); else {
var n = this._getEndoRoots(this.p);
t = (t = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
}
if (e.lambda) i = new b(e.lambda, 16); else {
var a = this._getEndoRoots(this.n);
if (0 === this.g.mul(a[0]).x.cmp(this.g.x.redMul(t))) i = a[0]; else {
i = a[1];
r(0 === this.g.mul(i).x.cmp(this.g.x.redMul(t)));
}
}
return {
beta: t,
lambda: i,
basis: e.basis ? e.basis.map(function(e) {
return {
a: new b(e.a, 16),
b: new b(e.b, 16)
};
}) : this._getEndoBasis(i)
};
}
};
o.prototype._getEndoRoots = function(e) {
var t = e === this.p ? this.red : b.mont(e), i = new b(2).toRed(t).redInvm(), n = i.redNeg(), a = new b(3).toRed(t).redNeg().redSqrt().redMul(i);
return [ n.redAdd(a).fromRed(), n.redSub(a).fromRed() ];
};
o.prototype._getEndoBasis = function(e) {
for (var t, i, n, a, s, c, r, o, h, l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), d = e, u = this.n.clone(), v = new b(1), g = new b(0), _ = new b(0), f = new b(1), p = 0; 0 !== d.cmpn(0); ) {
var m = u.div(d);
o = u.sub(m.mul(d));
h = _.sub(m.mul(v));
var C = f.sub(m.mul(g));
if (!n && o.cmp(l) < 0) {
t = r.neg();
i = v;
n = o.neg();
a = h;
} else if (n && 2 == ++p) break;
u = d;
d = r = o;
_ = v;
v = h;
f = g;
g = C;
}
s = o.neg();
c = h;
var y = n.sqr().add(a.sqr());
if (0 <= s.sqr().add(c.sqr()).cmp(y)) {
s = t;
c = i;
}
if (n.negative) {
n = n.neg();
a = a.neg();
}
if (s.negative) {
s = s.neg();
c = c.neg();
}
return [ {
a: n,
b: a
}, {
a: s,
b: c
} ];
};
o.prototype._endoSplit = function(e) {
var t = this.endo.basis, i = t[0], n = t[1], a = n.b.mul(e).divRound(this.n), s = i.b.neg().mul(e).divRound(this.n), c = a.mul(i.a), r = s.mul(n.a), o = a.mul(i.b), h = s.mul(n.b);
return {
k1: e.sub(c).sub(r),
k2: o.add(h).neg()
};
};
o.prototype.pointFromX = function(e, t) {
(e = new b(e, 16)).red || (e = e.toRed(this.red));
var i = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b), n = i.redSqrt();
if (0 !== n.redSqr().redSub(i).cmp(this.zero)) throw new Error("invalid point");
var a = n.fromRed().isOdd();
(t && !a || !t && a) && (n = n.redNeg());
return this.point(e, n);
};
o.prototype.validate = function(e) {
if (e.inf) return !0;
var t = e.x, i = e.y, n = this.a.redMul(t), a = t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);
return 0 === i.redSqr().redISub(a).cmpn(0);
};
o.prototype._endoWnafMulAdd = function(e, t, i) {
for (var n = this._endoWnafT1, a = this._endoWnafT2, s = 0; s < e.length; s++) {
var c = this._endoSplit(t[s]), r = e[s], o = r._getBeta();
if (c.k1.negative) {
c.k1.ineg();
r = r.neg(!0);
}
if (c.k2.negative) {
c.k2.ineg();
o = o.neg(!0);
}
n[2 * s] = r;
n[2 * s + 1] = o;
a[2 * s] = c.k1;
a[2 * s + 1] = c.k2;
}
for (var h = this._wnafMulAdd(1, n, a, 2 * s, i), l = 0; l < 2 * s; l++) {
n[l] = null;
a[l] = null;
}
return h;
};
function h(e, t, i, n) {
c.BasePoint.call(this, e, "affine");
if (null === t && null === i) {
this.x = null;
this.y = null;
this.inf = !0;
} else {
this.x = new b(t, 16);
this.y = new b(i, 16);
if (n) {
this.x.forceRed(this.curve.red);
this.y.forceRed(this.curve.red);
}
this.x.red || (this.x = this.x.toRed(this.curve.red));
this.y.red || (this.y = this.y.toRed(this.curve.red));
this.inf = !1;
}
}
s(h, c.BasePoint);
o.prototype.point = function(e, t, i) {
return new h(this, e, t, i);
};
o.prototype.pointFromJSON = function(e, t) {
return h.fromJSON(this, e, t);
};
h.prototype._getBeta = function() {
if (this.curve.endo) {
var e = this.precomputed;
if (e && e.beta) return e.beta;
var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
if (e) {
var i = this.curve, n = function(e) {
return i.point(e.x.redMul(i.endo.beta), e.y);
};
(e.beta = t).precomputed = {
beta: null,
naf: e.naf && {
wnd: e.naf.wnd,
points: e.naf.points.map(n)
},
doubles: e.doubles && {
step: e.doubles.step,
points: e.doubles.points.map(n)
}
};
}
return t;
}
};
h.prototype.toJSON = function() {
return this.precomputed ? [ this.x, this.y, this.precomputed && {
doubles: this.precomputed.doubles && {
step: this.precomputed.doubles.step,
points: this.precomputed.doubles.points.slice(1)
},
naf: this.precomputed.naf && {
wnd: this.precomputed.naf.wnd,
points: this.precomputed.naf.points.slice(1)
}
} ] : [ this.x, this.y ];
};
h.fromJSON = function(t, e, i) {
"string" == typeof e && (e = JSON.parse(e));
var n = t.point(e[0], e[1], i);
if (!e[2]) return n;
function a(e) {
return t.point(e[0], e[1], i);
}
var s = e[2];
n.precomputed = {
beta: null,
doubles: s.doubles && {
step: s.doubles.step,
points: [ n ].concat(s.doubles.points.map(a))
},
naf: s.naf && {
wnd: s.naf.wnd,
points: [ n ].concat(s.naf.points.map(a))
}
};
return n;
};
h.prototype.inspect = function() {
return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
h.prototype.isInfinity = function() {
return this.inf;
};
h.prototype.add = function(e) {
if (this.inf) return e;
if (e.inf) return this;
if (this.eq(e)) return this.dbl();
if (this.neg().eq(e)) return this.curve.point(null, null);
if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
var t = this.y.redSub(e.y);
0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
var i = t.redSqr().redISub(this.x).redISub(e.x), n = t.redMul(this.x.redSub(i)).redISub(this.y);
return this.curve.point(i, n);
};
h.prototype.dbl = function() {
if (this.inf) return this;
var e = this.y.redAdd(this.y);
if (0 === e.cmpn(0)) return this.curve.point(null, null);
var t = this.curve.a, i = this.x.redSqr(), n = e.redInvm(), a = i.redAdd(i).redIAdd(i).redIAdd(t).redMul(n), s = a.redSqr().redISub(this.x.redAdd(this.x)), c = a.redMul(this.x.redSub(s)).redISub(this.y);
return this.curve.point(s, c);
};
h.prototype.getX = function() {
return this.x.fromRed();
};
h.prototype.getY = function() {
return this.y.fromRed();
};
h.prototype.mul = function(e) {
e = new b(e, 16);
return this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([ this ], [ e ]) : this.curve._wnafMul(this, e);
};
h.prototype.mulAdd = function(e, t, i) {
var n = [ this, t ], a = [ e, i ];
return this.curve.endo ? this.curve._endoWnafMulAdd(n, a) : this.curve._wnafMulAdd(1, n, a, 2);
};
h.prototype.jmulAdd = function(e, t, i) {
var n = [ this, t ], a = [ e, i ];
return this.curve.endo ? this.curve._endoWnafMulAdd(n, a, !0) : this.curve._wnafMulAdd(1, n, a, 2, !0);
};
h.prototype.eq = function(e) {
return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y));
};
h.prototype.neg = function(e) {
if (this.inf) return this;
var t = this.curve.point(this.x, this.y.redNeg());
if (e && this.precomputed) {
var i = this.precomputed, n = function(e) {
return e.neg();
};
t.precomputed = {
naf: i.naf && {
wnd: i.naf.wnd,
points: i.naf.points.map(n)
},
doubles: i.doubles && {
step: i.doubles.step,
points: i.doubles.points.map(n)
}
};
}
return t;
};
h.prototype.toJ = function() {
return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
};
function l(e, t, i, n) {
c.BasePoint.call(this, e, "jacobian");
if (null === t && null === i && null === n) {
this.x = this.curve.one;
this.y = this.curve.one;
this.z = new b(0);
} else {
this.x = new b(t, 16);
this.y = new b(i, 16);
this.z = new b(n, 16);
}
this.x.red || (this.x = this.x.toRed(this.curve.red));
this.y.red || (this.y = this.y.toRed(this.curve.red));
this.z.red || (this.z = this.z.toRed(this.curve.red));
this.zOne = this.z === this.curve.one;
}
s(l, c.BasePoint);
o.prototype.jpoint = function(e, t, i) {
return new l(this, e, t, i);
};
l.prototype.toP = function() {
if (this.isInfinity()) return this.curve.point(null, null);
var e = this.z.redInvm(), t = e.redSqr(), i = this.x.redMul(t), n = this.y.redMul(t).redMul(e);
return this.curve.point(i, n);
};
l.prototype.neg = function() {
return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
l.prototype.add = function(e) {
if (this.isInfinity()) return e;
if (e.isInfinity()) return this;
var t = e.z.redSqr(), i = this.z.redSqr(), n = this.x.redMul(t), a = e.x.redMul(i), s = this.y.redMul(t.redMul(e.z)), c = e.y.redMul(i.redMul(this.z)), r = n.redSub(a), o = s.redSub(c);
if (0 === r.cmpn(0)) return 0 !== o.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
var h = r.redSqr(), l = h.redMul(r), d = n.redMul(h), u = o.redSqr().redIAdd(l).redISub(d).redISub(d), v = o.redMul(d.redISub(u)).redISub(s.redMul(l)), g = this.z.redMul(e.z).redMul(r);
return this.curve.jpoint(u, v, g);
};
l.prototype.mixedAdd = function(e) {
if (this.isInfinity()) return e.toJ();
if (e.isInfinity()) return this;
var t = this.z.redSqr(), i = this.x, n = e.x.redMul(t), a = this.y, s = e.y.redMul(t).redMul(this.z), c = i.redSub(n), r = a.redSub(s);
if (0 === c.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
var o = c.redSqr(), h = o.redMul(c), l = i.redMul(o), d = r.redSqr().redIAdd(h).redISub(l).redISub(l), u = r.redMul(l.redISub(d)).redISub(a.redMul(h)), v = this.z.redMul(c);
return this.curve.jpoint(d, u, v);
};
l.prototype.dblp = function(e) {
if (0 === e) return this;
if (this.isInfinity()) return this;
if (!e) return this.dbl();
if (this.curve.zeroA || this.curve.threeA) {
for (var t = this, i = 0; i < e; i++) t = t.dbl();
return t;
}
var n = this.curve.a, a = this.curve.tinv, s = this.x, c = this.y, r = this.z, o = r.redSqr().redSqr(), h = c.redAdd(c);
for (i = 0; i < e; i++) {
var l = s.redSqr(), d = h.redSqr(), u = d.redSqr(), v = l.redAdd(l).redIAdd(l).redIAdd(n.redMul(o)), g = s.redMul(d), _ = v.redSqr().redISub(g.redAdd(g)), f = g.redISub(_), p = v.redMul(f);
p = p.redIAdd(p).redISub(u);
var m = h.redMul(r);
i + 1 < e && (o = o.redMul(u));
s = _;
r = m;
h = p;
}
return this.curve.jpoint(s, h.redMul(a), r);
};
l.prototype.dbl = function() {
return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
};
l.prototype._zeroDbl = function() {
var e, t, i;
if (this.zOne) {
var n = this.x.redSqr(), a = this.y.redSqr(), s = a.redSqr(), c = this.x.redAdd(a).redSqr().redISub(n).redISub(s);
c = c.redIAdd(c);
var r = n.redAdd(n).redIAdd(n), o = r.redSqr().redISub(c).redISub(c), h = s.redIAdd(s);
h = (h = h.redIAdd(h)).redIAdd(h);
e = o;
t = r.redMul(c.redISub(o)).redISub(h);
i = this.y.redAdd(this.y);
} else {
var l = this.x.redSqr(), d = this.y.redSqr(), u = d.redSqr(), v = this.x.redAdd(d).redSqr().redISub(l).redISub(u);
v = v.redIAdd(v);
var g = l.redAdd(l).redIAdd(l), _ = g.redSqr(), f = u.redIAdd(u);
f = (f = f.redIAdd(f)).redIAdd(f);
e = _.redISub(v).redISub(v);
t = g.redMul(v.redISub(e)).redISub(f);
i = (i = this.y.redMul(this.z)).redIAdd(i);
}
return this.curve.jpoint(e, t, i);
};
l.prototype._threeDbl = function() {
var e, t, i;
if (this.zOne) {
var n = this.x.redSqr(), a = this.y.redSqr(), s = a.redSqr(), c = this.x.redAdd(a).redSqr().redISub(n).redISub(s);
c = c.redIAdd(c);
var r = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), o = r.redSqr().redISub(c).redISub(c);
e = o;
var h = s.redIAdd(s);
h = (h = h.redIAdd(h)).redIAdd(h);
t = r.redMul(c.redISub(o)).redISub(h);
i = this.y.redAdd(this.y);
} else {
var l = this.z.redSqr(), d = this.y.redSqr(), u = this.x.redMul(d), v = this.x.redSub(l).redMul(this.x.redAdd(l));
v = v.redAdd(v).redIAdd(v);
var g = u.redIAdd(u), _ = (g = g.redIAdd(g)).redAdd(g);
e = v.redSqr().redISub(_);
i = this.y.redAdd(this.z).redSqr().redISub(d).redISub(l);
var f = d.redSqr();
f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
t = v.redMul(g.redISub(e)).redISub(f);
}
return this.curve.jpoint(e, t, i);
};
l.prototype._dbl = function() {
var e = this.curve.a, t = this.x, i = this.y, n = this.z, a = n.redSqr().redSqr(), s = t.redSqr(), c = i.redSqr(), r = s.redAdd(s).redIAdd(s).redIAdd(e.redMul(a)), o = t.redAdd(t), h = (o = o.redIAdd(o)).redMul(c), l = r.redSqr().redISub(h.redAdd(h)), d = h.redISub(l), u = c.redSqr();
u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
var v = r.redMul(d).redISub(u), g = i.redAdd(i).redMul(n);
return this.curve.jpoint(l, v, g);
};
l.prototype.trpl = function() {
if (!this.curve.zeroA) return this.dbl().add(this);
var e = this.x.redSqr(), t = this.y.redSqr(), i = this.z.redSqr(), n = t.redSqr(), a = e.redAdd(e).redIAdd(e), s = a.redSqr(), c = this.x.redAdd(t).redSqr().redISub(e).redISub(n), r = (c = (c = (c = c.redIAdd(c)).redAdd(c).redIAdd(c)).redISub(s)).redSqr(), o = n.redIAdd(n);
o = (o = (o = o.redIAdd(o)).redIAdd(o)).redIAdd(o);
var h = a.redIAdd(c).redSqr().redISub(s).redISub(r).redISub(o), l = t.redMul(h);
l = (l = l.redIAdd(l)).redIAdd(l);
var d = this.x.redMul(r).redISub(l);
d = (d = d.redIAdd(d)).redIAdd(d);
var u = this.y.redMul(h.redMul(o.redISub(h)).redISub(c.redMul(r)));
u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
var v = this.z.redAdd(c).redSqr().redISub(i).redISub(r);
return this.curve.jpoint(d, u, v);
};
l.prototype.mul = function(e, t) {
e = new b(e, t);
return this.curve._wnafMul(this, e);
};
l.prototype.eq = function(e) {
if ("affine" === e.type) return this.eq(e.toJ());
if (this === e) return !0;
var t = this.z.redSqr(), i = e.z.redSqr();
if (0 !== this.x.redMul(i).redISub(e.x.redMul(t)).cmpn(0)) return !1;
var n = t.redMul(this.z), a = i.redMul(e.z);
return 0 === this.y.redMul(a).redISub(e.y.redMul(n)).cmpn(0);
};
l.prototype.eqXToP = function(e) {
var t = this.z.redSqr(), i = e.toRed(this.curve.red).redMul(t);
if (0 === this.x.cmp(i)) return !0;
for (var n = e.clone(), a = this.curve.redN.redMul(t); ;) {
n.iadd(this.curve.n);
if (0 <= n.cmp(this.curve.p)) return !1;
i.redIAdd(a);
if (0 === this.x.cmp(i)) return !0;
}
return !1;
};
l.prototype.inspect = function() {
return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
l.prototype.isInfinity = function() {
return 0 === this.z.cmpn(0);
};
}, {
"../../elliptic": 67,
"../curve": 70,
"bn.js": 16,
inherits: 101
} ],
73: [ function(e, t, i) {
"use strict";
var n, a = i, s = e("hash.js"), c = e("../elliptic"), r = c.utils.assert;
function o(e) {
"short" === e.type ? this.curve = new c.curve.short(e) : "edwards" === e.type ? this.curve = new c.curve.edwards(e) : this.curve = new c.curve.mont(e);
this.g = this.curve.g;
this.n = this.curve.n;
this.hash = e.hash;
r(this.g.validate(), "Invalid curve");
r(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
}
a.PresetCurve = o;
function h(t, i) {
Object.defineProperty(a, t, {
configurable: !0,
enumerable: !0,
get: function() {
var e = new o(i);
Object.defineProperty(a, t, {
configurable: !0,
enumerable: !0,
value: e
});
return e;
}
});
}
h("p192", {
type: "short",
prime: "p192",
p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
hash: s.sha256,
gRed: !1,
g: [ "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811" ]
});
h("p224", {
type: "short",
prime: "p224",
p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
hash: s.sha256,
gRed: !1,
g: [ "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34" ]
});
h("p256", {
type: "short",
prime: null,
p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
hash: s.sha256,
gRed: !1,
g: [ "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5" ]
});
h("p384", {
type: "short",
prime: null,
p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
hash: s.sha384,
gRed: !1,
g: [ "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f" ]
});
h("p521", {
type: "short",
prime: null,
p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
hash: s.sha512,
gRed: !1,
g: [ "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650" ]
});
h("curve25519", {
type: "mont",
prime: "p25519",
p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
a: "76d06",
b: "1",
n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
hash: s.sha256,
gRed: !1,
g: [ "9" ]
});
h("ed25519", {
type: "edwards",
prime: "p25519",
p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
a: "-1",
c: "1",
d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
hash: s.sha256,
gRed: !1,
g: [ "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658" ]
});
try {
n = e("./precomputed/secp256k1");
} catch (e) {
n = void 0;
}
h("secp256k1", {
type: "short",
prime: "k256",
p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
a: "0",
b: "7",
n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
h: "1",
hash: s.sha256,
beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
basis: [ {
a: "3086d221a7d46bcde86c90e49284eb15",
b: "-e4437ed6010e88286f547fa90abfe4c3"
}, {
a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
b: "3086d221a7d46bcde86c90e49284eb15"
} ],
gRed: !1,
g: [ "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n ]
});
}, {
"../elliptic": 67,
"./precomputed/secp256k1": 80,
"hash.js": 86
} ],
74: [ function(e, t, i) {
"use strict";
var f = e("bn.js"), p = e("hmac-drbg"), s = e("../../elliptic"), v = s.utils.assert, n = e("./key"), m = e("./signature");
function a(e) {
if (!(this instanceof a)) return new a(e);
if ("string" == typeof e) {
v(s.curves.hasOwnProperty(e), "Unknown curve " + e);
e = s.curves[e];
}
e instanceof s.curves.PresetCurve && (e = {
curve: e
});
this.curve = e.curve.curve;
this.n = this.curve.n;
this.nh = this.n.ushrn(1);
this.g = this.curve.g;
this.g = e.curve.g;
this.g.precompute(e.curve.n.bitLength() + 1);
this.hash = e.hash || e.curve.hash;
}
(t.exports = a).prototype.keyPair = function(e) {
return new n(this, e);
};
a.prototype.keyFromPrivate = function(e, t) {
return n.fromPrivate(this, e, t);
};
a.prototype.keyFromPublic = function(e, t) {
return n.fromPublic(this, e, t);
};
a.prototype.genKeyPair = function(e) {
e || (e = {});
for (var t = new p({
hash: this.hash,
pers: e.pers,
persEnc: e.persEnc || "utf8",
entropy: e.entropy || s.rand(this.hash.hmacStrength),
entropyEnc: e.entropy && e.entropyEnc || "utf8",
nonce: this.n.toArray()
}), i = this.n.byteLength(), n = this.n.sub(new f(2)); ;) {
var a = new f(t.generate(i));
if (!(0 < a.cmp(n))) {
a.iaddn(1);
return this.keyFromPrivate(a);
}
}
};
a.prototype._truncateToN = function(e, t) {
var i = 8 * e.byteLength() - this.n.bitLength();
0 < i && (e = e.ushrn(i));
return !t && 0 <= e.cmp(this.n) ? e.sub(this.n) : e;
};
a.prototype.sign = function(e, t, i, n) {
if ("object" == typeof i) {
n = i;
i = null;
}
n || (n = {});
t = this.keyFromPrivate(t, i);
e = this._truncateToN(new f(e, 16));
for (var a = this.n.byteLength(), s = t.getPrivate().toArray("be", a), c = e.toArray("be", a), r = new p({
hash: this.hash,
entropy: s,
nonce: c,
pers: n.pers,
persEnc: n.persEnc || "utf8"
}), o = this.n.sub(new f(1)), h = 0; ;h++) {
var l = n.k ? n.k(h) : new f(r.generate(this.n.byteLength()));
if (!((l = this._truncateToN(l, !0)).cmpn(1) <= 0 || 0 <= l.cmp(o))) {
var d = this.g.mul(l);
if (!d.isInfinity()) {
var u = d.getX(), v = u.umod(this.n);
if (0 !== v.cmpn(0)) {
var g = l.invm(this.n).mul(v.mul(t.getPrivate()).iadd(e));
if (0 !== (g = g.umod(this.n)).cmpn(0)) {
var _ = (d.getY().isOdd() ? 1 : 0) | (0 !== u.cmp(v) ? 2 : 0);
if (n.canonical && 0 < g.cmp(this.nh)) {
g = this.n.sub(g);
_ ^= 1;
}
return new m({
r: v,
s: g,
recoveryParam: _
});
}
}
}
}
}
};
a.prototype.verify = function(e, t, i, n) {
e = this._truncateToN(new f(e, 16));
i = this.keyFromPublic(i, n);
var a = (t = new m(t, "hex")).r, s = t.s;
if (a.cmpn(1) < 0 || 0 <= a.cmp(this.n)) return !1;
if (s.cmpn(1) < 0 || 0 <= s.cmp(this.n)) return !1;
var c = s.invm(this.n), r = c.mul(e).umod(this.n), o = c.mul(a).umod(this.n);
if (!this.curve._maxwellTrick) {
var h;
return !(h = this.g.mulAdd(r, i.getPublic(), o)).isInfinity() && 0 === h.getX().umod(this.n).cmp(a);
}
return !(h = this.g.jmulAdd(r, i.getPublic(), o)).isInfinity() && h.eqXToP(a);
};
a.prototype.recoverPubKey = function(e, t, i, n) {
v((3 & i) === i, "The recovery param is more than two bits");
t = new m(t, n);
var a = this.n, s = new f(e), c = t.r, r = t.s, o = 1 & i, h = i >> 1;
if (0 <= c.cmp(this.curve.p.umod(this.curve.n)) && h) throw new Error("Unable to find sencond key candinate");
c = h ? this.curve.pointFromX(c.add(this.curve.n), o) : this.curve.pointFromX(c, o);
var l = t.r.invm(a), d = a.sub(s).mul(l).umod(a), u = r.mul(l).umod(a);
return this.g.mulAdd(d, c, u);
};
a.prototype.getKeyRecoveryParam = function(e, t, i, n) {
if (null !== (t = new m(t, n)).recoveryParam) return t.recoveryParam;
for (var a = 0; a < 4; a++) {
var s;
try {
s = this.recoverPubKey(e, t, a);
} catch (e) {
continue;
}
if (s.eq(i)) return a;
}
throw new Error("Unable to find valid recovery factor");
};
}, {
"../../elliptic": 67,
"./key": 75,
"./signature": 76,
"bn.js": 16,
"hmac-drbg": 98
} ],
75: [ function(e, t, i) {
"use strict";
var n = e("bn.js"), a = e("../../elliptic").utils.assert;
function s(e, t) {
this.ec = e;
this.priv = null;
this.pub = null;
t.priv && this._importPrivate(t.priv, t.privEnc);
t.pub && this._importPublic(t.pub, t.pubEnc);
}
(t.exports = s).fromPublic = function(e, t, i) {
return t instanceof s ? t : new s(e, {
pub: t,
pubEnc: i
});
};
s.fromPrivate = function(e, t, i) {
return t instanceof s ? t : new s(e, {
priv: t,
privEnc: i
});
};
s.prototype.validate = function() {
var e = this.getPublic();
return e.isInfinity() ? {
result: !1,
reason: "Invalid public key"
} : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
result: !0,
reason: null
} : {
result: !1,
reason: "Public key * N != O"
} : {
result: !1,
reason: "Public key is not a point"
};
};
s.prototype.getPublic = function(e, t) {
if ("string" == typeof e) {
t = e;
e = null;
}
this.pub || (this.pub = this.ec.g.mul(this.priv));
return t ? this.pub.encode(t, e) : this.pub;
};
s.prototype.getPrivate = function(e) {
return "hex" === e ? this.priv.toString(16, 2) : this.priv;
};
s.prototype._importPrivate = function(e, t) {
this.priv = new n(e, t || 16);
this.priv = this.priv.umod(this.ec.curve.n);
};
s.prototype._importPublic = function(e, t) {
if (e.x || e.y) {
"mont" === this.ec.curve.type ? a(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || a(e.x && e.y, "Need both x and y coordinate");
this.pub = this.ec.curve.point(e.x, e.y);
} else this.pub = this.ec.curve.decodePoint(e, t);
};
s.prototype.derive = function(e) {
return e.mul(this.priv).getX();
};
s.prototype.sign = function(e, t, i) {
return this.ec.sign(e, this, t, i);
};
s.prototype.verify = function(e, t) {
return this.ec.verify(e, t, this);
};
s.prototype.inspect = function() {
return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
}, {
"../../elliptic": 67,
"bn.js": 16
} ],
76: [ function(e, t, i) {
"use strict";
var r = e("bn.js"), o = e("../../elliptic").utils, n = o.assert;
function a(e, t) {
if (e instanceof a) return e;
if (!this._importDER(e, t)) {
n(e.r && e.s, "Signature without r or s");
this.r = new r(e.r, 16);
this.s = new r(e.s, 16);
void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam;
}
}
function h() {
this.place = 0;
}
function l(e, t) {
var i = e[t.place++];
if (!(128 & i)) return i;
for (var n = 15 & i, a = 0, s = 0, c = t.place; s < n; s++, c++) {
a <<= 8;
a |= e[c];
}
t.place = c;
return a;
}
function c(e) {
for (var t = 0, i = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < i; ) t++;
return 0 === t ? e : e.slice(t);
}
(t.exports = a).prototype._importDER = function(e, t) {
e = o.toArray(e, t);
var i = new h();
if (48 !== e[i.place++]) return !1;
if (l(e, i) + i.place !== e.length) return !1;
if (2 !== e[i.place++]) return !1;
var n = l(e, i), a = e.slice(i.place, n + i.place);
i.place += n;
if (2 !== e[i.place++]) return !1;
var s = l(e, i);
if (e.length !== s + i.place) return !1;
var c = e.slice(i.place, s + i.place);
0 === a[0] && 128 & a[1] && (a = a.slice(1));
0 === c[0] && 128 & c[1] && (c = c.slice(1));
this.r = new r(a);
this.s = new r(c);
return !(this.recoveryParam = null);
};
function d(e, t) {
if (t < 128) e.push(t); else {
var i = 1 + (Math.log(t) / Math.LN2 >>> 3);
e.push(128 | i);
for (;--i; ) e.push(t >>> (i << 3) & 255);
e.push(t);
}
}
a.prototype.toDER = function(e) {
var t = this.r.toArray(), i = this.s.toArray();
128 & t[0] && (t = [ 0 ].concat(t));
128 & i[0] && (i = [ 0 ].concat(i));
t = c(t);
i = c(i);
for (;!(i[0] || 128 & i[1]); ) i = i.slice(1);
var n = [ 2 ];
d(n, t.length);
(n = n.concat(t)).push(2);
d(n, i.length);
var a = n.concat(i), s = [ 48 ];
d(s, a.length);
s = s.concat(a);
return o.encode(s, e);
};
}, {
"../../elliptic": 67,
"bn.js": 16
} ],
77: [ function(e, t, i) {
"use strict";
var n = e("hash.js"), a = e("../../elliptic"), s = a.utils, c = s.assert, o = s.parseBytes, r = e("./key"), h = e("./signature");
function l(e) {
c("ed25519" === e, "only tested with ed25519 so far");
if (!(this instanceof l)) return new l(e);
e = a.curves[e].curve;
this.curve = e;
this.g = e.g;
this.g.precompute(e.n.bitLength() + 1);
this.pointClass = e.point().constructor;
this.encodingLength = Math.ceil(e.n.bitLength() / 8);
this.hash = n.sha512;
}
(t.exports = l).prototype.sign = function(e, t) {
e = o(e);
var i = this.keyFromSecret(t), n = this.hashInt(i.messagePrefix(), e), a = this.g.mul(n), s = this.encodePoint(a), c = this.hashInt(s, i.pubBytes(), e).mul(i.priv()), r = n.add(c).umod(this.curve.n);
return this.makeSignature({
R: a,
S: r,
Rencoded: s
});
};
l.prototype.verify = function(e, t, i) {
e = o(e);
t = this.makeSignature(t);
var n = this.keyFromPublic(i), a = this.hashInt(t.Rencoded(), n.pubBytes(), e), s = this.g.mul(t.S());
return t.R().add(n.pub().mul(a)).eq(s);
};
l.prototype.hashInt = function() {
for (var e = this.hash(), t = 0; t < arguments.length; t++) e.update(arguments[t]);
return s.intFromLE(e.digest()).umod(this.curve.n);
};
l.prototype.keyFromPublic = function(e) {
return r.fromPublic(this, e);
};
l.prototype.keyFromSecret = function(e) {
return r.fromSecret(this, e);
};
l.prototype.makeSignature = function(e) {
return e instanceof h ? e : new h(this, e);
};
l.prototype.encodePoint = function(e) {
var t = e.getY().toArray("le", this.encodingLength);
t[this.encodingLength - 1] |= e.getX().isOdd() ? 128 : 0;
return t;
};
l.prototype.decodePoint = function(e) {
var t = (e = s.parseBytes(e)).length - 1, i = e.slice(0, t).concat(-129 & e[t]), n = 0 != (128 & e[t]), a = s.intFromLE(i);
return this.curve.pointFromY(a, n);
};
l.prototype.encodeInt = function(e) {
return e.toArray("le", this.encodingLength);
};
l.prototype.decodeInt = function(e) {
return s.intFromLE(e);
};
l.prototype.isPoint = function(e) {
return e instanceof this.pointClass;
};
}, {
"../../elliptic": 67,
"./key": 78,
"./signature": 79,
"hash.js": 86
} ],
78: [ function(e, t, i) {
"use strict";
var n = e("../../elliptic").utils, a = n.assert, s = n.parseBytes, c = n.cachedProperty;
function r(e, t) {
this.eddsa = e;
this._secret = s(t.secret);
e.isPoint(t.pub) ? this._pub = t.pub : this._pubBytes = s(t.pub);
}
r.fromPublic = function(e, t) {
return t instanceof r ? t : new r(e, {
pub: t
});
};
r.fromSecret = function(e, t) {
return t instanceof r ? t : new r(e, {
secret: t
});
};
r.prototype.secret = function() {
return this._secret;
};
c(r, "pubBytes", function() {
return this.eddsa.encodePoint(this.pub());
});
c(r, "pub", function() {
return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
});
c(r, "privBytes", function() {
var e = this.eddsa, t = this.hash(), i = e.encodingLength - 1, n = t.slice(0, e.encodingLength);
n[0] &= 248;
n[i] &= 127;
n[i] |= 64;
return n;
});
c(r, "priv", function() {
return this.eddsa.decodeInt(this.privBytes());
});
c(r, "hash", function() {
return this.eddsa.hash().update(this.secret()).digest();
});
c(r, "messagePrefix", function() {
return this.hash().slice(this.eddsa.encodingLength);
});
r.prototype.sign = function(e) {
a(this._secret, "KeyPair can only verify");
return this.eddsa.sign(e, this);
};
r.prototype.verify = function(e, t) {
return this.eddsa.verify(e, t, this);
};
r.prototype.getSecret = function(e) {
a(this._secret, "KeyPair is public only");
return n.encode(this.secret(), e);
};
r.prototype.getPublic = function(e) {
return n.encode(this.pubBytes(), e);
};
t.exports = r;
}, {
"../../elliptic": 67
} ],
79: [ function(e, t, i) {
"use strict";
var n = e("bn.js"), a = e("../../elliptic").utils, s = a.assert, c = a.cachedProperty, r = a.parseBytes;
function o(e, t) {
this.eddsa = e;
"object" != typeof t && (t = r(t));
Array.isArray(t) && (t = {
R: t.slice(0, e.encodingLength),
S: t.slice(e.encodingLength)
});
s(t.R && t.S, "Signature without R or S");
e.isPoint(t.R) && (this._R = t.R);
t.S instanceof n && (this._S = t.S);
this._Rencoded = Array.isArray(t.R) ? t.R : t.Rencoded;
this._Sencoded = Array.isArray(t.S) ? t.S : t.Sencoded;
}
c(o, "S", function() {
return this.eddsa.decodeInt(this.Sencoded());
});
c(o, "R", function() {
return this.eddsa.decodePoint(this.Rencoded());
});
c(o, "Rencoded", function() {
return this.eddsa.encodePoint(this.R());
});
c(o, "Sencoded", function() {
return this.eddsa.encodeInt(this.S());
});
o.prototype.toBytes = function() {
return this.Rencoded().concat(this.Sencoded());
};
o.prototype.toHex = function() {
return a.encode(this.toBytes(), "hex").toUpperCase();
};
t.exports = o;
}, {
"../../elliptic": 67,
"bn.js": 16
} ],
80: [ function(e, t, i) {
t.exports = {
doubles: {
step: 4,
points: [ [ "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821" ], [ "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf" ], [ "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695" ], [ "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9" ], [ "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36" ], [ "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f" ], [ "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999" ], [ "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09" ], [ "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d" ], [ "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088" ], [ "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d" ], [ "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8" ], [ "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a" ], [ "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453" ], [ "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160" ], [ "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0" ], [ "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6" ], [ "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589" ], [ "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17" ], [ "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda" ], [ "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd" ], [ "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2" ], [ "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6" ], [ "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f" ], [ "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01" ], [ "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3" ], [ "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f" ], [ "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7" ], [ "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78" ], [ "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1" ], [ "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150" ], [ "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82" ], [ "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc" ], [ "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b" ], [ "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51" ], [ "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45" ], [ "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120" ], [ "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84" ], [ "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d" ], [ "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d" ], [ "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8" ], [ "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8" ], [ "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac" ], [ "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f" ], [ "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962" ], [ "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907" ], [ "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec" ], [ "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d" ], [ "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414" ], [ "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd" ], [ "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0" ], [ "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811" ], [ "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1" ], [ "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c" ], [ "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73" ], [ "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd" ], [ "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405" ], [ "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589" ], [ "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e" ], [ "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27" ], [ "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1" ], [ "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482" ], [ "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945" ], [ "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573" ], [ "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82" ] ]
},
naf: {
wnd: 7,
points: [ [ "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672" ], [ "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6" ], [ "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da" ], [ "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37" ], [ "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b" ], [ "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81" ], [ "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58" ], [ "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77" ], [ "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a" ], [ "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c" ], [ "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67" ], [ "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402" ], [ "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55" ], [ "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482" ], [ "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82" ], [ "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396" ], [ "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49" ], [ "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf" ], [ "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a" ], [ "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7" ], [ "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933" ], [ "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a" ], [ "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6" ], [ "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37" ], [ "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e" ], [ "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6" ], [ "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476" ], [ "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40" ], [ "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61" ], [ "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683" ], [ "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5" ], [ "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b" ], [ "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417" ], [ "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868" ], [ "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a" ], [ "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6" ], [ "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996" ], [ "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e" ], [ "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d" ], [ "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2" ], [ "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e" ], [ "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437" ], [ "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311" ], [ "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4" ], [ "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575" ], [ "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d" ], [ "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d" ], [ "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629" ], [ "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06" ], [ "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374" ], [ "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee" ], [ "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1" ], [ "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b" ], [ "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661" ], [ "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6" ], [ "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e" ], [ "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d" ], [ "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc" ], [ "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4" ], [ "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c" ], [ "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b" ], [ "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913" ], [ "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154" ], [ "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865" ], [ "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc" ], [ "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224" ], [ "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e" ], [ "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6" ], [ "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511" ], [ "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b" ], [ "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2" ], [ "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c" ], [ "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3" ], [ "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d" ], [ "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700" ], [ "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4" ], [ "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196" ], [ "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4" ], [ "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257" ], [ "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13" ], [ "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096" ], [ "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38" ], [ "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f" ], [ "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448" ], [ "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a" ], [ "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4" ], [ "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437" ], [ "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7" ], [ "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d" ], [ "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a" ], [ "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54" ], [ "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77" ], [ "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517" ], [ "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10" ], [ "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125" ], [ "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e" ], [ "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1" ], [ "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2" ], [ "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423" ], [ "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8" ], [ "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758" ], [ "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375" ], [ "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d" ], [ "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec" ], [ "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0" ], [ "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c" ], [ "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4" ], [ "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f" ], [ "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649" ], [ "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826" ], [ "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5" ], [ "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87" ], [ "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b" ], [ "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc" ], [ "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c" ], [ "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f" ], [ "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a" ], [ "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46" ], [ "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f" ], [ "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03" ], [ "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08" ], [ "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8" ], [ "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373" ], [ "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3" ], [ "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8" ], [ "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1" ], [ "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9" ] ]
}
};
}, {} ],
81: [ function(e, t, i) {
"use strict";
var n = i, a = e("bn.js"), s = e("minimalistic-assert"), c = e("minimalistic-crypto-utils");
n.assert = s;
n.toArray = c.toArray;
n.zero2 = c.zero2;
n.toHex = c.toHex;
n.encode = c.encode;
n.getNAF = function(e, t) {
for (var i = [], n = 1 << t + 1, a = e.clone(); 0 <= a.cmpn(1); ) {
var s;
if (a.isOdd()) {
var c = a.andln(n - 1);
s = (n >> 1) - 1 < c ? (n >> 1) - c : c;
a.isubn(s);
} else s = 0;
i.push(s);
for (var r = 0 !== a.cmpn(0) && 0 === a.andln(n - 1) ? t + 1 : 1, o = 1; o < r; o++) i.push(0);
a.iushrn(r);
}
return i;
};
n.getJSF = function(e, t) {
var i = [ [], [] ];
e = e.clone();
t = t.clone();
for (var n = 0, a = 0; 0 < e.cmpn(-n) || 0 < t.cmpn(-a); ) {
var s, c, r = e.andln(3) + n & 3, o = t.andln(3) + a & 3;
3 === r && (r = -1);
3 === o && (o = -1);
s = 0 == (1 & r) ? 0 : 3 != (h = e.andln(7) + n & 7) && 5 !== h || 2 !== o ? r : -r;
i[0].push(s);
if (0 == (1 & o)) c = 0; else {
var h;
c = 3 != (h = t.andln(7) + a & 7) && 5 !== h || 2 !== r ? o : -o;
}
i[1].push(c);
2 * n === s + 1 && (n = 1 - n);
2 * a === c + 1 && (a = 1 - a);
e.iushrn(1);
t.iushrn(1);
}
return i;
};
n.cachedProperty = function(e, t, i) {
var n = "_" + t;
e.prototype[t] = function() {
return void 0 !== this[n] ? this[n] : this[n] = i.call(this);
};
};
n.parseBytes = function(e) {
return "string" == typeof e ? n.toArray(e, "hex") : e;
};
n.intFromLE = function(e) {
return new a(e, "hex", "le");
};
}, {
"bn.js": 16,
"minimalistic-assert": 105,
"minimalistic-crypto-utils": 106
} ],
82: [ function(e, t, i) {
t.exports = {
_args: [ [ {
raw: "elliptic@^6.0.0",
scope: null,
escapedName: "elliptic",
name: "elliptic",
rawSpec: "^6.0.0",
spec: ">=6.0.0 <7.0.0",
type: "range"
}, "C:\\Users\\nantas\\fireball-x\\fb19-release\\dist\\resources\\app\\node_modules\\browserify-sign" ] ],
_cnpm_publish_time: 1487798867116,
_from: "elliptic@>=6.0.0 <7.0.0",
_hasShrinkwrap: !1,
_id: "elliptic@6.4.0",
_inCache: !0,
_location: "/elliptic",
_nodeVersion: "7.0.0",
_npmOperationalInternal: {
host: "packages-18-east.internal.npmjs.com",
tmp: "tmp/elliptic-6.4.0.tgz_1487798866428_0.30510620190761983"
},
_npmUser: {
name: "indutny",
email: "fedor@indutny.com"
},
_npmVersion: "3.10.8",
_phantomChildren: {},
_requested: {
raw: "elliptic@^6.0.0",
scope: null,
escapedName: "elliptic",
name: "elliptic",
rawSpec: "^6.0.0",
spec: ">=6.0.0 <7.0.0",
type: "range"
},
_requiredBy: [ "/browserify-sign", "/create-ecdh" ],
_resolved: "https://registry.npm.taobao.org/elliptic/download/elliptic-6.4.0.tgz",
_shasum: "cac9af8762c85836187003c8dfe193e5e2eae5df",
_shrinkwrap: null,
_spec: "elliptic@^6.0.0",
_where: "C:\\Users\\nantas\\fireball-x\\fb19-release\\dist\\resources\\app\\node_modules\\browserify-sign",
author: {
name: "Fedor Indutny",
email: "fedor@indutny.com"
},
bugs: {
url: "https://github.com/indutny/elliptic/issues"
},
dependencies: {
"bn.js": "^4.4.0",
brorand: "^1.0.1",
"hash.js": "^1.0.0",
"hmac-drbg": "^1.0.0",
inherits: "^2.0.1",
"minimalistic-assert": "^1.0.0",
"minimalistic-crypto-utils": "^1.0.0"
},
description: "EC cryptography",
devDependencies: {
brfs: "^1.4.3",
coveralls: "^2.11.3",
grunt: "^0.4.5",
"grunt-browserify": "^5.0.0",
"grunt-cli": "^1.2.0",
"grunt-contrib-connect": "^1.0.0",
"grunt-contrib-copy": "^1.0.0",
"grunt-contrib-uglify": "^1.0.1",
"grunt-mocha-istanbul": "^3.0.1",
"grunt-saucelabs": "^8.6.2",
istanbul: "^0.4.2",
jscs: "^2.9.0",
jshint: "^2.6.0",
mocha: "^2.1.0"
},
directories: {},
dist: {
shasum: "cac9af8762c85836187003c8dfe193e5e2eae5df",
size: 41164,
noattachment: !1,
tarball: "http://registry.npm.taobao.org/elliptic/download/elliptic-6.4.0.tgz"
},
files: [ "lib" ],
gitHead: "6b0d2b76caae91471649c8e21f0b1d3ba0f96090",
homepage: "https://github.com/indutny/elliptic",
keywords: [ "EC", "Elliptic", "curve", "Cryptography" ],
license: "MIT",
main: "lib/elliptic.js",
maintainers: [ {
name: "indutny",
email: "fedor@indutny.com"
} ],
name: "elliptic",
optionalDependencies: {},
publish_time: 1487798867116,
readme: "ERROR: No README data found!",
repository: {
type: "git",
url: "git+ssh://git@github.com/indutny/elliptic.git"
},
scripts: {
jscs: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
jshint: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
lint: "npm run jscs && npm run jshint",
test: "npm run lint && npm run unit",
unit: "istanbul test _mocha --reporter=spec test/index.js",
version: "grunt dist && git add dist/"
},
version: "6.4.0"
};
}, {} ],
83: [ function(e, t, i) {
function n() {
this._events = this._events || {};
this._maxListeners = this._maxListeners || void 0;
}
((t.exports = n).EventEmitter = n).prototype._events = void 0;
n.prototype._maxListeners = void 0;
n.defaultMaxListeners = 10;
n.prototype.setMaxListeners = function(e) {
if (!("number" == typeof e) || e < 0 || isNaN(e)) throw TypeError("n must be a positive number");
this._maxListeners = e;
return this;
};
n.prototype.emit = function(e) {
var t, i, n, a, s, c;
this._events || (this._events = {});
if ("error" === e && (!this._events.error || h(this._events.error) && !this._events.error.length)) {
if ((t = arguments[1]) instanceof Error) throw t;
var r = new Error('Uncaught, unspecified "error" event. (' + t + ")");
r.context = t;
throw r;
}
if (l(i = this._events[e])) return !1;
if (o(i)) switch (arguments.length) {
case 1:
i.call(this);
break;

case 2:
i.call(this, arguments[1]);
break;

case 3:
i.call(this, arguments[1], arguments[2]);
break;

default:
a = Array.prototype.slice.call(arguments, 1);
i.apply(this, a);
} else if (h(i)) {
a = Array.prototype.slice.call(arguments, 1);
n = (c = i.slice()).length;
for (s = 0; s < n; s++) c[s].apply(this, a);
}
return !0;
};
n.prototype.on = n.prototype.addListener = function(e, t) {
var i;
if (!o(t)) throw TypeError("listener must be a function");
this._events || (this._events = {});
this._events.newListener && this.emit("newListener", e, o(t.listener) ? t.listener : t);
this._events[e] ? h(this._events[e]) ? this._events[e].push(t) : this._events[e] = [ this._events[e], t ] : this._events[e] = t;
if (h(this._events[e]) && !this._events[e].warned && (i = l(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners) && 0 < i && this._events[e].length > i) {
this._events[e].warned = !0;
console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[e].length);
"function" == typeof console.trace && console.trace();
}
return this;
};
n.prototype.once = function(e, t) {
if (!o(t)) throw TypeError("listener must be a function");
var i = !1;
function n() {
this.removeListener(e, n);
if (!i) {
i = !0;
t.apply(this, arguments);
}
}
n.listener = t;
this.on(e, n);
return this;
};
n.prototype.removeListener = function(e, t) {
var i, n, a, s;
if (!o(t)) throw TypeError("listener must be a function");
if (!this._events || !this._events[e]) return this;
a = (i = this._events[e]).length;
n = -1;
if (i === t || o(i.listener) && i.listener === t) {
delete this._events[e];
this._events.removeListener && this.emit("removeListener", e, t);
} else if (h(i)) {
for (s = a; 0 < s--; ) if (i[s] === t || i[s].listener && i[s].listener === t) {
n = s;
break;
}
if (n < 0) return this;
if (1 === i.length) {
i.length = 0;
delete this._events[e];
} else i.splice(n, 1);
this._events.removeListener && this.emit("removeListener", e, t);
}
return this;
};
n.prototype.removeAllListeners = function(e) {
var t, i;
if (!this._events) return this;
if (!this._events.removeListener) {
0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e];
return this;
}
if (0 === arguments.length) {
for (t in this._events) "removeListener" !== t && this.removeAllListeners(t);
this.removeAllListeners("removeListener");
this._events = {};
return this;
}
if (o(i = this._events[e])) this.removeListener(e, i); else if (i) for (;i.length; ) this.removeListener(e, i[i.length - 1]);
delete this._events[e];
return this;
};
n.prototype.listeners = function(e) {
return this._events && this._events[e] ? o(this._events[e]) ? [ this._events[e] ] : this._events[e].slice() : [];
};
n.prototype.listenerCount = function(e) {
if (this._events) {
var t = this._events[e];
if (o(t)) return 1;
if (t) return t.length;
}
return 0;
};
n.listenerCount = function(e, t) {
return e.listenerCount(t);
};
function o(e) {
return "function" == typeof e;
}
function h(e) {
return "object" == typeof e && null !== e;
}
function l(e) {
return void 0 === e;
}
}, {} ],
84: [ function(e, t, i) {
var v = e("safe-buffer").Buffer, g = e("md5.js");
t.exports = function(e, t, i, n) {
v.isBuffer(e) || (e = v.from(e, "binary"));
if (t) {
v.isBuffer(t) || (t = v.from(t, "binary"));
if (8 !== t.length) throw new RangeError("salt should be Buffer with 8 byte length");
}
for (var a = i / 8, s = v.alloc(a), c = v.alloc(n || 0), r = v.alloc(0); 0 < a || 0 < n; ) {
var o = new g();
o.update(r);
o.update(e);
t && o.update(t);
r = o.digest();
var h = 0;
if (0 < a) {
var l = s.length - a;
h = Math.min(a, r.length);
r.copy(s, l, 0, h);
a -= h;
}
if (h < r.length && 0 < n) {
var d = c.length - n, u = Math.min(n, r.length - h);
r.copy(c, d, h, h + u);
n -= u;
}
}
r.fill(0);
return {
key: s,
iv: c
};
};
}, {
"md5.js": 103,
"safe-buffer": 143
} ],
85: [ function(e, t, i) {
"use strict";
var r = e("safe-buffer").Buffer, n = e("stream").Transform;
function a(e) {
n.call(this);
this._block = r.allocUnsafe(e);
this._blockSize = e;
this._blockOffset = 0;
this._length = [ 0, 0, 0, 0 ];
this._finalized = !1;
}
e("inherits")(a, n);
a.prototype._transform = function(e, t, i) {
var n = null;
try {
this.update(e, t);
} catch (e) {
n = e;
}
i(n);
};
a.prototype._flush = function(e) {
var t = null;
try {
this.push(this.digest());
} catch (e) {
t = e;
}
e(t);
};
a.prototype.update = function(e, t) {
(function(e, t) {
if (!r.isBuffer(e) && "string" != typeof e) throw new TypeError(t + " must be a string or a buffer");
})(e, "Data");
if (this._finalized) throw new Error("Digest already called");
r.isBuffer(e) || (e = r.from(e, t));
for (var i = this._block, n = 0; this._blockOffset + e.length - n >= this._blockSize; ) {
for (var a = this._blockOffset; a < this._blockSize; ) i[a++] = e[n++];
this._update();
this._blockOffset = 0;
}
for (;n < e.length; ) i[this._blockOffset++] = e[n++];
for (var s = 0, c = 8 * e.length; 0 < c; ++s) {
this._length[s] += c;
0 < (c = this._length[s] / 4294967296 | 0) && (this._length[s] -= 4294967296 * c);
}
return this;
};
a.prototype._update = function() {
throw new Error("_update is not implemented");
};
a.prototype.digest = function(e) {
if (this._finalized) throw new Error("Digest already called");
this._finalized = !0;
var t = this._digest();
void 0 !== e && (t = t.toString(e));
this._block.fill(0);
for (var i = this._blockOffset = 0; i < 4; ++i) this._length[i] = 0;
return t;
};
a.prototype._digest = function() {
throw new Error("_digest is not implemented");
};
t.exports = a;
}, {
inherits: 101,
"safe-buffer": 143,
stream: 152
} ],
86: [ function(e, t, i) {
var n = i;
n.utils = e("./hash/utils");
n.common = e("./hash/common");
n.sha = e("./hash/sha");
n.ripemd = e("./hash/ripemd");
n.hmac = e("./hash/hmac");
n.sha1 = n.sha.sha1;
n.sha256 = n.sha.sha256;
n.sha224 = n.sha.sha224;
n.sha384 = n.sha.sha384;
n.sha512 = n.sha.sha512;
n.ripemd160 = n.ripemd.ripemd160;
}, {
"./hash/common": 87,
"./hash/hmac": 88,
"./hash/ripemd": 89,
"./hash/sha": 90,
"./hash/utils": 97
} ],
87: [ function(e, t, i) {
"use strict";
var a = e("./utils"), n = e("minimalistic-assert");
function s() {
this.pending = null;
this.pendingTotal = 0;
this.blockSize = this.constructor.blockSize;
this.outSize = this.constructor.outSize;
this.hmacStrength = this.constructor.hmacStrength;
this.padLength = this.constructor.padLength / 8;
this.endian = "big";
this._delta8 = this.blockSize / 8;
this._delta32 = this.blockSize / 32;
}
(i.BlockHash = s).prototype.update = function(e, t) {
e = a.toArray(e, t);
this.pending ? this.pending = this.pending.concat(e) : this.pending = e;
this.pendingTotal += e.length;
if (this.pending.length >= this._delta8) {
var i = (e = this.pending).length % this._delta8;
this.pending = e.slice(e.length - i, e.length);
0 === this.pending.length && (this.pending = null);
e = a.join32(e, 0, e.length - i, this.endian);
for (var n = 0; n < e.length; n += this._delta32) this._update(e, n, n + this._delta32);
}
return this;
};
s.prototype.digest = function(e) {
this.update(this._pad());
n(null === this.pending);
return this._digest(e);
};
s.prototype._pad = function() {
var e = this.pendingTotal, t = this._delta8, i = t - (e + this.padLength) % t, n = new Array(i + this.padLength);
n[0] = 128;
for (var a = 1; a < i; a++) n[a] = 0;
e <<= 3;
if ("big" === this.endian) {
for (var s = 8; s < this.padLength; s++) n[a++] = 0;
n[a++] = 0;
n[a++] = 0;
n[a++] = 0;
n[a++] = 0;
n[a++] = e >>> 24 & 255;
n[a++] = e >>> 16 & 255;
n[a++] = e >>> 8 & 255;
n[a++] = 255 & e;
} else {
n[a++] = 255 & e;
n[a++] = e >>> 8 & 255;
n[a++] = e >>> 16 & 255;
n[a++] = e >>> 24 & 255;
n[a++] = 0;
n[a++] = 0;
n[a++] = 0;
n[a++] = 0;
for (s = 8; s < this.padLength; s++) n[a++] = 0;
}
return n;
};
}, {
"./utils": 97,
"minimalistic-assert": 105
} ],
88: [ function(e, t, i) {
"use strict";
var n = e("./utils"), a = e("minimalistic-assert");
function s(e, t, i) {
if (!(this instanceof s)) return new s(e, t, i);
this.Hash = e;
this.blockSize = e.blockSize / 8;
this.outSize = e.outSize / 8;
this.inner = null;
this.outer = null;
this._init(n.toArray(t, i));
}
(t.exports = s).prototype._init = function(e) {
e.length > this.blockSize && (e = new this.Hash().update(e).digest());
a(e.length <= this.blockSize);
for (var t = e.length; t < this.blockSize; t++) e.push(0);
for (t = 0; t < e.length; t++) e[t] ^= 54;
this.inner = new this.Hash().update(e);
for (t = 0; t < e.length; t++) e[t] ^= 106;
this.outer = new this.Hash().update(e);
};
s.prototype.update = function(e, t) {
this.inner.update(e, t);
return this;
};
s.prototype.digest = function(e) {
this.outer.update(this.inner.digest());
return this.outer.digest(e);
};
}, {
"./utils": 97,
"minimalistic-assert": 105
} ],
89: [ function(e, t, i) {
"use strict";
var n = e("./utils"), a = e("./common"), g = n.rotl32, _ = n.sum32, f = n.sum32_3, p = n.sum32_4, s = a.BlockHash;
function c() {
if (!(this instanceof c)) return new c();
s.call(this);
this.h = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ];
this.endian = "little";
}
n.inherits(c, s);
(i.ripemd160 = c).blockSize = 512;
c.outSize = 160;
c.hmacStrength = 192;
c.padLength = 64;
c.prototype._update = function(e, t) {
for (var i = this.h[0], n = this.h[1], a = this.h[2], s = this.h[3], c = this.h[4], r = i, o = n, h = a, l = s, d = c, u = 0; u < 80; u++) {
var v = _(g(p(i, m(u, n, a, s), e[b[u] + t], C(u)), N[u]), c);
i = c;
c = s;
s = g(a, 10);
a = n;
n = v;
v = _(g(p(r, m(79 - u, o, h, l), e[M[u] + t], y(u)), S[u]), d);
r = d;
d = l;
l = g(h, 10);
h = o;
o = v;
}
v = f(this.h[1], a, l);
this.h[1] = f(this.h[2], s, d);
this.h[2] = f(this.h[3], c, r);
this.h[3] = f(this.h[4], i, o);
this.h[4] = f(this.h[0], n, h);
this.h[0] = v;
};
c.prototype._digest = function(e) {
return "hex" === e ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
};
function m(e, t, i, n) {
return e <= 15 ? t ^ i ^ n : e <= 31 ? t & i | ~t & n : e <= 47 ? (t | ~i) ^ n : e <= 63 ? t & n | i & ~n : t ^ (i | ~n);
}
function C(e) {
return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;
}
function y(e) {
return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;
}
var b = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13 ], M = [ 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11 ], N = [ 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6 ], S = [ 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11 ];
}, {
"./common": 87,
"./utils": 97
} ],
90: [ function(e, t, i) {
"use strict";
i.sha1 = e("./sha/1");
i.sha224 = e("./sha/224");
i.sha256 = e("./sha/256");
i.sha384 = e("./sha/384");
i.sha512 = e("./sha/512");
}, {
"./sha/1": 91,
"./sha/224": 92,
"./sha/256": 93,
"./sha/384": 94,
"./sha/512": 95
} ],
91: [ function(e, t, i) {
"use strict";
var n = e("../utils"), a = e("../common"), s = e("./common"), d = n.rotl32, u = n.sum32, v = n.sum32_5, g = s.ft_1, c = a.BlockHash, _ = [ 1518500249, 1859775393, 2400959708, 3395469782 ];
function r() {
if (!(this instanceof r)) return new r();
c.call(this);
this.h = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ];
this.W = new Array(80);
}
n.inherits(r, c);
(t.exports = r).blockSize = 512;
r.outSize = 160;
r.hmacStrength = 80;
r.padLength = 64;
r.prototype._update = function(e, t) {
for (var i = this.W, n = 0; n < 16; n++) i[n] = e[t + n];
for (;n < i.length; n++) i[n] = d(i[n - 3] ^ i[n - 8] ^ i[n - 14] ^ i[n - 16], 1);
var a = this.h[0], s = this.h[1], c = this.h[2], r = this.h[3], o = this.h[4];
for (n = 0; n < i.length; n++) {
var h = ~~(n / 20), l = v(d(a, 5), g(h, s, c, r), o, i[n], _[h]);
o = r;
r = c;
c = d(s, 30);
s = a;
a = l;
}
this.h[0] = u(this.h[0], a);
this.h[1] = u(this.h[1], s);
this.h[2] = u(this.h[2], c);
this.h[3] = u(this.h[3], r);
this.h[4] = u(this.h[4], o);
};
r.prototype._digest = function(e) {
return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
};
}, {
"../common": 87,
"../utils": 97,
"./common": 96
} ],
92: [ function(e, t, i) {
"use strict";
var n = e("../utils"), a = e("./256");
function s() {
if (!(this instanceof s)) return new s();
a.call(this);
this.h = [ 3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428 ];
}
n.inherits(s, a);
(t.exports = s).blockSize = 512;
s.outSize = 224;
s.hmacStrength = 192;
s.padLength = 64;
s.prototype._digest = function(e) {
return "hex" === e ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
};
}, {
"../utils": 97,
"./256": 93
} ],
93: [ function(e, t, i) {
"use strict";
var n = e("../utils"), a = e("../common"), s = e("./common"), g = e("minimalistic-assert"), _ = n.sum32, f = n.sum32_4, p = n.sum32_5, m = s.ch32, C = s.maj32, y = s.s0_256, b = s.s1_256, M = s.g0_256, N = s.g1_256, c = a.BlockHash, r = [ 1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298 ];
function o() {
if (!(this instanceof o)) return new o();
c.call(this);
this.h = [ 1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225 ];
this.k = r;
this.W = new Array(64);
}
n.inherits(o, c);
(t.exports = o).blockSize = 512;
o.outSize = 256;
o.hmacStrength = 192;
o.padLength = 64;
o.prototype._update = function(e, t) {
for (var i = this.W, n = 0; n < 16; n++) i[n] = e[t + n];
for (;n < i.length; n++) i[n] = f(N(i[n - 2]), i[n - 7], M(i[n - 15]), i[n - 16]);
var a = this.h[0], s = this.h[1], c = this.h[2], r = this.h[3], o = this.h[4], h = this.h[5], l = this.h[6], d = this.h[7];
g(this.k.length === i.length);
for (n = 0; n < i.length; n++) {
var u = p(d, b(o), m(o, h, l), this.k[n], i[n]), v = _(y(a), C(a, s, c));
d = l;
l = h;
h = o;
o = _(r, u);
r = c;
c = s;
s = a;
a = _(u, v);
}
this.h[0] = _(this.h[0], a);
this.h[1] = _(this.h[1], s);
this.h[2] = _(this.h[2], c);
this.h[3] = _(this.h[3], r);
this.h[4] = _(this.h[4], o);
this.h[5] = _(this.h[5], h);
this.h[6] = _(this.h[6], l);
this.h[7] = _(this.h[7], d);
};
o.prototype._digest = function(e) {
return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
};
}, {
"../common": 87,
"../utils": 97,
"./common": 96,
"minimalistic-assert": 105
} ],
94: [ function(e, t, i) {
"use strict";
var n = e("../utils"), a = e("./512");
function s() {
if (!(this instanceof s)) return new s();
a.call(this);
this.h = [ 3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428 ];
}
n.inherits(s, a);
(t.exports = s).blockSize = 1024;
s.outSize = 384;
s.hmacStrength = 192;
s.padLength = 128;
s.prototype._digest = function(e) {
return "hex" === e ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
};
}, {
"../utils": 97,
"./512": 95
} ],
95: [ function(e, t, i) {
"use strict";
var n = e("../utils"), a = e("../common"), x = e("minimalistic-assert"), s = n.rotr64_hi, c = n.rotr64_lo, r = n.shr64_hi, o = n.shr64_lo, R = n.sum64, P = n.sum64_hi, D = n.sum64_lo, u = n.sum64_4_hi, v = n.sum64_4_lo, H = n.sum64_5_hi, G = n.sum64_5_lo, h = a.BlockHash, l = [ 1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591 ];
function d() {
if (!(this instanceof d)) return new d();
h.call(this);
this.h = [ 1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209 ];
this.k = l;
this.W = new Array(160);
}
n.inherits(d, h);
(t.exports = d).blockSize = 1024;
d.outSize = 512;
d.hmacStrength = 192;
d.padLength = 128;
d.prototype._prepareBlock = function(e, t) {
for (var i = this.W, n = 0; n < 32; n++) i[n] = e[t + n];
for (;n < i.length; n += 2) {
var a = f(i[n - 4], i[n - 3]), s = p(i[n - 4], i[n - 3]), c = i[n - 14], r = i[n - 13], o = g(i[n - 30], i[n - 29]), h = _(i[n - 30], i[n - 29]), l = i[n - 32], d = i[n - 31];
i[n] = u(a, s, c, r, o, h, l, d);
i[n + 1] = v(a, s, c, r, o, h, l, d);
}
};
d.prototype._update = function(e, t) {
this._prepareBlock(e, t);
var i = this.W, n = this.h[0], a = this.h[1], s = this.h[2], c = this.h[3], r = this.h[4], o = this.h[5], h = this.h[6], l = this.h[7], d = this.h[8], u = this.h[9], v = this.h[10], g = this.h[11], _ = this.h[12], f = this.h[13], p = this.h[14], m = this.h[15];
x(this.k.length === i.length);
for (var C = 0; C < i.length; C += 2) {
var y = p, b = m, M = V(d, u), N = Y(d, u), S = j(d, u, v, g, _), A = F(d, u, v, g, _, f), I = this.k[C], E = this.k[C + 1], B = i[C], w = i[C + 1], k = H(y, b, M, N, S, A, I, E, B, w), T = G(y, b, M, N, S, A, I, E, B, w);
y = J(n, a);
b = K(n, a);
M = U(n, a, s, c, r);
N = z(n, a, s, c, r, o);
var L = P(y, b, M, N), O = D(y, b, M, N);
p = _;
m = f;
_ = v;
f = g;
v = d;
g = u;
d = P(h, l, k, T);
u = D(l, l, k, T);
h = r;
l = o;
r = s;
o = c;
s = n;
c = a;
n = P(k, T, L, O);
a = D(k, T, L, O);
}
R(this.h, 0, n, a);
R(this.h, 2, s, c);
R(this.h, 4, r, o);
R(this.h, 6, h, l);
R(this.h, 8, d, u);
R(this.h, 10, v, g);
R(this.h, 12, _, f);
R(this.h, 14, p, m);
};
d.prototype._digest = function(e) {
return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
};
function j(e, t, i, n, a) {
var s = e & i ^ ~e & a;
s < 0 && (s += 4294967296);
return s;
}
function F(e, t, i, n, a, s) {
var c = t & n ^ ~t & s;
c < 0 && (c += 4294967296);
return c;
}
function U(e, t, i, n, a) {
var s = e & i ^ e & a ^ i & a;
s < 0 && (s += 4294967296);
return s;
}
function z(e, t, i, n, a, s) {
var c = t & n ^ t & s ^ n & s;
c < 0 && (c += 4294967296);
return c;
}
function J(e, t) {
var i = s(e, t, 28) ^ s(t, e, 2) ^ s(t, e, 7);
i < 0 && (i += 4294967296);
return i;
}
function K(e, t) {
var i = c(e, t, 28) ^ c(t, e, 2) ^ c(t, e, 7);
i < 0 && (i += 4294967296);
return i;
}
function V(e, t) {
var i = s(e, t, 14) ^ s(e, t, 18) ^ s(t, e, 9);
i < 0 && (i += 4294967296);
return i;
}
function Y(e, t) {
var i = c(e, t, 14) ^ c(e, t, 18) ^ c(t, e, 9);
i < 0 && (i += 4294967296);
return i;
}
function g(e, t) {
var i = s(e, t, 1) ^ s(e, t, 8) ^ r(e, t, 7);
i < 0 && (i += 4294967296);
return i;
}
function _(e, t) {
var i = c(e, t, 1) ^ c(e, t, 8) ^ o(e, t, 7);
i < 0 && (i += 4294967296);
return i;
}
function f(e, t) {
var i = s(e, t, 19) ^ s(t, e, 29) ^ r(e, t, 6);
i < 0 && (i += 4294967296);
return i;
}
function p(e, t) {
var i = c(e, t, 19) ^ c(t, e, 29) ^ o(e, t, 6);
i < 0 && (i += 4294967296);
return i;
}
}, {
"../common": 87,
"../utils": 97,
"minimalistic-assert": 105
} ],
96: [ function(e, t, i) {
"use strict";
var n = e("../utils").rotr32;
i.ft_1 = function(e, t, i, n) {
return 0 === e ? a(t, i, n) : 1 === e || 3 === e ? c(t, i, n) : 2 === e ? s(t, i, n) : void 0;
};
function a(e, t, i) {
return e & t ^ ~e & i;
}
i.ch32 = a;
function s(e, t, i) {
return e & t ^ e & i ^ t & i;
}
i.maj32 = s;
function c(e, t, i) {
return e ^ t ^ i;
}
i.p32 = c;
i.s0_256 = function(e) {
return n(e, 2) ^ n(e, 13) ^ n(e, 22);
};
i.s1_256 = function(e) {
return n(e, 6) ^ n(e, 11) ^ n(e, 25);
};
i.g0_256 = function(e) {
return n(e, 7) ^ n(e, 18) ^ e >>> 3;
};
i.g1_256 = function(e) {
return n(e, 17) ^ n(e, 19) ^ e >>> 10;
};
}, {
"../utils": 97
} ],
97: [ function(e, t, i) {
"use strict";
var h = e("minimalistic-assert"), n = e("inherits");
i.inherits = n;
i.toArray = function(e, t) {
if (Array.isArray(e)) return e.slice();
if (!e) return [];
var i = [];
if ("string" == typeof e) if (t) {
if ("hex" === t) {
(e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e);
for (n = 0; n < e.length; n += 2) i.push(parseInt(e[n] + e[n + 1], 16));
}
} else for (var n = 0; n < e.length; n++) {
var a = e.charCodeAt(n), s = a >> 8, c = 255 & a;
s ? i.push(s, c) : i.push(c);
} else for (n = 0; n < e.length; n++) i[n] = 0 | e[n];
return i;
};
i.toHex = function(e) {
for (var t = "", i = 0; i < e.length; i++) t += a(e[i].toString(16));
return t;
};
function s(e) {
return (e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (255 & e) << 24) >>> 0;
}
i.htonl = s;
i.toHex32 = function(e, t) {
for (var i = "", n = 0; n < e.length; n++) {
var a = e[n];
"little" === t && (a = s(a));
i += c(a.toString(16));
}
return i;
};
function a(e) {
return 1 === e.length ? "0" + e : e;
}
i.zero2 = a;
function c(e) {
return 7 === e.length ? "0" + e : 6 === e.length ? "00" + e : 5 === e.length ? "000" + e : 4 === e.length ? "0000" + e : 3 === e.length ? "00000" + e : 2 === e.length ? "000000" + e : 1 === e.length ? "0000000" + e : e;
}
i.zero8 = c;
i.join32 = function(e, t, i, n) {
var a = i - t;
h(a % 4 == 0);
for (var s = new Array(a / 4), c = 0, r = t; c < s.length; c++, r += 4) {
var o;
o = "big" === n ? e[r] << 24 | e[r + 1] << 16 | e[r + 2] << 8 | e[r + 3] : e[r + 3] << 24 | e[r + 2] << 16 | e[r + 1] << 8 | e[r];
s[c] = o >>> 0;
}
return s;
};
i.split32 = function(e, t) {
for (var i = new Array(4 * e.length), n = 0, a = 0; n < e.length; n++, a += 4) {
var s = e[n];
if ("big" === t) {
i[a] = s >>> 24;
i[a + 1] = s >>> 16 & 255;
i[a + 2] = s >>> 8 & 255;
i[a + 3] = 255 & s;
} else {
i[a + 3] = s >>> 24;
i[a + 2] = s >>> 16 & 255;
i[a + 1] = s >>> 8 & 255;
i[a] = 255 & s;
}
}
return i;
};
i.rotr32 = function(e, t) {
return e >>> t | e << 32 - t;
};
i.rotl32 = function(e, t) {
return e << t | e >>> 32 - t;
};
i.sum32 = function(e, t) {
return e + t >>> 0;
};
i.sum32_3 = function(e, t, i) {
return e + t + i >>> 0;
};
i.sum32_4 = function(e, t, i, n) {
return e + t + i + n >>> 0;
};
i.sum32_5 = function(e, t, i, n, a) {
return e + t + i + n + a >>> 0;
};
i.sum64 = function(e, t, i, n) {
var a = e[t], s = n + e[t + 1] >>> 0, c = (s < n ? 1 : 0) + i + a;
e[t] = c >>> 0;
e[t + 1] = s;
};
i.sum64_hi = function(e, t, i, n) {
return (t + n >>> 0 < t ? 1 : 0) + e + i >>> 0;
};
i.sum64_lo = function(e, t, i, n) {
return t + n >>> 0;
};
i.sum64_4_hi = function(e, t, i, n, a, s, c, r) {
var o = 0, h = t;
o += (h = h + n >>> 0) < t ? 1 : 0;
o += (h = h + s >>> 0) < s ? 1 : 0;
return e + i + a + c + (o += (h = h + r >>> 0) < r ? 1 : 0) >>> 0;
};
i.sum64_4_lo = function(e, t, i, n, a, s, c, r) {
return t + n + s + r >>> 0;
};
i.sum64_5_hi = function(e, t, i, n, a, s, c, r, o, h) {
var l = 0, d = t;
l += (d = d + n >>> 0) < t ? 1 : 0;
l += (d = d + s >>> 0) < s ? 1 : 0;
l += (d = d + r >>> 0) < r ? 1 : 0;
return e + i + a + c + o + (l += (d = d + h >>> 0) < h ? 1 : 0) >>> 0;
};
i.sum64_5_lo = function(e, t, i, n, a, s, c, r, o, h) {
return t + n + s + r + h >>> 0;
};
i.rotr64_hi = function(e, t, i) {
return (t << 32 - i | e >>> i) >>> 0;
};
i.rotr64_lo = function(e, t, i) {
return (e << 32 - i | t >>> i) >>> 0;
};
i.shr64_hi = function(e, t, i) {
return e >>> i;
};
i.shr64_lo = function(e, t, i) {
return (e << 32 - i | t >>> i) >>> 0;
};
}, {
inherits: 101,
"minimalistic-assert": 105
} ],
98: [ function(e, t, i) {
"use strict";
var n = e("hash.js"), c = e("minimalistic-crypto-utils"), a = e("minimalistic-assert");
function s(e) {
if (!(this instanceof s)) return new s(e);
this.hash = e.hash;
this.predResist = !!e.predResist;
this.outLen = this.hash.outSize;
this.minEntropy = e.minEntropy || this.hash.hmacStrength;
this._reseed = null;
this.reseedInterval = null;
this.K = null;
this.V = null;
var t = c.toArray(e.entropy, e.entropyEnc || "hex"), i = c.toArray(e.nonce, e.nonceEnc || "hex"), n = c.toArray(e.pers, e.persEnc || "hex");
a(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
this._init(t, i, n);
}
(t.exports = s).prototype._init = function(e, t, i) {
var n = e.concat(t).concat(i);
this.K = new Array(this.outLen / 8);
this.V = new Array(this.outLen / 8);
for (var a = 0; a < this.V.length; a++) {
this.K[a] = 0;
this.V[a] = 1;
}
this._update(n);
this._reseed = 1;
this.reseedInterval = 281474976710656;
};
s.prototype._hmac = function() {
return new n.hmac(this.hash, this.K);
};
s.prototype._update = function(e) {
var t = this._hmac().update(this.V).update([ 0 ]);
e && (t = t.update(e));
this.K = t.digest();
this.V = this._hmac().update(this.V).digest();
if (e) {
this.K = this._hmac().update(this.V).update([ 1 ]).update(e).digest();
this.V = this._hmac().update(this.V).digest();
}
};
s.prototype.reseed = function(e, t, i, n) {
if ("string" != typeof t) {
n = i;
i = t;
t = null;
}
e = c.toArray(e, t);
i = c.toArray(i, n);
a(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
this._update(e.concat(i || []));
this._reseed = 1;
};
s.prototype.generate = function(e, t, i, n) {
if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
if ("string" != typeof t) {
n = i;
i = t;
t = null;
}
if (i) {
i = c.toArray(i, n || "hex");
this._update(i);
}
for (var a = []; a.length < e; ) {
this.V = this._hmac().update(this.V).digest();
a = a.concat(this.V);
}
var s = a.slice(0, e);
this._update(i);
this._reseed++;
return c.encode(s, t);
};
}, {
"hash.js": 86,
"minimalistic-assert": 105,
"minimalistic-crypto-utils": 106
} ],
99: [ function(e, t, i) {
i.read = function(e, t, i, n, a) {
var s, c, r = 8 * a - n - 1, o = (1 << r) - 1, h = o >> 1, l = -7, d = i ? a - 1 : 0, u = i ? -1 : 1, v = e[t + d];
d += u;
s = v & (1 << -l) - 1;
v >>= -l;
l += r;
for (;0 < l; s = 256 * s + e[t + d], d += u, l -= 8) ;
c = s & (1 << -l) - 1;
s >>= -l;
l += n;
for (;0 < l; c = 256 * c + e[t + d], d += u, l -= 8) ;
if (0 === s) s = 1 - h; else {
if (s === o) return c ? NaN : Infinity * (v ? -1 : 1);
c += Math.pow(2, n);
s -= h;
}
return (v ? -1 : 1) * c * Math.pow(2, s - n);
};
i.write = function(e, t, i, n, a, s) {
var c, r, o, h = 8 * s - a - 1, l = (1 << h) - 1, d = l >> 1, u = 23 === a ? Math.pow(2, -24) - Math.pow(2, -77) : 0, v = n ? 0 : s - 1, g = n ? 1 : -1, _ = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
t = Math.abs(t);
if (isNaN(t) || Infinity === t) {
r = isNaN(t) ? 1 : 0;
c = l;
} else {
c = Math.floor(Math.log(t) / Math.LN2);
if (t * (o = Math.pow(2, -c)) < 1) {
c--;
o *= 2;
}
if (2 <= (t += 1 <= c + d ? u / o : u * Math.pow(2, 1 - d)) * o) {
c++;
o /= 2;
}
if (l <= c + d) {
r = 0;
c = l;
} else if (1 <= c + d) {
r = (t * o - 1) * Math.pow(2, a);
c += d;
} else {
r = t * Math.pow(2, d - 1) * Math.pow(2, a);
c = 0;
}
}
for (;8 <= a; e[i + v] = 255 & r, v += g, r /= 256, a -= 8) ;
c = c << a | r;
h += a;
for (;0 < h; e[i + v] = 255 & c, v += g, c /= 256, h -= 8) ;
e[i + v - g] |= 128 * _;
};
}, {} ],
100: [ function(e, t, i) {
var n = [].indexOf;
t.exports = function(e, t) {
if (n) return e.indexOf(t);
for (var i = 0; i < e.length; ++i) if (e[i] === t) return i;
return -1;
};
}, {} ],
101: [ function(e, t, i) {
"function" == typeof Object.create ? t.exports = function(e, t) {
e.super_ = t;
e.prototype = Object.create(t.prototype, {
constructor: {
value: e,
enumerable: !1,
writable: !0,
configurable: !0
}
});
} : t.exports = function(e, t) {
e.super_ = t;
var i = function() {};
i.prototype = t.prototype;
e.prototype = new i();
e.prototype.constructor = e;
};
}, {} ],
102: [ function(e, t, i) {
t.exports = function(e) {
return null != e && (n(e) || "function" == typeof (t = e).readFloatLE && "function" == typeof t.slice && n(t.slice(0, 0)) || !!e._isBuffer);
var t;
};
function n(e) {
return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e);
}
}, {} ],
103: [ function(a, s, e) {
(function(t) {
"use strict";
var e = a("inherits"), i = a("hash-base"), c = new Array(16);
function n() {
i.call(this, 64);
this._a = 1732584193;
this._b = 4023233417;
this._c = 2562383102;
this._d = 271733878;
}
e(n, i);
n.prototype._update = function() {
for (var e = c, t = 0; t < 16; ++t) e[t] = this._block.readInt32LE(4 * t);
var i = this._a, n = this._b, a = this._c, s = this._d;
n = d(n = d(n = d(n = d(n = l(n = l(n = l(n = l(n = h(n = h(n = h(n = h(n = o(n = o(n = o(n = o(n, a = o(a, s = o(s, i = o(i, n, a, s, e[0], 3614090360, 7), n, a, e[1], 3905402710, 12), i, n, e[2], 606105819, 17), s, i, e[3], 3250441966, 22), a = o(a, s = o(s, i = o(i, n, a, s, e[4], 4118548399, 7), n, a, e[5], 1200080426, 12), i, n, e[6], 2821735955, 17), s, i, e[7], 4249261313, 22), a = o(a, s = o(s, i = o(i, n, a, s, e[8], 1770035416, 7), n, a, e[9], 2336552879, 12), i, n, e[10], 4294925233, 17), s, i, e[11], 2304563134, 22), a = o(a, s = o(s, i = o(i, n, a, s, e[12], 1804603682, 7), n, a, e[13], 4254626195, 12), i, n, e[14], 2792965006, 17), s, i, e[15], 1236535329, 22), a = h(a, s = h(s, i = h(i, n, a, s, e[1], 4129170786, 5), n, a, e[6], 3225465664, 9), i, n, e[11], 643717713, 14), s, i, e[0], 3921069994, 20), a = h(a, s = h(s, i = h(i, n, a, s, e[5], 3593408605, 5), n, a, e[10], 38016083, 9), i, n, e[15], 3634488961, 14), s, i, e[4], 3889429448, 20), a = h(a, s = h(s, i = h(i, n, a, s, e[9], 568446438, 5), n, a, e[14], 3275163606, 9), i, n, e[3], 4107603335, 14), s, i, e[8], 1163531501, 20), a = h(a, s = h(s, i = h(i, n, a, s, e[13], 2850285829, 5), n, a, e[2], 4243563512, 9), i, n, e[7], 1735328473, 14), s, i, e[12], 2368359562, 20), a = l(a, s = l(s, i = l(i, n, a, s, e[5], 4294588738, 4), n, a, e[8], 2272392833, 11), i, n, e[11], 1839030562, 16), s, i, e[14], 4259657740, 23), a = l(a, s = l(s, i = l(i, n, a, s, e[1], 2763975236, 4), n, a, e[4], 1272893353, 11), i, n, e[7], 4139469664, 16), s, i, e[10], 3200236656, 23), a = l(a, s = l(s, i = l(i, n, a, s, e[13], 681279174, 4), n, a, e[0], 3936430074, 11), i, n, e[3], 3572445317, 16), s, i, e[6], 76029189, 23), a = l(a, s = l(s, i = l(i, n, a, s, e[9], 3654602809, 4), n, a, e[12], 3873151461, 11), i, n, e[15], 530742520, 16), s, i, e[2], 3299628645, 23), a = d(a, s = d(s, i = d(i, n, a, s, e[0], 4096336452, 6), n, a, e[7], 1126891415, 10), i, n, e[14], 2878612391, 15), s, i, e[5], 4237533241, 21), a = d(a, s = d(s, i = d(i, n, a, s, e[12], 1700485571, 6), n, a, e[3], 2399980690, 10), i, n, e[10], 4293915773, 15), s, i, e[1], 2240044497, 21), a = d(a, s = d(s, i = d(i, n, a, s, e[8], 1873313359, 6), n, a, e[15], 4264355552, 10), i, n, e[6], 2734768916, 15), s, i, e[13], 1309151649, 21), a = d(a, s = d(s, i = d(i, n, a, s, e[4], 4149444226, 6), n, a, e[11], 3174756917, 10), i, n, e[2], 718787259, 15), s, i, e[9], 3951481745, 21);
this._a = this._a + i | 0;
this._b = this._b + n | 0;
this._c = this._c + a | 0;
this._d = this._d + s | 0;
};
n.prototype._digest = function() {
this._block[this._blockOffset++] = 128;
if (56 < this._blockOffset) {
this._block.fill(0, this._blockOffset, 64);
this._update();
this._blockOffset = 0;
}
this._block.fill(0, this._blockOffset, 56);
this._block.writeUInt32LE(this._length[0], 56);
this._block.writeUInt32LE(this._length[1], 60);
this._update();
var e = new t(16);
e.writeInt32LE(this._a, 0);
e.writeInt32LE(this._b, 4);
e.writeInt32LE(this._c, 8);
e.writeInt32LE(this._d, 12);
return e;
};
function r(e, t) {
return e << t | e >>> 32 - t;
}
function o(e, t, i, n, a, s, c) {
return r(e + (t & i | ~t & n) + a + s | 0, c) + t | 0;
}
function h(e, t, i, n, a, s, c) {
return r(e + (t & n | i & ~n) + a + s | 0, c) + t | 0;
}
function l(e, t, i, n, a, s, c) {
return r(e + (t ^ i ^ n) + a + s | 0, c) + t | 0;
}
function d(e, t, i, n, a, s, c) {
return r(e + (i ^ (t | ~n)) + a + s | 0, c) + t | 0;
}
s.exports = n;
}).call(this, a("buffer").Buffer);
}, {
buffer: 47,
"hash-base": 85,
inherits: 101
} ],
104: [ function(e, t, i) {
var v = e("bn.js"), n = e("brorand");
function a(e) {
this.rand = e || new n.Rand();
}
(t.exports = a).create = function(e) {
return new a(e);
};
a.prototype._randbelow = function(e) {
var t = e.bitLength(), i = Math.ceil(t / 8);
do {
var n = new v(this.rand.generate(i));
} while (0 <= n.cmp(e));
return n;
};
a.prototype._randrange = function(e, t) {
var i = t.sub(e);
return e.add(this._randbelow(i));
};
a.prototype.test = function(e, t, i) {
var n = e.bitLength(), a = v.mont(e), s = new v(1).toRed(a);
t || (t = Math.max(1, n / 48 | 0));
for (var c = e.subn(1), r = 0; !c.testn(r); r++) ;
for (var o = e.shrn(r), h = c.toRed(a); 0 < t; t--) {
var l = this._randrange(new v(2), c);
i && i(l);
var d = l.toRed(a).redPow(o);
if (0 !== d.cmp(s) && 0 !== d.cmp(h)) {
for (var u = 1; u < r; u++) {
if (0 === (d = d.redSqr()).cmp(s)) return !1;
if (0 === d.cmp(h)) break;
}
if (u === r) return !1;
}
}
return !0;
};
a.prototype.getDivisor = function(e, t) {
var i = e.bitLength(), n = v.mont(e), a = new v(1).toRed(n);
t || (t = Math.max(1, i / 48 | 0));
for (var s = e.subn(1), c = 0; !s.testn(c); c++) ;
for (var r = e.shrn(c), o = s.toRed(n); 0 < t; t--) {
var h = this._randrange(new v(2), s), l = e.gcd(h);
if (0 !== l.cmpn(1)) return l;
var d = h.toRed(n).redPow(r);
if (0 !== d.cmp(a) && 0 !== d.cmp(o)) {
for (var u = 1; u < c; u++) {
if (0 === (d = d.redSqr()).cmp(a)) return d.fromRed().subn(1).gcd(e);
if (0 === d.cmp(o)) break;
}
if (u === c) return (d = d.redSqr()).fromRed().subn(1).gcd(e);
}
}
return !1;
};
}, {
"bn.js": 16,
brorand: 17
} ],
105: [ function(e, t, i) {
function n(e, t) {
if (!e) throw new Error(t || "Assertion failed");
}
(t.exports = n).equal = function(e, t, i) {
if (e != t) throw new Error(i || "Assertion failed: " + e + " != " + t);
};
}, {} ],
106: [ function(e, t, i) {
"use strict";
var n = i;
n.toArray = function(e, t) {
if (Array.isArray(e)) return e.slice();
if (!e) return [];
var i = [];
if ("string" != typeof e) {
for (var n = 0; n < e.length; n++) i[n] = 0 | e[n];
return i;
}
if ("hex" === t) {
(e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e);
for (n = 0; n < e.length; n += 2) i.push(parseInt(e[n] + e[n + 1], 16));
} else for (n = 0; n < e.length; n++) {
var a = e.charCodeAt(n), s = a >> 8, c = 255 & a;
s ? i.push(s, c) : i.push(c);
}
return i;
};
function a(e) {
return 1 === e.length ? "0" + e : e;
}
n.zero2 = a;
function s(e) {
for (var t = "", i = 0; i < e.length; i++) t += a(e[i].toString(16));
return t;
}
n.toHex = s;
n.encode = function(e, t) {
return "hex" === t ? s(e) : e;
};
}, {} ],
107: [ function(e, t, i) {
t.exports = {
"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
};
}, {} ],
108: [ function(e, t, i) {
"use strict";
var n = e("asn1.js");
i.certificate = e("./certificate");
var a = n.define("RSAPrivateKey", function() {
this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
});
i.RSAPrivateKey = a;
var s = n.define("RSAPublicKey", function() {
this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
});
i.RSAPublicKey = s;
var c = n.define("SubjectPublicKeyInfo", function() {
this.seq().obj(this.key("algorithm").use(r), this.key("subjectPublicKey").bitstr());
});
i.PublicKey = c;
var r = n.define("AlgorithmIdentifier", function() {
this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
}), o = n.define("PrivateKeyInfo", function() {
this.seq().obj(this.key("version").int(), this.key("algorithm").use(r), this.key("subjectPrivateKey").octstr());
});
i.PrivateKey = o;
var h = n.define("EncryptedPrivateKeyInfo", function() {
this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
});
i.EncryptedPrivateKey = h;
var l = n.define("DSAPrivateKey", function() {
this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
});
i.DSAPrivateKey = l;
i.DSAparam = n.define("DSAparam", function() {
this.int();
});
var d = n.define("ECPrivateKey", function() {
this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(u), this.key("publicKey").optional().explicit(1).bitstr());
});
i.ECPrivateKey = d;
var u = n.define("ECParameters", function() {
this.choice({
namedCurve: this.objid()
});
});
i.signature = n.define("signature", function() {
this.seq().obj(this.key("r").int(), this.key("s").int());
});
}, {
"./certificate": 109,
"asn1.js": 1
} ],
109: [ function(e, t, i) {
"use strict";
var n = e("asn1.js"), a = n.define("Time", function() {
this.choice({
utcTime: this.utctime(),
generalTime: this.gentime()
});
}), s = n.define("AttributeTypeValue", function() {
this.seq().obj(this.key("type").objid(), this.key("value").any());
}), c = n.define("AlgorithmIdentifier", function() {
this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional());
}), r = n.define("SubjectPublicKeyInfo", function() {
this.seq().obj(this.key("algorithm").use(c), this.key("subjectPublicKey").bitstr());
}), o = n.define("RelativeDistinguishedName", function() {
this.setof(s);
}), h = n.define("RDNSequence", function() {
this.seqof(o);
}), l = n.define("Name", function() {
this.choice({
rdnSequence: this.use(h)
});
}), d = n.define("Validity", function() {
this.seq().obj(this.key("notBefore").use(a), this.key("notAfter").use(a));
}), u = n.define("Extension", function() {
this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
}), v = n.define("TBSCertificate", function() {
this.seq().obj(this.key("version").explicit(0).int(), this.key("serialNumber").int(), this.key("signature").use(c), this.key("issuer").use(l), this.key("validity").use(d), this.key("subject").use(l), this.key("subjectPublicKeyInfo").use(r), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(u).optional());
}), g = n.define("X509Certificate", function() {
this.seq().obj(this.key("tbsCertificate").use(v), this.key("signatureAlgorithm").use(c), this.key("signatureValue").bitstr());
});
t.exports = g;
}, {
"asn1.js": 1
} ],
110: [ function(e, t, i) {
(function(u) {
var v = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m, g = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m, _ = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m, f = e("evp_bytestokey"), p = e("browserify-aes");
t.exports = function(e, t) {
var i, n = e.toString(), a = n.match(v);
if (a) {
var s = "aes" + a[1], c = new u(a[2], "hex"), r = new u(a[3].replace(/[\r\n]/g, ""), "base64"), o = f(t, c.slice(0, 8), parseInt(a[1], 10)).key, h = [], l = p.createDecipheriv(s, o, c);
h.push(l.update(r));
h.push(l.final());
i = u.concat(h);
} else {
var d = n.match(_);
i = new u(d[2].replace(/[\r\n]/g, ""), "base64");
}
return {
tag: n.match(g)[1],
data: i
};
};
}).call(this, e("buffer").Buffer);
}, {
"browserify-aes": 21,
buffer: 47,
evp_bytestokey: 84
} ],
111: [ function(t, i, e) {
(function(d) {
var r = t("./asn1"), u = t("./aesid.json"), o = t("./fixProc"), v = t("browserify-aes"), g = t("pbkdf2");
function e(e) {
var t;
if ("object" == typeof e && !d.isBuffer(e)) {
t = e.passphrase;
e = e.key;
}
"string" == typeof e && (e = new d(e));
var i, n, a = o(e, t), s = a.tag, c = a.data;
switch (s) {
case "CERTIFICATE":
n = r.certificate.decode(c, "der").tbsCertificate.subjectPublicKeyInfo;

case "PUBLIC KEY":
n || (n = r.PublicKey.decode(c, "der"));
switch (i = n.algorithm.algorithm.join(".")) {
case "1.2.840.113549.1.1.1":
return r.RSAPublicKey.decode(n.subjectPublicKey.data, "der");

case "1.2.840.10045.2.1":
n.subjectPrivateKey = n.subjectPublicKey;
return {
type: "ec",
data: n
};

case "1.2.840.10040.4.1":
n.algorithm.params.pub_key = r.DSAparam.decode(n.subjectPublicKey.data, "der");
return {
type: "dsa",
data: n.algorithm.params
};

default:
throw new Error("unknown key id " + i);
}
throw new Error("unknown key type " + s);

case "ENCRYPTED PRIVATE KEY":
c = function(e, t) {
var i = e.algorithm.decrypt.kde.kdeparams.salt, n = parseInt(e.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), a = u[e.algorithm.decrypt.cipher.algo.join(".")], s = e.algorithm.decrypt.cipher.iv, c = e.subjectPrivateKey, r = parseInt(a.split("-")[1], 10) / 8, o = g.pbkdf2Sync(t, i, n, r), h = v.createDecipheriv(a, o, s), l = [];
l.push(h.update(c));
l.push(h.final());
return d.concat(l);
}(c = r.EncryptedPrivateKey.decode(c, "der"), t);

case "PRIVATE KEY":
switch (i = (n = r.PrivateKey.decode(c, "der")).algorithm.algorithm.join(".")) {
case "1.2.840.113549.1.1.1":
return r.RSAPrivateKey.decode(n.subjectPrivateKey, "der");

case "1.2.840.10045.2.1":
return {
curve: n.algorithm.curve,
privateKey: r.ECPrivateKey.decode(n.subjectPrivateKey, "der").privateKey
};

case "1.2.840.10040.4.1":
n.algorithm.params.priv_key = r.DSAparam.decode(n.subjectPrivateKey, "der");
return {
type: "dsa",
params: n.algorithm.params
};

default:
throw new Error("unknown key id " + i);
}
throw new Error("unknown key type " + s);

case "RSA PUBLIC KEY":
return r.RSAPublicKey.decode(c, "der");

case "RSA PRIVATE KEY":
return r.RSAPrivateKey.decode(c, "der");

case "DSA PRIVATE KEY":
return {
type: "dsa",
params: r.DSAPrivateKey.decode(c, "der")
};

case "EC PRIVATE KEY":
return {
curve: (c = r.ECPrivateKey.decode(c, "der")).parameters.value,
privateKey: c.privateKey
};

default:
throw new Error("unknown key type " + s);
}
}
(i.exports = e).signature = r.signature;
}).call(this, t("buffer").Buffer);
}, {
"./aesid.json": 107,
"./asn1": 108,
"./fixProc": 110,
"browserify-aes": 21,
buffer: 47,
pbkdf2: 112
} ],
112: [ function(e, t, i) {
i.pbkdf2 = e("./lib/async");
i.pbkdf2Sync = e("./lib/sync");
}, {
"./lib/async": 113,
"./lib/sync": 116
} ],
113: [ function(e, t, i) {
(function(h, l) {
var d, u = e("./precondition"), v = e("./default-encoding"), g = e("./sync"), _ = e("safe-buffer").Buffer, f = l.crypto && l.crypto.subtle, p = {
sha: "SHA-1",
"sha-1": "SHA-1",
sha1: "SHA-1",
sha256: "SHA-256",
"sha-256": "SHA-256",
sha384: "SHA-384",
"sha-384": "SHA-384",
"sha-512": "SHA-512",
sha512: "SHA-512"
}, m = [];
function C(e, t, i, n, a) {
return f.importKey("raw", e, {
name: "PBKDF2"
}, !1, [ "deriveBits" ]).then(function(e) {
return f.deriveBits({
name: "PBKDF2",
salt: t,
iterations: i,
hash: {
name: a
}
}, e, n << 3);
}).then(function(e) {
return _.from(e);
});
}
t.exports = function(t, i, n, a, s, c) {
if ("function" == typeof s) {
c = s;
s = void 0;
}
var e, r, o = p[(s = s || "sha1").toLowerCase()];
if (!o || "function" != typeof l.Promise) return h.nextTick(function() {
var e;
try {
e = g(t, i, n, a, s);
} catch (e) {
return c(e);
}
c(null, e);
});
u(t, i, n, a);
if ("function" != typeof c) throw new Error("No callback provided to pbkdf2");
_.isBuffer(t) || (t = _.from(t, v));
_.isBuffer(i) || (i = _.from(i, v));
e = function(e) {
if (l.process && !l.process.browser) return Promise.resolve(!1);
if (!f || !f.importKey || !f.deriveBits) return Promise.resolve(!1);
if (void 0 !== m[e]) return m[e];
var t = C(d = d || _.alloc(8), d, 10, 128, e).then(function() {
return !0;
}).catch(function() {
return !1;
});
return m[e] = t;
}(o).then(function(e) {
return e ? C(t, i, n, a, o) : g(t, i, n, a, s);
}), r = c, e.then(function(e) {
h.nextTick(function() {
r(null, e);
});
}, function(e) {
h.nextTick(function() {
r(e);
});
});
};
}).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
"./default-encoding": 114,
"./precondition": 115,
"./sync": 116,
_process: 118,
"safe-buffer": 143
} ],
114: [ function(e, i, t) {
(function(e) {
var t;
if (e.browser) t = "utf-8"; else {
t = 6 <= parseInt(e.version.split(".")[0].slice(1), 10) ? "utf-8" : "binary";
}
i.exports = t;
}).call(this, e("_process"));
}, {
_process: 118
} ],
115: [ function(e, t, i) {
(function(i) {
var a = Math.pow(2, 30) - 1;
function s(e, t) {
if ("string" != typeof e && !i.isBuffer(e)) throw new TypeError(t + " must be a buffer or string");
}
t.exports = function(e, t, i, n) {
s(e, "Password");
s(t, "Salt");
if ("number" != typeof i) throw new TypeError("Iterations not a number");
if (i < 0) throw new TypeError("Bad iterations");
if ("number" != typeof n) throw new TypeError("Key length not a number");
if (n < 0 || a < n || n != n) throw new TypeError("Bad key length");
};
}).call(this, {
isBuffer: e("../../is-buffer/index.js")
});
}, {
"../../is-buffer/index.js": 102
} ],
116: [ function(e, t, i) {
var l = e("create-hash/md5"), d = e("ripemd160"), u = e("sha.js"), f = e("./precondition"), p = e("./default-encoding"), m = e("safe-buffer").Buffer, v = m.alloc(128), C = {
md5: 16,
sha1: 20,
sha224: 28,
sha256: 32,
sha384: 48,
sha512: 64,
rmd160: 20,
ripemd160: 20
};
function y(e, t, i) {
var n, a = "rmd160" === (n = e) || "ripemd160" === n ? d : "md5" === n ? l : function(e) {
return u(n).update(e).digest();
}, s = "sha512" === e || "sha384" === e ? 128 : 64;
t.length > s ? t = a(t) : t.length < s && (t = m.concat([ t, v ], s));
for (var c = m.allocUnsafe(s + C[e]), r = m.allocUnsafe(s + C[e]), o = 0; o < s; o++) {
c[o] = 54 ^ t[o];
r[o] = 92 ^ t[o];
}
var h = m.allocUnsafe(s + i + 4);
c.copy(h, 0, 0, s);
this.ipad1 = h;
this.ipad2 = c;
this.opad = r;
this.alg = e;
this.blocksize = s;
this.hash = a;
this.size = C[e];
}
y.prototype.run = function(e, t) {
e.copy(t, this.blocksize);
this.hash(t).copy(this.opad, this.blocksize);
return this.hash(this.opad);
};
t.exports = function(e, t, i, n, a) {
f(e, t, i, n);
m.isBuffer(e) || (e = m.from(e, p));
m.isBuffer(t) || (t = m.from(t, p));
var s = new y(a = a || "sha1", e, t.length), c = m.allocUnsafe(n), r = m.allocUnsafe(t.length + 4);
t.copy(r, 0, 0, t.length);
for (var o = 0, h = C[a], l = Math.ceil(n / h), d = 1; d <= l; d++) {
r.writeUInt32BE(d, t.length);
for (var u = s.run(r, s.ipad1), v = u, g = 1; g < i; g++) {
v = s.run(v, s.ipad2);
for (var _ = 0; _ < h; _++) u[_] ^= v[_];
}
u.copy(c, o);
o += h;
}
return c;
};
}, {
"./default-encoding": 114,
"./precondition": 115,
"create-hash/md5": 53,
ripemd160: 142,
"safe-buffer": 143,
"sha.js": 145
} ],
117: [ function(e, t, i) {
(function(r) {
"use strict";
!r.version || 0 === r.version.indexOf("v0.") || 0 === r.version.indexOf("v1.") && 0 !== r.version.indexOf("v1.8.") ? t.exports = {
nextTick: function(e, t, i, n) {
if ("function" != typeof e) throw new TypeError('"callback" argument must be a function');
var a, s, c = arguments.length;
switch (c) {
case 0:
case 1:
return r.nextTick(e);

case 2:
return r.nextTick(function() {
e.call(null, t);
});

case 3:
return r.nextTick(function() {
e.call(null, t, i);
});

case 4:
return r.nextTick(function() {
e.call(null, t, i, n);
});

default:
a = new Array(c - 1);
s = 0;
for (;s < a.length; ) a[s++] = arguments[s];
return r.nextTick(function() {
e.apply(null, a);
});
}
}
} : t.exports = r;
}).call(this, e("_process"));
}, {
_process: 118
} ],
118: [ function(e, t, i) {
var n, a, s = t.exports = {};
function c() {
throw new Error("setTimeout has not been defined");
}
function r() {
throw new Error("clearTimeout has not been defined");
}
(function() {
try {
n = "function" == typeof setTimeout ? setTimeout : c;
} catch (e) {
n = c;
}
try {
a = "function" == typeof clearTimeout ? clearTimeout : r;
} catch (e) {
a = r;
}
})();
function o(t) {
if (n === setTimeout) return setTimeout(t, 0);
if ((n === c || !n) && setTimeout) {
n = setTimeout;
return setTimeout(t, 0);
}
try {
return n(t, 0);
} catch (e) {
try {
return n.call(null, t, 0);
} catch (e) {
return n.call(this, t, 0);
}
}
}
var h, l = [], d = !1, u = -1;
function v() {
if (d && h) {
d = !1;
h.length ? l = h.concat(l) : u = -1;
l.length && g();
}
}
function g() {
if (!d) {
var e = o(v);
d = !0;
for (var t = l.length; t; ) {
h = l;
l = [];
for (;++u < t; ) h && h[u].run();
u = -1;
t = l.length;
}
h = null;
d = !1;
(function(t) {
if (a === clearTimeout) return clearTimeout(t);
if ((a === r || !a) && clearTimeout) {
a = clearTimeout;
return clearTimeout(t);
}
try {
a(t);
} catch (e) {
try {
return a.call(null, t);
} catch (e) {
return a.call(this, t);
}
}
})(e);
}
}
s.nextTick = function(e) {
var t = new Array(arguments.length - 1);
if (1 < arguments.length) for (var i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
l.push(new _(e, t));
1 !== l.length || d || o(g);
};
function _(e, t) {
this.fun = e;
this.array = t;
}
_.prototype.run = function() {
this.fun.apply(null, this.array);
};
s.title = "browser";
s.browser = !0;
s.env = {};
s.argv = [];
s.version = "";
s.versions = {};
function f() {}
s.on = f;
s.addListener = f;
s.once = f;
s.off = f;
s.removeListener = f;
s.removeAllListeners = f;
s.emit = f;
s.prependListener = f;
s.prependOnceListener = f;
s.listeners = function(e) {
return [];
};
s.binding = function(e) {
throw new Error("process.binding is not supported");
};
s.cwd = function() {
return "/";
};
s.chdir = function(e) {
throw new Error("process.chdir is not supported");
};
s.umask = function() {
return 0;
};
}, {} ],
119: [ function(e, t, i) {
i.publicEncrypt = e("./publicEncrypt");
i.privateDecrypt = e("./privateDecrypt");
i.privateEncrypt = function(e, t) {
return i.publicEncrypt(e, t, !0);
};
i.publicDecrypt = function(e, t) {
return i.privateDecrypt(e, t, !0);
};
}, {
"./privateDecrypt": 121,
"./publicEncrypt": 122
} ],
120: [ function(e, t, i) {
(function(s) {
var c = e("create-hash");
t.exports = function(e, t) {
for (var i, n = new s(""), a = 0; n.length < t; ) {
i = r(a++);
n = s.concat([ n, c("sha1").update(e).update(i).digest() ]);
}
return n.slice(0, t);
};
function r(e) {
var t = new s(4);
t.writeUInt32BE(e, 0);
return t;
}
}).call(this, e("buffer").Buffer);
}, {
buffer: 47,
"create-hash": 52
} ],
121: [ function(e, t, i) {
(function(l) {
var o = e("parse-asn1"), d = e("./mgf"), u = e("./xor"), h = e("bn.js"), v = e("browserify-rsa"), g = e("create-hash"), _ = e("./withPublic");
t.exports = function(e, t, i) {
var n;
n = e.padding ? e.padding : i ? 1 : 4;
var a, s = o(e), c = s.modulus.byteLength();
if (t.length > c || 0 <= new h(t).cmp(s.modulus)) throw new Error("decryption error");
a = i ? _(new h(t), s) : v(t, s);
var r = new l(c - a.length);
r.fill(0);
a = l.concat([ r, a ], c);
if (4 === n) return function(e, t) {
e.modulus;
var i = e.modulus.byteLength(), n = (t.length, g("sha1").update(new l("")).digest()), a = n.length;
if (0 !== t[0]) throw new Error("decryption error");
var s = t.slice(1, a + 1), c = t.slice(a + 1), r = u(s, d(c, a)), o = u(c, d(r, i - a - 1));
if (function(e, t) {
e = new l(e);
t = new l(t);
var i = 0, n = e.length;
if (e.length !== t.length) {
i++;
n = Math.min(e.length, t.length);
}
var a = -1;
for (;++a < n; ) i += e[a] ^ t[a];
return i;
}(n, o.slice(0, a))) throw new Error("decryption error");
var h = a;
for (;0 === o[h]; ) h++;
if (1 !== o[h++]) throw new Error("decryption error");
return o.slice(h);
}(s, a);
if (1 === n) return function(e, t, i) {
var n = t.slice(0, 2), a = 2, s = 0;
for (;0 !== t[a++]; ) if (a >= t.length) {
s++;
break;
}
var c = t.slice(2, a - 1);
t.slice(a - 1, a);
("0002" !== n.toString("hex") && !i || "0001" !== n.toString("hex") && i) && s++;
c.length < 8 && s++;
if (s) throw new Error("decryption error");
return t.slice(a);
}(0, a, i);
if (3 === n) return a;
throw new Error("unknown padding");
};
}).call(this, e("buffer").Buffer);
}, {
"./mgf": 120,
"./withPublic": 123,
"./xor": 124,
"bn.js": 16,
"browserify-rsa": 39,
buffer: 47,
"create-hash": 52,
"parse-asn1": 111
} ],
122: [ function(e, t, i) {
(function(u) {
var c = e("parse-asn1"), v = e("randombytes"), g = e("create-hash"), _ = e("./mgf"), f = e("./xor"), p = e("bn.js"), r = e("./withPublic"), o = e("browserify-rsa");
t.exports = function(e, t, i) {
var n;
n = e.padding ? e.padding : i ? 1 : 4;
var a, s = c(e);
if (4 === n) a = function(e, t) {
var i = e.modulus.byteLength(), n = t.length, a = g("sha1").update(new u("")).digest(), s = a.length, c = 2 * s;
if (i - c - 2 < n) throw new Error("message too long");
var r = new u(i - n - c - 2);
r.fill(0);
var o = i - s - 1, h = v(s), l = f(u.concat([ a, r, new u([ 1 ]), t ], o), _(h, o)), d = f(h, _(l, s));
return new p(u.concat([ new u([ 0 ]), d, l ], i));
}(s, t); else if (1 === n) a = function(e, t, i) {
var n, a = t.length, s = e.modulus.byteLength();
if (s - 11 < a) throw new Error("message too long");
i ? (n = new u(s - a - 3)).fill(255) : n = function(e, t) {
var i, n = new u(e), a = 0, s = v(2 * e), c = 0;
for (;a < e; ) {
if (c === s.length) {
s = v(2 * e);
c = 0;
}
(i = s[c++]) && (n[a++] = i);
}
return n;
}(s - a - 3);
return new p(u.concat([ new u([ 0, i ? 1 : 2 ]), n, new u([ 0 ]), t ], s));
}(s, t, i); else {
if (3 !== n) throw new Error("unknown padding");
if (0 <= (a = new p(t)).cmp(s.modulus)) throw new Error("data too long for modulus");
}
return i ? o(a, s) : r(a, s);
};
}).call(this, e("buffer").Buffer);
}, {
"./mgf": 120,
"./withPublic": 123,
"./xor": 124,
"bn.js": 16,
"browserify-rsa": 39,
buffer: 47,
"create-hash": 52,
"parse-asn1": 111,
randombytes: 125
} ],
123: [ function(e, t, i) {
(function(i) {
var n = e("bn.js");
t.exports = function(e, t) {
return new i(e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed().toArray());
};
}).call(this, e("buffer").Buffer);
}, {
"bn.js": 16,
buffer: 47
} ],
124: [ function(e, t, i) {
t.exports = function(e, t) {
for (var i = e.length, n = -1; ++n < i; ) e[n] ^= t[n];
return e;
};
}, {} ],
125: [ function(e, t, i) {
(function(a, s) {
"use strict";
var c = e("safe-buffer").Buffer, r = s.crypto || s.msCrypto;
r && r.getRandomValues ? t.exports = function(e, t) {
if (65536 < e) throw new Error("requested too many random bytes");
var i = new s.Uint8Array(e);
0 < e && r.getRandomValues(i);
var n = c.from(i.buffer);
if ("function" == typeof t) return a.nextTick(function() {
t(null, n);
});
return n;
} : t.exports = function() {
throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
};
}).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
_process: 118,
"safe-buffer": 143
} ],
126: [ function(i, e, v) {
(function(c, a) {
"use strict";
function e() {
throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
}
var t = i("safe-buffer"), r = i("randombytes"), s = t.Buffer, n = t.kMaxLength, o = a.crypto || a.msCrypto, h = Math.pow(2, 32) - 1;
function l(e, t) {
if ("number" != typeof e || e != e) throw new TypeError("offset must be a number");
if (h < e || e < 0) throw new TypeError("offset must be a uint32");
if (n < e || t < e) throw new RangeError("offset out of range");
}
function d(e, t, i) {
if ("number" != typeof e || e != e) throw new TypeError("size must be a number");
if (h < e || e < 0) throw new TypeError("size must be a uint32");
if (i < e + t || n < e) throw new RangeError("buffer too small");
}
if (o && o.getRandomValues || !c.browser) {
v.randomFill = function(e, t, i, n) {
if (!(s.isBuffer(e) || e instanceof a.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
if ("function" == typeof t) {
n = t;
t = 0;
i = e.length;
} else if ("function" == typeof i) {
n = i;
i = e.length - t;
} else if ("function" != typeof n) throw new TypeError('"cb" argument must be a function');
l(t, e.length);
d(i, t, e.length);
return u(e, t, i, n);
};
v.randomFillSync = function(e, t, i) {
"undefined" == typeof t && (t = 0);
if (!(s.isBuffer(e) || e instanceof a.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
l(t, e.length);
void 0 === i && (i = e.length - t);
d(i, t, e.length);
return u(e, t, i);
};
} else {
v.randomFill = e;
v.randomFillSync = e;
}
function u(i, n, e, a) {
if (c.browser) {
var t = i.buffer, s = new Uint8Array(t, n, e);
o.getRandomValues(s);
if (a) {
c.nextTick(function() {
a(null, i);
});
return;
}
return i;
}
if (!a) {
r(e).copy(i, n);
return i;
}
r(e, function(e, t) {
if (e) return a(e);
t.copy(i, n);
a(null, i);
});
}
}).call(this, i("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
_process: 118,
randombytes: 125,
"safe-buffer": 143
} ],
127: [ function(e, t, i) {
t.exports = e("./lib/_stream_duplex.js");
}, {
"./lib/_stream_duplex.js": 128
} ],
128: [ function(e, t, i) {
"use strict";
var n = e("process-nextick-args"), a = Object.keys || function(e) {
var t = [];
for (var i in e) t.push(i);
return t;
};
t.exports = d;
var s = e("core-util-is");
s.inherits = e("inherits");
var c = e("./_stream_readable"), r = e("./_stream_writable");
s.inherits(d, c);
for (var o = a(r.prototype), h = 0; h < o.length; h++) {
var l = o[h];
d.prototype[l] || (d.prototype[l] = r.prototype[l]);
}
function d(e) {
if (!(this instanceof d)) return new d(e);
c.call(this, e);
r.call(this, e);
e && !1 === e.readable && (this.readable = !1);
e && !1 === e.writable && (this.writable = !1);
this.allowHalfOpen = !0;
e && !1 === e.allowHalfOpen && (this.allowHalfOpen = !1);
this.once("end", u);
}
Object.defineProperty(d.prototype, "writableHighWaterMark", {
enumerable: !1,
get: function() {
return this._writableState.highWaterMark;
}
});
function u() {
this.allowHalfOpen || this._writableState.ended || n.nextTick(v, this);
}
function v(e) {
e.end();
}
Object.defineProperty(d.prototype, "destroyed", {
get: function() {
return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
},
set: function(e) {
if (void 0 !== this._readableState && void 0 !== this._writableState) {
this._readableState.destroyed = e;
this._writableState.destroyed = e;
}
}
});
d.prototype._destroy = function(e, t) {
this.push(null);
this.end();
n.nextTick(t, e);
};
}, {
"./_stream_readable": 130,
"./_stream_writable": 132,
"core-util-is": 50,
inherits: 101,
"process-nextick-args": 117
} ],
129: [ function(e, t, i) {
"use strict";
t.exports = s;
var n = e("./_stream_transform"), a = e("core-util-is");
a.inherits = e("inherits");
a.inherits(s, n);
function s(e) {
if (!(this instanceof s)) return new s(e);
n.call(this, e);
}
s.prototype._transform = function(e, t, i) {
i(null, e);
};
}, {
"./_stream_transform": 131,
"core-util-is": 50,
inherits: 101
} ],
130: [ function(O, x, e) {
(function(f, e) {
"use strict";
var p = O("process-nextick-args");
x.exports = u;
var c, m = O("isarray");
u.ReadableState = s;
O("events").EventEmitter;
var C = function(e, t) {
return e.listeners(t).length;
}, a = O("./internal/streams/stream"), h = O("safe-buffer").Buffer, l = e.Uint8Array || function() {};
var t = O("core-util-is");
t.inherits = O("inherits");
var i = O("util"), y = void 0;
y = i && i.debuglog ? i.debuglog("stream") : function() {};
var r, o = O("./internal/streams/BufferList"), n = O("./internal/streams/destroy");
t.inherits(u, a);
var d = [ "error", "close", "destroy", "pause", "resume" ];
function s(e, t) {
e = e || {};
var i = t instanceof (c = c || O("./_stream_duplex"));
this.objectMode = !!e.objectMode;
i && (this.objectMode = this.objectMode || !!e.readableObjectMode);
var n = e.highWaterMark, a = e.readableHighWaterMark, s = this.objectMode ? 16 : 16384;
this.highWaterMark = n || 0 === n ? n : i && (a || 0 === a) ? a : s;
this.highWaterMark = Math.floor(this.highWaterMark);
this.buffer = new o();
this.length = 0;
this.pipes = null;
this.pipesCount = 0;
this.flowing = null;
this.ended = !1;
this.endEmitted = !1;
this.reading = !1;
this.sync = !0;
this.needReadable = !1;
this.emittedReadable = !1;
this.readableListening = !1;
this.resumeScheduled = !1;
this.destroyed = !1;
this.defaultEncoding = e.defaultEncoding || "utf8";
this.awaitDrain = 0;
this.readingMore = !1;
this.decoder = null;
this.encoding = null;
if (e.encoding) {
r || (r = O("string_decoder/").StringDecoder);
this.decoder = new r(e.encoding);
this.encoding = e.encoding;
}
}
function u(e) {
c = c || O("./_stream_duplex");
if (!(this instanceof u)) return new u(e);
this._readableState = new s(e, this);
this.readable = !0;
if (e) {
"function" == typeof e.read && (this._read = e.read);
"function" == typeof e.destroy && (this._destroy = e.destroy);
}
a.call(this);
}
Object.defineProperty(u.prototype, "destroyed", {
get: function() {
return void 0 !== this._readableState && this._readableState.destroyed;
},
set: function(e) {
this._readableState && (this._readableState.destroyed = e);
}
});
u.prototype.destroy = n.destroy;
u.prototype._undestroy = n.undestroy;
u.prototype._destroy = function(e, t) {
this.push(null);
t(e);
};
u.prototype.push = function(e, t) {
var i, n = this._readableState;
if (n.objectMode) i = !0; else if ("string" == typeof e) {
if ((t = t || n.defaultEncoding) !== n.encoding) {
e = h.from(e, t);
t = "";
}
i = !0;
}
return v(this, e, t, !1, i);
};
u.prototype.unshift = function(e) {
return v(this, e, null, !0, !1);
};
function v(e, t, i, n, a) {
var s, c, r = e._readableState;
if (null === t) {
r.reading = !1;
(function(e, t) {
if (t.ended) return;
if (t.decoder) {
var i = t.decoder.end();
if (i && i.length) {
t.buffer.push(i);
t.length += t.objectMode ? 1 : i.length;
}
}
t.ended = !0;
M(e);
})(e, r);
} else {
var o;
a || (o = function(e, t) {
var i;
(n = t, h.isBuffer(n) || n instanceof l) || "string" == typeof t || void 0 === t || e.objectMode || (i = new TypeError("Invalid non-string/buffer chunk"));
var n;
return i;
}(r, t));
if (o) e.emit("error", o); else if (r.objectMode || t && 0 < t.length) {
"string" == typeof t || r.objectMode || Object.getPrototypeOf(t) === h.prototype || (t = (s = t, 
h.from(s)));
if (n) r.endEmitted ? e.emit("error", new Error("stream.unshift() after end event")) : g(e, r, t, !0); else if (r.ended) e.emit("error", new Error("stream.push() after EOF")); else {
r.reading = !1;
if (r.decoder && !i) {
t = r.decoder.write(t);
r.objectMode || 0 !== t.length ? g(e, r, t, !1) : S(e, r);
} else g(e, r, t, !1);
}
} else n || (r.reading = !1);
}
return !(c = r).ended && (c.needReadable || c.length < c.highWaterMark || 0 === c.length);
}
function g(e, t, i, n) {
if (t.flowing && 0 === t.length && !t.sync) {
e.emit("data", i);
e.read(0);
} else {
t.length += t.objectMode ? 1 : i.length;
n ? t.buffer.unshift(i) : t.buffer.push(i);
t.needReadable && M(e);
}
S(e, t);
}
u.prototype.isPaused = function() {
return !1 === this._readableState.flowing;
};
u.prototype.setEncoding = function(e) {
r || (r = O("string_decoder/").StringDecoder);
this._readableState.decoder = new r(e);
this._readableState.encoding = e;
return this;
};
var _ = 8388608;
function b(e, t) {
if (e <= 0 || 0 === t.length && t.ended) return 0;
if (t.objectMode) return 1;
if (e != e) return t.flowing && t.length ? t.buffer.head.data.length : t.length;
e > t.highWaterMark && (t.highWaterMark = function(e) {
if (_ <= e) e = _; else {
e--;
e |= e >>> 1;
e |= e >>> 2;
e |= e >>> 4;
e |= e >>> 8;
e |= e >>> 16;
e++;
}
return e;
}(e));
if (e <= t.length) return e;
if (!t.ended) {
t.needReadable = !0;
return 0;
}
return t.length;
}
u.prototype.read = function(e) {
y("read", e);
e = parseInt(e, 10);
var t = this._readableState, i = e;
0 !== e && (t.emittedReadable = !1);
if (0 === e && t.needReadable && (t.length >= t.highWaterMark || t.ended)) {
y("read: emitReadable", t.length, t.ended);
0 === t.length && t.ended ? k(this) : M(this);
return null;
}
if (0 === (e = b(e, t)) && t.ended) {
0 === t.length && k(this);
return null;
}
var n, a = t.needReadable;
y("need readable", a);
(0 === t.length || t.length - e < t.highWaterMark) && y("length less than watermark", a = !0);
if (t.ended || t.reading) y("reading or ended", a = !1); else if (a) {
y("do read");
t.reading = !0;
t.sync = !0;
0 === t.length && (t.needReadable = !0);
this._read(t.highWaterMark);
t.sync = !1;
t.reading || (e = b(i, t));
}
if (null === (n = 0 < e ? w(e, t) : null)) {
t.needReadable = !0;
e = 0;
} else t.length -= e;
if (0 === t.length) {
t.ended || (t.needReadable = !0);
i !== e && t.ended && k(this);
}
null !== n && this.emit("data", n);
return n;
};
function M(e) {
var t = e._readableState;
t.needReadable = !1;
if (!t.emittedReadable) {
y("emitReadable", t.flowing);
t.emittedReadable = !0;
t.sync ? p.nextTick(N, e) : N(e);
}
}
function N(e) {
y("emit readable");
e.emit("readable");
B(e);
}
function S(e, t) {
if (!t.readingMore) {
t.readingMore = !0;
p.nextTick(A, e, t);
}
}
function A(e, t) {
for (var i = t.length; !t.reading && !t.flowing && !t.ended && t.length < t.highWaterMark; ) {
y("maybeReadMore read 0");
e.read(0);
if (i === t.length) break;
i = t.length;
}
t.readingMore = !1;
}
u.prototype._read = function(e) {
this.emit("error", new Error("_read() is not implemented"));
};
u.prototype.pipe = function(i, e) {
var n = this, a = this._readableState;
switch (a.pipesCount) {
case 0:
a.pipes = i;
break;

case 1:
a.pipes = [ a.pipes, i ];
break;

default:
a.pipes.push(i);
}
a.pipesCount += 1;
y("pipe count=%d opts=%j", a.pipesCount, e);
var t = (!e || !1 !== e.end) && i !== f.stdout && i !== f.stderr ? c : _;
a.endEmitted ? p.nextTick(t) : n.once("end", t);
i.on("unpipe", s);
function s(e, t) {
y("onunpipe");
if (e === n && t && !1 === t.hasUnpiped) {
t.hasUnpiped = !0;
(function() {
y("cleanup");
i.removeListener("close", v);
i.removeListener("finish", g);
i.removeListener("drain", o);
i.removeListener("error", u);
i.removeListener("unpipe", s);
n.removeListener("end", c);
n.removeListener("end", _);
n.removeListener("data", d);
h = !0;
!a.awaitDrain || i._writableState && !i._writableState.needDrain || o();
})();
}
}
function c() {
y("onend");
i.end();
}
var r, o = (r = n, function() {
var e = r._readableState;
y("pipeOnDrain", e.awaitDrain);
e.awaitDrain && e.awaitDrain--;
if (0 === e.awaitDrain && C(r, "data")) {
e.flowing = !0;
B(r);
}
});
i.on("drain", o);
var h = !1;
var l = !1;
n.on("data", d);
function d(e) {
y("ondata");
if ((l = !1) === i.write(e) && !l) {
if ((1 === a.pipesCount && a.pipes === i || 1 < a.pipesCount && -1 !== L(a.pipes, i)) && !h) {
y("false write response, pause", n._readableState.awaitDrain);
n._readableState.awaitDrain++;
l = !0;
}
n.pause();
}
}
function u(e) {
y("onerror", e);
_();
i.removeListener("error", u);
0 === C(i, "error") && i.emit("error", e);
}
(function(e, t, i) {
if ("function" == typeof e.prependListener) return e.prependListener(t, i);
e._events && e._events[t] ? m(e._events[t]) ? e._events[t].unshift(i) : e._events[t] = [ i, e._events[t] ] : e.on(t, i);
})(i, "error", u);
function v() {
i.removeListener("finish", g);
_();
}
i.once("close", v);
function g() {
y("onfinish");
i.removeListener("close", v);
_();
}
i.once("finish", g);
function _() {
y("unpipe");
n.unpipe(i);
}
i.emit("pipe", n);
if (!a.flowing) {
y("pipe resume");
n.resume();
}
return i;
};
u.prototype.unpipe = function(e) {
var t = this._readableState, i = {
hasUnpiped: !1
};
if (0 === t.pipesCount) return this;
if (1 === t.pipesCount) {
if (e && e !== t.pipes) return this;
e || (e = t.pipes);
t.pipes = null;
t.pipesCount = 0;
t.flowing = !1;
e && e.emit("unpipe", this, i);
return this;
}
if (!e) {
var n = t.pipes, a = t.pipesCount;
t.pipes = null;
t.pipesCount = 0;
t.flowing = !1;
for (var s = 0; s < a; s++) n[s].emit("unpipe", this, i);
return this;
}
var c = L(t.pipes, e);
if (-1 === c) return this;
t.pipes.splice(c, 1);
t.pipesCount -= 1;
1 === t.pipesCount && (t.pipes = t.pipes[0]);
e.emit("unpipe", this, i);
return this;
};
u.prototype.addListener = u.prototype.on = function(e, t) {
var i = a.prototype.on.call(this, e, t);
if ("data" === e) !1 !== this._readableState.flowing && this.resume(); else if ("readable" === e) {
var n = this._readableState;
if (!n.endEmitted && !n.readableListening) {
n.readableListening = n.needReadable = !0;
n.emittedReadable = !1;
n.reading ? n.length && M(this) : p.nextTick(I, this);
}
}
return i;
};
function I(e) {
y("readable nexttick read 0");
e.read(0);
}
u.prototype.resume = function() {
var e = this._readableState;
if (!e.flowing) {
y("resume");
e.flowing = !0;
(function(e, t) {
if (!t.resumeScheduled) {
t.resumeScheduled = !0;
p.nextTick(E, e, t);
}
})(this, e);
}
return this;
};
function E(e, t) {
if (!t.reading) {
y("resume read 0");
e.read(0);
}
t.resumeScheduled = !1;
t.awaitDrain = 0;
e.emit("resume");
B(e);
t.flowing && !t.reading && e.read(0);
}
u.prototype.pause = function() {
y("call pause flowing=%j", this._readableState.flowing);
if (!1 !== this._readableState.flowing) {
y("pause");
this._readableState.flowing = !1;
this.emit("pause");
}
return this;
};
function B(e) {
var t = e._readableState;
y("flow", t.flowing);
for (;t.flowing && null !== e.read(); ) ;
}
u.prototype.wrap = function(t) {
var i = this, n = this._readableState, a = !1;
t.on("end", function() {
y("wrapped end");
if (n.decoder && !n.ended) {
var e = n.decoder.end();
e && e.length && i.push(e);
}
i.push(null);
});
t.on("data", function(e) {
y("wrapped data");
n.decoder && (e = n.decoder.write(e));
if ((!n.objectMode || null != e) && (n.objectMode || e && e.length)) {
if (!i.push(e)) {
a = !0;
t.pause();
}
}
});
for (var e in t) void 0 === this[e] && "function" == typeof t[e] && (this[e] = function(e) {
return function() {
return t[e].apply(t, arguments);
};
}(e));
for (var s = 0; s < d.length; s++) t.on(d[s], this.emit.bind(this, d[s]));
this._read = function(e) {
y("wrapped _read", e);
if (a) {
a = !1;
t.resume();
}
};
return this;
};
Object.defineProperty(u.prototype, "readableHighWaterMark", {
enumerable: !1,
get: function() {
return this._readableState.highWaterMark;
}
});
u._fromList = w;
function w(e, t) {
if (0 === t.length) return null;
var i;
if (t.objectMode) i = t.buffer.shift(); else if (!e || e >= t.length) {
i = t.decoder ? t.buffer.join("") : 1 === t.buffer.length ? t.buffer.head.data : t.buffer.concat(t.length);
t.buffer.clear();
} else i = function(e, t, i) {
var n;
if (e < t.head.data.length) {
n = t.head.data.slice(0, e);
t.head.data = t.head.data.slice(e);
} else n = e === t.head.data.length ? t.shift() : i ? function(e, t) {
var i = t.head, n = 1, a = i.data;
e -= a.length;
for (;i = i.next; ) {
var s = i.data, c = e > s.length ? s.length : e;
c === s.length ? a += s : a += s.slice(0, e);
if (0 === (e -= c)) {
if (c === s.length) {
++n;
i.next ? t.head = i.next : t.head = t.tail = null;
} else (t.head = i).data = s.slice(c);
break;
}
++n;
}
t.length -= n;
return a;
}(e, t) : function(e, t) {
var i = h.allocUnsafe(e), n = t.head, a = 1;
n.data.copy(i);
e -= n.data.length;
for (;n = n.next; ) {
var s = n.data, c = e > s.length ? s.length : e;
s.copy(i, i.length - e, 0, c);
if (0 === (e -= c)) {
if (c === s.length) {
++a;
n.next ? t.head = n.next : t.head = t.tail = null;
} else (t.head = n).data = s.slice(c);
break;
}
++a;
}
t.length -= a;
return i;
}(e, t);
return n;
}(e, t.buffer, t.decoder);
return i;
}
function k(e) {
var t = e._readableState;
if (0 < t.length) throw new Error('"endReadable()" called on non-empty stream');
if (!t.endEmitted) {
t.ended = !0;
p.nextTick(T, t, e);
}
}
function T(e, t) {
if (!e.endEmitted && 0 === e.length) {
e.endEmitted = !0;
t.readable = !1;
t.emit("end");
}
}
function L(e, t) {
for (var i = 0, n = e.length; i < n; i++) if (e[i] === t) return i;
return -1;
}
}).call(this, O("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
"./_stream_duplex": 128,
"./internal/streams/BufferList": 133,
"./internal/streams/destroy": 134,
"./internal/streams/stream": 135,
_process: 118,
"core-util-is": 50,
events: 83,
inherits: 101,
isarray: 136,
"process-nextick-args": 117,
"safe-buffer": 143,
"string_decoder/": 137,
util: 18
} ],
131: [ function(e, t, i) {
"use strict";
t.exports = s;
var n = e("./_stream_duplex"), a = e("core-util-is");
a.inherits = e("inherits");
a.inherits(s, n);
function s(e) {
if (!(this instanceof s)) return new s(e);
n.call(this, e);
this._transformState = {
afterTransform: function(e, t) {
var i = this._transformState;
i.transforming = !1;
var n = i.writecb;
if (!n) return this.emit("error", new Error("write callback called multiple times"));
i.writechunk = null;
(i.writecb = null) != t && this.push(t);
n(e);
var a = this._readableState;
a.reading = !1;
(a.needReadable || a.length < a.highWaterMark) && this._read(a.highWaterMark);
}.bind(this),
needTransform: !1,
transforming: !1,
writecb: null,
writechunk: null,
writeencoding: null
};
this._readableState.needReadable = !0;
this._readableState.sync = !1;
if (e) {
"function" == typeof e.transform && (this._transform = e.transform);
"function" == typeof e.flush && (this._flush = e.flush);
}
this.on("prefinish", c);
}
function c() {
var i = this;
"function" == typeof this._flush ? this._flush(function(e, t) {
r(i, e, t);
}) : r(this, null, null);
}
s.prototype.push = function(e, t) {
this._transformState.needTransform = !1;
return n.prototype.push.call(this, e, t);
};
s.prototype._transform = function(e, t, i) {
throw new Error("_transform() is not implemented");
};
s.prototype._write = function(e, t, i) {
var n = this._transformState;
n.writecb = i;
n.writechunk = e;
n.writeencoding = t;
if (!n.transforming) {
var a = this._readableState;
(n.needTransform || a.needReadable || a.length < a.highWaterMark) && this._read(a.highWaterMark);
}
};
s.prototype._read = function(e) {
var t = this._transformState;
if (null !== t.writechunk && t.writecb && !t.transforming) {
t.transforming = !0;
this._transform(t.writechunk, t.writeencoding, t.afterTransform);
} else t.needTransform = !0;
};
s.prototype._destroy = function(e, t) {
var i = this;
n.prototype._destroy.call(this, e, function(e) {
t(e);
i.emit("close");
});
};
function r(e, t, i) {
if (t) return e.emit("error", t);
null != i && e.push(i);
if (e._writableState.length) throw new Error("Calling transform done when ws.length != 0");
if (e._transformState.transforming) throw new Error("Calling transform done when still transforming");
return e.push(null);
}
}, {
"./_stream_duplex": 128,
"core-util-is": 50,
inherits: 101
} ],
132: [ function(M, N, e) {
(function(e, t) {
"use strict";
var o = M("process-nextick-args");
N.exports = _;
function d(e) {
var t = this;
this.next = null;
this.entry = null;
this.finish = function() {
(function(e, t, i) {
var n = e.entry;
e.entry = null;
for (;n; ) {
var a = n.callback;
t.pendingcb--;
a(i);
n = n.next;
}
t.corkedRequestsFree ? t.corkedRequestsFree.next = e : t.corkedRequestsFree = e;
})(t, e);
};
}
var r, h = !e.browser && -1 < [ "v0.10", "v0.9." ].indexOf(e.version.slice(0, 5)) ? setImmediate : o.nextTick;
_.WritableState = g;
var i = M("core-util-is");
i.inherits = M("inherits");
var n = {
deprecate: M("util-deprecate")
}, a = M("./internal/streams/stream"), l = M("safe-buffer").Buffer, u = t.Uint8Array || function() {};
var s, c = M("./internal/streams/destroy");
i.inherits(_, a);
function v() {}
function g(e, t) {
r = r || M("./_stream_duplex");
e = e || {};
var i = t instanceof r;
this.objectMode = !!e.objectMode;
i && (this.objectMode = this.objectMode || !!e.writableObjectMode);
var n = e.highWaterMark, a = e.writableHighWaterMark, s = this.objectMode ? 16 : 16384;
this.highWaterMark = n || 0 === n ? n : i && (a || 0 === a) ? a : s;
this.highWaterMark = Math.floor(this.highWaterMark);
this.finalCalled = !1;
this.needDrain = !1;
this.ending = !1;
this.ended = !1;
this.finished = !1;
var c = (this.destroyed = !1) === e.decodeStrings;
this.decodeStrings = !c;
this.defaultEncoding = e.defaultEncoding || "utf8";
this.length = 0;
this.writing = !1;
this.corked = 0;
this.sync = !0;
this.bufferProcessing = !1;
this.onwrite = function(e) {
(function(e, t) {
var i = e._writableState, n = i.sync, a = i.writecb;
(function(e) {
e.writing = !1;
e.writecb = null;
e.length -= e.writelen;
e.writelen = 0;
})(i);
if (t) (function(e, t, i, n, a) {
--t.pendingcb;
if (i) {
o.nextTick(a, n);
o.nextTick(b, e, t);
e._writableState.errorEmitted = !0;
e.emit("error", n);
} else {
a(n);
e._writableState.errorEmitted = !0;
e.emit("error", n);
b(e, t);
}
})(e, i, n, t, a); else {
var s = C(i);
s || i.corked || i.bufferProcessing || !i.bufferedRequest || m(e, i);
n ? h(p, e, i, s, a) : p(e, i, s, a);
}
})(t, e);
};
this.writecb = null;
this.writelen = 0;
this.bufferedRequest = null;
this.lastBufferedRequest = null;
this.pendingcb = 0;
this.prefinished = !1;
this.errorEmitted = !1;
this.bufferedRequestCount = 0;
this.corkedRequestsFree = new d(this);
}
g.prototype.getBuffer = function() {
for (var e = this.bufferedRequest, t = []; e; ) {
t.push(e);
e = e.next;
}
return t;
};
(function() {
try {
Object.defineProperty(g.prototype, "buffer", {
get: n.deprecate(function() {
return this.getBuffer();
}, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
});
} catch (e) {}
})();
if ("function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]) {
s = Function.prototype[Symbol.hasInstance];
Object.defineProperty(_, Symbol.hasInstance, {
value: function(e) {
return !!s.call(this, e) || this === _ && (e && e._writableState instanceof g);
}
});
} else s = function(e) {
return e instanceof this;
};
function _(e) {
r = r || M("./_stream_duplex");
if (!(s.call(_, this) || this instanceof r)) return new _(e);
this._writableState = new g(e, this);
this.writable = !0;
if (e) {
"function" == typeof e.write && (this._write = e.write);
"function" == typeof e.writev && (this._writev = e.writev);
"function" == typeof e.destroy && (this._destroy = e.destroy);
"function" == typeof e.final && (this._final = e.final);
}
a.call(this);
}
_.prototype.pipe = function() {
this.emit("error", new Error("Cannot pipe, not readable"));
};
_.prototype.write = function(e, t, i) {
var n, a, s = this._writableState, c = !1, r = !s.objectMode && (n = e, l.isBuffer(n) || n instanceof u);
r && !l.isBuffer(e) && (e = (a = e, l.from(a)));
if ("function" == typeof t) {
i = t;
t = null;
}
r ? t = "buffer" : t || (t = s.defaultEncoding);
"function" != typeof i && (i = v);
if (s.ended) (function(e, t) {
var i = new Error("write after end");
e.emit("error", i);
o.nextTick(t, i);
})(this, i); else if (r || function(e, t, i, n) {
var a = !0, s = !1;
null === i ? s = new TypeError("May not write null values to stream") : "string" == typeof i || void 0 === i || t.objectMode || (s = new TypeError("Invalid non-string/buffer chunk"));
if (s) {
e.emit("error", s);
o.nextTick(n, s);
a = !1;
}
return a;
}(this, s, e, i)) {
s.pendingcb++;
c = function(e, t, i, n, a, s) {
if (!i) {
var c = function(e, t, i) {
e.objectMode || !1 === e.decodeStrings || "string" != typeof t || (t = l.from(t, i));
return t;
}(t, n, a);
if (n !== c) {
i = !0;
a = "buffer";
n = c;
}
}
var r = t.objectMode ? 1 : n.length;
t.length += r;
var o = t.length < t.highWaterMark;
o || (t.needDrain = !0);
if (t.writing || t.corked) {
var h = t.lastBufferedRequest;
t.lastBufferedRequest = {
chunk: n,
encoding: a,
isBuf: i,
callback: s,
next: null
};
h ? h.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest;
t.bufferedRequestCount += 1;
} else f(e, t, !1, r, n, a, s);
return o;
}(this, s, r, e, t, i);
}
return c;
};
_.prototype.cork = function() {
this._writableState.corked++;
};
_.prototype.uncork = function() {
var e = this._writableState;
if (e.corked) {
e.corked--;
e.writing || e.corked || e.finished || e.bufferProcessing || !e.bufferedRequest || m(this, e);
}
};
_.prototype.setDefaultEncoding = function(e) {
"string" == typeof e && (e = e.toLowerCase());
if (!(-1 < [ "hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw" ].indexOf((e + "").toLowerCase()))) throw new TypeError("Unknown encoding: " + e);
this._writableState.defaultEncoding = e;
return this;
};
Object.defineProperty(_.prototype, "writableHighWaterMark", {
enumerable: !1,
get: function() {
return this._writableState.highWaterMark;
}
});
function f(e, t, i, n, a, s, c) {
t.writelen = n;
t.writecb = c;
t.writing = !0;
t.sync = !0;
i ? e._writev(a, t.onwrite) : e._write(a, s, t.onwrite);
t.sync = !1;
}
function p(e, t, i, n) {
i || function(e, t) {
if (0 === t.length && t.needDrain) {
t.needDrain = !1;
e.emit("drain");
}
}(e, t);
t.pendingcb--;
n();
b(e, t);
}
function m(e, t) {
t.bufferProcessing = !0;
var i = t.bufferedRequest;
if (e._writev && i && i.next) {
var n = t.bufferedRequestCount, a = new Array(n), s = t.corkedRequestsFree;
s.entry = i;
for (var c = 0, r = !0; i; ) {
(a[c] = i).isBuf || (r = !1);
i = i.next;
c += 1;
}
a.allBuffers = r;
f(e, t, !0, t.length, a, "", s.finish);
t.pendingcb++;
t.lastBufferedRequest = null;
if (s.next) {
t.corkedRequestsFree = s.next;
s.next = null;
} else t.corkedRequestsFree = new d(t);
t.bufferedRequestCount = 0;
} else {
for (;i; ) {
var o = i.chunk, h = i.encoding, l = i.callback;
f(e, t, !1, t.objectMode ? 1 : o.length, o, h, l);
i = i.next;
t.bufferedRequestCount--;
if (t.writing) break;
}
null === i && (t.lastBufferedRequest = null);
}
t.bufferedRequest = i;
t.bufferProcessing = !1;
}
_.prototype._write = function(e, t, i) {
i(new Error("_write() is not implemented"));
};
_.prototype._writev = null;
_.prototype.end = function(e, t, i) {
var n = this._writableState;
if ("function" == typeof e) {
i = e;
t = e = null;
} else if ("function" == typeof t) {
i = t;
t = null;
}
null != e && this.write(e, t);
if (n.corked) {
n.corked = 1;
this.uncork();
}
n.ending || n.finished || function(e, t, i) {
t.ending = !0;
b(e, t);
i && (t.finished ? o.nextTick(i) : e.once("finish", i));
t.ended = !0;
e.writable = !1;
}(this, n, i);
};
function C(e) {
return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing;
}
function y(t, i) {
t._final(function(e) {
i.pendingcb--;
e && t.emit("error", e);
i.prefinished = !0;
t.emit("prefinish");
b(t, i);
});
}
function b(e, t) {
var i = C(t);
if (i) {
(function(e, t) {
if (!t.prefinished && !t.finalCalled) if ("function" == typeof e._final) {
t.pendingcb++;
t.finalCalled = !0;
o.nextTick(y, e, t);
} else {
t.prefinished = !0;
e.emit("prefinish");
}
})(e, t);
if (0 === t.pendingcb) {
t.finished = !0;
e.emit("finish");
}
}
return i;
}
Object.defineProperty(_.prototype, "destroyed", {
get: function() {
return void 0 !== this._writableState && this._writableState.destroyed;
},
set: function(e) {
this._writableState && (this._writableState.destroyed = e);
}
});
_.prototype.destroy = c.destroy;
_.prototype._undestroy = c.undestroy;
_.prototype._destroy = function(e, t) {
this.end();
t(e);
};
}).call(this, M("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
"./_stream_duplex": 128,
"./internal/streams/destroy": 134,
"./internal/streams/stream": 135,
_process: 118,
"core-util-is": 50,
inherits: 101,
"process-nextick-args": 117,
"safe-buffer": 143,
"util-deprecate": 154
} ],
133: [ function(e, t, i) {
"use strict";
var r = e("safe-buffer").Buffer, n = e("util");
t.exports = function() {
function e() {
(function(e, t) {
if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
})(this, e);
this.head = null;
this.tail = null;
this.length = 0;
}
e.prototype.push = function(e) {
var t = {
data: e,
next: null
};
0 < this.length ? this.tail.next = t : this.head = t;
this.tail = t;
++this.length;
};
e.prototype.unshift = function(e) {
var t = {
data: e,
next: this.head
};
0 === this.length && (this.tail = t);
this.head = t;
++this.length;
};
e.prototype.shift = function() {
if (0 !== this.length) {
var e = this.head.data;
1 === this.length ? this.head = this.tail = null : this.head = this.head.next;
--this.length;
return e;
}
};
e.prototype.clear = function() {
this.head = this.tail = null;
this.length = 0;
};
e.prototype.join = function(e) {
if (0 === this.length) return "";
for (var t = this.head, i = "" + t.data; t = t.next; ) i += e + t.data;
return i;
};
e.prototype.concat = function(e) {
if (0 === this.length) return r.alloc(0);
if (1 === this.length) return this.head.data;
for (var t, i, n, a = r.allocUnsafe(e >>> 0), s = this.head, c = 0; s; ) {
t = s.data, i = a, n = c, t.copy(i, n);
c += s.data.length;
s = s.next;
}
return a;
};
return e;
}();
n && n.inspect && n.inspect.custom && (t.exports.prototype[n.inspect.custom] = function() {
var e = n.inspect({
length: this.length
});
return this.constructor.name + " " + e;
});
}, {
"safe-buffer": 143,
util: 18
} ],
134: [ function(e, t, i) {
"use strict";
var s = e("process-nextick-args");
function c(e, t) {
e.emit("error", t);
}
t.exports = {
destroy: function(e, t) {
var i = this, n = this._readableState && this._readableState.destroyed, a = this._writableState && this._writableState.destroyed;
if (n || a) {
t ? t(e) : !e || this._writableState && this._writableState.errorEmitted || s.nextTick(c, this, e);
return this;
}
this._readableState && (this._readableState.destroyed = !0);
this._writableState && (this._writableState.destroyed = !0);
this._destroy(e || null, function(e) {
if (!t && e) {
s.nextTick(c, i, e);
i._writableState && (i._writableState.errorEmitted = !0);
} else t && t(e);
});
return this;
},
undestroy: function() {
if (this._readableState) {
this._readableState.destroyed = !1;
this._readableState.reading = !1;
this._readableState.ended = !1;
this._readableState.endEmitted = !1;
}
if (this._writableState) {
this._writableState.destroyed = !1;
this._writableState.ended = !1;
this._writableState.ending = !1;
this._writableState.finished = !1;
this._writableState.errorEmitted = !1;
}
}
};
}, {
"process-nextick-args": 117
} ],
135: [ function(e, t, i) {
t.exports = e("events").EventEmitter;
}, {
events: 83
} ],
136: [ function(e, t, i) {
arguments[4][48][0].apply(i, arguments);
}, {
dup: 48
} ],
137: [ function(e, t, i) {
"use strict";
var n = e("safe-buffer").Buffer, a = n.isEncoding || function(e) {
switch ((e = "" + e) && e.toLowerCase()) {
case "hex":
case "utf8":
case "utf-8":
case "ascii":
case "binary":
case "base64":
case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
case "raw":
return !0;

default:
return !1;
}
};
function s(e) {
this.encoding = function(e) {
var t = function(e) {
if (!e) return "utf8";
for (var t; ;) switch (e) {
case "utf8":
case "utf-8":
return "utf8";

case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return "utf16le";

case "latin1":
case "binary":
return "latin1";

case "base64":
case "ascii":
case "hex":
return e;

default:
if (t) return;
e = ("" + e).toLowerCase();
t = !0;
}
}(e);
if ("string" != typeof t && (n.isEncoding === a || !a(e))) throw new Error("Unknown encoding: " + e);
return t || e;
}(e);
var t;
switch (this.encoding) {
case "utf16le":
this.text = o;
this.end = h;
t = 4;
break;

case "utf8":
this.fillLast = r;
t = 4;
break;

case "base64":
this.text = l;
this.end = d;
t = 3;
break;

default:
this.write = u;
this.end = v;
return;
}
this.lastNeed = 0;
this.lastTotal = 0;
this.lastChar = n.allocUnsafe(t);
}
(i.StringDecoder = s).prototype.write = function(e) {
if (0 === e.length) return "";
var t, i;
if (this.lastNeed) {
if (void 0 === (t = this.fillLast(e))) return "";
i = this.lastNeed;
this.lastNeed = 0;
} else i = 0;
return i < e.length ? t ? t + this.text(e, i) : this.text(e, i) : t || "";
};
s.prototype.end = function(e) {
var t = e && e.length ? this.write(e) : "";
return this.lastNeed ? t + "�" : t;
};
s.prototype.text = function(e, t) {
var i = function(e, t, i) {
var n = t.length - 1;
if (n < i) return 0;
var a = c(t[n]);
if (0 <= a) {
0 < a && (e.lastNeed = a - 1);
return a;
}
if (--n < i || -2 === a) return 0;
if (0 <= (a = c(t[n]))) {
0 < a && (e.lastNeed = a - 2);
return a;
}
if (--n < i || -2 === a) return 0;
if (0 <= (a = c(t[n]))) {
0 < a && (2 === a ? a = 0 : e.lastNeed = a - 3);
return a;
}
return 0;
}(this, e, t);
if (!this.lastNeed) return e.toString("utf8", t);
this.lastTotal = i;
var n = e.length - (i - this.lastNeed);
e.copy(this.lastChar, 0, n);
return e.toString("utf8", t, n);
};
s.prototype.fillLast = function(e) {
if (this.lastNeed <= e.length) {
e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
return this.lastChar.toString(this.encoding, 0, this.lastTotal);
}
e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length);
this.lastNeed -= e.length;
};
function c(e) {
return e <= 127 ? 0 : e >> 5 == 6 ? 2 : e >> 4 == 14 ? 3 : e >> 3 == 30 ? 4 : e >> 6 == 2 ? -1 : -2;
}
function r(e) {
var t = this.lastTotal - this.lastNeed, i = function(e, t, i) {
if (128 != (192 & t[0])) {
e.lastNeed = 0;
return "�";
}
if (1 < e.lastNeed && 1 < t.length) {
if (128 != (192 & t[1])) {
e.lastNeed = 1;
return "�";
}
if (2 < e.lastNeed && 2 < t.length && 128 != (192 & t[2])) {
e.lastNeed = 2;
return "�";
}
}
}(this, e);
if (void 0 !== i) return i;
if (this.lastNeed <= e.length) {
e.copy(this.lastChar, t, 0, this.lastNeed);
return this.lastChar.toString(this.encoding, 0, this.lastTotal);
}
e.copy(this.lastChar, t, 0, e.length);
this.lastNeed -= e.length;
}
function o(e, t) {
if ((e.length - t) % 2 == 0) {
var i = e.toString("utf16le", t);
if (i) {
var n = i.charCodeAt(i.length - 1);
if (55296 <= n && n <= 56319) {
this.lastNeed = 2;
this.lastTotal = 4;
this.lastChar[0] = e[e.length - 2];
this.lastChar[1] = e[e.length - 1];
return i.slice(0, -1);
}
}
return i;
}
this.lastNeed = 1;
this.lastTotal = 2;
this.lastChar[0] = e[e.length - 1];
return e.toString("utf16le", t, e.length - 1);
}
function h(e) {
var t = e && e.length ? this.write(e) : "";
if (this.lastNeed) {
var i = this.lastTotal - this.lastNeed;
return t + this.lastChar.toString("utf16le", 0, i);
}
return t;
}
function l(e, t) {
var i = (e.length - t) % 3;
if (0 === i) return e.toString("base64", t);
this.lastNeed = 3 - i;
this.lastTotal = 3;
if (1 === i) this.lastChar[0] = e[e.length - 1]; else {
this.lastChar[0] = e[e.length - 2];
this.lastChar[1] = e[e.length - 1];
}
return e.toString("base64", t, e.length - i);
}
function d(e) {
var t = e && e.length ? this.write(e) : "";
return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t;
}
function u(e) {
return e.toString(this.encoding);
}
function v(e) {
return e && e.length ? this.write(e) : "";
}
}, {
"safe-buffer": 143
} ],
138: [ function(e, t, i) {
t.exports = e("./readable").PassThrough;
}, {
"./readable": 139
} ],
139: [ function(e, t, i) {
(((i = t.exports = e("./lib/_stream_readable.js")).Stream = i).Readable = i).Writable = e("./lib/_stream_writable.js");
i.Duplex = e("./lib/_stream_duplex.js");
i.Transform = e("./lib/_stream_transform.js");
i.PassThrough = e("./lib/_stream_passthrough.js");
}, {
"./lib/_stream_duplex.js": 128,
"./lib/_stream_passthrough.js": 129,
"./lib/_stream_readable.js": 130,
"./lib/_stream_transform.js": 131,
"./lib/_stream_writable.js": 132
} ],
140: [ function(e, t, i) {
t.exports = e("./readable").Transform;
}, {
"./readable": 139
} ],
141: [ function(e, t, i) {
t.exports = e("./lib/_stream_writable.js");
}, {
"./lib/_stream_writable.js": 132
} ],
142: [ function(e, t, i) {
"use strict";
var n = e("buffer").Buffer, a = e("inherits"), s = e("hash-base"), f = new Array(16), p = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13 ], m = [ 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11 ], C = [ 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6 ], y = [ 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11 ], b = [ 0, 1518500249, 1859775393, 2400959708, 2840853838 ], M = [ 1352829926, 1548603684, 1836072691, 2053994217, 0 ];
function c() {
s.call(this, 64);
this._a = 1732584193;
this._b = 4023233417;
this._c = 2562383102;
this._d = 271733878;
this._e = 3285377520;
}
a(c, s);
c.prototype._update = function() {
for (var e = f, t = 0; t < 16; ++t) e[t] = this._block.readInt32LE(4 * t);
for (var i = 0 | this._a, n = 0 | this._b, a = 0 | this._c, s = 0 | this._d, c = 0 | this._e, r = 0 | this._a, o = 0 | this._b, h = 0 | this._c, l = 0 | this._d, d = 0 | this._e, u = 0; u < 80; u += 1) {
var v, g;
if (u < 16) {
v = S(i, n, a, s, c, e[p[u]], b[0], C[u]);
g = B(r, o, h, l, d, e[m[u]], M[0], y[u]);
} else if (u < 32) {
v = A(i, n, a, s, c, e[p[u]], b[1], C[u]);
g = E(r, o, h, l, d, e[m[u]], M[1], y[u]);
} else if (u < 48) {
v = I(i, n, a, s, c, e[p[u]], b[2], C[u]);
g = I(r, o, h, l, d, e[m[u]], M[2], y[u]);
} else if (u < 64) {
v = E(i, n, a, s, c, e[p[u]], b[3], C[u]);
g = A(r, o, h, l, d, e[m[u]], M[3], y[u]);
} else {
v = B(i, n, a, s, c, e[p[u]], b[4], C[u]);
g = S(r, o, h, l, d, e[m[u]], M[4], y[u]);
}
i = c;
c = s;
s = N(a, 10);
a = n;
n = v;
r = d;
d = l;
l = N(h, 10);
h = o;
o = g;
}
var _ = this._b + a + l | 0;
this._b = this._c + s + d | 0;
this._c = this._d + c + r | 0;
this._d = this._e + i + o | 0;
this._e = this._a + n + h | 0;
this._a = _;
};
c.prototype._digest = function() {
this._block[this._blockOffset++] = 128;
if (56 < this._blockOffset) {
this._block.fill(0, this._blockOffset, 64);
this._update();
this._blockOffset = 0;
}
this._block.fill(0, this._blockOffset, 56);
this._block.writeUInt32LE(this._length[0], 56);
this._block.writeUInt32LE(this._length[1], 60);
this._update();
var e = n.alloc ? n.alloc(20) : new n(20);
e.writeInt32LE(this._a, 0);
e.writeInt32LE(this._b, 4);
e.writeInt32LE(this._c, 8);
e.writeInt32LE(this._d, 12);
e.writeInt32LE(this._e, 16);
return e;
};
function N(e, t) {
return e << t | e >>> 32 - t;
}
function S(e, t, i, n, a, s, c, r) {
return N(e + (t ^ i ^ n) + s + c | 0, r) + a | 0;
}
function A(e, t, i, n, a, s, c, r) {
return N(e + (t & i | ~t & n) + s + c | 0, r) + a | 0;
}
function I(e, t, i, n, a, s, c, r) {
return N(e + ((t | ~i) ^ n) + s + c | 0, r) + a | 0;
}
function E(e, t, i, n, a, s, c, r) {
return N(e + (t & n | i & ~n) + s + c | 0, r) + a | 0;
}
function B(e, t, i, n, a, s, c, r) {
return N(e + (t ^ (i | ~n)) + s + c | 0, r) + a | 0;
}
t.exports = c;
}, {
buffer: 47,
"hash-base": 85,
inherits: 101
} ],
143: [ function(e, t, i) {
var n = e("buffer"), a = n.Buffer;
function s(e, t) {
for (var i in e) t[i] = e[i];
}
if (a.from && a.alloc && a.allocUnsafe && a.allocUnsafeSlow) t.exports = n; else {
s(n, i);
i.Buffer = c;
}
function c(e, t, i) {
return a(e, t, i);
}
s(a, c);
c.from = function(e, t, i) {
if ("number" == typeof e) throw new TypeError("Argument must not be a number");
return a(e, t, i);
};
c.alloc = function(e, t, i) {
if ("number" != typeof e) throw new TypeError("Argument must be a number");
var n = a(e);
void 0 !== t ? "string" == typeof i ? n.fill(t, i) : n.fill(t) : n.fill(0);
return n;
};
c.allocUnsafe = function(e) {
if ("number" != typeof e) throw new TypeError("Argument must be a number");
return a(e);
};
c.allocUnsafeSlow = function(e) {
if ("number" != typeof e) throw new TypeError("Argument must be a number");
return n.SlowBuffer(e);
};
}, {
buffer: 47
} ],
144: [ function(e, t, i) {
var l = e("safe-buffer").Buffer;
function n(e, t) {
this._block = l.alloc(e);
this._finalSize = t;
this._blockSize = e;
this._len = 0;
}
n.prototype.update = function(e, t) {
if ("string" == typeof e) {
t = t || "utf8";
e = l.from(e, t);
}
for (var i = this._block, n = this._blockSize, a = e.length, s = this._len, c = 0; c < a; ) {
for (var r = s % n, o = Math.min(a - c, n - r), h = 0; h < o; h++) i[r + h] = e[c + h];
c += o;
(s += o) % n == 0 && this._update(i);
}
this._len += a;
return this;
};
n.prototype.digest = function(e) {
var t = this._len % this._blockSize;
this._block[t] = 128;
this._block.fill(0, t + 1);
if (t >= this._finalSize) {
this._update(this._block);
this._block.fill(0);
}
var i = 8 * this._len;
if (i <= 4294967295) this._block.writeUInt32BE(i, this._blockSize - 4); else {
var n = (4294967295 & i) >>> 0, a = (i - n) / 4294967296;
this._block.writeUInt32BE(a, this._blockSize - 8);
this._block.writeUInt32BE(n, this._blockSize - 4);
}
this._update(this._block);
var s = this._hash();
return e ? s.toString(e) : s;
};
n.prototype._update = function() {
throw new Error("_update must be implemented by subclass");
};
t.exports = n;
}, {
"safe-buffer": 143
} ],
145: [ function(e, t, i) {
(i = t.exports = function(e) {
e = e.toLowerCase();
var t = i[e];
if (!t) throw new Error(e + " is not supported (we accept pull requests)");
return new t();
}).sha = e("./sha");
i.sha1 = e("./sha1");
i.sha224 = e("./sha224");
i.sha256 = e("./sha256");
i.sha384 = e("./sha384");
i.sha512 = e("./sha512");
}, {
"./sha": 146,
"./sha1": 147,
"./sha224": 148,
"./sha256": 149,
"./sha384": 150,
"./sha512": 151
} ],
146: [ function(e, t, i) {
var n = e("inherits"), a = e("./hash"), s = e("safe-buffer").Buffer, p = [ 1518500249, 1859775393, -1894007588, -899497514 ], c = new Array(80);
function r() {
this.init();
this._w = c;
a.call(this, 64, 56);
}
n(r, a);
r.prototype.init = function() {
this._a = 1732584193;
this._b = 4023233417;
this._c = 2562383102;
this._d = 271733878;
this._e = 3285377520;
return this;
};
r.prototype._update = function(e) {
for (var t, i, n, a, s, c, r = this._w, o = 0 | this._a, h = 0 | this._b, l = 0 | this._c, d = 0 | this._d, u = 0 | this._e, v = 0; v < 16; ++v) r[v] = e.readInt32BE(4 * v);
for (;v < 80; ++v) r[v] = r[v - 3] ^ r[v - 8] ^ r[v - 14] ^ r[v - 16];
for (var g = 0; g < 80; ++g) {
var _ = ~~(g / 20), f = ((c = o) << 5 | c >>> 27) + (n = h, a = l, s = d, 0 === (i = _) ? n & a | ~n & s : 2 === i ? n & a | n & s | a & s : n ^ a ^ s) + u + r[g] + p[_] | 0;
u = d;
d = l;
l = (t = h) << 30 | t >>> 2;
h = o;
o = f;
}
this._a = o + this._a | 0;
this._b = h + this._b | 0;
this._c = l + this._c | 0;
this._d = d + this._d | 0;
this._e = u + this._e | 0;
};
r.prototype._hash = function() {
var e = s.allocUnsafe(20);
e.writeInt32BE(0 | this._a, 0);
e.writeInt32BE(0 | this._b, 4);
e.writeInt32BE(0 | this._c, 8);
e.writeInt32BE(0 | this._d, 12);
e.writeInt32BE(0 | this._e, 16);
return e;
};
t.exports = r;
}, {
"./hash": 144,
inherits: 101,
"safe-buffer": 143
} ],
147: [ function(e, t, i) {
var n = e("inherits"), a = e("./hash"), s = e("safe-buffer").Buffer, m = [ 1518500249, 1859775393, -1894007588, -899497514 ], c = new Array(80);
function r() {
this.init();
this._w = c;
a.call(this, 64, 56);
}
n(r, a);
r.prototype.init = function() {
this._a = 1732584193;
this._b = 4023233417;
this._c = 2562383102;
this._d = 271733878;
this._e = 3285377520;
return this;
};
r.prototype._update = function(e) {
for (var t, i, n, a, s, c, r, o = this._w, h = 0 | this._a, l = 0 | this._b, d = 0 | this._c, u = 0 | this._d, v = 0 | this._e, g = 0; g < 16; ++g) o[g] = e.readInt32BE(4 * g);
for (;g < 80; ++g) o[g] = (t = o[g - 3] ^ o[g - 8] ^ o[g - 14] ^ o[g - 16]) << 1 | t >>> 31;
for (var _ = 0; _ < 80; ++_) {
var f = ~~(_ / 20), p = ((r = h) << 5 | r >>> 27) + (a = l, s = d, c = u, 0 === (n = f) ? a & s | ~a & c : 2 === n ? a & s | a & c | s & c : a ^ s ^ c) + v + o[_] + m[f] | 0;
v = u;
u = d;
d = (i = l) << 30 | i >>> 2;
l = h;
h = p;
}
this._a = h + this._a | 0;
this._b = l + this._b | 0;
this._c = d + this._c | 0;
this._d = u + this._d | 0;
this._e = v + this._e | 0;
};
r.prototype._hash = function() {
var e = s.allocUnsafe(20);
e.writeInt32BE(0 | this._a, 0);
e.writeInt32BE(0 | this._b, 4);
e.writeInt32BE(0 | this._c, 8);
e.writeInt32BE(0 | this._d, 12);
e.writeInt32BE(0 | this._e, 16);
return e;
};
t.exports = r;
}, {
"./hash": 144,
inherits: 101,
"safe-buffer": 143
} ],
148: [ function(e, t, i) {
var n = e("inherits"), a = e("./sha256"), s = e("./hash"), c = e("safe-buffer").Buffer, r = new Array(64);
function o() {
this.init();
this._w = r;
s.call(this, 64, 56);
}
n(o, a);
o.prototype.init = function() {
this._a = 3238371032;
this._b = 914150663;
this._c = 812702999;
this._d = 4144912697;
this._e = 4290775857;
this._f = 1750603025;
this._g = 1694076839;
this._h = 3204075428;
return this;
};
o.prototype._hash = function() {
var e = c.allocUnsafe(28);
e.writeInt32BE(this._a, 0);
e.writeInt32BE(this._b, 4);
e.writeInt32BE(this._c, 8);
e.writeInt32BE(this._d, 12);
e.writeInt32BE(this._e, 16);
e.writeInt32BE(this._f, 20);
e.writeInt32BE(this._g, 24);
return e;
};
t.exports = o;
}, {
"./hash": 144,
"./sha256": 149,
inherits: 101,
"safe-buffer": 143
} ],
149: [ function(e, t, i) {
var n = e("inherits"), a = e("./hash"), s = e("safe-buffer").Buffer, b = [ 1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298 ], c = new Array(64);
function r() {
this.init();
this._w = c;
a.call(this, 64, 56);
}
n(r, a);
r.prototype.init = function() {
this._a = 1779033703;
this._b = 3144134277;
this._c = 1013904242;
this._d = 2773480762;
this._e = 1359893119;
this._f = 2600822924;
this._g = 528734635;
this._h = 1541459225;
return this;
};
r.prototype._update = function(e) {
for (var t, i, n, a, s, c, r, o = this._w, h = 0 | this._a, l = 0 | this._b, d = 0 | this._c, u = 0 | this._d, v = 0 | this._e, g = 0 | this._f, _ = 0 | this._g, f = 0 | this._h, p = 0; p < 16; ++p) o[p] = e.readInt32BE(4 * p);
for (;p < 64; ++p) o[p] = (((i = o[p - 2]) >>> 17 | i << 15) ^ (i >>> 19 | i << 13) ^ i >>> 10) + o[p - 7] + (((t = o[p - 15]) >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3) + o[p - 16] | 0;
for (var m = 0; m < 64; ++m) {
var C = f + (((r = v) >>> 6 | r << 26) ^ (r >>> 11 | r << 21) ^ (r >>> 25 | r << 7)) + ((c = _) ^ v & (g ^ c)) + b[m] + o[m] | 0, y = (((s = h) >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((n = h) & (a = l) | d & (n | a)) | 0;
f = _;
_ = g;
g = v;
v = u + C | 0;
u = d;
d = l;
l = h;
h = C + y | 0;
}
this._a = h + this._a | 0;
this._b = l + this._b | 0;
this._c = d + this._c | 0;
this._d = u + this._d | 0;
this._e = v + this._e | 0;
this._f = g + this._f | 0;
this._g = _ + this._g | 0;
this._h = f + this._h | 0;
};
r.prototype._hash = function() {
var e = s.allocUnsafe(32);
e.writeInt32BE(this._a, 0);
e.writeInt32BE(this._b, 4);
e.writeInt32BE(this._c, 8);
e.writeInt32BE(this._d, 12);
e.writeInt32BE(this._e, 16);
e.writeInt32BE(this._f, 20);
e.writeInt32BE(this._g, 24);
e.writeInt32BE(this._h, 28);
return e;
};
t.exports = r;
}, {
"./hash": 144,
inherits: 101,
"safe-buffer": 143
} ],
150: [ function(e, t, i) {
var n = e("inherits"), a = e("./sha512"), s = e("./hash"), c = e("safe-buffer").Buffer, r = new Array(160);
function o() {
this.init();
this._w = r;
s.call(this, 128, 112);
}
n(o, a);
o.prototype.init = function() {
this._ah = 3418070365;
this._bh = 1654270250;
this._ch = 2438529370;
this._dh = 355462360;
this._eh = 1731405415;
this._fh = 2394180231;
this._gh = 3675008525;
this._hh = 1203062813;
this._al = 3238371032;
this._bl = 914150663;
this._cl = 812702999;
this._dl = 4144912697;
this._el = 4290775857;
this._fl = 1750603025;
this._gl = 1694076839;
this._hl = 3204075428;
return this;
};
o.prototype._hash = function() {
var n = c.allocUnsafe(48);
function e(e, t, i) {
n.writeInt32BE(e, i);
n.writeInt32BE(t, i + 4);
}
e(this._ah, this._al, 0);
e(this._bh, this._bl, 8);
e(this._ch, this._cl, 16);
e(this._dh, this._dl, 24);
e(this._eh, this._el, 32);
e(this._fh, this._fl, 40);
return n;
};
t.exports = o;
}, {
"./hash": 144,
"./sha512": 151,
inherits: 101,
"safe-buffer": 143
} ],
151: [ function(e, t, i) {
var n = e("inherits"), a = e("./hash"), s = e("safe-buffer").Buffer, ee = [ 1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591 ], c = new Array(160);
function r() {
this.init();
this._w = c;
a.call(this, 128, 112);
}
n(r, a);
r.prototype.init = function() {
this._ah = 1779033703;
this._bh = 3144134277;
this._ch = 1013904242;
this._dh = 2773480762;
this._eh = 1359893119;
this._fh = 2600822924;
this._gh = 528734635;
this._hh = 1541459225;
this._al = 4089235720;
this._bl = 2227873595;
this._cl = 4271175723;
this._dl = 1595750129;
this._el = 2917565137;
this._fl = 725511199;
this._gl = 4215389547;
this._hl = 327033209;
return this;
};
function te(e, t, i) {
return i ^ e & (t ^ i);
}
function ie(e, t, i) {
return e & t | i & (e | t);
}
function ne(e, t) {
return (e >>> 28 | t << 4) ^ (t >>> 2 | e << 30) ^ (t >>> 7 | e << 25);
}
function ae(e, t) {
return (e >>> 14 | t << 18) ^ (e >>> 18 | t << 14) ^ (t >>> 9 | e << 23);
}
function se(e, t) {
return e >>> 0 < t >>> 0 ? 1 : 0;
}
r.prototype._update = function(e) {
for (var t, i, n, a, s, c, r, o, h = this._w, l = 0 | this._ah, d = 0 | this._bh, u = 0 | this._ch, v = 0 | this._dh, g = 0 | this._eh, _ = 0 | this._fh, f = 0 | this._gh, p = 0 | this._hh, m = 0 | this._al, C = 0 | this._bl, y = 0 | this._cl, b = 0 | this._dl, M = 0 | this._el, N = 0 | this._fl, S = 0 | this._gl, A = 0 | this._hl, I = 0; I < 32; I += 2) {
h[I] = e.readInt32BE(4 * I);
h[I + 1] = e.readInt32BE(4 * I + 4);
}
for (;I < 160; I += 2) {
var E = h[I - 30], B = h[I - 30 + 1], w = ((r = E) >>> 1 | (o = B) << 31) ^ (r >>> 8 | o << 24) ^ r >>> 7, k = ((s = B) >>> 1 | (c = E) << 31) ^ (s >>> 8 | c << 24) ^ (s >>> 7 | c << 25);
E = h[I - 4];
B = h[I - 4 + 1];
var T = ((n = E) >>> 19 | (a = B) << 13) ^ (a >>> 29 | n << 3) ^ n >>> 6, L = ((t = B) >>> 19 | (i = E) << 13) ^ (i >>> 29 | t << 3) ^ (t >>> 6 | i << 26), O = h[I - 14], x = h[I - 14 + 1], R = h[I - 32], P = h[I - 32 + 1], D = k + x | 0, H = w + O + se(D, k) | 0;
H = (H = H + T + se(D = D + L | 0, L) | 0) + R + se(D = D + P | 0, P) | 0;
h[I] = H;
h[I + 1] = D;
}
for (var G = 0; G < 160; G += 2) {
H = h[G];
D = h[G + 1];
var j = ie(l, d, u), F = ie(m, C, y), U = ne(l, m), z = ne(m, l), J = ae(g, M), K = ae(M, g), V = ee[G], Y = ee[G + 1], W = te(g, _, f), Z = te(M, N, S), q = A + K | 0, X = p + J + se(q, A) | 0;
X = (X = (X = X + W + se(q = q + Z | 0, Z) | 0) + V + se(q = q + Y | 0, Y) | 0) + H + se(q = q + D | 0, D) | 0;
var Q = z + F | 0, $ = U + j + se(Q, z) | 0;
p = f;
A = S;
f = _;
S = N;
_ = g;
N = M;
g = v + X + se(M = b + q | 0, b) | 0;
v = u;
b = y;
u = d;
y = C;
d = l;
C = m;
l = X + $ + se(m = q + Q | 0, q) | 0;
}
this._al = this._al + m | 0;
this._bl = this._bl + C | 0;
this._cl = this._cl + y | 0;
this._dl = this._dl + b | 0;
this._el = this._el + M | 0;
this._fl = this._fl + N | 0;
this._gl = this._gl + S | 0;
this._hl = this._hl + A | 0;
this._ah = this._ah + l + se(this._al, m) | 0;
this._bh = this._bh + d + se(this._bl, C) | 0;
this._ch = this._ch + u + se(this._cl, y) | 0;
this._dh = this._dh + v + se(this._dl, b) | 0;
this._eh = this._eh + g + se(this._el, M) | 0;
this._fh = this._fh + _ + se(this._fl, N) | 0;
this._gh = this._gh + f + se(this._gl, S) | 0;
this._hh = this._hh + p + se(this._hl, A) | 0;
};
r.prototype._hash = function() {
var n = s.allocUnsafe(64);
function e(e, t, i) {
n.writeInt32BE(e, i);
n.writeInt32BE(t, i + 4);
}
e(this._ah, this._al, 0);
e(this._bh, this._bl, 8);
e(this._ch, this._cl, 16);
e(this._dh, this._dl, 24);
e(this._eh, this._el, 32);
e(this._fh, this._fl, 40);
e(this._gh, this._gl, 48);
e(this._hh, this._hl, 56);
return n;
};
t.exports = r;
}, {
"./hash": 144,
inherits: 101,
"safe-buffer": 143
} ],
152: [ function(e, t, i) {
t.exports = n;
var l = e("events").EventEmitter;
e("inherits")(n, l);
n.Readable = e("readable-stream/readable.js");
n.Writable = e("readable-stream/writable.js");
n.Duplex = e("readable-stream/duplex.js");
n.Transform = e("readable-stream/transform.js");
n.PassThrough = e("readable-stream/passthrough.js");
function n() {
l.call(this);
}
(n.Stream = n).prototype.pipe = function(t, e) {
var i = this;
function n(e) {
t.writable && !1 === t.write(e) && i.pause && i.pause();
}
i.on("data", n);
function a() {
i.readable && i.resume && i.resume();
}
t.on("drain", a);
if (!(t._isStdio || e && !1 === e.end)) {
i.on("end", c);
i.on("close", r);
}
var s = !1;
function c() {
if (!s) {
s = !0;
t.end();
}
}
function r() {
if (!s) {
s = !0;
"function" == typeof t.destroy && t.destroy();
}
}
function o(e) {
h();
if (0 === l.listenerCount(this, "error")) throw e;
}
i.on("error", o);
t.on("error", o);
function h() {
i.removeListener("data", n);
t.removeListener("drain", a);
i.removeListener("end", c);
i.removeListener("close", r);
i.removeListener("error", o);
t.removeListener("error", o);
i.removeListener("end", h);
i.removeListener("close", h);
t.removeListener("close", h);
}
i.on("end", h);
i.on("close", h);
t.on("close", h);
t.emit("pipe", i);
return t;
};
}, {
events: 83,
inherits: 101,
"readable-stream/duplex.js": 127,
"readable-stream/passthrough.js": 138,
"readable-stream/readable.js": 139,
"readable-stream/transform.js": 140,
"readable-stream/writable.js": 141
} ],
153: [ function(e, t, i) {
var n = e("buffer").Buffer, a = n.isEncoding || function(e) {
switch (e && e.toLowerCase()) {
case "hex":
case "utf8":
case "utf-8":
case "ascii":
case "binary":
case "base64":
case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
case "raw":
return !0;

default:
return !1;
}
};
var s = i.StringDecoder = function(e) {
this.encoding = (e || "utf8").toLowerCase().replace(/[-_]/, "");
(function(e) {
if (e && !a(e)) throw new Error("Unknown encoding: " + e);
})(e);
switch (this.encoding) {
case "utf8":
this.surrogateSize = 3;
break;

case "ucs2":
case "utf16le":
this.surrogateSize = 2;
this.detectIncompleteChar = r;
break;

case "base64":
this.surrogateSize = 3;
this.detectIncompleteChar = o;
break;

default:
this.write = c;
return;
}
this.charBuffer = new n(6);
this.charReceived = 0;
this.charLength = 0;
};
s.prototype.write = function(e) {
for (var t = ""; this.charLength; ) {
var i = e.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : e.length;
e.copy(this.charBuffer, this.charReceived, 0, i);
this.charReceived += i;
if (this.charReceived < this.charLength) return "";
e = e.slice(i, e.length);
if (!(55296 <= (a = (t = this.charBuffer.slice(0, this.charLength).toString(this.encoding)).charCodeAt(t.length - 1)) && a <= 56319)) {
this.charReceived = this.charLength = 0;
if (0 === e.length) return t;
break;
}
this.charLength += this.surrogateSize;
t = "";
}
this.detectIncompleteChar(e);
var n = e.length;
if (this.charLength) {
e.copy(this.charBuffer, 0, e.length - this.charReceived, n);
n -= this.charReceived;
}
var a;
n = (t += e.toString(this.encoding, 0, n)).length - 1;
if (55296 <= (a = t.charCodeAt(n)) && a <= 56319) {
var s = this.surrogateSize;
this.charLength += s;
this.charReceived += s;
this.charBuffer.copy(this.charBuffer, s, 0, s);
e.copy(this.charBuffer, 0, 0, s);
return t.substring(0, n);
}
return t;
};
s.prototype.detectIncompleteChar = function(e) {
for (var t = 3 <= e.length ? 3 : e.length; 0 < t; t--) {
var i = e[e.length - t];
if (1 == t && i >> 5 == 6) {
this.charLength = 2;
break;
}
if (t <= 2 && i >> 4 == 14) {
this.charLength = 3;
break;
}
if (t <= 3 && i >> 3 == 30) {
this.charLength = 4;
break;
}
}
this.charReceived = t;
};
s.prototype.end = function(e) {
var t = "";
e && e.length && (t = this.write(e));
if (this.charReceived) {
var i = this.charReceived, n = this.charBuffer, a = this.encoding;
t += n.slice(0, i).toString(a);
}
return t;
};
function c(e) {
return e.toString(this.encoding);
}
function r(e) {
this.charReceived = e.length % 2;
this.charLength = this.charReceived ? 2 : 0;
}
function o(e) {
this.charReceived = e.length % 3;
this.charLength = this.charReceived ? 3 : 0;
}
}, {
buffer: 47
} ],
154: [ function(e, t, i) {
(function(i) {
t.exports = function(e, t) {
if (n("noDeprecation")) return e;
var i = !1;
return function() {
if (!i) {
if (n("throwDeprecation")) throw new Error(t);
n("traceDeprecation") ? console.trace(t) : console.warn(t);
i = !0;
}
return e.apply(this, arguments);
};
};
function n(e) {
try {
if (!i.localStorage) return !1;
} catch (e) {
return !1;
}
var t = i.localStorage[e];
return null != t && "true" === String(t).toLowerCase();
}
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ],
155: [ function(require, module, exports) {
var indexOf = require("indexof"), Object_keys = function(e) {
if (Object.keys) return Object.keys(e);
var t = [];
for (var i in e) t.push(i);
return t;
}, forEach = function(e, t) {
if (e.forEach) return e.forEach(t);
for (var i = 0; i < e.length; i++) t(e[i], i, e);
}, defineProp = function() {
try {
Object.defineProperty({}, "_", {});
return function(e, t, i) {
Object.defineProperty(e, t, {
writable: !0,
enumerable: !1,
configurable: !0,
value: i
});
};
} catch (e) {
return function(e, t, i) {
e[t] = i;
};
}
}(), globals = [ "Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape" ];
function Context() {}
Context.prototype = {};
var Script = exports.Script = function(e) {
if (!(this instanceof Script)) return new Script(e);
this.code = e;
};
Script.prototype.runInContext = function(t) {
if (!(t instanceof Context)) throw new TypeError("needs a 'context' argument.");
var e = document.createElement("iframe");
e.style || (e.style = {});
e.style.display = "none";
document.body.appendChild(e);
var i = e.contentWindow, n = i.eval, a = i.execScript;
if (!n && a) {
a.call(i, "null");
n = i.eval;
}
forEach(Object_keys(t), function(e) {
i[e] = t[e];
});
forEach(globals, function(e) {
t[e] && (i[e] = t[e]);
});
var s = Object_keys(i), c = n.call(i, this.code);
forEach(Object_keys(i), function(e) {
(e in t || -1 === indexOf(s, e)) && (t[e] = i[e]);
});
forEach(globals, function(e) {
e in t || defineProp(t, e, i[e]);
});
document.body.removeChild(e);
return c;
};
Script.prototype.runInThisContext = function() {
return eval(this.code);
};
Script.prototype.runInNewContext = function(t) {
var i = Script.createContext(t), e = this.runInContext(i);
forEach(Object_keys(i), function(e) {
t[e] = i[e];
});
return e;
};
forEach(Object_keys(Script.prototype), function(i) {
exports[i] = Script[i] = function(e) {
var t = Script(e);
return t[i].apply(t, [].slice.call(arguments, 1));
};
});
exports.createScript = function(e) {
return exports.Script(e);
};
exports.createContext = Script.createContext = function(t) {
var i = new Context();
"object" == typeof t && forEach(Object_keys(t), function(e) {
i[e] = t[e];
});
return i;
};
}, {
indexof: 100
} ],
DCZB_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0a2a7b6cshL0LuSlgs1nmFj", "DCZB_Replay");
var n = e("baseReplay");
cc.Class({
extends: n,
initHolds: function(e) {
for (var t = cc.vv.gameNetMgr.seats.length, i = cc.vv.gameNetMgr.button > t - 1 ? 0 : cc.vv.gameNetMgr.button, n = i; n < t + i; n++) {
var a = t - 1 < n ? n - t : n, s = cc.vv.gameNetMgr.seats[a];
cc.vv.userMgr.userId == s.user_id && (cc.vv.gameNetMgr.seatIndex = a);
s.seatindex = a;
s.score = null;
s.folds = [];
s.holds = [];
s.items = [];
s.flower_items = [];
var c = 13, r = n - cc.vv.gameNetMgr.button;
a == cc.vv.gameNetMgr.button && (c = 14);
for (var o = 0; o < c; o++) {
var h = o * t + r;
s.holds.push(e[h]);
}
}
},
send_replay_begin: function() {
this.replayMgr.begin();
this.replayMgr.throw(cc.vv.gameNetMgr.wallData);
cc.vv.Event.emit("mj_turn_push");
var e = cc.vv.gameNetMgr.mjSyncData, t = {};
t.bao = e.god_wealth;
t.gang = e.light_card;
cc.vv.Event.emit("mj_flower_push", t);
},
updateReplay: function(e, t) {
cc.vv.Event.emit("mj_pick_card_push");
var i = t, n = e.actions, a = n[0], s = n[1], c = n[2], r = (n[3], cc.vv.gameNetMgr.seats[a]), o = 0;
switch (s) {
case 1:
o = 1;
r.items.push([ o, c, 0, c ]);
this.removeHolds(a, c);
this.removeHolds(a, c);
break;

case 2:
o = 2;
r.items.push([ o, c, 0, c, 2 ]);
this.removeHolds(a, c);
this.removeHolds(a, c);
this.removeHolds(a, c);
this.removeHolds(a, c);
break;

case 3:
o = 3;
for (var h = 0; h < r.items.length; h++) if (r.items[h][1] == c) {
r.items.splice(h, 1);
break;
}
r.items.push([ o, c, 0, c, 3 ]);
this.removeHolds(a, c);
break;

case 4:
o = 4;
var l = [];
l.push(c);
l.push(c);
l.push(c);
l.push(c);
r.items.push([ o, c, 0, c, 1 ]);
this.tempRemove(l, c, a);
break;

case 5:
o = 5;
cc.vv.gameNetMgr.getLocalIndex(a);
break;

case 6:
r.holds.push(c);
this.send_replay_wall();
break;

case 7:
r.holds.push(c);
break;

case 8:
this.setOutCard(c, a);
this.removeHolds(a, c);
if (i) {
6 == i.actions[1] && r.folds.push(c);
}
break;

case 9:
this.removeHolds(a, c);
r.flower_items.push(c);
cc.vv.Event.emit("mj_flower_item_push", a);
}
if (0 < o) {
var d = {};
d.type = o;
d.seatIndex = a;
this.replayMgr.GAMEBase.opReplay(d);
}
this.send_replay_update_holds_folds_items();
return 0;
}
});
cc._RF.pop();
}, {
baseReplay: "baseReplay"
} ],
ErrorCode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "86e976+LZpEUZw1FXYS2pnE", "ErrorCode");
var n;
function a(e, t, i) {
t in e ? Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i;
return e;
}
var s = (a(n = {
100: "系统参数错误",
101: "系统校验错误",
200: "请求服务器不存在",
201: "服务器组不存在",
202: "房间不存在",
203: "重定向服务器地址失败",
204: "SERVERCODE错误",
301: "用户不存在",
302: "有用户没准备",
303: "不在下注状态",
304: "下注金额不合法",
305: "下注类型不合法",
400: "没有奖励可领取",
401: "奖励领取领取",
402: "还未满足领取条件",
500: "已经绑定了",
501: "自己绑定自己",
502: "绑定的用户不存在",
503: "绑定的渠道不存在",
1e3: "登录失败，未定义错误",
1001: "登录失败，微信返回错误",
1002: "登录失败，检测账户返回错误",
1003: "登录失败，账号被锁定",
1004: "注册失败，用户已经存在",
2e3: "房间操作失败，未定义错误",
2001: "创建房间失败，参数不合法",
2002: "创建房间失败，校验不合法",
2003: "规则检验不合法",
2004: "房间类型错误",
2005: "创建失败，已经在游戏中",
2006: "创建房间失败，房卡不够",
2007: "创建房间失败，钻石不够",
2008: "创建房间失败，只能创建房卡游戏",
2009: "房间里有玩家在，无法删除房间",
2101: "进入房间失败，参数不合法",
2102: "进入房间失败，检验不合法",
2103: "进入房间失败，房间已满",
2104: "进入房间失败，玩家已经在房间",
2105: "进入房间失败，未找到房间",
2106: "进入房间失败，钻石不足",
2107: "进入房间失败，游戏已经开始，不允许新进玩家",
2200: "投诉建议错误未定义",
2201: "参数错误",
2202: "才刚刚投诉建议了，请稍等一会儿，或者直接联系客服",
2203: "不能识别的投诉类型，或者未指定",
2204: "不能识别投诉的游戏类型，或者未指定",
2205: "没有更多的记录",
2206: "未找到相关投诉建议",
2300: "游戏错误未定义",
2301: "组织数据错误",
2302: "没有更多的邮件",
2303: "操作邮件未知错误",
2304: "领取邮件奖励错误",
2305: "邮件奖励已领取或邮件不存在",
2400: "俱乐部操作未定义错误",
2401: "已经有俱乐部",
2402: "未找到俱乐部",
2403: "未找到俱乐部创建者",
2404: "未授权",
5e3: "游戏操作错误，未定义错误",
5001: "卡牌不合法",
5002: "玩家未找到",
5003: "未到出牌的顺序",
5004: "出牌类型错误",
5005: "必须出牌",
5006: "出单牌的时候，如果下家是单牌，必须检测最大值",
5100: "用户操作未定义",
5101: "不能继续要牌",
5102: "庄家小于或等于16点时必须要牌",
5103: "押注太少",
5104: "庄家大于或等于17点，不能再要牌",
5200: "数据格式错误",
5201: "卡牌不合法",
5202: "大类型错误",
5203: "墩出错",
5204: "不允许特殊类型",
5300: "财神不能出",
5301: "还有操作未进行",
5302: "已经出过牌了",
5400: "手太慢了，该方位已经被玩家抢占了",
5500: "手中还有单张风牌",
5501: "必须跟风",
6e3: "没有此比赛",
6001: "已经报名了",
6002: "报名失败了",
6003: "比赛服务器未找到",
6004: "取消报名失败",
6005: "玩家没有报名该比赛",
6006: "比赛已经开始",
6510: "你不是该房间的俱乐部成员",
6501: "加入公会已达限制",
6502: "公会名称已存在",
6503: "公会名称太长",
6504: "公会权限不足",
6505: "公会名称相同",
6506: "您已加入",
6507: "您已申请加入",
6508: "您已被屏蔽",
6509: "没有此申请"
}, "6510", "您不是公会成员"), a(n, "6511", "您是管理员"), a(n, "6512", "不能删除自己"), a(n, "6513", "公会不存在"), 
a(n, "6514", "公会邀请不存在"), a(n, "6515", "玩家已被邀请"), a(n, "6516", "请先设置自动创建房间规则"), a(n, "8000", "支付错误未定义"), 
a(n, "8001", "支付参数错误"), a(n, "8002", "支付校验错误"), a(n, "8003", "支付账户不存在"), a(n, "8004", "有支付订单正在处理，请稍后再试"), 
a(n, "8005", "支付商品不存在"), a(n, "8006", "请求验证失败"), a(n, "8100", "支付苹果校验未知错误"), a(n, "8101", "支付苹果校验出错，请稍后再试"), 
a(n, "8102", "支付信息不存在"), a(n, "8103", "支付物品信息不匹配"), a(n, "8104", "支付itemid不匹配"), 
a(n, "8105", "订单不匹配"), a(n, "8106", "appid不匹配"), a(n, "8107", "支付已验证"), a(n, "8200", "插入钻石未定义错误"), 
a(n, "8201", "后台插入钻石数据库错误"), a(n, "8202", "未找到对应玩家"), a(n, "8300", "插入金币未定义错误"), 
a(n, "8301", "插入金币数据库错误"), a(n, "8302", "插入金币未找到玩家"), a(n, "8400", "数据个数错误"), a(n, "8401", "支付平台错误"), 
a(n, "8402", "支付信息错误"), a(n, "8403", "解析微信放回错误"), a(n, "8404", "订单微信返回错误1"), a(n, "8405", "订单微信返回错误2"), 
a(n, "8406", "加载付费数据错误"), a(n, "8407", "请求数据错误。"), a(n, "8408", "支付订单微信未回调，请等待"), 
a(n, "8409", "微信回调通知超时"), a(n, "8410", "查询订单返回的sign错误"), a(n, "8411", "h5主动验证ERROR1"), 
a(n, "8412", "h5主动验证ERROR2"), a(n, "8413", "h5支付还未完成"), a(n, "8414", "h5支付订单不匹配"), 
n);
i.errorMsg = function(e) {
var t = s[e];
"" != t && t || (t = e);
return t;
};
i.error = s;
cc._RF.pop();
}, {} ],
EventDispatcher: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "23779pbhmVEkZnHkryy9WsT", "EventDispatcher");
var r = {};
i.emit = function(e, t) {
var i = r[e];
if (i) for (var n = i.length - 1; 0 <= n; n--) {
var a = i[n], s = a.callback, c = a.target;
s.call(c, t);
}
};
i.on = function(e, t, i) {
var n = r[e] = r[e] || [];
if (0 !== n.filter(function(e) {
return e.callback.toString() == t.toString() && e.target == i;
}).length) return console.error("重复监听事件", e, i.name + "." + t.name);
n.push({
callback: t,
target: i
});
};
i.off = function(e, t, i) {
var n = r[e];
if (n) if (void 0 === t) delete r[e]; else {
for (var a = n.length - 1; 0 <= a; a--) {
var s = n[a];
if (s.target == i && s.callback.toString() == t.toString()) {
n.splice(a, 1);
break;
}
}
0 === n.length && delete r[e];
}
};
i.print = function() {
console.log("events:", r);
};
cc._RF.pop();
}, {} ],
EventType: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3ba514yjVpHZYl22cdjO7Bj", "EventType");
t.exports = {
MATCH_GAME_HOLDS: "MATCH_GAME_HOLDS",
MATCH_OUT_CARD: "MATCH_OUT_CARD",
MATCH_TURN: "MATCH_TURN",
MATCH_END_ONE: "MATCH_END_ONE",
MATCH_GEME_WAIT: "MATCH_GEME_WAIT",
MATCH_GAME_START: "MATCH_GAME_START",
MATCH_TOP_LIST: "MATCH_TOP_LIST",
MATCH_COUNTS: "MATCH_COUNTS",
MATCH_END: "MATCH_END",
MATCH_TOP_CLICK: "MATCH_TOP_CLICK",
MATCH_GAME_PREPARE: "MATCH_GAME_PREPARE",
MATCH_WAITING_PIPEI: "MATCH_WAITING_PIPEI",
MATCH_TIME: "MATCH_TIME",
MATCH_GAME_COUNTS: "MATCH_GAME_COUNTS",
MATCH_DDZ_GAME_BEGIN: "MATCH_DDZ_GAME_BEGIN",
MATCH_DDZ_REMOVE_GAME_OVER: "MATCH_DDZ_REMOVE_GAME_OVER",
MATCH_DDZ_INIT_SEATS: "MATCH_DDZ_INIT_SEATS",
MATCH_DDZ_SHOW_TUOGUAN: "MATCH_DDZ_SHOW_TUOGUAN",
MATCH_DDZ_SHOW_MY_INFO: "MATCH_DDZ_SHOW_MY_INFO",
MATCH_DDZ_SHOW_TXT_TIP: "MATCH_DDZ_SHOW_TXT_TIP",
MATCH_DDZ_PLAYER_NUMBER_CHANGE: "MATCH_DDZ_PLAYER_NUMBER_CHANGE",
MATCH_DDZ_UPDATE_GAME_ROUND: "MATCH_DDZ_UPDATE_GAME_ROUND",
MATCH_DDZ_SHOW_MATCH_DETAIL_DIALOG: "MATCH_DDZ_SHOW_MATCH_DETAIL_DIALOG",
MATCH_DDZ_SHOW_TABLE_WAIT: "MATCH_DDZ_SHOW_TABLE_WAIT",
MATCH_DDZ_CLEAR_SEATS: "MATCH_DDZ_CLEAR_SEATS",
MATCH_DDZ_SHOW_REWARD_DIALOG: "MATCH_DDZ_SHOW_REWARD_DIALOG",
MATCH_DDZ_REMOVE_REWARD_DIALOG: "MATCH_DDZ_REMOVE_REWARD_DIALOG",
MATCH_DDZ_SHOW_BTN_CONTINUE_GAME: "MATCH_DDZ_SHOW_BTN_CONTINUE_GAME",
MATCH_DDZ_SHOW_LORD_CARD: "MATCH_DDZ_SHOW_LORD_CARD",
MATCH_DDZ_BAOMING: "MATCH_DDZ_BAOMING",
SHOW_MATCH_DDZ_HALL: "SHOW_MATCH_DDZ_HALL"
};
cc._RF.pop();
}, {} ],
Exchange: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0e165BcL/tEQatbms2qpeK1", "Exchange");
cc.Class({
extends: cc.Component,
properties: {
_tabType: 1,
_exchange: null,
lblMoney_exch: cc.Label,
lblGems_exch: cc.Label,
exch_lbl: cc.Label
},
onLoad: function() {
(this._exchange = this)._exchange.active = !0;
this.lblGems = cc.find("Canvas/top_left/headinfo/lblGems");
this.lblMoney = cc.find("Canvas/top_left/headinfo/bg_coins/lblMoney");
this._zuanMC = this._exchange.node.getChildByName("zuanMC");
this.inputStr = this._exchange.node.getChildByName("input_EditBox");
this._tabType = 1;
this.updetaMoney();
},
onClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
onTabUpdate: function() {
if (1 == this._tabType) {
this.inputStr.getComponent(cc.EditBox).string = "4";
this.exch_lbl.string = "1";
} else {
this.inputStr.getComponent(cc.EditBox).string = "1";
this.exch_lbl.string = "4";
}
},
onBtnTypeClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this._tabType = e.checkEvents[0].customEventData;
this.onTabUpdate();
},
onInputEditBoxChange: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = Math.floor(this.inputStr.getComponent(cc.EditBox).string);
if (1 == this._tabType) {
t = t < 4 ? 0 : Math.floor(t / 4);
this.exch_lbl.string = t;
} else this.exch_lbl.string = 4 * t;
},
onBtnOKClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = "", i = this, n = Math.floor(this.inputStr.getComponent(cc.EditBox).string);
if (0 != n) if (1 == this._tabType) {
if (n > cc.vv.userMgr.coins) {
cc.vv.alert.show("提示", "兑换余额不够！");
return;
}
t = "是否确定将" + (n -= n % 4) + "颗钻石兑换成" + n / 4 + "张房卡？";
cc.vv.alert.show("提示", t, function() {
cc.vv.userMgr.getZ_exchange_F(n, function(e) {
cc.vv.userMgr.gems = e.new_ingot;
cc.vv.userMgr.coins = e.new_gold;
i.lblGems.getComponent(cc.Label).string = e.new_ingot;
i.lblMoney.getComponent(cc.Label).string = e.new_gold;
i.updetaMoney();
i._exchange.active = !1;
});
}, !0, "兑换");
} else if (2 == this._tabType) {
if (n > cc.vv.userMgr.gems) {
cc.vv.alert.show("提示", "兑换余额不够！");
return;
}
t = "是否确定将" + n + "张房卡兑换成" + 4 * n + "颗钻石？";
cc.vv.alert.show("提示", t, function() {
cc.vv.userMgr.getF_exchange_Z(n, function(e) {
cc.vv.userMgr.gems = e.new_ingot;
cc.vv.userMgr.coins = e.new_gold;
i.lblGems.getComponent(cc.Label).string = e.new_ingot;
i.lblMoney.getComponent(cc.Label).string = e.new_gold;
i.updetaMoney();
i._exchange.active = !1;
});
}, !0, "兑换");
}
},
onExchange: function() {},
updetaMoney: function() {
this.lblGems_exch.string = cc.vv.userMgr.gems;
this.lblMoney_exch.string = cc.vv.userMgr.coins;
},
onBtnADDClicked_Z: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = Math.floor(this.inputStr.getComponent(cc.EditBox).string);
this.inputStr.getComponent(cc.EditBox).string = t + 4;
},
onBtnDELClicked_Z: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = Math.floor(this.inputStr.getComponent(cc.EditBox).string);
if (0 != t) {
var i = 0;
i = t < 4 ? 0 : t - 4;
this.inputStr.getComponent(cc.EditBox).string = i;
}
},
onBtnADDClicked_F: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = Math.floor(this.inputStr.getComponent(cc.EditBox).string);
this.inputStr.getComponent(cc.EditBox).string = t + 1;
},
onBtnDELClicked_F: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = Math.floor(this.inputStr.getComponent(cc.EditBox).string);
0 != t && (this.inputStr.getComponent(cc.EditBox).string = t - 1);
}
});
cc._RF.pop();
}, {} ],
FCAlert: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "824d1xu4VZInouCpz9oXktr", "FCAlert");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = t.call(this) || this;
e.btnCover = null;
e.btnOK = null;
e.btnCancel = null;
e.btnClose = null;
e.arrow = null;
e.content = null;
e.btnOkLabel = null;
e.btnCancelLabel = null;
e.onFunction = null;
return e;
}
(i = e).getInstance = function(n) {
if (!this.instance) {
this.instance = new i();
cc.loader.loadRes(cc.vv.MJConfig.UIAlert, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
i.getComponent("FCAlert").show("解散房间", "解散房间不扣房卡，是否确定解散？", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dispress");
});
});
}
return this.instance;
};
e.prototype.start = function() {
var e = this;
(cc.vv.alert = this).btnCover.on(cc.Node.EventType.TOUCH_END, function() {
e.onBtnClose();
});
this.btnOK.on(cc.Node.EventType.TOUCH_END, function() {
e.onBtnOK();
});
this.btnCancel.on(cc.Node.EventType.TOUCH_END, function() {
e.onBtnClose();
});
this.btnClose.on(cc.Node.EventType.TOUCH_END, function() {
e.onBtnClose();
});
};
e.prototype.onBtnClose = function() {
cc.vv.alert = null;
cc.vv.audioMgr.playBtnClick();
this.node.destroy();
i.instance = null;
};
e.prototype.onBtnOK = function() {
this.onFunction && this.onFunction();
this.onBtnClose();
};
e.prototype.show = function(e, t, i, n, a, s) {
void 0 === i && (i = !0);
void 0 === n && (n = !1);
void 0 === a && (a = "确定");
void 0 === s && (s = "取消");
this.onFunction = i;
this.content.string = t;
this.btnOkLabel.string = a;
this.btnCancelLabel.string = s;
if (n) {
this.btnCancel.active = !1;
this.btnOK.x = 0;
}
console.log("--------------alert---" + this.node);
};
var i;
e.instance = null;
__decorate([ s(cc.Node) ], e.prototype, "btnCover", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnOK", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnCancel", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnClose", void 0);
__decorate([ s(cc.Node) ], e.prototype, "arrow", void 0);
__decorate([ s(cc.Label) ], e.prototype, "content", void 0);
__decorate([ s(cc.Label) ], e.prototype, "btnOkLabel", void 0);
__decorate([ s(cc.Label) ], e.prototype, "btnCancelLabel", void 0);
return e = i = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCCSConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ccca17yJcBO9q/fV4ylK/8s", "FCCSConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(i) {
__extends(e, i);
function e() {
var e = null !== i && i.apply(this, arguments) || this;
e.UIPiaoFen = "game/3DMahjong/csmj/piao_fen";
return e;
}
e.prototype.NetBase = function(e) {
this.netBase = e;
var t = this;
cc.vv.Event.on("mj_xiao_hu", function(e) {
t.xiaoHu(e.detail);
});
cc.vv.Event.on("mj_show_sea", function(e) {
t.showSea(e.detail);
});
cc.vv.Event.on("mj_sea_cards", function(e) {
t.seaCard(e.detail);
});
cc.vv.Event.on("mj_xpiao_score", function(e) {
t.xpiaofen(e.detail);
});
cc.vv.Event.on("mj_fen_end", function(e) {
t.piaoFenEnd(e.detail);
});
cc.vv.Event.on("mj_mid_hu", function(e) {
t.midHu(e.detail);
});
};
e.prototype.showSea = function(e) {
if (cc.vv.userMgr.userId == e.who) {
this.netBase.UIBase.showSea(e);
this.netBase.GAMEBase.showSea(e);
}
};
e.prototype.seaCard = function(e) {
this.netBase.UIBase.seaCard(e);
this.netBase.GAMEBase.out();
};
e.prototype.gameInitView = function(e) {
cc.vv.gameNetMgr.huPaiPlayer = {};
cc.vv.gameNetMgr.huPaiPlayer.type = -1;
cc.vv.gameNetMgr.huPaiPlayer.provider = -1;
cc.vv.gameNetMgr.huPaiPlayer.seatIndex = -1;
cc.vv.gameNetMgr.huPaiPlayer.newSeats = [];
};
e.prototype.synUIData = function(e) {
console.log("========= 当前游戏状态：" + cc.vv.gameNetMgr.gamestate);
2 == cc.vv.gameNetMgr.gamestate && this.synPiaoFen();
if (5 == cc.vv.gameNetMgr.gamestate) for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; i++) cc.vv.userMgr.userId == t[i].userid && t[i].piao_fen < 1 && this.xpiaofen();
cc.vv.gameNetMgr._sea && this.showSea(cc.vv.gameNetMgr._sea);
};
e.prototype.syncOperation = function() {};
e.prototype.synPiaoFen = function() {
for (var e = {}, t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; i++) {
var n = t[i].userid, a = t[i].piao_fen;
e[n] = a;
}
this.netBase.UIBase.flower(e);
};
e.prototype.xiaoHu = function(e) {
this.netBase.GAMEBase.xiaoHu(e);
cc.vv.Event.emit("msg_clock_start");
};
e.prototype.xpiaofen = function(e) {
this.netBase.UIBase.xpiaofen();
};
e.prototype.piaoFenEnd = function(e) {
this.netBase.GAMEBase.flower(e);
this.netBase.UIBase.flower(e);
};
e.prototype.midHu = function(e) {
this.netBase.setPlayWall(!0);
this.netBase.GAMEBase.midHu(e);
this.installAction(e);
};
e.prototype.installAction = function(n) {
var e = 0, t = 0, a = this;
if (cc.vv.mahjongUtils.has_rule(n.rights, 23)) {
e = 6;
t = 1;
}
cc.vv.mahjongUtils.has_rule(n.rights, 24) && (e = 4);
var i = {
seatIndex: -1,
holds: []
}, s = {
seatIndex: -1,
items: []
};
i.seatIndex = n.seatIndex;
s.seatIndex = n.seatIndex;
for (var c = cc.vv.gameNetMgr.seats[n.seatIndex], r = c.holds.slice(0), o = c.items.slice(0), h = 0; h < n.target.length; h++) {
var l = n.target[h], d = [ e, l, 0, l, t ];
o.push(d);
}
s.items = o;
switch (e) {
case 4:
i.holds = this.Seek(n.userId, n.target, r, 3);
break;

case 6:
i.holds = this.Seek(n.userId, n.target, r, 4);
}
this.netBase.holds(i);
this.netBase.items(s);
cc.vv.Event.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
var e = cc.vv.gameNetMgr.seats[n.seatIndex], t = {
seatIndex: 0,
holds: []
}, i = {
seatIndex: 0,
items: []
};
t.seatIndex = n.seatIndex;
i.seatIndex = n.seatIndex;
t.holds = e.holds;
i.items = e.items;
a.netBase.holds(t);
a.netBase.items(i);
a.netBase.setPlayWall(!1);
})));
};
e.prototype.Seek = function(e, t, i, n) {
var a = [];
if (e == cc.vv.userMgr.userId) for (var s = 0; s < t.length; s++) for (var c = 0, r = t[s], o = 0; o < i.length; o++) {
r == (h = i[o]) && c < n ? c++ : a.push(h);
} else for (s = 0; s < i.length - n; s++) {
var h = i[s];
a.push(h);
}
return a;
};
e.prototype.setCardSprite = function(e, t, i, n) {
var a = cc.vv.gameNetMgr.seats[n], s = t.getChildByName("item").getComponent("Hunan_Item");
s.setHandValueAndColor(i);
t.active = !0;
if (0 < a.lock) s.setmsk(!0); else {
s.setmsk(!1);
e.onMJtprefabEvent(t);
}
};
e.prototype.updateShowHolds = function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(t);
if (0 == e.holdsNodeList[n].active && cc.vv.gameNetMgr.turn == t) {
e.holdsNodeList[n].active = !0;
for (var a = 0; a < e.toParentArray[n].length; a++) e.toParentArray[n][a].removeAllChildren();
}
e.updateHolds(t, i);
};
e.prototype.updateSeatFlowers = function(e, t, i) {
for (var n in i) {
var a = cc.vv.gameNetMgr.getSeatIndexByID(n), s = cc.vv.gameNetMgr.getLocalIndex(a);
e.huaPType = t.piao;
e.getHuapNode(e.huaPType, s, i[n]);
}
};
e.prototype.isHitBird = function(e, t) {
var i = cc.vv.gameNetMgr.huPaiPlayer;
if (-1 == i.type) return !1;
var n = cc.vv.gameNetMgr.seats, a = n[i.seatIndex].userid, s = n[i.provider].userid, c = cc.vv.userMgr.userId;
return 0 == i.type ? 1 == t || 5 == t || 9 == t || a == c || cc.vv.mahjongUtils.ziMoGetIsBird(i.newSeats, t, c) : 1 == i.type ? cc.vv.mahjongUtils.huGetIsBird(c, a, s, i.provider, i.newSeats, t) : void 0;
};
e.prototype.onActionClick = function(e, t) {
switch (t.btnName) {
case "btn_bu":
e.operationGang(t.type, t.card);
break;

case "btn_wantHaiDil":
this.wantHaiDil();
break;

case "btn_noHaiDil":
this.dontHaiDil();
}
i.prototype.onActionClick.call(this, e, t);
};
e.prototype.updateAction = function(n, a) {
console.log("操作码: >>>>>>>>>>>>>>>>  " + a.mask + " ");
if (65535 != a.mask && a.mask) {
var s = this;
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_guo", function(e, t) {
var i = cc.instantiate(t);
n.btnNodeAdd(i);
s.show_bu_btn(n, a.mask, a.card);
});
return !1;
}
return !0;
};
e.prototype.show_bu_btn = function(a, s, c) {
var r = this;
cc.vv.mahjongUtils.has_rule(s, 10) ? cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_bu", function(e, t) {
var i = cc.instantiate(t), n = i.getComponent("FCOperateBtn");
n.type = 10;
n.card = c;
a.btnNodeAdd(i);
r.show_chi_btn(a, s, c);
}) : this.show_chi_btn(a, s, c);
};
e.prototype.show_hu_btn = function(a, s, c) {
var r = this, o = 0;
if (cc.vv.mahjongUtils.has_rule(s, 7) || cc.vv.mahjongUtils.has_rule(s, 8) || cc.vv.mahjongUtils.has_rule(s, 9) || cc.vv.mahjongUtils.has_rule(s, 11)) {
cc.vv.mahjongUtils.has_rule(s, 7) && (o = 7);
cc.vv.mahjongUtils.has_rule(s, 8) && (o = 8);
cc.vv.mahjongUtils.has_rule(s, 9) && (o = 9);
cc.vv.mahjongUtils.has_rule(s, 11) && (o = 11);
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_hu", function(e, t) {
var i = cc.instantiate(t), n = i.getComponent("FCOperateBtn");
n.type = o;
n.card = c;
a.btnNodeAdd(i);
r.show_gang_btn(a, s, c);
});
} else this.show_gang_btn(a, s, c);
};
e.prototype.wantHaiDil = function() {
var e = JSON.parse(cc.vv.msgTemp_Hunan.CS_SeaChose);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("sea_cards", e);
};
e.prototype.dontHaiDil = function() {
var e = JSON.parse(cc.vv.msgTemp_Hunan.CS_noSeaChose);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("sea_cards", e);
};
e.prototype.operation = function(e, t) {
i.prototype.operation.call(this, e, t);
this.analysisOperation(e, t);
};
e.prototype.analysisOperation = function(e, t) {
var i = cc.vv.gameNetMgr.huPaiPlayer, n = t.op_code;
1 != n && 2 != n && 3 != n && 4 != n && 5 != n && 6 != n && 10 != n || this.netBase.GAMEBase.useSimple();
if (8 == n) {
cc.vv.mahjongUtils.has_rule(t.op_right, 17) ? i.type = 0 : i.type = 1;
i.provider = t.provider;
i.seatIndex = t.seat_index;
this.orderByHu(i, t.seat_index);
}
};
e.prototype.orderByHu = function(e, t) {
for (var i = e.seatIndex, n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; a++) {
i == n.length && (i = 0);
var s = n[i];
e.newSeats.push(s);
i++;
}
};
e.prototype.clear = function() {
cc.vv.gameNetMgr.huPaiPlayer.type = -1;
cc.vv.gameNetMgr.huPaiPlayer.provider = -1;
cc.vv.gameNetMgr.huPaiPlayer.seatIndex = -1;
cc.vv.gameNetMgr.huPaiPlayer.newSeats = [];
};
return e;
}(e("./FIMahjongConfig").FIMahjongConfig);
i.FCCSConfig = n;
cc._RF.pop();
}, {
"./FIMahjongConfig": "FIMahjongConfig"
} ],
FCChatItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9e12eXAwAxF2ZenG2J6XIhP", "FCChatItem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {
var t = this;
cc.vv.Event.on("chat_item_destroy", function(e) {
t.onDes();
});
};
t.prototype.onDes = function() {
this.node.destroy();
};
return t = __decorate([ a ], t);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCChat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8c99ep1l8BMvLDCBSY+VXwj", "FCChat");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = t.call(this) || this;
e.btnBg = null;
e.btnSend = null;
e.btnClose = null;
e.btnCyy = null;
e.btnEmoji = null;
e.btnRecord = null;
e.tabQuick = null;
e.emoji = null;
e.tabRecord = null;
e.iptChat = null;
e.itemContent = null;
e.ISonBtnRecord = !0;
return e;
}
(i = e).getInstance = function(n) {
if (!this.instance) {
this.instance = new i();
cc.loader.loadRes(cc.vv.MJConfig.UIChatPanel, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
}
return this.instance;
};
e.prototype.start = function() {
var e = this;
(cc.vv.chat = this).btnBg.on(cc.Node.EventType.TOUCH_START, function() {
e.onBtnClose();
});
this.btnSend.on(cc.Node.EventType.TOUCH_START, function() {
e.onBtnSnd();
});
this.btnClose.on(cc.Node.EventType.TOUCH_START, function() {
e.onBtnClose();
});
this.btnCyy.on(cc.Node.EventType.TOUCH_START, function() {
e.onBtnCyy();
});
this.btnEmoji.on(cc.Node.EventType.TOUCH_START, function() {
e.onBtnEmoji();
});
this.btnRecord.on(cc.Node.EventType.TOUCH_START, function() {
e.onBtnRecord();
});
};
e.prototype.onBtnClose = function() {
cc.vv.audioMgr.playBtnClick();
this.node.destroy();
i.instance = null;
};
e.prototype.getQuickChatInfo = function(e) {
var t = "item" + e;
return cc.vv.MJConfig.quickChatInfo[t];
};
e.prototype.onBtnCyy = function() {
cc.vv.audioMgr.playBtnClick();
this.tabQuick.active = !0;
this.emoji.active = !1;
this.tabRecord.active = !1;
};
e.prototype.onBtnEmoji = function() {
cc.vv.audioMgr.playBtnClick();
this.tabQuick.active = !1;
this.emoji.active = !0;
this.tabRecord.active = !1;
};
e.prototype.onBtnRecord = function() {
if (this.ISonBtnRecord) {
this.updateChatItem();
this.ISonBtnRecord = !1;
}
cc.vv.audioMgr.playBtnClick();
this.tabQuick.active = !1;
this.emoji.active = !1;
this.tabRecord.active = !0;
};
e.prototype.onBtnSnd = function() {
if ("" != this.iptChat.string) {
for (var e = this.iptChat.string; -1 != e.indexOf("\\"); ) e = e.replace("\\", "");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("chat", e);
this.iptChat.string = "";
this.onBtnClose();
}
};
e.prototype.onEmojiItemClicked = function(e) {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("emoji", e.target.name);
this.onBtnClose();
};
e.prototype.onQuickChatItemClicked = function(e) {
var t = cc.vv.MJConfig.quickChatInfo[e.target.name];
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("quick_chat", t.index);
this.onBtnClose();
};
e.prototype.updateChatItem = function() {
var r = this;
if (cc.vv.chatItemList) for (var e = function(e) {
var c = cc.vv.chatItemList[e];
cc.loader.loadRes(cc.vv.MJConfig.UIChatItem, function(e, t) {
var i = cc.instantiate(t);
r.itemContent.addChild(i);
var n = cc.vv.gameNetMgr.getSeatIndexByID(c.sender), a = cc.vv.gameNetMgr.seats[n].name;
if (cc.js.isNumber(c.content)) {
var s = r.getQuickChatInfo(c.content);
i.getChildByName("label").getComponent(cc.Label).string = a + ":" + s.content;
} else i.getChildByName("label").getComponent(cc.Label).string = a + ":" + c.content;
});
}, t = 0; t < cc.vv.chatItemList.length; t++) e(t);
};
var i;
e.instance = null;
__decorate([ s(cc.Node) ], e.prototype, "btnBg", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnSend", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnClose", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnCyy", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnEmoji", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnRecord", void 0);
__decorate([ s(cc.Node) ], e.prototype, "tabQuick", void 0);
__decorate([ s(cc.Node) ], e.prototype, "emoji", void 0);
__decorate([ s(cc.Node) ], e.prototype, "tabRecord", void 0);
__decorate([ s(cc.EditBox) ], e.prototype, "iptChat", void 0);
__decorate([ s(cc.Node) ], e.prototype, "itemContent", void 0);
return e = i = __decorate([ a ], e);
}(cc.Component);
i.FCChat = c;
cc._RF.pop();
}, {} ],
FCChoice: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "db187sFY1dOO4y9vtmdS894", "FCChoice");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e._btnClose = null;
e._btnChoice = null;
e._btnBg = null;
return e;
}
e.prototype.start = function() {
var e = this;
this._btnClose = this.node.getChildByName("btn_close");
this._btnChoice = this.node.getChildByName("btn_choice");
this._btnBg = this.node.getChildByName("bg");
this._btnClose.on(cc.Node.EventType.TOUCH_START, function() {
e.node.destroy();
});
this._btnChoice.on(cc.Node.EventType.TOUCH_START, function() {
e.node.destroy();
});
this._btnBg.on(cc.Node.EventType.TOUCH_START, function() {
e.node.destroy();
});
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCCreatRoom_CS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "be154yFXltDtpq9UyBzUURa", "FCCreatRoom_CS");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(r) {
__extends(e, r);
function e() {
var e = null !== r && r.apply(this, arguments) || this;
e._friedBird = null;
e._BirdStr = [];
e._rule3 = null;
return e;
}
e.prototype.play = function() {
r.prototype.play.call(this);
var e = this._roomNode.getChildByName("play"), t = e.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(t);
var i = e.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = e.getChildByName("rule7").getComponent(cc.Toggle);
this._radioArr.push(n);
var a = e.getChildByName("rule9").getComponent(cc.Toggle);
this._radioArr.push(a);
var s = e.getChildByName("rule10").getComponent(cc.Toggle);
this._radioArr.push(s);
};
e.prototype.addPlay = function() {
r.prototype.addPlay.call(this);
var e = this._roomNode.getChildByName("addPlay"), t = e.getChildByName("rule5"), i = e.getChildByName("rule6");
this._rule3 = e.getChildByName("rule7");
var n = t.getComponent(cc.Toggle);
this._radioArr.push(n);
var a = i.getComponent(cc.Toggle);
this._radioArr.push(a);
var s = this._rule3.getComponent(cc.Toggle);
this._radioArr.push(s);
var c = this._roomNode.getChildByName("play").getChildByName("rule11").getComponent(cc.Toggle);
this._radioArr.push(c);
this._BirdStr.push(t.getChildByName("New Label").getComponent(cc.Label));
this._BirdStr.push(t.getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label));
this._BirdStr.push(i.getChildByName("New Label").getComponent(cc.Label));
this._BirdStr.push(i.getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label));
this._BirdStr.push(this._rule3.getChildByName("New Label").getComponent(cc.Label));
this._BirdStr.push(this._rule3.getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label));
};
e.prototype.produceRules = function() {
var e = r.prototype.produceRules.call(this);
this._radioArr[7].isChecked && (e += 1 << 21);
this._radioArr[8].isChecked && (e += 1 << 22);
this._radioArr[9].isChecked && (e += 1 << 23);
this._radioArr[10].isChecked && (e += 1 << 24);
this._radioArr[12].isChecked && (e += 1 << 25);
this._radioArr[13].isChecked && (e += 1 << 26);
this._radioArr[14].isChecked && (e += 1 << 27);
this._radioArr[15].isChecked && (e += 1 << 28);
this._radioArr[16].isChecked && (e += 65536);
this._radioArr[17].isChecked && (e += 1 << 17);
this._radioArr[18].isChecked && (e += 1 << 18);
this._radioArr[20].isChecked && (e += 4096);
this._radioArr[21].isChecked && (e += 8192);
this._radioArr[22].isChecked && (e += 16384);
this._radioArr[23].isChecked && (e += 1 << 29);
return e;
};
e.prototype.openRoo = function(e, t, i, n, a, s) {
r.prototype.openRoo.call(this, "长沙麻将", t, i, n, a, s);
};
e.prototype.onZhuaNiaoRules = function(e) {
this.onBtnSound();
0 < e.checkEvents[0].customEventData ? this.showBirdStr6() : this.showBirdStr4();
};
e.prototype.revertButton = function(e) {
var t = JSON.parse(e);
r.prototype.revertButton.call(this, e);
this._radioArr[7].isChecked = 0 != (t.rule_index & 1 << 21);
this._radioArr[8].isChecked = 0 != (t.rule_index & 1 << 22);
this._radioArr[9].isChecked = 0 != (t.rule_index & 1 << 23);
this._radioArr[10].isChecked = 0 != (t.rule_index & 1 << 24);
this._radioArr[12].isChecked = 0 != (t.rule_index & 1 << 25);
this._radioArr[13].isChecked = 0 != (t.rule_index & 1 << 26);
this._radioArr[14].isChecked = 0 != (t.rule_index & 1 << 27);
this._radioArr[15].isChecked = 0 != (t.rule_index & 1 << 28);
this._radioArr[23].isChecked = 0 != (t.rule_index & 1 << 29);
this._radioArr[16].isChecked = 0 != (65536 & t.rule_index);
this._radioArr[17].isChecked = 0 != (t.rule_index & 1 << 17);
this._radioArr[18].isChecked = 0 != (t.rule_index & 1 << 18);
this._radioArr[20].isChecked = 0 != (4096 & t.rule_index);
this._radioArr[21].isChecked = 0 != (8192 & t.rule_index);
this._radioArr[22].isChecked = 0 != (16384 & t.rule_index);
this._radioArr[23].isChecked = 0 != (t.rule_index & 1 << 29);
(this._radioArr[16].isChecked = 0 != (65536 & t.rule_index)) ? this.showBirdStr6() : this.showBirdStr4();
};
e.prototype.showBirdStr4 = function() {
this._rule3.active = !1;
this._radioArr[22].isChecked = !1;
this._BirdStr[0].string = "抓1鸟";
this._BirdStr[1].string = "抓1鸟";
this._BirdStr[2].string = "抓2鸟";
this._BirdStr[3].string = "抓2鸟";
};
e.prototype.showBirdStr6 = function() {
this._rule3.active = !0;
this._BirdStr[0].string = "抓2鸟";
this._BirdStr[1].string = "抓2鸟";
this._BirdStr[2].string = "抓4鸟";
this._BirdStr[3].string = "抓4鸟";
this._BirdStr[4].string = "抓6鸟";
this._BirdStr[5].string = "抓6鸟";
};
__decorate([ s(cc.Node) ], e.prototype, "_friedBird", void 0);
__decorate([ s([ cc.Label ]) ], e.prototype, "_BirdStr", void 0);
__decorate([ s(cc.Node) ], e.prototype, "_rule3", void 0);
return e = __decorate([ a ], e);
}(e("./FCCreateRoom").FCCreateRoom);
i.default = c;
cc._RF.pop();
}, {
"./FCCreateRoom": "FCCreateRoom"
} ],
FCCreatRoom_DC: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5a3cd7aF7ZBuZRSZ6GTlWBr", "FCCreatRoom_DC");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./FCCreateRoom"), a = cc._decorator, s = a.ccclass, c = (a.property, 
function(c) {
__extends(e, c);
function e() {
return null !== c && c.apply(this, arguments) || this;
}
e.prototype.inintView = function() {
this._roomNodestr = "Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/hnMJ";
cc.find("Canvas/CreateRoom/up_group/right_Node"), this.node.getChildByName("left_group");
this._roomNode = cc.find(this._roomNodestr);
this.gameType();
this.gamesNumber();
this.play();
this.inintGameCost();
this.initMsgHandler();
this.activityRequest();
};
e.prototype.openRoo = function(e, t, i, n, a, s) {
c.prototype.openRoo.call(this, "都昌栽宝", t, i, n, a, s);
};
e.prototype.play = function() {
var e = this._roomNode.getChildByName("play").getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(e);
};
e.prototype.produceRules = function() {
var e = 0;
this._radioArr[0].isChecked && (e = 1 << 19);
this._radioArr[1].isChecked && (e = 1 << 20);
this._radioArr[2].isChecked && (e += 2);
this._radioArr[3].isChecked && (e += 4);
this._radioArr[4].isChecked && (e += 8);
return e;
};
e.prototype.revertButton = function(e) {
var t = JSON.parse(e);
this._radioArr[0].isChecked = 0 != (t.rule_index & 1 << 19);
this._radioArr[1].isChecked = 0 != (t.rule_index & 1 << 20);
this._radioArr[2].isChecked = 0 != (2 & t.rule_index);
this._radioArr[3].isChecked = 0 != (4 & t.rule_index);
this._radioArr[4].isChecked = 0 != (8 & t.rule_index);
};
return e = __decorate([ s ], e);
}(n.FCCreateRoom));
i.default = c;
cc._RF.pop();
}, {
"./FCCreateRoom": "FCCreateRoom"
} ],
FCCreatRoom_GL: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "678f0lughNAC6zxJiM7M4B8", "FCCreatRoom_GL");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(c) {
__extends(e, c);
function e() {
return null !== c && c.apply(this, arguments) || this;
}
e.prototype.addPlay = function() {
c.prototype.addPlay.call(this);
var e = this._roomNode.getChildByName("play"), t = e.getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(t);
var i = e.getChildByName("rule6").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = e.getChildByName("rule7").getComponent(cc.Toggle);
this._radioArr.push(n);
};
e.prototype.produceRules = function() {
var e = c.prototype.produceRules.call(this);
this._radioArr[7].isChecked && (e += 64);
this._radioArr[8].isChecked && (e += 128);
this._radioArr[9].isChecked && (e += 16384);
this._radioArr[15].isChecked && (e += 256);
this._radioArr[16].isChecked && (e += 512);
this._radioArr[17].isChecked && (e += 1024);
this._radioArr[11].isChecked && (e += 2048);
this._radioArr[12].isChecked && (e += 4096);
this._radioArr[13].isChecked && (e += 8192);
return e;
};
e.prototype.revertButton = function(e) {
var t = JSON.parse(e);
c.prototype.revertButton.call(this, e);
this._radioArr[7].isChecked = 0 != (64 & t.rule_index);
this._radioArr[8].isChecked = 0 != (128 & t.rule_index);
this._radioArr[9].isChecked = 0 != (16384 & t.rule_index);
this._radioArr[15].isChecked = 0 != (256 & t.rule_index);
this._radioArr[16].isChecked = 0 != (512 & t.rule_index);
this._radioArr[17].isChecked = 0 != (1024 & t.rule_index);
this._radioArr[11].isChecked = 0 != (2048 & t.rule_index);
this._radioArr[12].isChecked = 0 != (4096 & t.rule_index);
this._radioArr[13].isChecked = 0 != (8192 & t.rule_index);
};
e.prototype.openRoo = function(e, t, i, n, a, s) {
c.prototype.openRoo.call(this, "桂柳麻将", t, i, n, a, s);
};
e.prototype.onBtnxin = function(e) {
this.onBtnSound();
switch (e.checkEvents[0].customEventData) {
case "1":
0 == this._radioArr[15].isChecked && 0 == this._radioArr[16].isChecked && 0 == this._radioArr[17].isChecked && (this._radioArr[15].isChecked = !0);
break;

case "2":
0 == this._radioArr[16].isChecked && 0 == this._radioArr[15].isChecked && 0 == this._radioArr[17].isChecked && (this._radioArr[16].isChecked = !0);
break;

case "3":
0 == this._radioArr[17].isChecked && 0 == this._radioArr[15].isChecked && 0 == this._radioArr[16].isChecked && (this._radioArr[17].isChecked = !0);
}
};
return e = __decorate([ a ], e);
}(e("./FCCreateRoom").FCCreateRoom));
i.default = s;
cc._RF.pop();
}, {
"./FCCreateRoom": "FCCreateRoom"
} ],
FCCreatRoom_HZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e93fcaOyxxOaqbpW6BgHEYw", "FCCreatRoom_HZ");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(c) {
__extends(e, c);
function e() {
return null !== c && c.apply(this, arguments) || this;
}
e.prototype.openRoo = function(e, t, i, n, a, s) {
c.prototype.openRoo.call(this, "红中麻将", t, i, n, a, s);
};
e.prototype.produceRules = function() {
var e = c.prototype.produceRules.call(this);
this._radioArr[7].isChecked && (e += 256);
this._radioArr[8].isChecked && (e += 1 << 22);
this._radioArr[11] && this._radioArr[11].isChecked && (e += 4096);
this._radioArr[12] && this._radioArr[12].isChecked && (e += 8192);
this._radioArr[13] && this._radioArr[13].isChecked && (e += 16384);
this._radioArr[14] && this._radioArr[14].isChecked && (e += 32768);
return e;
};
e.prototype.revertButton = function(e) {
var t = JSON.parse(e);
c.prototype.revertButton.call(this, e);
this._radioArr[7].isChecked = 0 != (256 & t.rule_index);
this._radioArr[8].isChecked = 0 != (t.rule_index & 1 << 22);
this._radioArr[11].isChecked = 0 != (4096 & t.rule_index);
this._radioArr[12].isChecked = 0 != (8192 & t.rule_index);
this._radioArr[13].isChecked = 0 != (16384 & t.rule_index);
this._radioArr[14].isChecked = 0 != (32768 & t.rule_index);
};
return e = __decorate([ a ], e);
}(e("./FCCreateRoom").FCCreateRoom));
i.default = s;
cc._RF.pop();
}, {
"./FCCreateRoom": "FCCreateRoom"
} ],
FCCreatRoom_ZZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d2445wXhF1Dr4jJlGS/yrLW", "FCCreatRoom_ZZ");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(c) {
__extends(e, c);
function e() {
var e = null !== c && c.apply(this, arguments) || this;
e._rule4 = null;
return e;
}
e.prototype.inintView = function() {
c.prototype.inintView.call(this);
var e = this._roomNode.getChildByName("play");
this._rule4 = e.getChildByName("rule4");
};
e.prototype.onBtnRenShu = function(e) {
if (0 < e.checkEvents[0].customEventData) {
this._rule4.active = !1;
this._radioArr[10].isChecked = !1;
} else this._rule4.active = !0;
this.onBtnSound();
};
e.prototype.openRoo = function(e, t, i, n, a, s) {
c.prototype.openRoo.call(this, "转转麻将", t, i, n, a, s);
};
e.prototype.addPlay = function() {
c.prototype.addPlay.call(this);
var e = this._roomNode.getChildByName("play").getChildByName("rule5").getComponent(cc.Toggle);
this._radioArr.push(e);
};
e.prototype.produceRules = function() {
var e = c.prototype.produceRules.call(this);
this._radioArr[7].isChecked && (e += 64);
this._radioArr[8].isChecked && (e += 128);
this._radioArr[9].isChecked && (e += 256);
this._radioArr[10].isChecked && (e += 512);
this._radioArr[11] && this._radioArr[11].isChecked && (e += 4096);
this._radioArr[12] && this._radioArr[12].isChecked && (e += 8192);
this._radioArr[13] && this._radioArr[13].isChecked && (e += 16384);
this._radioArr[15] && this._radioArr[15].isChecked && (e += 1 << 22);
return e;
};
e.prototype.revertButton = function(e) {
var t = JSON.parse(e);
c.prototype.revertButton.call(this, e);
(this._radioArr[6].isChecked = 0 != (32 & t.rule_index)) ? this._rule4.active = !1 : this._rule4.active = !0;
this._radioArr[7].isChecked = 0 != (64 & t.rule_index);
this._radioArr[8].isChecked = 0 != (128 & t.rule_index);
this._radioArr[9].isChecked = 0 != (256 & t.rule_index);
this._radioArr[10].isChecked = 0 != (512 & t.rule_index);
this._radioArr[11].isChecked = 0 != (4096 & t.rule_index);
this._radioArr[12].isChecked = 0 != (8192 & t.rule_index);
this._radioArr[13].isChecked = 0 != (16384 & t.rule_index);
this._radioArr[15].isChecked = 0 != (t.rule_index & 1 << 22);
};
__decorate([ s(cc.Node) ], e.prototype, "_rule4", void 0);
return e = __decorate([ a ], e);
}(e("./FCCreateRoom").FCCreateRoom);
i.default = c;
cc._RF.pop();
}, {
"./FCCreateRoom": "FCCreateRoom"
} ],
FCCreateRoom: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "93fba8CoBJLtL2rIHbiCp+d", "FCCreateRoom");
Object.defineProperty(t, "__esModule", {
value: !0
});
var i = cc._decorator, a = i.ccclass, s = (i.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.inintView();
};
t.prototype.start = function() {
var e = cc.vv.utils.seekNodeByName("btn_ok", this.node).getChildByName("lb_str");
cc.vv.userMgr.isDaiKaiRoom ? e.getComponent(cc.Label).string = "代开房间" : e.getComponent(cc.Label).string = "确定";
var t = cc.sys.localStorage.getItem("conf_" + this.serverCode);
t && this.revertButton(t);
};
t.prototype.inintView = function() {
this._roomNodestr = "CreateRoom/bg_xuanqu/rulePanle/hnMJ";
cc.find("Canvas/CreateRoom/up_group/right_Node"), this.node.getChildByName("left_group");
var e = this.node.getChildByName("CreateRoom");
this._roomNode = cc.find("bg_xuanqu/rulePanle/hnMJ", e);
this.gameType();
this.gamesNumber();
this.peopleNumber();
this.play();
this.addPlay();
this.inintGameCost();
this.initMsgHandler();
this.activityRequest();
};
t.prototype.gameType = function() {
var e = this._roomNode.getChildByName("ruleType"), t = e.getChildByName("rule1"), i = e.getChildByName("rule2"), n = t.getComponent(cc.Toggle);
this._radioArr.push(n);
var a = i.getComponent(cc.Toggle);
this._radioArr.push(a);
var s = t.getChildByName("checkmark");
this._ico.push(s.getChildByName("fangka1"));
this._ico.push(s.getChildByName("fangka2"));
s = i.getChildByName("checkmark");
this._ico.push(s.getChildByName("fangka1"));
this._ico.push(s.getChildByName("fangka2"));
};
t.prototype.gamesNumber = function() {
this._jSBrick = this._roomNode.getChildByName("jushu");
var e = this._jSBrick.getChildByName("rule1"), t = this._jSBrick.getChildByName("rule2"), i = e.getComponent(cc.Toggle);
this._radioArr.push(i);
var n = t.getComponent(cc.Toggle);
this._radioArr.push(n);
this._brickRoomStr.push(e.getChildByName("New Label").getComponent(cc.Label));
this._brickRoomStr.push(e.getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label));
this._brickRoomStr.push(t.getChildByName("New Label").getComponent(cc.Label));
this._brickRoomStr.push(t.getChildByName("checkmark").getChildByName("New Label").getComponent(cc.Label));
};
t.prototype.peopleNumber = function() {
var e = this._roomNode.getChildByName("renshu"), t = e.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(t);
var i = e.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = e.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(n);
};
t.prototype.play = function() {
var e = this._roomNode.getChildByName("play"), t = e.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(t);
var i = e.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = e.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(n);
var a = e.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(a);
};
t.prototype.addPlay = function() {
var e = this._roomNode.getChildByName("addPlay"), t = e.getChildByName("rule1").getComponent(cc.Toggle);
this._radioArr.push(t);
var i = e.getChildByName("rule2").getComponent(cc.Toggle);
this._radioArr.push(i);
var n = e.getChildByName("rule3").getComponent(cc.Toggle);
this._radioArr.push(n);
var a = e.getChildByName("rule4").getComponent(cc.Toggle);
this._radioArr.push(a);
};
t.prototype.inintGameCost = function() {
this._brickRoomStr[0].string = " 8局 (1          )";
this._brickRoomStr[1].string = " 8局 (1          )";
this._brickRoomStr[2].string = "16局 (2          )";
this._brickRoomStr[3].string = "16局 (2          )";
};
t.prototype.onBtnBack = function() {
this.onBtnSound();
cc.vv.UILoader.destroy(this.node);
};
t.prototype.onBtnOK = function() {
this.onBtnSound();
this.createRoom();
};
t.prototype.produceRules = function() {
var e = 0;
this._radioArr[0].isChecked && (e = 1 << 19);
this._radioArr[1].isChecked && (e = 1 << 20);
this._radioArr[2].isChecked && (e += 2);
this._radioArr[3].isChecked && (e += 4);
this._radioArr[4].isChecked && (e += 8);
this._radioArr[5].isChecked && (e += 16);
this._radioArr[6].isChecked && (e += 32);
return e;
};
t.prototype.revertButton = function(e) {
var t = JSON.parse(e);
this._radioArr[0].isChecked = 0 != (t.rule_index & 1 << 19);
this._radioArr[1].isChecked = 0 != (t.rule_index & 1 << 20);
this._radioArr[2].isChecked = 0 != (2 & t.rule_index);
this._radioArr[3].isChecked = 0 != (4 & t.rule_index);
this._radioArr[4].isChecked = 0 != (8 & t.rule_index);
this._radioArr[5].isChecked = 0 != (16 & t.rule_index);
this._radioArr[6].isChecked = 0 != (32 & t.rule_index);
};
t.prototype.openRoo = function(e, t, i, n, a, s) {
var c = {
name: e,
server_code: t,
roomid: i,
t_index: n,
r_index: a,
num: s
};
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.userMgr.daiKaiRoomData = c;
cc.find("Canvas").emit("updateDaiKai");
cc.vv.UILoader.destroy(this.node);
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
};
t.prototype.activityRequest = function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_activity", {
activity_type: 1
});
};
t.prototype.createRoom = function() {
console.log("----------- createRoom -----------");
var e = 0;
e += 1 << this.gameTypeNumber;
var t = this.produceRules();
if (-1 != this.serverCode) {
var i = {
server_code: this.serverCode,
type_index: e,
rule_index: t
};
cc.sys.localStorage.setItem("conf_" + i.server_code, JSON.stringify(i));
}
var n = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
conf: JSON.stringify(i)
};
cc.vv.wc.show("正在创建房间");
1 == cc.vv.userMgr.isDaiKaiRoom ? cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_agent_room", n) : cc.vv.userMgr.isClubRoom ? cc.vv.userMgr.create_union(this.serverCode, e, t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_private_room", n);
};
t.prototype.initMsgHandler = function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_activity", this.onMsgGetActivity.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_agent_room", this.onMsgCreateAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_private_room", this.onMsgCreatePrivateRoom.bind(this));
};
t.prototype.onMsgGetActivity = function(e) {
e = e.detail;
};
t.prototype.onMsgCreateAgentRoom = function(e) {
e = e.detail;
cc.vv.wc.hide();
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.sys.localStorage.getItem("conf_" + this.serverCode), n = JSON.parse(i), a = n.type_index, s = n.rule_index;
console.log("conf:" + n, "r_index:" + s, "t_index:" + a);
this.openRoo("游戏名称", this.serverCode, e.roomid, a, s, 10);
}
};
t.prototype.onMsgCreatePrivateRoom = function(e) {
cc.error(" onMsgCreatePrivateRoom ");
e = e.detail;
cc.log(e);
if (0 !== e.errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.toast.showToast({
txt: t
});
} else {
var i = n("GameNetMgr" + e.server_type);
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
};
t.prototype.removeMsgHandler = function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_activity");
cc.vv.netMgr.hallIEventDispatcher.off("create_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("create_private_room");
};
t.prototype.onDestroy = function() {
this.removeMsgHandler();
};
return t = __decorate([ a ], t);
}(n("./FICreateRoom").FICreateRoom));
t.FCCreateRoom = s;
cc._RF.pop();
}, {
"./FICreateRoom": "FICreateRoom"
} ],
FCDCConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e7c93uu/AlG1olg6OEHi2iL", "FCDCConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./FIMahjongConfig"), a = cc._decorator, s = a.ccclass, c = (a.property, 
function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.UIShow = "game/3DMahjong/dczb/show";
e.GNUIReplay = "game/3DMahjong/dczb/DCZB_replay";
return e;
}
e.prototype.NetBase = function(e) {
this.netBase = e;
var t = this;
cc.vv.Event.on("mj_cancel_action_push", function(e) {
t.onCancel(e);
});
cc.vv.Event.on("mj_pick_gang_push", function(e) {
t.pickGang(e.detail);
});
cc.vv.Event.on("mj_hu_push", function(e) {
t.onHuPush(e.detail);
});
cc.vv.Event.on("mj_flower_push", function(e) {
t.showflower(e.detail);
});
};
e.prototype.onCancel = function(e) {
this.netBase.GAMEBase.out();
};
e.prototype.onHuPush = function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.hu_user_id), i = {
type: -1,
seatIndex: -1
};
i.type = 5;
i.seatIndex = t;
this.netBase.GAMEBase.operation(i);
};
e.prototype.pickGang = function(e) {
this.netBase.GAMEBase.holds(e);
};
e.prototype.showflower = function(e) {
this.netBase.UIBase.showflower(e);
};
e.prototype.gameInitView = function(e) {
cc.loader.loadRes("game/3DMahjong/dczb/dc_game_over", function(e, t) {
var i = cc.instantiate(t);
cc.vv.Event.addChild(i);
});
cc.loader.loadRes("game/3DMahjong/dczb/dc_game_result", function(e, t) {
var i = cc.instantiate(t);
cc.vv.Event.addChild(i);
});
return !0;
};
e.prototype.synUIData = function() {
var e = cc.vv.gameNetMgr.mjSyncData;
if (e.god_wealth && e.light_card) {
var t = {};
t.bao = e.god_wealth;
t.gang = e.light_card;
this.netBase.UIBase.showflower(t);
}
};
e.prototype.clear = function() {};
e.prototype.Action_setValueAndColor = function(e, t) {
var i = t[0], n = t[1];
if (1 == i) {
var a = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_img_1.spriteFrame = a;
e.mj_img_2.spriteFrame = a;
e.mj_img_3.spriteFrame = a;
} else if (2 == i || 3 == i) {
a = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_img_1.spriteFrame = a;
e.mj_img_2.spriteFrame = a;
e.mj_img_3.spriteFrame = a;
e.mj_img_4.spriteFrame = a;
e.node_visible.active = !0;
} else if (4 == i) {
e.mj_img_4.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_bg_wall[0].node.active = !0;
e.mj_bg_wall[1].node.active = !0;
e.mj_bg_wall[2].node.active = !0;
e.node_visible.active = !0;
}
};
e.prototype.playSFXfun = function(e) {
return e;
};
e.prototype.getMJID = function(e) {
var t = {
type: -1,
num: -1
};
if (0 < e && e < 10) {
t.type = 0;
t.num = e;
return t;
}
if (10 < e && e < 20) {
t.type = 1;
t.num = e - 10;
return t;
}
if (20 < e && e < 30) {
t.type = 2;
t.num = e - 20;
return t;
}
if (30 < e && e < 40) {
t.type = 3;
t.num = e - 30;
return t;
}
if (40 < e && e < 50) {
t.type = 4;
t.num = e - 40;
return t;
}
};
e.prototype.holdsToPush = function(e, t) {
for (var i = cc.vv.gameNetMgr.gameOverData.end_seats_data, n = cc.vv.gameNetMgr.seats.length, a = 0; a < n; a++) t.updateHoldsToPush(a, i[a].holds);
};
e.prototype.clearNode = function(e) {
e.clearNode();
};
e.prototype.setToPushSprite = function(e) {
e.setICON();
};
e.prototype.setCardSprite = function(e, t, i, n) {
var a = t.getChildByName("item").getComponent("Hunan_Item");
a.clearNode();
a.setHandValueAndColor(i);
e.onMJtprefabEvent(t);
t.active = !0;
a.setICON();
};
e.prototype.holdsSort = function(e, t) {
var i = [], n = {}, a = -1, s = [];
(i = i.concat(t)).length % 3 == 2 && (a = i.pop());
i = e.simpleSort(i);
if (-1 != a) {
s.push(a);
i = s.concat(i);
n.start = -1;
} else n.start = 0;
n.holds = i;
return n;
};
e.prototype.simpleSort = function(e) {
var t = cc.vv.gameNetMgr.mjSyncData, i = -1, n = -1;
if (t) {
n = null == t.god_wealth || null == t.god_wealth ? -1 : t.god_wealth;
i = null == t.light_card || null == t.light_card ? -1 : t.light_card;
}
return e = e.sort(function(e, t) {
return e != n && e != i || t == n ? t != n && t != i || e == n ? t - e : -1 : 1;
});
};
e.prototype.pushOut = function(e, t) {
var i = JSON.parse(cc.vv.msgTemp_mj.CS_out_card);
i.out_card = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("mj_out", i);
};
e.prototype.updateSeatFlowers = function(e, t, i) {
for (var n = cc.vv.gameNetMgr.seats[i], a = cc.vv.gameNetMgr.getLocalIndex(n.seatindex), s = cc.vv.gameNetMgr.mjSyncData, c = s.god_wealth, r = s.light_card, o = 0, h = 0, l = 0; l < n.flower_items.length; l++) {
var d = n.flower_items[l];
c == d && o++;
r == d && h++;
}
if (0 < o) {
e.huaPType = t.bao;
e.getHuapNode(e.huaPType, a, o);
}
if (0 < h) {
e.huaPType = t.gang;
e.getHuapNode(e.huaPType, a, h);
}
};
e.prototype.syncOperation = function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; i++) {
var n = t[i];
if (n.userid == cc.vv.userMgr.userId) {
var a = {};
a.action_mask = n.action_mask;
this.netBase.GAMEBase.updateAction(a);
}
}
};
e.prototype.showUpdateAction = function(e, t) {
if (t.action_mask && !(t.action_mask.length < 1)) {
t.action_mask = t.action_mask.sort(function(e, t) {
return e.action - t.action;
});
for (var i = 0; i < t.action_mask.length; i++) this.updateAction(e, t.action_mask[i]);
}
};
e.prototype.updateAction = function(n, a) {
var s = this;
1 == a.action ? cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_guo", function(e, t) {
var i = cc.instantiate(t);
i.getComponent("FCOperateBtn").card = a.cards[0];
n.btnNodeAdd(i);
s.show_peng_btn(n, a);
}) : this.show_peng_btn(n, a);
return !0;
};
e.prototype.show_peng_btn = function(n, a) {
var s = this;
2 == a.action ? cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_peng", function(e, t) {
var i = cc.instantiate(t);
i.getComponent("FCOperateBtn").card = a.cards[0];
n.btnNodeAdd(i);
s.show_gang_btn(n, a);
}) : this.show_gang_btn(n, a);
};
e.prototype.show_gang_btn = function(n, a) {
var s = this;
3 == a.action ? cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_gang", function(e, t) {
var i = cc.instantiate(t);
i.getComponent("FCOperateBtn").card = a.cards[0];
n.btnNodeAdd(i);
s.show_hu_btn(n, a);
}) : this.show_hu_btn(n, a);
};
e.prototype.show_hu_btn = function(n, a) {
4 == a.action && cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_hu", function(e, t) {
var i = cc.instantiate(t);
i.getComponent("FCOperateBtn").card = a.cards[0];
n.btnNodeAdd(i);
});
};
e.prototype.onActionClick = function(e, t) {
var i = 0, n = t.card;
"btn_gang" == t.btnName ? i = 3 : "btn_guo" == t.btnName ? i = 1 : "btn_peng" == t.btnName ? i = 2 : "btn_hu" == t.btnName && (i = 4);
var a = JSON.parse(cc.vv.msgTemp_mj.SC_card_type_action);
a.action = i;
a.action_card = n;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("mj_card_type_action", a);
this.netBase.GAMEBase.out();
};
e.prototype.mjTxPush = function(e, t) {
var s = t.type, c = t.seatIndex, r = this, o = "";
console.log("-----------特效：" + s);
var i = cc.vv.gameNetMgr.getLocalIndex(c), h = e.effNodeArray[i];
h.removeAllChildren();
cc.loader.loadRes("game/3DMahjong/prefabs/Game/TX_prefabs", function(e, t) {
var i = cc.instantiate(t);
h.addChild(i);
if (1 == s) {
o = "peng";
i.getComponent(cc.Animation).play("basic_peng");
} else if (2 == s || 3 == s || 4 == s) {
o = "gang";
i.getComponent(cc.Animation).play("basic_gang");
} else if (5 == s) {
o = "zimo";
i.getComponent(cc.Animation).play("basic_zimo");
}
if ("" != o) {
var n = cc.vv.gameNetMgr.seats[c], a = "";
a = 1 == r.getSex(n.userid) ? "resources/hall/sounds/mj/" + o + ".mp3" : "resources/hall/sounds/mj/g_" + o + ".mp3";
cc.vv.audioMgr.playSFX(a);
}
});
};
e.prototype.over = function(e) {};
return e = __decorate([ s ], e);
}(n.FIMahjongConfig));
i.FCDCConfig = c;
cc._RF.pop();
}, {
"./FIMahjongConfig": "FIMahjongConfig"
} ],
FCEffects_List: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c30fbUUkrtI3bagbDYeTOtK", "FCEffects_List");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.TxAtlas = null;
e.Animation = null;
e.childrenList = [];
e._srtUrl = null;
return e;
}
e.prototype.SetPosition = function(e) {
this.node.setPosition(e);
};
e.prototype.setShowSprite = function(e) {
this._srtUrl = e;
this.childrenList[0].spriteFrame = this.TxAtlas.getSpriteFrame(this._srtUrl);
};
e.prototype.onPlay = function() {
null != this._srtUrl && this.Animation.play();
};
e.prototype.finish = function(e) {
console.log("特效吼道：曾经WO来过 播放的特效名字是:" + this._srtUrl);
this.node.active = e;
};
__decorate([ s(cc.SpriteAtlas) ], e.prototype, "TxAtlas", void 0);
__decorate([ s(cc.Animation) ], e.prototype, "Animation", void 0);
__decorate([ s([ cc.Sprite ]) ], e.prototype, "childrenList", void 0);
__decorate([ s ], e.prototype, "_srtUrl", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCEffect: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "02ed9ijtAdEsoAh8TGrsVOC", "FCEffect");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onDestroyEffect = function() {
console.log("onDestroyEffect");
this.node.destroy();
};
return t = __decorate([ a ], t);
}(cc.Component));
i.FCEffect = s;
cc._RF.pop();
}, {} ],
FCGLConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9cbbf5EiYpDyKs3edmiDu3H", "FCGLConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(i) {
__extends(e, i);
function e() {
var e = null !== i && i.apply(this, arguments) || this;
e.huSeatIndex = -1;
return e;
}
e.prototype.NetBase = function(e) {
var t = this;
cc.vv.Event.on("mj_xing_push", function(e) {
t.fanXing(e.detail);
});
};
e.prototype.gameInitView = function(e) {};
e.prototype.synUIData = function() {};
e.prototype.syncOperation = function() {};
e.prototype.clear = function() {
this.huSeatIndex = -1;
};
e.prototype.fanXing = function(n) {
var a = this, s = n.xing;
cc.vv.gameNetMgr.gameBirds = [];
cc.vv.Event.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
for (var e = 0; e < s.length; e++) {
var t = s[e], i = {};
i.id = t;
i.is = !0;
i.hit = n.hit_num;
i.huIndex = a.huSeatIndex;
cc.vv.gameNetMgr.gameBirds.push(i);
}
})));
cc.vv.Event.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
cc.loader.loadRes("game/3DMahjong/glmj/game_fanXing", function(e, t) {
var i = cc.instantiate(t);
cc.vv.Event.addChild(i);
});
})));
};
e.prototype.operation = function(e, t) {
i.prototype.operation.call(this, e, t);
this.analysisOperation(t);
};
e.prototype.analysisOperation = function(e) {
console.log("analysisOperation");
8 == e.op_code && (this.huSeatIndex = e.seat_index);
};
e.prototype.setCardSprite = function(e, t, i, n) {
var a = cc.vv.gameNetMgr.seats[n], s = t.getChildByName("item").getComponent("Hunan_Item");
s.setHandValueAndColor(i);
t.active = !0;
if (!cc.vv.gameNetMgr.isReplay) if (0 < a.keep.length) if (i == a.keep[0]) s.setmsk(!0); else {
s.setmsk(!1);
e.onMJtprefabEvent(t);
} else {
s.setmsk(!1);
e.onMJtprefabEvent(t);
}
};
return e;
}(e("./FIMahjongConfig").FIMahjongConfig);
i.FCGLConfig = n;
cc._RF.pop();
}, {
"./FIMahjongConfig": "FIMahjongConfig"
} ],
FCGameBase: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fd662yukaNDL7ialw5ru3T0", "FCGameBase");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./base/baseOperationMgr"), a = e("./base/baseHoldsMgr"), s = e("./base/baseFoldsMgr"), c = e("./base/baseActionMgr"), r = e("./base/baseEffectMgr"), o = e("./base/baseWallMgr"), h = cc._decorator, l = h.ccclass, d = (h.property, 
function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.gameObjet = null;
e.gameNode = null;
e.wallMgr = null;
e.holdsMgr = null;
e.foldsMgr = null;
e.actionMgr = null;
e.effectMgr = null;
e.operMgr = null;
return e;
}
e.prototype.Load = function(e) {
e.active = !1;
this.gameNode = e;
this.wallMgr = new o.default();
this.holdsMgr = new a.default();
this.foldsMgr = new s.default();
this.actionMgr = new c.default();
this.effectMgr = new r.default();
this.operMgr = new n.default();
this.initView(this.gameNode);
};
e.prototype.initView = function(e) {
this.holdsMgr.initView(e);
this.foldsMgr.initView(e);
this.actionMgr.initView(e);
this.effectMgr.initView(e);
this.operMgr.initView(e);
this.gameObjet = cc.vv.MJConfig.gameInitView(this.gameNode);
};
e.prototype.begin = function(e) {
this.wallMgr.begin(this.gameNode, e);
};
e.prototype.syncData = function() {
this.wallMgr.syncData();
cc.vv.gameNetMgr.op && this.updateAction(cc.vv.gameNetMgr.op);
this.syncUpdate(cc.vv.gameNetMgr.seats);
cc.vv.Event.emit("msg_clock_start");
cc.vv.MJConfig.syncOperation();
};
e.prototype.syncUpdate = function(e) {
if (e) for (var t = 0; t < e.length; t++) {
var i = e[t];
i.seatIndex = i.seatindex;
0 < i.holds.length && this.holds(i);
0 < i.folds.length && this.foldsMgr.updateShowFoldsSync(i);
0 < i.items.length && this.items(i);
}
};
e.prototype.holds = function(e) {
this.holdsMgr.updateShowHolds(e);
};
e.prototype.folds = function(e) {
this.foldsMgr.updateShowFolds(e);
};
e.prototype.items = function(e) {
this.actionMgr.updateShowAction(e);
};
e.prototype.out = function(e) {
this.operMgr.clear();
};
e.prototype.allowOut = function(e) {
this.holdsMgr.allowOutCard(e.state);
};
e.prototype.updateAction = function(e) {
this.operMgr.updateAction(e);
};
e.prototype.down = function(e) {
this.holdsMgr.HoldsToPush(e);
};
e.prototype.useSimple = function(e) {
this.holdsMgr.setUseSimpleSort();
};
e.prototype.throw = function(e) {
this.wallMgr.throw(this.holdsMgr, this.gameNode, e);
};
e.prototype.wall = function(e) {
this.wallMgr.wall(e);
};
e.prototype.operation = function(e) {
this.operMgr.operation(e);
this.effectMgr.operation(e);
};
e.prototype.opReplay = function(e) {
this.effectMgr.opReplay(e);
};
e.prototype.uerOperation = function(e) {
JSON.parse(cc.vv.msgTemp_Hunan.CS_UserOperation);
console.log("send user_operation :");
console.log(e);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("user_operation", e);
this.operMgr.uerOperation(e);
};
e.prototype.onBtn = function(e) {
this.operMgr.onBtn(e);
};
e.prototype.birds = function(e) {
cc.vv.MJConfig.birds(e);
};
e.prototype.xiaoHu = function(e) {
this.down(e);
this.effectMgr.xiaoHu(e);
};
e.prototype.midHu = function(e) {
this.effectMgr.midHu(e);
};
e.prototype.showSea = function(e) {
this.operMgr.showSea(e);
};
e.prototype.tgAuto = function(e) {
this.holdsMgr.tgAuto(e);
this.operMgr.tgAuto(e);
};
e.prototype.flower = function(e) {
this.effectMgr.flower(e);
};
e.prototype.clear = function(e) {
this.foldsMgr.clear();
this.holdsMgr.clear();
this.actionMgr.clear();
this.wallMgr.clear();
this.operMgr.clear();
cc.vv.MJConfig.clear();
};
e.prototype.over = function(e) {
cc.vv.MJConfig.over();
};
return e = __decorate([ l ], e);
}(cc.Component));
i.default = d;
cc._RF.pop();
}, {
"./base/baseActionMgr": "baseActionMgr",
"./base/baseEffectMgr": "baseEffectMgr",
"./base/baseFoldsMgr": "baseFoldsMgr",
"./base/baseHoldsMgr": "baseHoldsMgr",
"./base/baseOperationMgr": "baseOperationMgr",
"./base/baseWallMgr": "baseWallMgr"
} ],
FCGameMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "552c64GKZlMLZlAlhIS0Gtn", "FCGameMgr");
cc._RF.pop();
}, {} ],
FCGang: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f731f6gLRZAM7IvP+OZEutp", "FCGang");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.action = -1;
e.MJ_id = -1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_END, function() {
if (-1 == t.MJ_id) return console.log("杠失败麻将ID等于-1");
var e = {
type: -1,
card: -1
};
e.type = t.action;
e.card = t.MJ_id;
cc.vv.Event.emit("mj_opGang_push", e);
});
};
e.prototype.setHandValueAndColor = function(e) {
this.MJ_id = e;
var t = cc.vv.mahjongmgr.getHandSpriteByID(e);
this.node.getChildByName("item").getComponent(cc.Sprite).spriteFrame = t;
};
e.prototype.setHandAction = function(e) {
this.action = e;
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCHZConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1f66aDfuRZNi6pRbQ3/tkz4", "FCHZConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(a) {
__extends(e, a);
function e() {
return null !== a && a.apply(this, arguments) || this;
}
e.prototype.NetBase = function() {};
e.prototype.gameInitView = function() {};
e.prototype.synUIData = function(e) {};
e.prototype.syncOperation = function() {};
e.prototype.clear = function() {};
e.prototype.setCardSprite = function(e, t, i, n) {
t.getChildByName("item").getComponent("Hunan_Item").setHandValueAndColor(i);
53 != i && e.onMJtprefabEvent(t);
t.active = !0;
};
e.prototype.simpleSort = function(e) {
for (var t = e.slice(0), i = [], n = 0; n < t.length; n++) if (53 == t[n]) {
i.push(t[n]);
t.splice(n, 1);
n = -1;
}
t = a.prototype.simpleSort.call(this, t);
0 < i.length && (t = t.concat(i));
return t;
};
e.prototype.isHitBird = function(e, t) {
return !!cc.vv.mahjongUtils.has_rule(cc.vv.gameNetMgr.conf.rule_index, 15) || cc.vv.mahjongUtils.GetHZIsBird(e, t);
};
return e;
}(e("./FIMahjongConfig").FIMahjongConfig);
i.FCHZConfig = n;
cc._RF.pop();
}, {
"./FIMahjongConfig": "FIMahjongConfig"
} ],
FCInfobar: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bb4f1DjDclMSZOVEntP9P7y", "FCInfobar");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.time = null;
e.power = null;
e.roomText = null;
e.gamecount = null;
e.Date = null;
return e;
}
e.prototype.initView = function(e) {
e.active = !0;
this.power = e.getChildByName("power");
this.time = e.getChildByName("time").getComponent(cc.Label);
this.roomText = e.getChildByName("room_txt").getComponent(cc.RichText);
this.gamecount = e.getChildByName("lb_gamecount").getComponent(cc.Label);
this.setRoomID(cc.vv.gameNetMgr.roomId);
this.setGameCount();
this.updateBaterry();
this.Date = new Date();
};
e.prototype.beign = function() {
this.updateBaterry();
};
e.prototype.updateBaterry = function() {
var e = cc.vv.anysdkMgr.getBatteryLevel(), i = this, t = 0;
0 < e && (t = 5);
20 < e && (t = 4);
40 < e && (t = 3);
60 < e && (t = 2);
80 < e && (t = 1);
90 < e && (t = 0);
cc.loader.loadRes("" + cc.vv.MJConfig.UIBatteryicon + t, cc.SpriteFrame, function(e, t) {
i.power.getComponent(cc.Sprite).spriteFrame = t;
});
};
e.prototype.setRoomID = function(e) {
this.roomText.string = "<color=#FFFFFF>房号:</c><color=#FCFF00>" + e + "</color>";
};
e.prototype.setGameCount = function() {
this.gamecount.string = "局数:" + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
};
e.prototype.update = function(e) {
var t = Math.floor(Date.now() / 1e3 / 60);
if (this.lastMinute != t) {
this.lastMinute = t;
var i = new Date(), n = i.getHours(), a = n < 10 ? "0" + n : n, s = i.getMinutes(), c = s < 10 ? "0" + s : s;
this.time.string && (this.time.string = a + ":" + c);
}
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCJumping: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "da1839tfRBOjod5vS+D0yvm", "FCJumping");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.JumpNode = null;
e.Jump = null;
return e;
}
e.prototype.initView = function(e) {
this.JumpNode = e;
this.Jump = e.getChildByName("Jump");
this.Jump.active = !1;
};
e.prototype.setJumpingPosition = function(e) {
var t = this;
0 == this.Jump.active && this.setJumpActive(!0);
var i = cc.vv.Event.convertToNodeSpace(cc.v2(e.x, e.y));
this.JumpNode.runAction(cc.moveTo(.1, i));
if (!this.Jump.active) {
this.JumpNode.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
t.setJumpActive(!0);
})));
}
};
e.prototype.setJumpActive = function(e) {
this.Jump.active = e;
};
return e = __decorate([ a ], e);
}(cc.Component));
i.FCJumping = s;
cc._RF.pop();
}, {} ],
FCMagic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3cff9mUtI5Gyp/Ke9miv6Em", "FCMagic");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.runTime = 1;
e._startPos = null;
e._endPos = null;
e.audioName = null;
e.iocName = "";
return e;
}
e.prototype.goto = function(e, t) {
e.y -= 20;
this._startPos = e;
t.y -= 20;
this._endPos = t;
this.setStartPos(this._startPos);
};
e.prototype.setMp3 = function(e) {
switch (this.audioName = e) {
case "damuzhi":
this.iocName = "strong";
break;

case "poshui":
this.iocName = "coldWater";
break;

case "diuzhadan":
this.iocName = "bomb";
break;

case "songhua":
this.iocName = "flower";
break;

case "feiwen":
this.iocName = "kiss";
break;

case "diujidan":
this.iocName = "egg";
}
this.setSprite();
};
e.prototype.setRunTime = function(e) {
this.runTime = e;
};
e.prototype.Run = function() {
this.audioName || console.log("没有找到合适的音源");
var t = this;
this.node.active = !0;
this.node.runAction(cc.sequence(cc.moveTo(this.runTime, this._endPos), cc.callFunc(function(e) {
cc.vv.audioMgr.playSFX("" + cc.vv.MJConfig.UIMagicSounds + t.audioName + ".mp3");
})));
this.node.runAction(cc.sequence(cc.delayTime(this.runTime), cc.callFunc(function(e) {
t.node.getChildByName("anim").getComponent(cc.Animation).play(t.audioName);
})));
this.node.runAction(cc.sequence(cc.delayTime(this.runTime + 1), cc.callFunc(function(e) {
t.node.getChildByName("anim").getComponent(cc.Sprite).spriteFrame = null;
t.node.destroy();
})));
};
e.prototype.setStartPos = function(e) {
this.node.setPosition(e);
};
e.prototype.setSprite = function() {
var t = this;
cc.vv.UILoader.loadRes("" + cc.vv.MJConfig.UIMagicIcon + this.iocName, cc.SpriteFrame, function(e) {
cc.vv.UILoader.replaceSpriteTexture(t.node, e);
});
};
return e = __decorate([ a ], e);
}(cc.Component));
i.FCMagic = s;
cc._RF.pop();
}, {} ],
FCMahJong: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "22f116XpGJAfoaXo4Xtzb4T", "FCMahJong");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.item = null;
e.jin = null;
e.cai = null;
e.bao = null;
e.gang = null;
e.mask = null;
e.green = null;
return e;
}
e.prototype.start = function() {
this.initView();
};
e.prototype.initView = function() {
this.jin || (this.jin.active = !1);
this.cai || (this.cai.active = !1);
this.bao || (this.bao.active = !1);
this.gang || (this.gang.active = !1);
this.mask || (this.mask.active = !1);
this.green || (this.green.active = !1);
};
e.prototype.setJin = function(e) {
this.jin.active = e;
};
e.prototype.setCai = function(e) {
this.cai.active = e;
};
e.prototype.setBao = function(e) {
this.bao.active = e;
};
e.prototype.setGang = function(e) {
this.gang.active = e;
};
e.prototype.setMask = function(e) {
this.mask.active = e;
};
e.prototype.setGreen = function(e) {
this.green.active = e;
};
e.prototype.setItem = function(e) {
var t = this.item.getComponent(cc.Sprite);
t.spriteFrame;
t.spriteFrame = e;
};
__decorate([ s(cc.Node) ], e.prototype, "item", void 0);
__decorate([ s(cc.Node) ], e.prototype, "jin", void 0);
__decorate([ s(cc.Node) ], e.prototype, "cai", void 0);
__decorate([ s(cc.Node) ], e.prototype, "bao", void 0);
__decorate([ s(cc.Node) ], e.prototype, "gang", void 0);
__decorate([ s(cc.Node) ], e.prototype, "mask", void 0);
__decorate([ s(cc.Node) ], e.prototype, "green", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCMahjongMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dc6f9KKp61Mx7iCgRFRujOO", "FCMahjongMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.mj_holds_atlas = null;
return e;
}
e.prototype.onLoad = function() {
cc.vv && (cc.vv.mahjongmgr = this);
};
e.prototype.GetMJID = function(e) {
var t = cc.vv.MJConfig.getMJID(e), i = "";
switch (t.type) {
case 0:
i = "0_" + t.num;
break;

case 1:
i = "2_" + t.num;
break;

case 2:
i = "1_" + t.num;
break;

case 3:
i = "3_" + t.num;
break;

case 4:
i = "4_" + t.num;
}
return i;
};
e.prototype.getHandSpriteByID = function(e) {
var t = "hand_" + this.GetMJID(e);
return this.mj_holds_atlas.getSpriteFrame(t);
};
e.prototype.getOutSpriteByID = function(e) {
return this.getHandSpriteByID(e);
};
e.prototype.getPengSpriteByID = function(e) {
return this.getHandSpriteByID(e);
};
__decorate([ s(cc.SpriteAtlas) ], e.prototype, "mj_holds_atlas", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCMahjongUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "96b8b5WO3RGOJLxWoXKI5Cy", "FCMahjongUtils");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function() {
function e() {}
e.prototype.index = function(e) {
return 9 * ((240 & e) >> 4) + (15 & e) - 1;
};
e.prototype.index_value = function(e) {
return 15 & (e / 9 << 4 | e % 9 + 1);
};
e.prototype.index_type = function(e) {
return (240 & (e / 9 << 4 | e % 9 + 1)) >> 4;
};
e.prototype.has_rule = function(e, t) {
return this.mj_rule(e, t);
};
e.prototype.mj_rule = function(e, t) {
return 0 != (e & 1 << t);
};
e.prototype.Decs = function(e, t) {
var i = "";
switch (e) {
case 10003:
i = this.changShaDecs(t);
break;

case 10006:
i = this.zhuanZhuanDecs(t);
break;

case 10007:
i = this.hongZhongDecs(t);
break;

case 10009:
i = this.guiLiuDecs(t);
}
return i;
};
e.prototype.huGetIsBird = function(e, t, i, n, a, s) {
return (e == t || e == i) && (1 == s || 5 == s || 9 == s || (a[1].userid == i ? 2 == s || 6 == s : a[2].userid == i ? 3 == s || 7 == s : a[3].userid == i ? 4 == s || 8 == s : void 0));
};
e.prototype.ziMoGetIsBird = function(e, t, i) {
return e[1].userid == i ? 2 == t || 6 == t : e[2].userid == i ? 3 == t || 7 == t : e[3].userid == i ? 4 == t || 8 == t : void 0;
};
e.prototype.changShaDecs = function(e) {
var t = "";
this.mj_rule(e, 2) && (t += "碰碰胡 ");
this.mj_rule(e, 3) && (t += "将将胡 ");
this.mj_rule(e, 4) && (t += "清一色 ");
this.mj_rule(e, 5) && (t += "海底捞 ");
this.mj_rule(e, 6) && (t += "海底捞 ");
this.mj_rule(e, 7) && (t += "七小对 ");
this.mj_rule(e, 8) && (t += "豪华七小对 ");
this.mj_rule(e, 9) && (t += "杠上开花 ");
this.mj_rule(e, 10) && (t += "抢杠胡 ");
this.mj_rule(e, 11) && (t += "杠上炮 ");
this.mj_rule(e, 12) && (t += "全求人 ");
this.mj_rule(e, 13) && (t += "大四喜 ");
this.mj_rule(e, 14) && (t += "板板胡 ");
this.mj_rule(e, 15) && (t += "缺一色 ");
this.mj_rule(e, 16) && (t += "六六顺 ");
this.mj_rule(e, 19) && (t += "三同 ");
this.mj_rule(e, 20) && (t += "一枝花 ");
this.mj_rule(e, 21) && (t += "金童玉女 ");
this.mj_rule(e, 22) && (t += "步步高 ");
this.mj_rule(e, 23) && (t += "中途大四喜 ");
this.mj_rule(e, 24) && (t += "中途六六顺 ");
return t;
};
e.prototype.GetZZIsBird = function(e, t) {
return e < 45 && (1 == t || 5 == t || 9 == t);
};
e.prototype.zhuanZhuanDecs = function(e) {
return this.changShaDecs(e);
};
e.prototype.GetHZIsBird = function(e, t) {
return 53 == e || (1 == t || 5 == t || 9 == t) && e < 45;
};
e.prototype.hongZhongDecs = function(e) {
return this.changShaDecs(e);
};
e.prototype.guiLiuDecs = function(e) {
var t = "";
this.mj_rule(e, 2) && (t += "烂牌 ");
this.mj_rule(e, 3) && (t += "将将胡 ");
this.mj_rule(e, 4) && (t += "清一色 ");
this.mj_rule(e, 5) && (t += "海底捞 ");
this.mj_rule(e, 6) && (t += "海底捞 ");
this.mj_rule(e, 7) && (t += "七小对 ");
this.mj_rule(e, 8) && (t += "豪华七小对 ");
this.mj_rule(e, 9) && (t += "杠上开花 ");
this.mj_rule(e, 10) && (t += "抢杠胡 ");
this.mj_rule(e, 11) && (t += "杠上炮 ");
this.mj_rule(e, 12) && (t += "全求人 ");
this.mj_rule(e, 13) && (t += "大四喜 ");
this.mj_rule(e, 14) && (t += "板板胡 ");
this.mj_rule(e, 15) && (t += "缺一色 ");
this.mj_rule(e, 16) && (t += "六六顺 ");
return t;
};
return e = __decorate([ a ], e);
}());
i.FCMahjongUtils = s;
cc._RF.pop();
}, {} ],
FCMore: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6bcacGSP9VM1YfMN3V9IqsI", "FCMore");
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./FCSettings"), s = e("./FCWanFa"), c = e("./FCAlert"), n = cc._decorator, r = n.ccclass, o = n.property, h = function(t) {
__extends(e, t);
function e() {
var e = t.call(this) || this;
e.btnBg = null;
e.btnWanFa = null;
e.btnHuanFu = null;
e.btnSheZhi = null;
e.btnJieSan = null;
e.btnSqjsfj = null;
e.btnTuiChu = null;
e.btnLeiDa = null;
return e;
}
(i = e).getInstance = function(n) {
if (!this.instance) {
this.instance = new i();
cc.loader.loadRes(cc.vv.MJConfig.UIMorePanel, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
}
return this.instance;
};
e.prototype.onLoad = function() {
var e = this, t = 0 == cc.vv.gameNetMgr.numOfGames;
this.btnSqjsfj.active = !t;
this.btnTuiChu.active = !cc.vv.gameNetMgr.isOwner() && t;
this.btnJieSan.active = cc.vv.gameNetMgr.isOwner() && t;
var n = this;
this.btnWanFa.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
s.default.getInstance(n.node.parent);
});
this.btnSheZhi.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
a.default.getInstance(n.node.parent);
});
this.btnJieSan.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
c.default.getInstance(n.node.parent);
});
this.btnSqjsfj.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.isReplay || cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dissolve_request");
});
this.btnTuiChu.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.userMgr.isHighDefend = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("exit");
});
this.btnLeiDa.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.isReplay || cc.loader.loadRes(cc.vv.MJConfig.UIRadar, function(e, t) {
var i = cc.instantiate(t);
n.node.parent.addChild(i);
});
});
this.btnBg.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
e.node.destroy();
i.instance = null;
});
};
e.prototype.onDestroy = function() {
i.instance = null;
};
var i;
e.instance = null;
__decorate([ o(cc.Node) ], e.prototype, "btnBg", void 0);
__decorate([ o(cc.Node) ], e.prototype, "btnWanFa", void 0);
__decorate([ o(cc.Node) ], e.prototype, "btnHuanFu", void 0);
__decorate([ o(cc.Node) ], e.prototype, "btnSheZhi", void 0);
__decorate([ o(cc.Node) ], e.prototype, "btnJieSan", void 0);
__decorate([ o(cc.Node) ], e.prototype, "btnSqjsfj", void 0);
__decorate([ o(cc.Node) ], e.prototype, "btnTuiChu", void 0);
__decorate([ o(cc.Node) ], e.prototype, "btnLeiDa", void 0);
return e = i = __decorate([ r ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"./FCAlert": "FCAlert",
"./FCSettings": "FCSettings",
"./FCWanFa": "FCWanFa"
} ],
FCNetBase: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ca7eeX7VbJEiajVcmcEz4Q/", "FCNetBase");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.className = "FCNetBase";
e.playWall = !1;
e.UINode = null;
e.GAMENode = null;
e.UIBase = null;
e.GAMEBase = null;
return e;
}
e.prototype.Load = function(e, t, i, n) {
var a = this;
this.UIBase = i;
this.GAMEBase = n;
this.UINode = e;
this.GAMENode = t;
cc.vv.Event.on("mj_beign_push", function(e) {
a.begin(e.detail);
});
cc.vv.Event.on("mj_turn_push", function(e) {
a.turn(e);
});
cc.vv.Event.on("mj_holds_push", function(e) {
a.holds(e.detail);
});
cc.vv.Event.on("mj_folds_push", function(e) {
a.folds(e.detail);
});
cc.vv.Event.on("mj_items_push", function(e) {
a.items(e.detail);
});
cc.vv.Event.on("mj_out_push", function(e) {
a.out(e.detail);
});
cc.vv.Event.on("mj_allow_out_push", function(e) {
a.allowOut(e.detail);
});
cc.vv.Event.on("mj_action_push", function(e) {
a.updateAction(e.detail);
});
cc.vv.Event.on("mj_down_push", function(e) {
a.down(e.detail);
});
cc.vv.Event.on("mj_holds_simple_push", function(e) {
a.useSimple(e.detail);
});
cc.vv.Event.on("mj_throw_push", function(e) {
a.throw(e.detail);
});
cc.vv.Event.on("mj_wall_after_push", function(e) {
a.wallAfter(e.detail);
});
cc.vv.Event.on("mj_wall_push", function(e) {
a.wall(e.detail);
});
cc.vv.Event.on("mj_operation_push", function(e) {
a.operation(e.detail);
});
cc.vv.Event.on("mj_uerOperation_push", function(e) {
a.uerOperation(e.detail);
});
cc.vv.Event.on("mj_birds_push", function(e) {
a.birds(e.detail);
});
cc.vv.Event.on("mj_over_push", function(e) {
a.over(e.detail);
});
cc.vv.Event.on("mj_reset_push", function(e) {
a.reset(e.detail);
});
cc.vv.Event.on("mj_result_push", function(e) {
a.result(e.detail);
});
cc.vv.Event.on("mj_onBtn_push", function(e) {
a.onBtn(e.detail);
});
cc.vv.Event.on("mj_opGang_push", function(e) {
a.gang(e.detail);
});
cc.vv.Event.on("mj_TgAuto_push", function(e) {
a.tgAuto(e.detail);
});
cc.vv.Event.on("game_num", function(e) {
a.gameNum(e.detail);
});
cc.vv.Event.on("new_user", function(e) {
a.newUser(e.detail);
});
cc.vv.Event.on("user_state_changed", function(e) {
a.userStaetChanged(e.detail);
});
cc.vv.Event.on("mj_game_state", function(e) {
a.gameState(e.detail);
});
cc.vv.Event.on("transfer_push", function(e) {
a.transfer(e.detail);
});
cc.vv.Event.on("voice_msg", function(e) {
a.voiceMsg(e.detail);
});
cc.vv.Event.on("kick_push", function(e) {
a.kick(e.detail);
});
cc.vv.Event.on("emoji_push", function(e) {
a.emoji(e.detail);
});
cc.vv.Event.on("emoji_to_cl", function(e) {
a.emojiTo(e.detail);
});
cc.vv.Event.on("chat_push", function(e) {
a.chat(e.detail);
});
cc.vv.Event.on("mj_flower_item_push", function(e) {
a.flower(e.detail);
});
cc.vv.Event.on("fresh_all_score", function(e) {
a.freshScore(e.detail);
});
cc.vv.MJConfig.NetBase(this);
cc.vv.gameNetMgr.isReplay && (cc.vv.gameNetMgr.replayMgr = this);
};
e.prototype.begin = function(e) {
this.UINode.active = !0;
this.GAMENode.active = !0;
this.GAMEBase.begin(e);
this.UIBase.begin(e);
};
e.prototype.turn = function(e) {};
e.prototype.setPlayWall = function(e) {
this.playWall = e;
};
e.prototype.syncData = function() {
this.begin();
this.UIBase.syncData();
this.GAMEBase.syncData();
};
e.prototype.holds = function(e) {
this.IsNull("holds", e);
this.playWall || this.GAMEBase.holds(e);
};
e.prototype.folds = function(e) {
this.IsNull("folds", e);
this.playWall || this.GAMEBase.folds(e);
};
e.prototype.items = function(e) {
this.IsNull("items", e);
this.playWall || this.GAMEBase.items(e);
};
e.prototype.out = function(e) {
this.IsNull("out", e);
this.GAMEBase.out(e);
};
e.prototype.allowOut = function(e) {
this.IsNull("allowOut", e);
this.GAMEBase.allowOut(e);
};
e.prototype.updateAction = function(e) {
this.IsNull("updateAction", e);
this.playWall && !e || this.GAMEBase.updateAction(e);
};
e.prototype.down = function(e) {
this.IsNull("down", e);
this.GAMEBase.down(e);
};
e.prototype.useSimple = function(e) {
this.GAMEBase.useSimple();
};
e.prototype.throw = function(e) {
this.IsNull("data", e);
if (!this.playWall) {
this.setPlayWall(!0);
this.GAMEBase.throw(e);
}
};
e.prototype.wall = function(e) {
this.IsNull("data", e);
if (!this.playWall) {
this.UIBase.wall(e);
this.GAMEBase.wall(e);
}
};
e.prototype.wallAfter = function(e) {
this.setPlayWall(!1);
this.UIBase.wall(e);
};
e.prototype.operation = function(e) {
this.IsNull("operation", e);
this.playWall && this.scheduleOnce(function() {
this.operation(e);
}, .1);
this.playWall || this.GAMEBase.operation(e);
};
e.prototype.uerOperation = function(e) {};
e.prototype.birds = function(e) {
this.IsNull("birds", e);
this.GAMEBase.birds(e);
};
e.prototype.over = function(e) {
this.IsNull("over", e);
this.UIBase.over(e);
this.GAMEBase.over(e);
};
e.prototype.reset = function(e) {
this.UIBase.clear(e);
this.GAMEBase.clear(e);
};
e.prototype.onBtn = function(e) {
this.IsNull("onBtn", e);
console.log("onBtn");
cc.vv.audioMgr.playBtnClick();
this.GAMEBase.onBtn(e);
};
e.prototype.gang = function(e) {
this.IsNull("gang", e);
};
e.prototype.tgAuto = function(e) {
this.IsNull("tgAuto", e);
this.UIBase.tgAuto(e);
this.GAMEBase.tgAuto(e);
};
e.prototype.gameNum = function(e) {
this.IsNull("gameNum", e);
this.UIBase.gameNum(e);
};
e.prototype.newUser = function(e) {
this.IsNull("newUser", e);
this.UIBase.newUser(e);
};
e.prototype.userStaetChanged = function(e) {
this.IsNull("userStaetChanged", e);
this.UIBase.userStaetChanged(e);
};
e.prototype.gameState = function(e) {
this.UIBase.gameState(e);
};
e.prototype.transfer = function(e) {
this.IsNull("transfer", e);
this.UIBase.transfer(e);
};
e.prototype.voiceMsg = function(e) {
this.IsNull("voiceMsg", e);
this.UIBase.voiceMsg(e);
};
e.prototype.kick = function(e) {
this.IsNull("kick", e);
this.UIBase.kick(e);
};
e.prototype.emoji = function(e) {
this.IsNull("emoji", e);
this.UIBase.emoji(e);
};
e.prototype.emojiTo = function(e) {
this.IsNull("emojiTo", e);
this.UIBase.emojiTo(e);
};
e.prototype.chat = function(e) {
this.IsNull("chat", e);
this.UIBase.chat(e);
};
e.prototype.flower = function(e) {
this.IsNull("flower", e);
this.UIBase.flower(e);
};
e.prototype.freshScore = function(e) {
this.UIBase.freshScore(e);
};
e.prototype.result = function(e) {
cc.vv.gameNetMgr.gameOverData.force ? cc.loader.loadRes("game/3DMahjong/prefabs/mj_game_result", function(e, t) {
var i = cc.instantiate(t);
cc.vv.Event.addChild(i);
}) : cc.vv.Event.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
cc.loader.loadRes("game/3DMahjong/prefabs/mj_game_result", function(e, t) {
var i = cc.instantiate(t);
cc.vv.Event.addChild(i);
});
})));
};
e.prototype.onDestroy = function() {
this.UIBase = null;
this.GAMEBase = null;
this.UINode = null;
this.GAMENode = null;
};
e.prototype.IsNull = function(e, t) {
"boolean" != typeof t && !t && this.className && e && console.error("<$> 类： " + this.className + " ... 方法： " + e + " ... 数据异常： " + t + " <$>");
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCObjet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "585b7W6+PpIw6oOfZdbB1B0", "FCObjet");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./mahjongConfig/FCCSConfig"), a = e("./mahjongConfig/FCZZConfig"), s = e("./mahjongConfig/FCHZConfig"), c = e("./mahjongConfig/FCDCConfig"), r = e("./mahjongConfig/FCGLConfig"), o = e("./game_ui/FCUIBase"), h = e("./FCGameBase"), l = e("./FCNetBase"), d = cc._decorator, u = d.ccclass, v = (d.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
if (!cc.sys.isNative && cc.sys.isMobile) {
var e = this.node.getComponent(cc.Canvas);
e.fitHeight = !0;
e.fitWidth = !0;
}
if (cc.vv) {
cc.vv.MJConfig = null;
cc.vv.Event = this.node;
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = new o.FCUIBase(), i = new l.default(), n = new h.default();
this.initMJConfig();
var a = this.node.getChildByName("UINode"), s = this.node.getChildByName("GAMENode");
if (a && s) {
t.Load(a);
n.Load(s);
i.Load(a, s, t, n);
cc.vv.gameNetMgr.gamestate && 1 < cc.vv.gameNetMgr.gamestate && i.syncData();
} else {
cc.director.loadScene("loading");
console.error("异常 ：FCObjetClass : " + a + " AND " + s);
}
} else {
cc.director.loadScene("loading");
console.error("异常 ：FCObjetClass : cc.vv : " + cc.vv + " ");
}
};
t.prototype.initMJConfig = function() {
if (cc.vv.gameNetMgr.conf.server_type) switch (cc.vv.gameNetMgr.conf.server_type) {
case 10003:
cc.vv.MJConfig = new n.FCCSConfig();
break;

case 10006:
cc.vv.MJConfig = new a.FCZZConfig();
break;

case 10007:
cc.vv.MJConfig = new s.FCHZConfig();
break;

case 10008:
cc.vv.MJConfig = new c.FCDCConfig();
break;

case 10009:
cc.vv.MJConfig = new r.FCGLConfig();
} else console.error("游戏 serverType 异常");
};
t.prototype.start = function() {
cc.vv.audioMgr.playBGM("resources/game/3DMahjong/sounds/mj.mp3");
};
t.prototype.onDestroy = function() {
cc.vv.Event = null;
cc.vv.MJConfig = null;
cc.vv.gameNetMgr.dataEventHandler = null;
};
return t = __decorate([ u ], t);
}(cc.Component));
i.default = v;
cc._RF.pop();
}, {
"./FCGameBase": "FCGameBase",
"./FCNetBase": "FCNetBase",
"./game_ui/FCUIBase": "FCUIBase",
"./mahjongConfig/FCCSConfig": "FCCSConfig",
"./mahjongConfig/FCDCConfig": "FCDCConfig",
"./mahjongConfig/FCGLConfig": "FCGLConfig",
"./mahjongConfig/FCHZConfig": "FCHZConfig",
"./mahjongConfig/FCZZConfig": "FCZZConfig"
} ],
FCOperateBtn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "53c84B1x21OAIOX724IO8Fy", "FCOperateBtn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.btnName = null;
e.type = -1;
e.card = -1;
return e;
}
e.prototype.start = function() {
var e = this;
this.btnName = this.node.name;
this.node.on(cc.Node.EventType.TOUCH_START, function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.Event.emit("mj_onBtn_push", e);
});
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCOper: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4a650YqjlLDqgeyUx8qhH5", "FCOper");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
return t = __decorate([ a ], t);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCOutCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "26bbd5NtlFGEK4FuOzCgc96", "FCOutCard");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.out_Item = null;
e.hunan_Item = null;
e.setPos = [ cc.p(0, -104), cc.p(230, 60), cc.p(0, 220), cc.p(-230, 60) ];
return e;
}
e.prototype.start = function() {
var n = this;
cc.loader.loadRes("game/3DMahjong/prefabs/Game/out_Item", function(e, t) {
n.out_Item = cc.instantiate(t);
var i = n.out_Item.getChildByName("item");
n.hunan_Item = i.getComponent("Hunan_Item");
n.node.addChild(n.out_Item);
n.out_Item.active = !1;
});
cc.vv.Event.on("mj_out_push", function(e) {
n.updateOut(e.detail);
});
cc.vv.Event.on("mj_operation_push", function(e) {
n.onPickCardPush();
});
cc.vv.Event.on("mj_pick_card_push", function(e) {
n.onPickCardPush();
});
cc.vv.Event.on("mj_over_push", function(e) {
n.onPickCardPush();
});
};
e.prototype.updateOut = function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatIndex);
cc.vv.gameNetMgr.seats[e.seatIndex];
if (!(e.card < 1 || 72 < e.card)) {
this.out_Item.setPosition(this.setPos[t]);
this.hunan_Item.setHandValueAndColor(e.card);
this.out_Item.active = !0;
this.PlaySFXfun(e.card, e.userId);
}
};
e.prototype.PlaySFXfun = function(e, t) {
var i = cc.vv.MJConfig.playSFXfun(e), n = "";
n = 1 == this.getSex(t) ? "" + cc.vv.MJConfig.SoundMan + i + ".mp3" : "" + cc.vv.MJConfig.SoundWoman + i + ".mp3";
cc.vv.audioMgr.playSFX(n);
};
e.prototype.getSex = function(e) {
var t = 0;
if (cc.vv.baseInfoMap) {
var i = cc.vv.baseInfoMap[e];
i && (t = i.sex);
}
return t;
};
e.prototype.onPickCardPush = function() {
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function(e, t) {
i.out_Item.active = !1;
})));
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCPiaoFen: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2c7aUEFctBv5dgQPW64/op", "FCPiaoFen");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n, a = cc._decorator, s = a.ccclass;
a.property;
(function(e) {
e[e.nochoice = 0] = "nochoice";
e[e.choice = 1] = "choice";
})(n || (n = {}));
var c = function(t) {
__extends(e, t);
function e() {
var e = t.call(this) || this;
e.timeNode = null;
e.state = n.nochoice;
e.score = 1;
e.time = 10;
return e;
}
(i = e).prototype.onLoad = function() {
this.timeNode = this.node.getChildByName("time");
};
e.prototype.onPlay = function(e) {
switch (e.checkEvents[0].customEventData) {
case "1":
this.score = 1;
break;

case "2":
this.score = 2;
break;

case "3":
this.score = 3;
}
};
e.getInstance = function(n) {
if (!this.instance) {
this.instance = new i();
cc.loader.loadRes(cc.vv.MJConfig.UIPiaoFen, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
}
return this.instance;
};
e.prototype.onBtnOK = function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("piao_fen", this.score);
this.node.destroy();
i.instance = null;
};
e.prototype.update = function(e) {
if (0 < this.time && this.state == n.nochoice) {
this.time -= e;
var t = Math.ceil(this.time);
this.timeNode.getComponent(cc.Label).string = "倒计时：" + t;
} else this.time <= 0 && (this.state = n.choice);
if (this.state == n.choice) {
console.log("时间到了 自动发送飘分");
this.onBtnOK();
}
};
var i;
e.instance = null;
return e = i = __decorate([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCPrepare: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d5e5cm5dh9Ci60akZot9yaD", "FCPrepare");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.prepareNode = null;
e.btnWeichat = null;
e.btnStart = null;
e.btnSeatReady = null;
return e;
}
e.prototype.initView = function(e) {
var t = this;
this.prepareNode = e;
this.btnWeichat = e.getChildByName("btnWeichat");
this.btnStart = e.getChildByName("btnStart");
this.btnSeatReady = e.getChildByName("btnSeatReady");
1 < cc.vv.gameNetMgr.gamestate || 1 == cc.vv.gameNetMgr.isReplay ? e.active = !1 : e.active = !0;
var i = 0 == cc.vv.gameNetMgr.numOfGames;
this.btnWeichat.active = i;
this.btnStart.on(cc.Node.EventType.TOUCH_START, function() {});
this.btnWeichat.on(cc.Node.EventType.TOUCH_START, function() {
t.onBtnWeichatClicked();
});
this.btnSeatReady.on(cc.Node.EventType.TOUCH_START, function() {
t.onBtnReadyClick();
});
};
e.prototype.gameBegin = function() {
this.prepareNode.active = !1;
};
e.prototype.onBtnReadyClick = function() {
cc.vv.audioMgr.playBtnClick();
this.btnSeatReady.active = !1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
};
e.prototype.onBtnWeichatClicked = function() {
var e = cc.vv.gameType.getWaFaDecs(cc.vv.gameNetMgr.conf.server_type, cc.vv.gameNetMgr.conf.type_index, cc.vv.gameNetMgr.conf.rule_index), t = " 房间ID:" + cc.vv.gameNetMgr.roomId;
cc.vv.gameNetMgr.unions_id && (t += " (俱乐部" + cc.vv.gameNetMgr.unions_id + ")");
cc.vv.anysdkMgr.share(" " + cc.vv.gameNetMgr.getGameTypeStr() + t, " 玩法:" + e, 0);
};
e.prototype.setBtnWeiChat = function(e) {
this.btnWeichat.active = e;
};
e.prototype.setBtnStart = function(e) {
this.btnStart.active = e;
};
e.prototype.setBtnStartSprite = function(e) {};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCSeabed: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "39090/w+7FGG573f5YXrdp0", "FCSeabed");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.showbg = null;
e.item = null;
return e;
}
e.prototype.onLoad = function() {
this.item.active = !1;
this.showbg.active = !0;
};
e.prototype.setItem = function(e) {
this.item.getChildByName("item").getComponent("Hunan_Item").setHandValueAndColor(e);
this.item.active = !0;
};
__decorate([ s(cc.Node) ], e.prototype, "showbg", void 0);
__decorate([ s(cc.Node) ], e.prototype, "item", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCSeats: [ function(r, e, t) {
"use strict";
cc._RF.push(e, "f5f56JldJZDlIGAE5/3uuoO", "FCSeats");
Object.defineProperty(t, "__esModule", {
value: !0
});
var l, i = cc._decorator, n = i.ccclass;
i.property;
(function(e) {
e[e.bao = 0] = "bao";
e[e.gang = 1] = "gang";
e[e.piao = 2] = "piao";
})(l || (l = {}));
var a = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.FCSeatsNode = null;
e.seatsNode = [];
e.seats = [];
e.baoNodeList = [];
e.gangNodeList = [];
e.voiceMsgQueue = [];
e.playingSeat = null;
e.lastPlayTime = null;
e._startPositon = [ cc.p(0, -228), cc.p(480, 91), cc.p(3, 268), cc.p(-564, 91) ];
e.movPosition = [ cc.p(-580, -130), cc.p(580, 120), cc.p(360, 320), cc.p(-580, 120) ];
e.huaPType = null;
return e;
}
e.prototype.initView = function(e) {
this.FCSeatsNode = e;
for (var t = 0; t < e.children.length; t++) {
var i = e.children[t], n = i.getComponent("Seat");
this.seatsNode.push(i);
this.seats.push(n);
}
this.initSeats();
};
e.prototype.freshScore = function(e) {
if (cc.vv.gameNetMgr.gameOverData) for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i];
if (n) {
var a = n.total_score, s = n.end_score, c = cc.vv.gameNetMgr.getLocalIndex(i), r = this.seatsNode[c];
t[i].score = a;
r.getComponent("Seat").setScore(a, s);
}
}
};
e.prototype.flower = function(e) {
cc.vv.MJConfig.updateSeatFlowers(this, l, e);
};
e.prototype.tgAuto = function(e) {
if (e) for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; i++) if (t[i].userid == e.userId) {
var n = cc.vv.gameNetMgr.getLocalIndex(t[i].seatindex);
this.seatsNode[n].getChildByName("tuoguan").active = e.isAuto;
}
};
e.prototype.clearTgAuto = function() {
for (var e = 0; e < this.seatsNode.length; e++) {
this.seatsNode[e].getChildByName("tuoguan").active = !1;
}
};
e.prototype.clearFlower = function() {
for (var e = 0; e < this.seatsNode.length; e++) {
this.seatsNode[e].getChildByName("huap_node").removeAllChildren();
}
};
e.prototype.emoji = function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.sender), i = cc.vv.gameNetMgr.getLocalIndex(t);
console.log(e);
this.seats[i].emoji(e.content);
};
e.prototype.chat = function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.sender), i = cc.vv.gameNetMgr.getLocalIndex(t);
if (cc.js.isNumber(e.content)) {
var n = this.getQuickChatInfo(e.content);
this.seats[i].chat(n.content);
cc.vv.audioMgr.playSFX(n.sound);
} else this.seats[i].chat(e.content);
};
e.prototype.getQuickChatInfo = function(e) {
var t = "item" + e;
return cc.vv.MJConfig.quickChatInfo[t];
};
e.prototype.canleReady = function() {
if (1 < cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this.seats.length; ++e) this.seats[e].setReady(!1);
};
e.prototype.initSeats = function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
};
e.prototype.clearSeats = function() {
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].setInfo("", "");
this.seats[e].setInfo("", "");
}
};
e.prototype.movSeats = function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; t++) {
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.seatsNode[i].runAction(cc.moveTo(.3, this.movPosition[i]));
this.seatsNode[i].runAction(cc.scaleTo(.3, .7));
}
};
e.prototype.initSingleSeat = function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i + ",seat.score:" + e.score + ",index:" + t + ",\n        seat.name:" + e.name + ",seat.seatindex:" + e.seatindex + ",seat.ready:" + e.ready + "\n        cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex + ",isZhuang:" + n + ".");
this.seats[t].setReady(e.ready);
1 < cc.vv.gameNetMgr.gamestate && this.seats[t].setReady(!1);
this.seats[t].setInfo(e.name, e.score);
this.seats[t].setZhuang(n);
this.seats[t].setOffline(i);
this.seats[t].setID(e.userid);
this.seats[t].voiceMsg(!1);
this.seats[t].refreshXuanPaiState();
};
e.prototype.emojito = function(a) {
var s = this, e = cc.vv.gameNetMgr.getSeatIndexByID(a.sender), t = cc.vv.gameNetMgr.getSeatIndexByID(a.target), i = cc.vv.gameNetMgr.getLocalIndex(e), n = cc.vv.gameNetMgr.getLocalIndex(t), c = cc.vv.Event.convertToNodeSpace(cc.v2(this.seatsNode[i])), r = cc.vv.Event.convertToNodeSpace(cc.v2(this.seatsNode[n]));
cc.loader.loadRes(cc.vv.MJConfig.UIMagic, function(e, t) {
var i = cc.instantiate(t);
s.FCSeatsNode.parent.addChild(i);
var n = i.getComponent("FCMagic");
n.goto(c, r);
n.setMp3(a.content);
n.Run();
});
};
e.prototype.playVoice = function() {
var s = this;
if (null == this.playingSeat && this.voiceMsgQueue.length) {
var e = this.voiceMsgQueue.shift(), t = cc.vv.gameNetMgr.getSeatIndexByID(e.sender), i = cc.vv.gameNetMgr.getLocalIndex(t);
this.playingSeat = i;
this.seats[i].voiceMsg(!0);
var c = JSON.parse(e.content);
cc.vv.http.sendRequest("/get_voice", {
voice_msg_id: c.msg
}, function(e) {
if (e.errcode) console.log("语音下载失败，错误码", e.errcode); else {
for (var t = "voicemsg.amr", i = r("buffer").Buffer, n = e.voice_msg; -1 != n.indexOf("."); ) n = n.replace(".", "+");
var a = new i(n, "base64").toString();
cc.vv.voiceMgr.writeVoice(t, a);
cc.vv.voiceMgr.play(t);
s.lastPlayTime = Date.now() + c.time;
}
}, cc.vv.userMgr.voice_chat_addr);
}
};
e.prototype.createHuaP = function(r, o, h, l, d, u) {
var e = "";
e = 0 == d || 3 == d ? cc.vv.MJConfig.GNHuapRight : cc.vv.MJConfig.GNHuapLeft;
cc.loader.loadRes(e, function(e, t) {
var i = cc.instantiate(t);
i.name = r;
u.addChild(i);
var n = i.getChildByName("icon"), a = i.getChildByName("lb").getComponent(cc.Label), s = n.getChildByName("Label"), c = s.getComponent(cc.Label);
s.color = l;
c.string = o;
a.string = 0 == d || 3 == d ? "x" + h : h + "x";
});
};
e.prototype.getHuapNode = function(e, t, i) {
var n = "", a = "", s = null;
switch (e) {
case l.bao:
n = "bao";
a = "宝";
s = new cc.Color(255, 0, 0);
break;

case l.gang:
n = "gang";
a = "杠";
s = new cc.Color(186, 7, 211);
break;

case l.piao:
n = "piao";
a = "飘";
s = new cc.Color(164, 44, 2);
}
var c = this.seatsNode[t].getChildByName("huap_node"), r = c.getChildByName(n);
if (r) {
var o = r.getChildByName("icon"), h = r.getChildByName("lb").getComponent(cc.Label);
o.getChildByName("Label").getComponent(cc.Label).string = a;
h.string = 0 == t || 3 == t ? "x" + i : i + "x";
} else this.createHuaP(n, a, i, s, t, c);
};
e.prototype.onPlayerOver = function() {
cc.vv.audioMgr.resumeAll();
console.log("onPlayCallback:" + this.playingSeat);
var e = this.playingSeat;
this.playingSeat = null;
this.seats[e].voiceMsg(!1);
};
e.prototype.update = function(e) {
if (!cc.vv.gameNetMgr.isReplay) if (null != this.lastPlayTime) {
if (Date.now() > this.lastPlayTime + 200) {
this.onPlayerOver();
this.lastPlayTime = null;
}
} else this.playVoice();
};
e.prototype.clear = function() {
this.clearFlower();
this.clearTgAuto();
};
return e = __decorate([ n ], e);
}(cc.Component);
t.default = a;
cc._RF.pop();
}, {
buffer: 47
} ],
FCSettings: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1113mo3mtGPYRNPeJXA9Ba", "FCSettings");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = t.call(this) || this;
e.btnBg = null;
e.btnClose = null;
e.btnSoundEffect = null;
e.btnMusic = null;
return e;
}
(i = e).getInstance = function(n) {
if (!this.instance) {
this.instance = new i();
cc.loader.loadRes(cc.vv.MJConfig.UISheZhiPenl, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
}
return this.instance;
};
e.prototype.start = function() {
var e = this;
this.addSlideEvent(this.btnSoundEffect, this.node, "FCSettings", "onSlided");
this.addSlideEvent(this.btnMusic, this.node, "FCSettings", "onSlided");
this.btnBg.on(cc.Node.EventType.TOUCH_END, function() {
e.onBtnClose();
});
this.btnClose.on(cc.Node.EventType.TOUCH_END, function() {
e.onBtnClose();
});
this.refreshVolume();
};
e.prototype.onBtnClose = function() {
cc.vv.audioMgr.playBtnClick();
this.node.destroy();
i.instance = null;
};
e.prototype.onSlided = function(e) {
"yinxiao" == e.node.parent.name ? cc.vv.audioMgr.setSFXVolume(e.progress) : "yinyue" == e.node.parent.name && cc.vv.audioMgr.setBGMVolume(e.progress);
this.refreshVolume();
};
e.prototype.refreshVolume = function() {
var e = this.node.getChildByName("yinxiao"), t = 450 * cc.vv.audioMgr.sfxVolume;
(i = e.getChildByName("progress")).getComponent(cc.Slider).progress = cc.vv.audioMgr.sfxVolume;
i.getChildByName("progress").width = t;
var i, n = this.node.getChildByName("yinyue");
t = 450 * cc.vv.audioMgr.bgmVolume;
(i = n.getChildByName("progress")).getComponent(cc.Slider).progress = cc.vv.audioMgr.bgmVolume;
i.getChildByName("progress").width = t;
};
e.prototype.onBtnClicked = function(e) {
this.node.active && cc.vv.audioMgr.playBtnClick();
if ("btn_exit" == e.target.name) ; else if ("btn_yx_open" == e.target.name) {
cc.vv.audioMgr.setSFXVolume(1);
this.refreshVolume();
} else if ("btn_yx_close" == e.target.name) {
cc.vv.audioMgr.setSFXVolume(0);
this.refreshVolume();
} else if ("btn_yy_open" == e.target.name) {
cc.vv.audioMgr.setBGMVolume(.5);
this.refreshVolume();
} else if ("btn_yy_close" == e.target.name) {
cc.vv.audioMgr.setBGMVolume(0);
this.refreshVolume();
}
};
e.prototype.addSlideEvent = function(e, t, i, n) {
var a = new cc.Component.EventHandler();
a.target = t;
a.component = i;
a.handler = n;
e.getComponent(cc.Slider).slideEvents.push(a);
};
var i;
e.instance = null;
__decorate([ s(cc.Node) ], e.prototype, "btnBg", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnClose", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnSoundEffect", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btnMusic", void 0);
return e = i = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCShow: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b16bfA8iphKjooLeLLzdC+E", "FCShow");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.lb = null;
e.baoItem = null;
e.gangItem = null;
return e;
}
e.prototype.onLoad = function() {
var e = this.node.getChildByName("lb_painum"), t = this.node.getChildByName("bao_node"), i = this.node.getChildByName("gang_node");
this.lb = e.getComponent(cc.Label);
if (t && i) {
var n = t.getChildByName("item");
this.baoItem = n.getComponent(cc.Sprite);
n = i.getChildByName("item");
this.gangItem = n.getComponent(cc.Sprite);
}
};
e.prototype.showflower = function(e) {
this.baoItem.spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(e.bao);
this.gangItem.spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(e.gang);
};
e.prototype.lbPainum = function(e) {
this.lb.string && (this.lb.string = "" + e);
};
e.prototype.wall = function(e) {
var t = e.total - (e.head + e.tail);
this.lbPainum(t);
};
return e = __decorate([ a ], e);
}(cc.Component));
i.FCShow = s;
cc._RF.pop();
}, {} ],
FCSingleton: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "17569Fp+YdCdp6RusCrxQYL", "FCSingleton");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
return t = __decorate([ a ], t);
}(cc.Component));
i.FCSingleton = s;
cc._RF.pop();
}, {} ],
FCTimeTurn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "034a8zmC99EyYKfAJiwtJVp", "FCTimeTurn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeNum = null;
e.timePointList = [];
e._time = 0;
e._alertTime = 0;
return e;
}
e.prototype.onLoad = function() {
this.node.active = !1;
var t = this;
1 < cc.vv.gameNetMgr.gamestate && this.updateTurn();
cc.vv.Event.on("mj_beign_push", function(e) {
console.log("mj_beign_push");
t.updateTurn();
});
cc.vv.Event.on("mj_turn_push", function(e) {
t.updateTurn();
});
cc.vv.Event.on("mj_TgStart_push", function(e) {
t.timeSync(e.detail);
});
console.log(" FCTimeTurn 初始化完成");
};
e.prototype.timeSync = function(e) {
var t = Math.floor((e.end - e.sys) / 1e3);
this._time = t;
};
e.prototype.updateTurn = function() {
0 == this.node.active && (this.node.active = !0);
this.hideTime();
if (!cc.vv.gameNetMgr.isReplay) {
var e = cc.vv.gameNetMgr.turn;
if (-1 < e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
0 == t && cc.vv.Event.emit("mj_allow_out_push", !1);
this.timePointList[t].active = !0;
this.addTimeRunAction(this.timePointList[t]);
this._time = 15;
this._alertTime = 10;
} else console.log("turn 值是：" + e);
}
};
e.prototype.hideTime = function() {
var e = 0;
for (e = 0; e < this.timePointList.length; e++) this.timePointList[e].active = !1;
this.timeNum.string = "15";
this._time = -1;
};
e.prototype.addTimeRunAction = function(e) {
var t = cc.fadeIn(.5), i = cc.fadeOut(.5), n = cc.sequence(t, i), a = cc.repeatForever(n);
e.runAction(a);
};
e.prototype.update = function(e) {
if (0 < this._time) {
this._time -= e;
0 < this._alertTime && this._time < this._alertTime && (this._alertTime = -1);
var t = "";
this._time < 0 && (this._time = 0);
var i = Math.ceil(this._time);
i < 10 && (t = "0");
this.timeNum.string = t + i;
}
};
__decorate([ s(cc.Label) ], e.prototype, "timeNum", void 0);
__decorate([ s([ cc.Node ]) ], e.prototype, "timePointList", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCTing: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "74c4emVww5FnKROrLQQYjIq", "FCTing");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.bg_node = null;
e.btn_ting = null;
e.show_node = null;
e.ting_node = null;
e.prefab_node = null;
return e;
}
e.prototype.onLoad = function() {
var e = this;
this.ting_node.active = !1;
this.bg_node.active = !1;
this.btn_ting.on(cc.Node.EventType.TOUCH_START, function() {
cc.vv.audioMgr.playBtnClick();
if (e.bg_node.active) {
e.bg_node.active = !1;
e.ting_node.active = !1;
} else {
e.bg_node.active = !0;
e.ting_node.active = !0;
}
});
};
e.prototype.PutInItems = function(e) {
this.ClearChildren();
for (var t = 0; t < e.length; t++) {
var i = e[t], n = cc.instantiate(this.prefab_node);
n.getChildByName("item").getComponent("Hunan_Item").setHandValueAndColor(i);
this.show_node.addChild(n);
}
};
e.prototype.ClearChildren = function() {
this.show_node.removeAllChildren();
};
__decorate([ s(cc.Node) ], e.prototype, "bg_node", void 0);
__decorate([ s(cc.Node) ], e.prototype, "btn_ting", void 0);
__decorate([ s(cc.Node) ], e.prototype, "show_node", void 0);
__decorate([ s(cc.Node) ], e.prototype, "ting_node", void 0);
__decorate([ s(cc.Prefab) ], e.prototype, "prefab_node", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
FCTuGuan: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6396b7hlSNJoZfhODoLtI64", "FCTuGuan");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.tuGuanNode = null;
return e;
}
e.prototype.initView = function(e) {
this.tuGuanNode = e;
this.tuGuanNode.getChildByName("cancel_auto").on(cc.Node.EventType.TOUCH_END, function() {
console.log("取消托管");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("cancel_auto");
});
this.setTuGuan(!1);
console.log(" FCTuGuan 初始化完成");
};
e.prototype.setTuGuan = function(e) {
this.tuGuanNode.active = e;
};
e.prototype.tgAuto = function(e) {
cc.vv.userMgr.userId && e && e.userId == cc.vv.userMgr.userId && (e.isAuto ? 1 < cc.vv.gameNetMgr.gamestate ? this.setTuGuan(e.isAuto) : this.setTuGuan(!1) : this.setTuGuan(e.isAuto));
};
e.prototype.clear = function() {
this.setTuGuan(!1);
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCUIBase: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dbd4fuXHMBHZLETsEaz/+Pz", "FCUIBase");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../csmj/FCPiaoFen"), r = e("./FITingNode"), o = e("./FCInfobar"), h = e("./FCPrepare"), l = e("./FCChat"), d = e("./FCTuGuan"), u = e("./FCSeats"), v = e("./FCMore"), g = e("./FIShow"), a = cc._decorator, s = a.ccclass, c = (a.property, 
function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.show = null;
e.tuGuan = null;
e.ting = null;
e.seatsMgr = null;
e.infobar = null;
e.prepare = null;
e.UINode = null;
e.btnMore = null;
e.btnChat = null;
e.btnVoice = null;
e._iskai = !1;
e._UIChatPanel = null;
return e;
}
e.prototype.Load = function(e) {
this.UINode = e;
this.initView(e);
};
e.prototype.begin = function(e) {
this.show.setShow();
this.infobar.beign();
this.prepare.gameBegin();
this.seatsMgr.movSeats();
this.seatsMgr.initSeats();
};
e.prototype.syncData = function() {
cc.vv.gameNetMgr.wallData && this.wall(cc.vv.gameNetMgr.wallData);
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; t++) {
var i = {};
i.userId = e[t].userid;
i.isAuto = e[t].isAuto;
this.tgAuto(i);
}
cc.vv.MJConfig.synUIData(this.UINode);
};
e.prototype.wall = function(e) {
this.show.wall(e);
};
e.prototype.showflower = function(e) {
this.show.showflower(e);
};
e.prototype.gameNum = function(e) {
this.infobar.setGameCount();
};
e.prototype.newUser = function(e) {
this.seatsMgr.initSingleSeat(e);
};
e.prototype.userStaetChanged = function(e) {
this.seatsMgr.initSingleSeat(e);
};
e.prototype.gameState = function(e) {
this.seatsMgr.canleReady();
};
e.prototype.transfer = function(e) {
this.seatsMgr.clearSeats();
this.seatsMgr.initSeats();
};
e.prototype.voiceMsg = function(e) {
var t = e.detail;
this.seatsMgr.voiceMsgQueue.push(t);
this.seatsMgr.playVoice();
};
e.prototype.kick = function(e) {
this.seatsMgr.clearSeats();
this.seatsMgr.initSeats();
};
e.prototype.emoji = function(e) {
this.seatsMgr.emoji(e);
};
e.prototype.emojiTo = function(e) {
this.seatsMgr.emojito(e);
};
e.prototype.chat = function(e) {
this.seatsMgr.chat(e);
};
e.prototype.flower = function(e) {
this.seatsMgr.flower(e);
};
e.prototype.freshScore = function(e) {
this.seatsMgr.freshScore(e);
};
e.prototype.over = function(e) {};
e.prototype.xpiaofen = function(e) {
n.default.getInstance(this.UINode);
};
e.prototype.showPiaoFen = function(e) {};
e.prototype.showSea = function(n) {
var a = this.UINode.getChildByName("seabed_node");
cc.loader.loadRes("game/3DMahjong/csmj/seabed", function(e, t) {
var i = cc.instantiate(t);
i.getComponent("FCSeabed").setItem(n.card);
a.addChild(i);
});
};
e.prototype.seaCard = function(e) {
var t = this.UINode.getChildByName("seabed_node");
if (0 < t.children.length) {
t.getChildByName("seabed").getChildByName("Hunan_Item").active = !0;
}
t.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
cc.vv.Event.emit("mj_over_push", cc.vv.gameNetMgr.gameOverData);
t.removeAllChildren();
})));
};
e.prototype.initView = function(n) {
cc.vv.chatItemList = [];
this.btnMore = n.getChildByName("btn_more");
this.btnChat = n.getChildByName("btn_chat");
var e = n.getChildByName("show_node"), t = n.getChildByName("ting_node"), i = n.getChildByName("infobar"), a = n.getChildByName("prepare");
this.btnVoice = n.getChildByName("btn_voice");
var s = n.getChildByName("seats_node"), c = n.getChildByName("tuguan_node");
cc.loader.loadRes(cc.vv.MJConfig.UIReconnect, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
cc.loader.loadRes(cc.vv.MJConfig.UIPopups, function(e, t) {
var i = cc.instantiate(t);
n.parent.addChild(i);
});
cc.loader.loadRes(cc.vv.MJConfig.UIVoicePanel, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
this.btnMore.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
v.default.getInstance(n);
});
this.btnChat.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.audioMgr.playBtnClick();
l.FCChat.getInstance(n);
});
this.show = new g.default();
this.ting = new r.default();
this.seatsMgr = new u.default();
this.infobar = new o.default();
this.prepare = new h.default();
this.tuGuan = new d.default();
this.show.initView(e);
this.ting.initView(t);
this.tuGuan.initView(c);
this.seatsMgr.initView(s);
this.infobar.initView(i);
this.prepare.initView(a);
this.initEvent();
if (cc.vv.gameNetMgr.isReplay) this.replay(); else {
cc.vv.anysdkMgr.getGPS();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("gps", {
gps: cc.vv.userMgr.gps
});
}
};
e.prototype.replay = function() {
var n = this.UINode.getChildByName("replay_node");
cc.loader.loadRes(cc.vv.MJConfig.GNUIReplay, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
};
e.prototype.initEvent = function() {
var t = this;
cc.vv.Event.on("gps_push", function(e) {
t.checkGPS(e.detail);
});
cc.vv.Event.on("chat_push", function(e) {
cc.vv.chatItemList.unshift(e.detail);
});
};
e.prototype.beign = function() {
this.show.setShow();
this.infobar.beign();
this.prepare.gameBegin();
this.seatsMgr.movSeats();
this.seatsMgr.initSeats();
};
e.prototype.tgAuto = function(e) {
this.tuGuan.tgAuto(e);
this.seatsMgr.tgAuto(e);
};
e.prototype.getQuickChatInfo = function(e) {
var t = "item" + e;
return cc.vv.MJConfig.quickChatInfo[t];
};
e.prototype.checkGPS = function(e) {
if (e.gps && -1 != e.gps.indexOf(",")) {
cc.vv.gameNetMgr.getSeatByID(e.user_id).gps = e.gps;
console.log("服务器传来用户", e.user_id, "的经纬度", e.gps);
} else console.log("没有获取到用户的经纬度", e.user_id);
};
e.prototype.clear = function(e) {
this.show.clear();
this.ting.clear();
this.tuGuan.clear();
this.seatsMgr.clear();
};
e.prototype.onDestroy = function() {
cc.vv.chatItemList = null;
this.seatsMgr = null;
this.infobar = null;
this.prepare = null;
this.tuGuan = null;
this.ting = null;
this.show = null;
};
return e = __decorate([ s ], e);
}(cc.Component));
i.FCUIBase = c;
cc._RF.pop();
}, {
"../../csmj/FCPiaoFen": "FCPiaoFen",
"./FCChat": "FCChat",
"./FCInfobar": "FCInfobar",
"./FCMore": "FCMore",
"./FCPrepare": "FCPrepare",
"./FCSeats": "FCSeats",
"./FCTuGuan": "FCTuGuan",
"./FIShow": "FIShow",
"./FITingNode": "FITingNode"
} ],
FCWanFa: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "51a9apwGrVPdba+ZKAQeNZ/", "FCWanFa");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = t.call(this) || this;
e._gameName = null;
e._gameGuize = null;
e._btnBG = null;
e._btnOk = null;
e._btnClose = null;
return e;
}
(i = e).getInstance = function(n) {
if (!this.instance) {
this.instance = new i();
cc.loader.loadRes(cc.vv.MJConfig.UIWanFaPanel, function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
}
return this.instance;
};
e.prototype.start = function() {
var e = this;
this._btnBG = this.node.getChildByName("bg");
this._btnOk = this.node.getChildByName("btn_ok");
this._btnClose = this.node.getChildByName("btn_close");
this._gameName = this.node.getChildByName("name").getComponent(cc.Label);
this._gameGuize = this.node.getChildByName("guize").getComponent(cc.RichText);
this._btnBG.on(cc.Node.EventType.TOUCH_END, function() {
e.ondestroy();
});
this._btnOk.on(cc.Node.EventType.TOUCH_END, function() {
e.ondestroy();
});
this._btnClose.on(cc.Node.EventType.TOUCH_END, function() {
e.ondestroy();
});
var t = cc.vv.gameType.getWaFaDecs(cc.vv.gameNetMgr.conf.server_type, cc.vv.gameNetMgr.conf.type_index, cc.vv.gameNetMgr.conf.rule_index);
this._gameName.string = cc.vv.gameNetMgr.getGameTypeStr();
this._gameGuize.string = "<color=#fcecd1>" + t + "<color=#fcecd1>";
};
e.prototype.ondestroy = function() {
cc.vv.audioMgr.playBtnClick();
this.node.destroy();
i.instance = null;
};
var i;
e.instance = null;
return e = i = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FCZZConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d3c2jAxKBJia7AkKd0k2Fi", "FCZZConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(a) {
__extends(e, a);
function e() {
return null !== a && a.apply(this, arguments) || this;
}
e.prototype.NetBase = function() {};
e.prototype.gameInitView = function() {};
e.prototype.synUIData = function() {};
e.prototype.syncOperation = function() {};
e.prototype.clear = function() {};
e.prototype.simpleSort = function(e) {
if (cc.vv.mahjongUtils.has_rule(cc.vv.gameNetMgr.conf.rule_index, 9)) {
for (var t = e.slice(0), i = [], n = 0; n < t.length; n++) if (53 == t[n]) {
i.push(t[n]);
t.splice(n, 1);
n = -1;
}
t = a.prototype.simpleSort.call(this, t);
0 < i.length && (t = t.concat(i));
return t;
}
return a.prototype.simpleSort.call(this, e);
};
e.prototype.setCardSprite = function(e, t, i, n) {
t.getChildByName("item").getComponent("Hunan_Item").setHandValueAndColor(i);
cc.vv.mahjongUtils.has_rule(cc.vv.gameNetMgr.conf.rule_index, 9) ? 53 != i && e.onMJtprefabEvent(t) : e.onMJtprefabEvent(t);
t.active = !0;
};
e.prototype.isHitBird = function(e, t) {
return cc.vv.mahjongUtils.has_rule(cc.vv.gameNetMgr.conf.rule_index, 9) && 53 == e || cc.vv.mahjongUtils.GetZZIsBird(e, t);
};
return e;
}(e("./FIMahjongConfig").FIMahjongConfig);
i.FCZZConfig = n;
cc._RF.pop();
}, {
"./FIMahjongConfig": "FIMahjongConfig"
} ],
FICreateRoom: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5cb0exIuUdO0ZDcwIDeUVHO", "FICreateRoom");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e._roomNode = null;
e._jSBrick = null;
e._jSRoom = null;
e.gameTypeNumber = 0;
e.serverCode = 0;
e.roomName = "";
e._roomNodestr = "";
e._JsonObjet = null;
e._radioArr = [];
e._roomCard = null;
e._roomBrick = null;
e._ico = [];
e._brickRoomStr = [];
return e;
}
e.prototype.onBtnSound = function(e) {
void 0 === e && (e = null);
cc.vv.audioMgr.playBtnClick();
};
__decorate([ s(cc.Node) ], e.prototype, "_roomNode", void 0);
__decorate([ s(cc.Node) ], e.prototype, "_jSBrick", void 0);
__decorate([ s(cc.Node) ], e.prototype, "_jSRoom", void 0);
__decorate([ s ], e.prototype, "gameTypeNumber", void 0);
__decorate([ s ], e.prototype, "serverCode", void 0);
__decorate([ s([ cc.Toggle ]) ], e.prototype, "_radioArr", void 0);
__decorate([ s(cc.Node) ], e.prototype, "_roomCard", void 0);
__decorate([ s(cc.Node) ], e.prototype, "_roomBrick", void 0);
__decorate([ s([ cc.Node ]) ], e.prototype, "_ico", void 0);
__decorate([ s([ cc.Label ]) ], e.prototype, "_brickRoomStr", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.FICreateRoom = c;
cc._RF.pop();
}, {} ],
FIGameMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ccfd9mBd1NEarDMOkW0Ngqg", "FIGameMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.GAMENODE = null;
e.UINODE = null;
e.holdsMgr = null;
e.foldsMgr = null;
e.actionMgr = null;
e.UIBaseMgr = null;
e.headNextIndex = 0;
e.walls = [];
e.wallsNodeList = [];
e.headWallLArray = [];
e.tailWallLArray = [];
e.playWall = !1;
e.action_type = 0;
e.chiNode = null;
e.gangNode = null;
e.btnNode = null;
e.operation = null;
e.chiNodeArray = [];
e.effNodeArray = [];
e.chiCardArray = [];
e.actionItemList = [];
e.topaiArray = [];
return e;
}
__decorate([ s([ cc.Prefab ]) ], e.prototype, "actionItemList", void 0);
__decorate([ s([ cc.Prefab ]) ], e.prototype, "topaiArray", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.FIGameMgr = c;
cc._RF.pop();
}, {} ],
FIMahjongConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "19b50B7XYJEK7nU7le1sT9f", "FIMahjongConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function() {
function e() {
var e;
this.netBase = null;
this.crBtnOK = "Canvas/CreateRoom/CreateRoom/btn_ok/lb_str";
this.crNodestr = "Canvas/CreateRoom/CreateRoom/bg_xuanqu/rulePanle/hnMJ";
this.crRightNode = "Canvas/CreateRoom/up_group/right_Node";
this.crGoldInfo = "hall/prefabs/gold_info";
this.temporaryGame = "game/3DMahjong/prefabs/Game/game";
this.GAMENODE = "game/3DMahjong/prefabs/Game/GAMENODE";
this.UIShow = "game/3DMahjong/prefabs/UI/show";
this.UIPrepare = "game/3DMahjong/prefabs/UI/prepare";
this.UIReconnect = "game/public/prefabs/reconnect";
this.UIOperation = "game/3DMahjong/prefabs/UI/operationNode";
this.UISeats = "game/3DMahjong/prefabs/UI/p_seats";
this.UIAlert = "game/3DMahjong/prefabs/UI/p_alert";
this.UITingPanel = "game/3DMahjong/prefabs/UI/p_ting";
this.UIMorePanel = "game/3DMahjong/prefabs/UI/p_more";
this.UIWanFaPanel = "game/3DMahjong/prefabs/UI/p_wanFa";
this.UIHuanFuPanel = "game/3DMahjong/prefabs/UI/p_choice";
this.UISheZhiPenl = "game/3DMahjong/prefabs/UI/p_settings";
this.UIChatPanel = "game/3DMahjong/prefabs/UI/p_chat";
this.UIVoicePanel = "game/public/prefabs/voice";
this.UIChatItem = "game/3DMahjong/prefabs/UI/chatItem";
this.UIRadar = "hall/prefabs/scanning";
this.UIPopups = "game/3DMahjong/prefabs/UI/p_popups";
this.UIOp_guo = "game/3DMahjong/prefabs/UI/btn_guo";
this.UIMagic = "game/3DMahjong/prefabs/UI/magic";
this.UIMagicIcon = "game/3DMahjong/textures/UI/magic/";
this.UIMagicSounds = "resources/hall/sounds/daoju/";
this.UIMagicTextures = "resources/hall/sounds/daoju/";
this.UIBatteryicon = "game/3DMahjong/textures/UI/dianchi/dianchi_";
this.GNTimeTurn = "game/3DMahjong/prefabs/Game/TimeTurn";
this.GNMyself = "game/3DMahjong/prefabs/Game/myselfNode";
this.GNRight = "game/3DMahjong/prefabs/Game/rightNode";
this.GNUp = "game/3DMahjong/prefabs/Game/upNode";
this.GNLeft = "game/3DMahjong/prefabs/Game/leftNode";
this.GNDrag = "game/3DMahjong/prefabs/Game/chupaidrag";
this.GNMahJong = "game/3DMahjong/prefabs/Game/Mah_Jong";
this.GNPointOut = "game/3DMahjong/prefabs/Game/point_out";
this.GNHuapRight = "game/3DMahjong/prefabs/Game/huap_right";
this.GNHuapLeft = "game/3DMahjong/prefabs/Game/huap_left";
this.GNUIReplay = "game/3DMahjong/prefabs/UI_replay";
this.quickChatInfo = ((e = {}).item0 = {
index: 0,
content: "快点啊，都等到我花儿都谢谢了！",
sound: "resources/hall/sounds/fix_msg_1.mp3"
}, e.item1 = {
index: 1,
content: "怎么又断线了，网络怎么这么差啊！",
sound: "resources/hall/sounds/fix_msg_2.mp3"
}, e.item2 = {
index: 2,
content: "不要走，决战到天亮！",
sound: "resources/hall/sounds/fix_msg_3.mp3"
}, e.item3 = {
index: 3,
content: "你的牌打得也太好了！",
sound: "resources/hall/sounds/fix_msg_4.mp3"
}, e.item4 = {
index: 4,
content: "你是妹妹还是哥哥啊？",
sound: "resources/hall/sounds/fix_msg_5.mp3"
}, e.item5 = {
index: 5,
content: "和你合作真是太愉快了！",
sound: "resources/hall/sounds/fix_msg_6.mp3"
}, e.item6 = {
index: 6,
content: "大家好，很高兴见到各位！",
sound: "resources/hall/sounds/fix_msg_7.mp3"
}, e.item7 = {
index: 7,
content: "各位，真是不好意思，我得离开一会儿。",
sound: "resources/hall/sounds/fix_msg_8.mp3"
}, e.item8 = {
index: 8,
content: "不要吵了，专心玩游戏吧！",
sound: "resources/hall/sounds/fix_msg_9.mp3"
}, e);
this.SoundMan = "resources/hall/sounds/mj/man_";
this.SoundWoman = "resources/hall/sounds/mj/man_";
}
e.prototype.Action_setValueAndColor = function(e, t) {
var i = t[0], n = (t[1], t[2], t[3]), a = t[4];
switch (i) {
case 1:
e.mj_img_1.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n + 1);
e.mj_img_2.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_img_3.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n + 2);
break;

case 2:
e.mj_img_1.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n - 1);
e.mj_img_2.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_img_3.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n + 1);
break;

case 3:
e.mj_img_1.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n - 2);
e.mj_img_2.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_img_3.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n - 1);
break;

case 4:
var s = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_img_1.spriteFrame = s;
e.mj_img_2.spriteFrame = s;
e.mj_img_3.spriteFrame = s;
break;

case 6:
switch (a) {
case 1:
e.mj_bg_wall[0].node.active = !0;
e.mj_bg_wall[1].node.active = !0;
e.mj_bg_wall[2].node.active = !0;
e.mj_img_4.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.node_visible.active = !0;
break;

case 2:
e.showGang(n);
break;

case 3:
cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_img_1.spriteFrame = cc.vv.mahjongmgr.getPengSpriteByID(n);
e.mj_bg_wall[1].node.active = !0;
e.mj_bg_wall[2].node.active = !0;
e.mj_bg_wall[3].node.active = !0;
e.node_visible.active = !0;
}
break;

case 10:
e.showGang(n);
}
};
e.prototype.playSFXfun = function(e) {
var t = 0;
e < 10 ? t = e : 16 < e && e < 26 ? t = e - 6 : 32 < e && e < 42 ? t = e - 12 : 48 < e && e < 56 ? t = e - 18 : 64 < e && e < 73 && (t = e - 24);
return t;
};
e.prototype.getMJID = function(e) {
var t = {
type: -1,
num: -1
}, i = cc.vv.mahjongUtils.index(e);
t.type = cc.vv.mahjongUtils.index_type(i);
t.num = cc.vv.mahjongUtils.index_value(i);
return t;
};
e.prototype.simpleSort = function(e) {
return e = e.sort(function(e, t) {
return t - e;
});
};
e.prototype.clearNode = function(e) {};
e.prototype.setToPushSprite = function(e) {};
e.prototype.pushOut = function(e, t) {
var i = JSON.parse(cc.vv.msgTemp_Hunan.CS_out_card);
i.out_card = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("out_card", i);
};
e.prototype.holdsSort = function(e, t) {
if (t) {
var i = {
holds: [],
start: -1
}, n = -1, a = t.slice(0);
a.length % 3 == 2 && (n = a.pop());
i.holds = e.simpleSort(a);
if (-1 !== n) {
i.holds.unshift(n);
i.start = -1;
} else i.start = 0;
return i;
}
console.log(" 异常 手牌空 ？");
};
e.prototype.updateShowHolds = function(e, t, i) {
e.updateHolds(t, i);
};
e.prototype.onActionClick = function(e, t) {
switch (t.btnName) {
case "btn_gang":
e.operationGang(t.type, t.card);
break;

case "btn_guo":
e.userOpreation(0, t.card);
break;

case "btn_chi":
if (1 < t.type.length) {
e.updateShowChiPai(t.type);
e.setChiNode(!0);
} else e.userOpreation(t.type[0], t.card);
break;

case "btn_peng":
case "btn_hu":
e.userOpreation(t.type, t.card);
}
};
e.prototype.showUpdateAction = function(e, t) {
var i = this.updateAction(e, t);
i ? cc.log("其他玩家有操作:" + i) : e.setChiNode(!1);
};
e.prototype.updateAction = function(n, a) {
if (65535 != a.mask && a.mask) {
var s = this;
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_guo", function(e, t) {
var i = cc.instantiate(t);
n.btnNodeAdd(i);
s.show_chi_btn(n, a.mask, a.card);
});
return !1;
}
return !0;
};
e.prototype.show_chi_btn = function(a, s, c) {
var r = this;
if (cc.vv.mahjongUtils.has_rule(s, 1) || cc.vv.mahjongUtils.has_rule(s, 2) || cc.vv.mahjongUtils.has_rule(s, 3)) {
var o = [];
cc.vv.mahjongUtils.has_rule(s, 1) && o.push(1);
cc.vv.mahjongUtils.has_rule(s, 2) && o.push(2);
cc.vv.mahjongUtils.has_rule(s, 3) && o.push(3);
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_chi", function(e, t) {
var i = cc.instantiate(t), n = i.getComponent("FCOperateBtn");
n.type = o;
n.card = c;
a.btnNodeAdd(i);
r.show_peng_btn(a, s, c);
});
} else this.show_peng_btn(a, s, c);
};
e.prototype.show_peng_btn = function(a, s, c) {
var r = this;
cc.vv.mahjongUtils.has_rule(s, 4) ? cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_peng", function(e, t) {
var i = cc.instantiate(t), n = i.getComponent("FCOperateBtn");
n.type = 4;
n.card = c;
a.btnNodeAdd(i);
r.show_hu_btn(a, s, c);
}) : this.show_hu_btn(a, s, c);
};
e.prototype.show_hu_btn = function(a, s, c) {
var r = this, o = 0;
if (cc.vv.mahjongUtils.has_rule(s, 8) || cc.vv.mahjongUtils.has_rule(s, 9)) {
cc.vv.mahjongUtils.has_rule(s, 8) && (o = 8);
cc.vv.mahjongUtils.has_rule(s, 9) && (o = 9);
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_hu", function(e, t) {
var i = cc.instantiate(t), n = i.getComponent("FCOperateBtn");
n.type = o;
n.card = c;
a.btnNodeAdd(i);
r.show_gang_btn(a, s, c);
});
} else this.show_gang_btn(a, s, c);
};
e.prototype.show_gang_btn = function(a, e, s) {
if (cc.vv.mahjongUtils.has_rule(e, 5) || cc.vv.mahjongUtils.has_rule(e, 6)) {
var c = 0;
c = cc.vv.mahjongUtils.has_rule(e, 5) ? 5 : 6;
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_gang", function(e, t) {
var i = cc.instantiate(t), n = i.getComponent("FCOperateBtn");
n.type = c;
n.card = s;
a.btnNodeAdd(i);
});
}
};
e.prototype.operation = function(e, t) {
this.mjTxPush(e, t);
};
e.prototype.mjTxPush = function(e, s) {
var c = "", r = this, o = s.op_code, t = cc.vv.gameNetMgr.getLocalIndex(s.seat_index), h = e.effNodeArray[t];
cc.loader.loadRes("game/3DMahjong/prefabs/Game/TX_prefabs", function(e, t) {
var i = cc.instantiate(t);
h.addChild(i);
switch (o) {
case 1:
case 2:
case 3:
c = "chi";
i.getComponent(cc.Animation).play("basic_chi");
break;

case 4:
c = "peng";
i.getComponent(cc.Animation).play("basic_peng");
break;

case 5:
case 6:
c = "gang";
i.getComponent(cc.Animation).play("basic_gang");
break;

case 7:
case 8:
if (cc.vv.mahjongUtils.has_rule(s.right, 17)) {
c = "zimo";
i.getComponent(cc.Animation).play("basic_zimo");
} else {
c = "hu";
i.getComponent(cc.Animation).play("basic_hu");
}
}
if ("" != c) {
var n = cc.vv.gameNetMgr.seats[s.seat_index], a = "";
a = 1 == r.getSex(n.userid) ? "resources/hall/sounds/mj/" + c + ".mp3" : "resources/hall/sounds/mj/g_" + c + ".mp3";
cc.vv.audioMgr.playSFX(a);
}
});
};
e.prototype.getSex = function(e) {
var t = 0;
if (cc.vv.baseInfoMap) {
var i = cc.vv.baseInfoMap[e];
i && (t = i.sex);
}
return t;
};
e.prototype.birds = function(e) {
var c = e.birds, r = this;
cc.vv.gameNetMgr.gameBirds = [];
cc.vv.Event.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
for (var e = 0; e < c.length; e++) {
var t = c[e], i = cc.vv.mahjongUtils.index(t), n = cc.vv.mahjongUtils.index_value(i), a = r.isHitBird(t, n), s = {
id: 0,
is: 0
};
s.id = t;
s.is = a;
cc.vv.gameNetMgr.gameBirds.push(s);
}
})));
cc.vv.Event.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
cc.loader.loadRes("game/3DMahjong/prefabs/game_birds", function(e, t) {
var i = cc.instantiate(t);
cc.vv.Event.addChild(i);
});
})));
};
e.prototype.isHitBird = function(e, t) {
return cc.vv.MJConfig.isHitBird(e, t);
};
e.prototype.over = function(e) {
cc.loader.loadRes("game/3DMahjong/prefabs/mj_game_over", function(e, t) {
var i = cc.instantiate(t);
cc.vv.Event.addChild(i);
});
};
return e;
}();
i.FIMahjongConfig = n;
cc._RF.pop();
}, {} ],
FIShow: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4a0244d3YRNVJfgx1/t67CU", "FIShow");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.showNode = null;
e.show = null;
return e;
}
e.prototype.initView = function(e) {
var n = this;
this.showNode = e;
this.showNode.active = !1;
cc.loader.loadRes(cc.vv.MJConfig.UIShow, function(e, t) {
var i = cc.instantiate(t);
n.show = i.getComponent("FCShow");
n.showNode.addChild(i);
});
cc.vv.Event.on("show_lbPainum", function(e) {
n.lbPainum(e.detail);
});
};
e.prototype.setShow = function() {
this.showNode.active = !0;
};
e.prototype.lbPainum = function(e) {
null == this.show && this.scheduleOnce(function() {
this.lbPainum(e);
}, .1);
null != this.show && this.show.lbPainum(e);
};
e.prototype.showflower = function(e) {
null == this.show && this.scheduleOnce(function() {
this.showflower(e);
}, .1);
null != this.show && this.show.showflower(e);
};
e.prototype.wall = function(e) {
null == this.show && this.scheduleOnce(function() {
this.wall(e);
}, .1);
null != this.show && this.show.wall(e);
};
e.prototype.clear = function() {
this.show.lbPainum(0);
};
e.prototype.onDestroy = function() {
this.show = null;
this.showNode = null;
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FITingNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c2389N9sRJIiaMGxt6ePopm", "FITingNode");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.tingNode = null;
e.getPrefab = null;
return e;
}
e.prototype.initView = function(e) {
var t = this;
this.tingNode = e;
cc.vv.Event.on("mj_ting_push", function(e) {
t.updateShowTing(e.detail);
});
if (1 < cc.vv.gameNetMgr.gamestate) for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; n++) cc.vv.userMgr.userId == i[n].userid && i[n].ting && 0 < i[n].ting.length && t.updateShowTing(i[n].ting);
};
e.prototype.updateShowTing = function(i) {
var n = this;
if (0 < i.length) if (null == this.getPrefab) {
this.tingNode.removeAllChildren();
cc.loader.loadRes("" + cc.vv.MJConfig.UITingPanel, function(e, t) {
n.getPrefab = cc.instantiate(t);
n.getPrefab.getComponent("FCTing").PutInItems(i);
n.tingNode.addChild(n.getPrefab);
});
} else this.getPrefab.getComponent("FCTing").PutInItems(i); else if (this.getPrefab) {
this.getPrefab = null;
this.tingNode.removeAllChildren();
}
};
e.prototype.clear = function() {
this.updateShowTing([]);
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
FPF_GameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "efbf4xSUCZB55MVMu9v7GeJ", "FPF_GameOver");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.initData();
this.initNode();
this.initEventHandler();
this.showBtnReadyLabelByState();
}
},
initData: function() {
this.huCountList = [];
this.itemLableList = [];
this.userList = [];
this.itemCardTag = 1100;
this._maxPlayerNum = 3;
this._handCardSpriteSize = {
width: 56,
height: 62
};
},
initNode: function() {
this._gameOverRoot = this.node.getChildByName("bg");
this._surplusCardsNode = this._gameOverRoot.getChildByName("surplusCardsNode");
this.initHuIcon();
this.initCommonLabels();
this.initHuCountLabels();
this.initUsers();
this.initFanLables();
this.node.active = !1;
},
initCommonLabels: function() {
this.lb_huXi = this._gameOverRoot.getChildByName("lb_huXi").getComponent(cc.Label);
this.lb_fanShu = this._gameOverRoot.getChildByName("lb_fanShu").getComponent(cc.Label);
this.lb_tunShu = this._gameOverRoot.getChildByName("lb_tunShu").getComponent(cc.Label);
this.lb_total = this._gameOverRoot.getChildByName("lb_total").getComponent(cc.Label);
this.lb_huXi.string = "";
this.lb_tunShu.string = "";
this.lb_total.string = "";
},
initHuIcon: function() {
this.icon_huCardSign = this._gameOverRoot.getChildByName("huCardFrame");
this.icon_huCardSign.active = !1;
this.icon_huCardSign.setLocalZOrder(10);
},
initHuCountLabels: function() {
this._huCountNode = this._gameOverRoot.getChildByName("itemCardHuCountNode");
for (var e = 0; e < 8; e++) {
var t = this._huCountNode.getChildByName("huCount" + e), i = this._huCountNode.getChildByName("itemLable" + e);
t.getComponent(cc.Label).string = "";
i.getComponent(cc.Label).string = "";
this.huCountList.push(t);
this.itemLableList.push(i);
}
},
initUsers: function() {
for (var e = this._gameOverRoot.getChildByName("UserNode"), t = 0; t < this._maxPlayerNum; t++) {
var i = {}, n = e.getChildByName("user" + t);
i.frame = n.getChildByName("frame").getComponent(cc.Sprite);
i.icon_winOrLoseTyp = n.getChildByName("icon_winOrLoseType").getComponent(cc.Sprite);
i.icon_winOrLose = n.getChildByName("icon_winOrLose").getComponent(cc.Sprite);
i.lb_score = n.getChildByName("lb_score").getComponent(cc.Label);
i.lb_name = n.getChildByName("lb_name").getComponent(cc.Label);
i.lb_id = n.getChildByName("lb_id").getComponent(cc.Label);
i.image_atavar = n.getChildByName("head").getChildByName("image_Atavar").getComponent("ImageLoader");
this.userList.push(i);
}
},
initFanLables: function() {
var e = this._gameOverRoot.getChildByName("fanLabelNode");
this.Lb_fanTypeList = [];
for (var t = 0; t < 12; t++) {
var i = "lb_fanType" + t, n = e.getChildByName(i).getComponent(cc.Label);
this.Lb_fanTypeList.push(n);
}
},
showBtnReadyLabelByState: function() {
var e = this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label);
cc.vv.gameNetMgr.isOver ? e.string = "总结算" : e.string = "继续";
},
initEventHandler: function() {
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("wp_over", this.call_game_over, this);
this.gameRoot.on("game_result_showLB", this.showLb, this);
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function(e) {
var t = this;
if (1 != e.detail.force) {
var i = cc.vv.gameNetMgr.getIsSpcialHu() ? 1 : 0;
this.gameRoot && this.gameRoot.runAction(cc.sequence(cc.delayTime(3.5 + i), cc.callFunc(function(e) {
t.onGameOver();
})));
} else this.onGameOver();
},
onGameOver: function() {
this.icon_huCardSign.active = !1;
this.node.active = !0;
var e = cc.vv.gameNetMgr.gameOverData, t = e.end_seats_data, i = (e.force, e.tian_hu, 
e.hu_user_id), n = e.pao_user_id;
this.hu_card = e.hu_card;
e.button;
var a = e.pokers, s = e.hu_details;
this.totalHuCount = 0;
this.hu_index = 0;
this.pick_hu = e.pick_hu;
console.log("log------------fangroup=:", e.fan_group);
console.log("log-------------hu_details=:", e.hu_details);
this.clear();
this.showSurplusCards(a);
this.showItemsInfo(t, i);
this.showHuDetails(t, s);
this.showFanGroups(e.fan_group);
this.showPlayer(t, i, n);
this.lb_huXi.string = "";
this.lb_fanShu.string = "";
this.lb_tunShu.string = "";
this.lb_huXi.string = "胡息 +" + e.total_hu_nums;
this.lb_fanShu.string = "番数 +" + e.total_fan_nums;
},
showSurplusCards: function(e) {
for (var t = 0; t < e.length; t++) {
var i = cc.vv.zipai_drawCard.drawCard(e[t], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
i.parent = this._surplusCardsNode;
i.setScale(.6);
i.setPosition((t + .5) * this._handCardSpriteSize.width * .6, 0);
}
},
showItemsInfo: function(e, t) {
for (var i = 0; i < e.length; i++) if (t == e[i].user_id) {
for (var n = 0; n < e[i].items.length; n++) {
var a = n, s = e[i].items[n][0], c = e[i].items[n][1], r = cc.vv.FPF_Utils.getItemCards(s, c), o = cc.vv.FPF_Utils.getHuCount(s, r), h = this.getItemType(s);
this.huCountList[n].getComponent(cc.Label).string = o;
this.itemLableList[a].getComponent(cc.Label).string = h;
this.showItemCards(r, a, cc.vv.zipai_drawCard.enumTalbe.cardSort.ITEM, s);
this.totalHuCount += o;
}
this.hu_index = i;
break;
}
},
showHuDetails: function(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i][0], a = t[i][1], s = e[this.hu_index].items.length + i;
this.showItemCards(a, s, cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS, n);
var c = cc.vv.FPF_Utils.getHuCount(n, a), r = this.getItemType(n);
this.huCountList[s].getComponent(cc.Label).string = c;
this.itemLableList[s].getComponent(cc.Label).string = r;
this.totalHuCount += c;
}
this.huCountList[7].getComponent(cc.Label).string = this.totalHuCount;
this.lb_total.string = this.totalHuCount;
},
showItemCards: function(e, t, i, n) {
for (var a in e) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == a && (s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
s.parent = this._gameOverRoot;
s.tag = this.itemCardTag;
s.setScale(.5);
var c = this.huCountList[t].getPosition();
s.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
if (i == cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS && !this.icon_huCardSign.active && e[a] == this.hu_card) {
this.icon_huCardSign.active = !0;
this.icon_huCardSign.setScale(.8);
this.icon_huCardSign.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
!0;
}
}
},
getItemType: function(e) {
var t = "";
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
t = "吃";
break;

case cc.vv.globalSetting.ITEM_PENG:
t = "碰";
break;

case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
t = "偎";
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
t = "提";
break;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
t = "跑";
break;

case cc.vv.globalSetting.ITEM_KAN:
t = "坎";
break;

case cc.vv.globalSetting.ITEM_DUIZI:
t = "对";
break;

case cc.vv.globalSetting.ITEM_SHUNZI:
t = "句";
}
return t;
},
showPlayer: function(e, t, i) {
this.sortByScore(e);
for (var n = 0; n < e.length; n++) {
var a = null, s = null, c = null;
if (0 < e[n].end_score) {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_win");
s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("win");
var r = this.judgeIsPeace(e);
t != i || r || (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_zimo"));
} else {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_lose");
e[n].end_score < 0 && (s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("lose"));
e[n].user_id == i && this.pick_hu <= 0 && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("fangpao"));
e[n].user_id == i && 0 < this.pick_hu && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_dianpao"));
}
var o = this.getUserNameByID(e[n].user_id);
this.userList[n].frame.spriteFrame = a;
this.userList[n].icon_winOrLose.spriteFrame = s;
this.userList[n].icon_winOrLoseTyp.spriteFrame = c;
this.userList[n].lb_score.string = e[n].end_score;
if (cc.vv.userMgr.isHighDefend) {
this.userList[n].lb_name.string = "已屏蔽";
this.userList[n].lb_id.string = "已屏蔽";
} else {
this.userList[n].lb_name.string = o;
this.userList[n].lb_id.string = e[n].user_id;
}
this.userList[n].image_atavar.setUserID(e[n].user_id);
}
},
sortByScore: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t].end_score < e[i].end_score) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
showFanGroups: function(e) {
this.resetfanLabels();
var t = 0;
for (var i in e) {
this.showSingleFanGroup(t, e[i]);
t++;
}
},
resetfanLabels: function() {
for (var e = 0; e < this.Lb_fanTypeList.length; e++) this.Lb_fanTypeList[e].string = "";
},
showSingleFanGroup: function(e, t) {
var i = "";
switch (t) {
case cc.vv.globalSetting.FAN_TYPE_TIAN_HU:
i = "天胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DI_HU:
i = "地胡";
break;

case cc.vv.globalSetting.FAN_TYPE_KA_HU_30_HU:
i = "卡胡30胡";
break;

case cc.vv.globalSetting.FAN_TYPE_KA_HU_20_HU:
i = "卡胡20胡";
break;

case cc.vv.globalSetting.FAN_TYPE_HEI_HU:
i = "乌胡";
break;

case cc.vv.globalSetting.FAN_TYPE_HONG_HU_13_HU:
i = "红胡十三红";
break;

case cc.vv.globalSetting.FAN_TYPE_HONG_HU_10_HU:
i = "红胡十红";
break;

case cc.vv.globalSetting.FAN_TYPE_HAIDI_HU:
i = "海底胡";
break;

case cc.vv.globalSetting.FAN_TYPE_ONE_BIAN:
i = "一块扁";
break;

case cc.vv.globalSetting.FAN_TYPE_ONE_DIAN_HONG:
i = "一点红";
break;

case cc.vv.globalSetting.FAN_TYPE_FANG_PAO:
i = "放炮";
break;

case cc.vv.globalSetting.FAN_TYPE_SELF_HU:
i = "自摸";
}
this.Lb_fanTypeList[e].string = i;
},
getUserNameByID: function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) if (e == t[i].userid) return t[i].name;
},
judgeIsPeace: function(e) {
for (var t = 0, i = 0; i < e.length; i++) 0 < e[i].end_score && t++;
return 1 < t;
},
clear: function() {
this.clearHuCount();
this.clearItemLabels();
this.clearItemCards();
this.clearSurplusCards();
},
clearHuCount: function() {
for (var e in this.huCountList) this.huCountList[e].getComponent(cc.Label).string = "";
},
clearItemLabels: function() {
for (var e in this.itemLableList) this.itemLableList[e].getComponent(cc.Label).string = "";
},
clearItemCards: function() {
for (;this._gameOverRoot.getChildByTag(this.itemCardTag); ) this._gameOverRoot.removeChildByTag(this.itemCardTag);
},
clearSurplusCards: function() {
this._surplusCardsNode.removeAllChildren();
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.gameRoot.emit("show_gameResult"); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.active = !1;
this.gameRoot.emit("fresh_all_score");
},
onDestroy: function() {
this.gameRoot.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
FPF_GlobalSetting: [ function(e, i, a) {
(function(t) {
"use strict";
cc._RF.push(i, "6a144maqntLOIYfozq1rJfO", "FPF_GlobalSetting");
var n = {
DISMISS_TIME: 12e4,
GAME_TYPE_CLASSIC: 1,
MASK_PC10: 1,
MASK_PC20: 2,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
ITEM_LEFT_CHI: 1,
ITEM_CENTER_CHI: 2,
ITEM_RIGHT_CHI: 3,
ITEM_SMALL_ERQISHI_CHI: 4,
ITEM_BIG_ERQISHI_CHI: 5,
ITEM_TWO_BIG_SMALL_CHI: 6,
ITEM_TWO_SMALL_BIG_CHI: 7,
ITEM_PENG: 8,
ITEM_SAO: 9,
ITEM_GUO_SAO: 10,
ITEM_SAO_CHUAN: 11,
ITEM_KAI_DUO: 12,
ITEM_PENG_KAI_DUO: 13,
ITEM_SAO_KAI_DUO: 14,
ITEM_SAO_SAO_CHUAN: 15,
ITEM_SELF_SAO_CHUAN: 16,
ITEM_KAN: 17,
ITEM_DUIZI: 18,
ITEM_SHUNZI: 19,
OPERATE_PASS: 1,
OPERATE_LEFT_CHI: 2,
OPERATE_CENTER_CHI: 3,
OPERATE_RIGHT_CHI: 4,
OPERATE_SMALL_ERQISHI_CHI: 5,
OPERATE_BIG_ERQISHI_CHI: 6,
OPERATE_TWO_BIG_SMALL_CHI: 7,
OPERATE_TWO_SMALL_BIG_CHI: 8,
OPERATE_PENG: 9,
OPERATE_SAO: 10,
OPERATE_GUO_SAO: 11,
OPERATE_SAO_CHUAN: 12,
OPERATE_KAI_DUO: 13,
OPERATE_PENG_KAI_DUO: 14,
OPERATE_SAO_KAI_DUO: 15,
OPERATE_SAO_SAO_CHUAN: 16,
OPERATE_HU: 17,
OPERATE_PENG_KAI_DUO_HU: 18,
OPERATE_SAO_KAI_DUO_HU: 19,
OPERATE_SAO_SAO_CHUAN_HU: 20,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_LEFT_CHI: 3,
ACTION_CENTER_CHI: 4,
ACTION_RIGHT_CHI: 5,
ACTION_SMALL_ERQISHI_CHI: 6,
ACTION_BIG_ERQISHI_CHI: 7,
ACTION_TWO_BIG_SMALL_CHI: 8,
ACTION_TWO_SMALL_BIG_CHI: 9,
ACTION_PENG: 10,
ACTION_SAO: 11,
ACTION_GUO_SAO: 12,
ACTION_SAO_CHUAN: 13,
ACTION_KAI_DUO: 14,
ACTION_PENG_KAI_DUO: 15,
ACTION_SAO_KAI_DUO: 16,
ACTION_SAO_SAOCHUAN: 17,
ACTION_SELF_SAO_CHUAN: 18,
ACTION_HU: 19,
ACTION_LEFT_CHI_XIABI: 20,
ACTION_CENTER_CHI_XIABI: 21,
ACTION_RIGHT_CHI_XIABI: 22,
ACTION_SMALL_ERQISHI_CHI_XIABI: 23,
ACTION_BIG_ERQISHI_CHI_XIABI: 24,
ACTION_TWO_BIG_SMALL_CHI_XIABI: 25,
ACTION_TWO_SMALL_BIG_CHI_XIABI: 26,
FAN_TYPE_TIAN_HU: 1,
FAN_TYPE_DI_HU: 2,
FAN_TYPE_KA_HU_30_HU: 3,
FAN_TYPE_KA_HU_20_HU: 4,
FAN_TYPE_HEI_HU: 5,
FAN_TYPE_HONG_HU_13_HU: 6,
FAN_TYPE_HONG_HU_10_HU: 7,
FAN_TYPE_HAIDI_HU: 8,
FAN_TYPE_ONE_BIAN: 9,
FAN_TYPE_ONE_DIAN_HONG: 10,
FAN_TYPE_FANG_PAO: 11,
FAN_TYPE_SELF_HU: 12,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
MIN_HUXI_NUMS: 15,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
has_rule: function(e, t) {
return 0 != (e & 1 << t);
},
type_check: function(e) {
var t = 0;
n.has_rule(e, n.GAME_TYPE_CLASSIC) && (t += 1);
return 1 == t;
},
rule_check: function(e) {
var t = 0;
n.has_rule(e, n.MASK_PC10) && (t += 1);
n.has_rule(e, n.MASK_PC20) && (t += 1);
if (1 != t) return !1;
var i = 0;
n.has_rule(e, n.MASK_INGOT_GAME) && (i += 1);
n.has_rule(e, n.MASK_GOLD_GAME) && (i += 1);
return 1 == i;
},
get_ingot_value: function(e) {
if ("zy" == t.env.NODE_ENV || "zy2" == t.env.NODE_ENV) {
if (n.has_rule(e, n.MASK_INGOT_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 2;
if (n.has_rule(e, n.MASK_PC20)) return 3;
}
if (n.has_rule(e, n.MASK_GOLD_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 3;
if (n.has_rule(e, n.MASK_PC20)) return 4;
}
} else {
if (n.has_rule(e, n.MASK_INGOT_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 1;
if (n.has_rule(e, n.MASK_PC20)) return 2;
}
if (n.has_rule(e, n.MASK_GOLD_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 1;
if (n.has_rule(e, n.MASK_PC20)) return 2;
}
}
}
};
a.global = n;
cc._RF.pop();
}).call(this, e("_process"));
}, {
_process: 118
} ],
FPF_Msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41517H/vt5K67pHZqbS516F", "FPF_Msgdefine");
var n = {};
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
button: 0,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
total_hu_nums: 0,
self_hu_zi_nums: 0,
pokers: [],
hu_details: [],
fan_group: []
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_action_mask = JSON.stringify({
action_mask: 0,
xiabi_actions: {},
card: 0
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.CS_card_type_action = JSON.stringify({
action: 0,
xiabi_action: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
FPF_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6cae8r2tY9H0oe2mAWCAHsp", "FPF_Replay");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_iconsNodes: [],
_itemNodes: [],
_foldsNodes: [],
_holdsNodes: [],
_playerPos: []
},
onLoad: function() {
if (cc.vv) {
this.replayGameNode = cc.find("Canvas/replayGame");
this.gameNode = cc.find("Canvas/game");
this.peaceNode = this.replayGameNode.getChildByName("peaceNode");
this.replayGameNode.active = !0;
this.peaceNode.active = !1;
this.gameNode.active = !1;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.initData();
this.initView();
this.initHoldNodes();
this.initSeats();
this.initBigCardBack();
this.initEvent();
this.judgeShowPeace();
} else cc.director.loadScene("loading");
},
initData: function() {
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._beginThrowCardPos = [ {
x: 0,
y: -50
}, {
x: 100,
y: 100
}, {
x: -100,
y: 100
} ];
this.holdsList = [ [], [], [] ];
this.foldsList = [ [], [], [] ];
this.itemsList = [ [], [], [] ];
this.holdsSpriteList = [ [], [], [] ];
this.actionCount = 0;
this.outPool = [];
this.outCardTag = 10086;
},
initView: function() {
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3"), s = i.getChildByName("icons"), c = i.getChildByName("items"), r = i.getChildByName("folds");
a.active = !1;
this._zhuangs.push(a);
this._iconsNodes.push(s);
this._itemNodes.push(c);
this._foldsNodes.push(r);
this._playerPos.push(i.getPosition());
}
this.cardNode = cc.find("Canvas/replayGame/cardNode");
},
initHoldNodes: function() {
for (var e = [ "selfHandCardNode", "rightHandCardNode", "leftHandCardNode" ], t = 0; t < e.length; t++) {
var i = this.replayGameNode.getChildByName(e[t]);
i && this._holdsNodes.push(i);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.holdsList[i] = e[t].holds.concat();
this.drawHolds(e[t].holds, i);
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button, n = this._seats2[t];
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.cardNode;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initEvent: function() {
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
drawHolds: function(e, t) {
var i = null;
if (0 == t) {
i = cc.vv.zipai_drawCard.enumTalbe.cardType.BIG;
console.log("log--------------drawHolds---\x3eholds:", e);
} else i = cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL;
this._holdsNodes[t].removeAllChildren();
this.holdsSpriteList[t] = [];
for (var n = e.concat(), a = cc.vv.zipai_cardsSort.cardSort(n), s = 0; s < a.sort.length; s++) {
this.holdsSpriteList[t][s] = {
posx: s * this._outCardSpriteSize.width - 640,
cards: []
};
for (var c = 0; c < Math.ceil(a.sort[s].type); c++) {
2.5 == a.sort[s].type && 2 == c && (10 < a.sort[s].value ? a.sort[s].value -= 10 : a.sort[s].value += 10);
2.3 == a.sort[s].type && 0 < c && a.sort[s].value++;
(r = cc.vv.zipai_drawCard.drawCard(a.sort[s].value, i)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(Math.ceil(a.sort[s].type) - c);
r.setLocalZOrder(Math.ceil(a.sort[s].type) - c);
this.holdsSpriteList[t][s].cards.push(r);
}
}
for (s = 0; s < a.single.length; s++) {
s % 3 == 0 && (this.holdsSpriteList[t][a.sort.length + Math.floor(s / 3)] = {
posx: (a.sort.length + Math.floor(s / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var r;
(r = cc.vv.zipai_drawCard.drawCard(a.single[s], i)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(a.single.length - s);
r.setLocalZOrder(a.single.length - s);
this.holdsSpriteList[t][a.sort.length + Math.floor(s / 3)].cards.push(r);
}
this.replaceCards(t);
},
replaceCards: function(e) {
for (var t = 0; t < this.holdsSpriteList[e].length; t++) for (var i = 0; i < this.holdsSpriteList[e][t].cards.length; i++) {
this.holdsSpriteList[e][t].cards[i].setLocalZOrder(this.holdsSpriteList[e][t].cards.length - i);
this.holdsSpriteList[e][t].cards[i].getComponent("zipai_card").setOrder(Math.ceil(this.holdsSpriteList[e][t].cards.length - i));
if (0 == e) this.holdsSpriteList[e][t].cards[i].setPosition(t * this._outCardSpriteSize.width - 310 + (8 - this.holdsSpriteList[e].length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * i - .1 * this._outCardSpriteSize.height); else {
this.holdsSpriteList[e][t].cards[i].setScale(.75);
this.holdsSpriteList[e][t].cards[i].setPosition(t * this._handCardSpriteSize.width * .75 + (8 - this.holdsSpriteList[e].length) * this._handCardSpriteSize.width / 2 * .75, this._handCardSpriteSize.height * i * .75);
}
}
},
onDoReplayAction: function(e) {
var t = e.detail.action, i = (e.detail.next, t.d_actions), n = i[0], a = i[1], s = i[2], c = i[3], r = cc.vv.gameNetMgr.getLocalIndex(n), o = cc.vv.gameNetMgr.getLocalIndex(c);
console.log("log seat  card  act_type=:", r, s, a);
this.showTurn(r);
if (a != cc.vv.globalSetting.ACTION_HU) this.deleteCard(); else if (n == c) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO, r);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", 1);
} else {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.HU, r);
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PAO, o);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", 1);
}
if (a == cc.vv.globalSetting.ACTION_PICK) {
if (0 < this.outPool.length) {
this.updateFoldsData(this.outPool[0]._card, this.outPool[0]._seat);
this.updateFolds(this.outPool[0]._seat);
this.outPool.pop();
}
if (0 == this.actionCount) this.showFirstPickCardAction(s, r); else {
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
}
} else if (a == cc.vv.globalSetting.ACTION_OUT) {
this.outPool.push({
_card: s,
_seat: r
});
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
(h = []).push(s);
this.updateHoldsData(h, r);
this.updateHolds(r);
} else {
this.outPool.pop();
if (a < cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI) {
var h = (d = cc.vv.FPF_Utils.getActionCards(a, s)).concat();
if (a != cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) for (var l = 0; l < h.length; l++) if (s == h[l]) {
h.splice(l, 1);
break;
}
} else {
var d;
h = (d = cc.vv.FPF_Utils.getActionCards(a, s)).concat();
}
this.showIconByAction(a, r);
this.updateHoldsData(h, r);
this.updateItemsData(d, r, a);
this.updateHolds(r);
this.updateItems(r);
}
this.actionCount++;
},
onDoReplayActionOver: function() {},
updateHolds: function(e) {
this.drawHolds(this.holdsList[e], e);
},
updateItems: function(e) {
for (var t = 1 == e ? -1 : 1, i = 0; i < this.itemsList[e].length; i++) for (var n = 0; n < this.itemsList[e][i].cards.length; n++) {
var a = null;
if (0 < this.itemsList[e][i].cards[n]) {
a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
var s = this.itemsList[e][i].act_type;
s == cc.vv.globalSetting.ACTION_SAO && n < 2 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(s == cc.vv.globalSetting.ACTION_SAO_CHUAN || s == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN || s == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) && n < 3 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI && 2 == n) {
var c = !1;
a.getComponent("zipai_card").setBlack(c);
}
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI && 2 == n) {
c = !1;
a.getComponent("zipai_card").setBlack(c);
}
} else a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
a.setScale(.6);
a.parent = this._itemNodes[e];
a.setPosition(t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
}
},
updateFolds: function(e) {
for (var t = 2 == e ? 1 : -1, i = 0; i < this.foldsList[e].length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(this.foldsList[e][i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.setScale(.6);
n.parent = this._foldsNodes[e];
n.setPosition(.6 * this._handCardSpriteSize.width * i * t + t * this._handCardSpriteSize.width * .6 / 2, 0);
}
},
updateHoldsData: function(e, t) {
for (var i = 0; i < e.length; i++) for (var n = 0; n < this.holdsList[t].length; n++) if (e[i] == this.holdsList[t][n]) {
this.holdsList[t].splice(n, 1);
break;
}
console.log("log---------seat   holds=:", t, this.holdsList[t]);
},
updateItemsData: function(e, t, i) {
var n = this.itemsList[t].length;
this.itemsList[t][n] = {
cards: [],
act_type: i
};
for (var a = 0; a < this.itemsList[t].length; a++) for (var s = 0; s < this.itemsList[t][a].cards.length; s++) if (this.itemsList[t][a].cards[0] == e[0] && this.itemsList[t][a].cards[1] == e[1] && this.itemsList[t][a].cards[2] == e[2] && e[0] == e[1] && e[0] == e[2]) {
this.itemsList[t][a].cards.push(e[0]);
this.itemsList[t].pop();
return;
}
for (a = 0; a < e.length; a++) this.itemsList[t][n].cards.push(e[a]);
},
updateFoldsData: function(e, t) {
this.foldsList[t].push(e);
},
showCard: function(e, t, i) {
(e = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.cardNode;
e.tag = this.outCardTag;
e.setPosition(0, 50);
var n = this;
if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD) {
e.setPosition(this._beginThrowCardPos[t].x, this._beginThrowCardPos[t].y);
e.runAction(cc.moveTo(.1, cc.p(0, 50)));
} else if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD) {
e.active = !1;
e.setPosition(0, 50);
e.setScale(.2, 1);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.1, .2, 1), cc.callFunc(function() {
e.active = !0;
e.runAction(cc.scaleTo(.1, 1, 1));
}), cc.callFunc(function() {
n.bigCardBack.active = !1;
})));
}
},
showFirstPickCardAction: function(e, t) {
var i = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
i.parent = this.cardNode;
i.tag = this.outCardTag;
i.setPosition(0, 50);
var n = 0 < t ? this._playerPos[t] : {
x: 0,
y: -300
}, a = this;
i.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.1, cc.p(n.x, n.y)), cc.callFunc(function() {
i.destroy();
a.holdsList[t].push(e);
a.updateHolds(t);
})));
},
deleteCard: function() {
for (;this.cardNode.getChildByTag(this.outCardTag); ) this.cardNode.removeChildByTag(this.outCardTag);
},
showTurn: function(e) {
for (var t = 0; t < this._seats2.length; t++) this._seats2[t].hideIconTurn();
this._seats2[e].showIconTurn();
},
judgeShowPeace: function() {
var e = this;
if (cc.vv.gameNetMgr.getIsPeaceGame()) {
var t = cc.vv.gameNetMgr.getActionCount();
this.node.runAction(cc.sequence(cc.delayTime(t + 1), cc.callFunc(function() {
e.peaceNode.active = !0;
})));
}
},
showIconByAction: function(e, t) {
if (e >= cc.vv.globalSetting.ACTION_LEFT_CHI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI || e >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", 1);
} else if (e == cc.vv.globalSetting.ACTION_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO || e == cc.vv.globalSetting.ACTION_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("wai", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO_CHUAN || e == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e >= cc.vv.globalSetting.ACTION_KAI_DUO && e <= cc.vv.globalSetting.ACTION_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", 1);
}
},
showIcon: function(e, t) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wei");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
});
cc._RF.pop();
}, {} ],
FPF_Room: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d382KollpF5L5+mXIUH7Tf", "FPF_Room");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_playerPos: [],
_itemsNodes: [],
_foldsNodes: [],
_iconsNodes: [],
_maxPlayerCount: null,
game_over: null
},
onLoad: function() {
var t = this;
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
this.initData();
this.initRes();
this.initView();
this.initComponent();
this.initSplitLine();
this.initOperationBtns();
this.initEatNode();
this.initHuNode();
this.initEventHandlers();
this.resetGame();
this.initBigCardBack();
this.initHoldsEventHandler();
this.initEatNodeEventHandler();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/GameBaseUI", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("BaseRoom")._seats2 = i._seats2;
e.getComponent("BaseRoom").initBaseRoom();
});
});
} else this.addComponent("FPF_Replay"); else cc.director.loadScene("loading");
},
initRes: function() {
this.gameNode = cc.find("Canvas/game");
this.outCardPools = this.gameNode.getChildByName("outCardPools");
this.lb_surplusCardNums = this.gameNode.getChildByName("lb_surplusCardNums");
this.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.gameOverHandNode = this.node.getChildByName("gameOverHandNode");
this.selfHandCardNode = this.gameNode.getChildByName("selfHandCardNode");
this.xingNode = this.node.getChildByName("xingNode");
this.surplusCardNode = this.node.getChildByName("surplusCardNode");
},
initData: function() {
this._maxPlayerCount = 3;
this._playerItems = [ [], [], [] ];
this._PlayerItemCount = [ 0, 0, 0 ];
this._outCardCoordinate = {
x: null,
y: null
};
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.isReconnectGame = !1;
this.iconItemTag = 1111;
this.recentOutCardValue = null;
this.pickCardCount = null;
this.shangbi_way = null;
this.xiabi_way = null;
this._handcardsInfoList = [];
this.end_seats_data = null;
this.xingCard = [];
this.isTianHu = !1;
this.has_action = !1;
this.actionCount = 0;
this.hucode = 0;
this.pick_seat = -1;
this.pick_data = -1;
this.out_seat = -1;
this.out_data = -1;
},
initComponent: function() {
cc.loader.loadRes("game/zipaiGames/fpf/prefabs/game_over", cc.Prefab, function(e, t) {
if (!e) {
this.game_over = cc.instantiate(t);
this.node.addChild(this.game_over, 10);
this.initSeats();
}
}.bind(this));
cc.loader.loadRes("game/zipaiGames/prefab/game_result", cc.Prefab, function(e, t) {
e || this.node.addChild(cc.instantiate(t), 10);
}.bind(this));
},
initSplitLine: function() {
this.splitLine = this.gameNode.getChildByName("splitLine");
this.splitWord = this.gameNode.getChildByName("splitWord");
this.handTip = this.gameNode.getChildByName("hand");
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.outCardPools;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initOperationBtns: function() {
this.operationBtnsNode = this.gameNode.getChildByName("operationBtnNode");
this.btn_eat = this.operationBtnsNode.getChildByName("btn_chi");
this.btn_peng = this.operationBtnsNode.getChildByName("btn_peng");
this.btn_win = this.operationBtnsNode.getChildByName("btn_win");
this.btn_pass = this.operationBtnsNode.getChildByName("btn_pass");
this.btn_liu = this.operationBtnsNode.getChildByName("btn_liu");
this.icon_win = this.operationBtnsNode.getChildByName("icon_win");
this.icon_peng = this.operationBtnsNode.getChildByName("icon_peng");
this.icon_chi = this.operationBtnsNode.getChildByName("icon_chi");
this.icon_pass = this.operationBtnsNode.getChildByName("icon_pass");
this.icon_liu = this.operationBtnsNode.getChildByName("icon_liu");
this.btn_liu.active = !1;
this.icon_liu.active = !1;
this.initOperationBtnsListener();
},
initOperationBtnsListener: function() {
var t = this;
this.btn_eat.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnEat();
});
this.btn_peng.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPeng();
});
this.btn_win.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnWin();
});
this.btn_pass.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPass();
});
},
initEatNode: function() {
this.eatNode = this.node.getChildByName("eatNode");
this.btnCloseEatNode = this.eatNode.getChildByName("btn_close");
this.btnCloseEatNodeIndex = 15e3;
},
initHuNode: function() {
var e = [ "selfHuNode", "rightHuNode", "leftHuNode" ];
this.huNodeList = [];
for (var t = 0; t < e.length; t++) {
var i = this.gameNode.getChildByName(e[t]), n = i.getChildByName("lb_huCount").getComponent(cc.Label);
i.active = !1;
n.string = 0;
this.huNodeList[t] = {
node: i,
lb: n
};
}
},
initView: function() {
this.animworldmap = this.node.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat"), a = i.getChildByName("folds"), s = i.getChildByName("items"), c = i.getChildByName("icons");
n.getChildByName("zhuang3").active = !1;
this._foldsNodes.push(a);
this._itemsNodes.push(s);
this._iconsNodes.push(c);
this._seats2.push(n.getComponent("Seat"));
this._playerPos.push(i.getPosition());
}
},
initHoldsEventHandler: function() {
new (e("holdsEventHandler"))().init(this, "wp_out");
},
initEatNodeEventHandler: function() {
new (e("eatNodeEventHandler"))().init(this);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("new_user", function(e) {
o.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
o.initSingleSeat(e.detail);
cc.vv.gameNetMgr.getLocalIndex(e.detail.seatindex);
});
this.node.on("wp_button_push", function(e) {
o.onGameStart();
o.initBigCardBack();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
o._seats2[t].setZhuang(!0);
cc.vv.anysdkMgr.getBatteryLevel();
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getSeatIndexByID(cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id), c = cc.vv.gameNetMgr.getLocalIndex(s);
o._seats2[c].setScore(n, a);
for (var r = 0; r < t.length; r++) cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id == cc.vv.gameNetMgr.seats[r].userid && (cc.vv.gameNetMgr.seats[r].score = n);
}
});
this.node.on("wp_state_push", function(e) {
o.canleReady();
});
this.node.on("kick_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("transfer_push", function(e) {});
this.node.on("seq_move_seat_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("wp_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.OnMsgUpdateSeatHolds(t.seatindex, t.holds);
});
this.node.on("wp_folds_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id);
o.OnMsgShowFlods(t, e.detail.folds);
});
this.node.on("wp_out_push_err", function(e) {
o._handcardsInfoList[o._outCardCoordinate.x].cards[o._outCardCoordinate.y].setPosition(o.clickCardPos.x, o.clickCardPos.y);
});
this.node.on("wp_out_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.out_user), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.out_user);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(e.detail.out_card, n.sex);
o.OnMsgShowOutCard(e.detail.out_card, i);
o.out_seat = i;
o.out_data = e.detail.out_card;
});
this.node.on("wp_turn_push", function(e) {
var t = cc.vv.gameNetMgr.turn;
o.OnMsgNoteOperater(t);
});
this.node.on("wp_surplus_push", function(e) {
var t = cc.vv.gameNetMgr.numOfMJ;
o.OnMsgUpdateSurplus(t);
});
this.node.on("wp_action_mask_push", function(e) {
var t = e.detail.action_mask;
o.has_action = 0 < t;
o.hideSplitLine();
o.OnMsgShowOperationTypes(e.detail.action_mask, e.detail.xiabi_actions);
o.has_action && o.hideSplitLine();
if (0 == o.actionCount && !o.isReconnecting) {
var i = t & 1 << cc.vv.globalSetting.OPERATE_HU;
o.isTianHu = 0 != i;
}
o.isTianHu && o.node.runAction(cc.sequence(cc.delayTime(5.5), cc.callFunc(function() {
o.operationBtnsNode.active = !0;
o.isTianHu = !1;
})));
o.actionCount++;
});
this.node.on("wp_cancel_action_push", function(e) {});
this.node.on("wp_pick_card_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.user_id);
o.hideSplitLine();
var a = 0 == o.pickCardCount ? 2.3 : 0, s = e.detail.card, c = n.sex;
o.node.runAction(cc.sequence(cc.delayTime(a), cc.callFunc(function() {
o.OnMsgShowPickCard(i, s, c);
})));
o.pick_seat = i;
o.pick_data = e.detail.card;
});
this.node.on("wp_item_push", function(e) {
var t = e.detail.user_id, i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = e.detail.add_items;
o.OnMsgShowItems(i, t, n);
cc.vv.gameNetMgr.getLocalIndex(i);
o.eatNode.active = !1;
o.operationBtnsNode.active = !1;
o.pick_seat = -1;
o.pick_data = -1;
o.out_seat = -1;
o.out_data = -1;
o.has_action = !1;
});
this.node.on("wp_hu_push", function(e) {
o.isSpcialHu = !1;
o.isSpcialHu = e.detail.special_hu;
cc.vv.gameNetMgr.setIsSpcialHu(o.isSpcialHu);
var t = o.isSpcialHu ? 1 : 0, i = e.detail;
o.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
o.OnMsgShowHu(i);
})));
});
this.node.on("wp_over", function(e) {
var t = o.isSpcialHu ? 1 : 0;
o.CloseTimer();
o.OnMsgShowSingleGameOver(e);
o.hideSplitLine();
o.scheduleOnce(function() {
o.initHuNode();
o.clearHolds();
o.clearFolds();
o.clearItemsCards();
o.clearOutCard();
o.clearSurplusCards();
o.clearGameOverHandCards();
o.initData();
o.outCardPools.removeAllChildren();
o.lb_surplusCardNums.getComponent(cc.Label).string = "";
}, 3 + t);
});
},
onGameStart: function() {
this.isGaming = !0;
this.pickCardCount = 0;
this.showHuNode();
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else 1 == cc.vv.gameNetMgr.getIsWatch() && (this.BtnReady.node.active = !1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
},
resetGame: function() {
var e = cc.vv.gameNetMgr.turn, t = cc.vv.gameNetMgr.getLocalIndex(e);
this.isReconnecting = !1;
if (!(e < 0)) {
this.initHuNode();
this.isReconnecting = !0;
this.OnMsgNoteOperater(e);
this.OnMsgUpdateSurplus(cc.vv.gameNetMgr.numOfMJ);
this.canleReady();
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; n++) {
this.OnMsgUpdateSeatHolds(i[n].seatindex, i[n].holds);
this.OnMsgShowFlods(i[n].seatindex, i[n].folds);
this.OnMsgShowItems(i[n].seatindex, i[n].userid, i[n].items);
}
for (n = 0; n < i.length; n++) {
if (0 == cc.vv.gameNetMgr.getLocalIndex(i[n].seatindex)) {
this.xiabi_actions = {};
this.xiabi_actions = i[n].xiabi_actions;
if (i[n].select_action <= 0) {
this.OnMsgShowOperationTypes(i[n].action_mask, i[n].xiabi_actions);
this.has_action = 0 < i[n].action_mask;
}
}
}
this.hideSplitLine();
this.drawOutByLocalTurn(t);
2 == cc.vv.gameNetMgr.gamestate && this.showHuNode();
this.isReconnecting = !1;
this.isReconnectGame = !0;
}
},
drawOutByLocalTurn: function(e) {
this.pick_seat = cc.vv.gameNetMgr.syncData.pick_seat;
this.pick_data = cc.vv.gameNetMgr.syncData.pick_data;
this.out_seat = cc.vv.gameNetMgr.syncData.out_seat;
this.out_data = cc.vv.gameNetMgr.syncData.out_data;
this.recentOutCardValue = -1;
0 < this.pick_data && (this.recentOutCardValue = this.pick_data);
0 < this.out_data && (this.recentOutCardValue = this.out_data);
this.clearOutCard();
if (0 < this.recentOutCardValue) {
var t = this.createOutCard(this.recentOutCardValue), i = this.getOutCardPos(e);
t.setPosition(i);
}
this.hideSplitLine();
0 == e && this.recentOutCardValue <= 0 && !this.has_action && this.showSplitLine();
},
OnMsgUpdateSeatHolds: function(e, t) {
if (!(0 < cc.vv.gameNetMgr.getLocalIndex(e))) {
var i = [];
i = t.concat();
if (0 == this.isReconnecting && 0 < this._handcardsInfoList.length) this.deleteOutCards(t); else {
this.drawHolds(t);
this.dealAction();
}
this.holdstemp = [];
this.holdstemp = i.concat();
}
},
OnMsgUpdateSurplus: function(e) {
this.lb_surplusCardNums.getComponent(cc.Label).string = "牌x" + e;
},
OnMsgNoteOperater: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.CloseTimer();
this.ShowTimer(t, 30);
this.hideSplitLine();
0 == t && -1 == this.pick_seat && -1 == this.out_seat && this.showSplitLine();
},
OnMsgShowOutCard: function(e, t) {
this.recentOutCardValue = e;
this.clearOutCard();
this.hideSplitLine();
var i = this.getOutCardPos(t);
if (0 == t) {
(n = this.createOutCard(e)).setPosition(this.clickCardPos.x, this.clickCardPos.y);
n.runAction(cc.moveTo(.15, i));
} else {
var n;
(n = this.createOutCard(e)).setPosition(this._playerPos[t].x, this._playerPos[t].y);
n.setScale(.4);
n.runAction(cc.spawn(cc.scaleTo(.15, 1), cc.moveTo(.15, i)));
}
this.CloseTimer();
},
OnMsgShowOperationTypes: function(e, t) {
this.xiabi_actions = {};
this.xiabi_actions = t;
this.decodeOperationValue(e);
(this._canEat || this._canPeng || this._canWin) && this.scheduleOnce(function() {
this.showOperationBtns();
}, .5);
},
OnMsgUpdateGameCount: function() {
this.lbGameCount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
},
OnMsgShowItems: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = !this.isReconnecting;
this.operationBtnsNode.active = !1;
this.clearOutCard();
for (var s = 0; s < i.length; s++) {
this.showIconByItem(i[s][0], n, t, this.isReconnecting);
this.savePlayersItem(n, i[s]);
this.showItemCards(n, i[s], a);
this.updateHuCount(n);
}
},
OnMsgShowPickCard: function(i, e, t) {
this.recentOutCardValue = e;
var n = this.showPickCard(e, i), a = !1;
if (0 == this.pickCardCount && 20 == this.getSelfFoldCount() && !this.isReconnectGame) {
n.tag = 10010;
a = !0;
this.scheduleOnce(function() {
var e = {};
if (0 == i) {
n.removeFromParent();
n = null;
e = {
x: 0,
y: -300
};
var t = cc.vv.zipai_drawCard.drawCard(this.recentOutCardValue, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
t.parent = this.selfHandCardNode;
t.tag = this.recentOutCardValue;
t.setPosition(0, 430);
t.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
t.destroy();
this.drawHolds(this.holdstemp);
this.isTianHu || this.showSplitLine();
}.bind(this))));
} else {
e = this._playerPos[i];
n.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
n.destroy();
})));
}
}.bind(this), 1.5);
}
a || cc.vv.zipai_atlasAndAudioUtils.playCardSound(e, t);
this.pickCardCount++;
},
OnMsgShowFlods: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = 2 == i ? 1 : -1;
if (0 == this.isReconnecting) {
var a = t.length - 1;
this.clearOutCard();
var s = this.createOutCard(t[a]);
s.active = !0;
s.parent = this._foldsNodes[i];
var c = this._foldsNodes[i].convertToNodeSpace(cc.v2(640, 370));
s.setPosition(c.x, c.y);
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.p(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0)), cc.scaleTo(.2, .55 * this._handCardSpriteSize.width / this._outCardSpriteSize.width, .55 * this._handCardSpriteSize.height / this._outCardSpriteSize.height)), cc.callFunc(function() {
s.destroy();
var e = cc.vv.zipai_drawCard.drawCard(t[a], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
e.parent = this._foldsNodes[i];
e.setScale(.55);
e.setPosition(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}.bind(this))));
} else for (var r in t) {
var o = cc.vv.zipai_drawCard.drawCard(t[r], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
o.parent = this._foldsNodes[i];
o.setScale(.55);
o.setPosition(.55 * this._handCardSpriteSize.width * r * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}
},
OnMsgShowHu: function(e) {
this.CloseTimer();
this.hideSplitLine();
this.eatNode.active = !1;
this.operationBtnsNode.active = !1;
var t = cc.vv.gameNetMgr.getSeatByID(e.hu_user_id), i = cc.vv.gameNetMgr.getSeatIndexByID(e.hu_user_id), n = cc.vv.gameNetMgr.getSeatIndexByID(e.pao_user_id), a = cc.vv.gameNetMgr.getLocalIndex(i), s = cc.vv.gameNetMgr.getLocalIndex(n);
if (a == s) {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.ZIMO, a);
} else {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.PAO, s);
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.HU, a);
}.bind(this))));
}
},
OnMsgShowSingleGameOver: function(e) {
var t = e.detail.end_seats_data;
e.detail.hu_user_id, e.detail.pokers.concat();
this.end_seats_data = e.detail.end_seats_data;
for (var i in t) {
var n = cc.vv.gameNetMgr.getSeatIndexByID(t[i].user_id), a = cc.vv.gameNetMgr.getLocalIndex(n);
0 < a && this.showGameOverHandCards(t[i].holds, a);
}
this.clearOutCard();
},
getOutCardPos: function(e) {
switch (e) {
case 0:
return cc.p(0, 70);

case 1:
return cc.p(350, 150);

case 2:
return cc.p(-350, 150);
}
},
savePlayersItem: function(e, t) {
this.doSpecialItem(t, e);
},
doSpecialItem: function(e, t) {
var i = e[0], n = e[1];
this.specialItemIndex = -1;
if (i == cc.vv.globalSetting.ITEM_PENG_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var a = 0; a < this._playerItems[t].length; a++) {
if (n == this._playerItems[t][a][1]) {
this._playerItems[t][a] = e;
this.specialItemIndex = a;
return;
}
} else this._playerItems[t].push(e);
},
doChongZhao: function(e, t) {
if (!t) {
this.judgeIsChongZhao(e) && this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.CHONGZHAO, e);
}
},
showIconByItem: function(e, t, i, n) {
if (!n) {
var a = cc.vv.gameNetMgr.getSeatByID(i).sex;
if (e >= cc.vv.globalSetting.ITEM_LEFT_CHI && e <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", a);
} else if (e == cc.vv.globalSetting.ITEM_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO || e == cc.vv.globalSetting.ITEM_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("wai", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO_CHUAN || e == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e >= cc.vv.globalSetting.ITEM_KAI_DUO && e <= cc.vv.globalSetting.ITEM_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", a);
}
}
},
showSplitLine: function() {
this.splitLine.active = !0;
this.splitWord.active = !0;
this.handTip.active = !0;
this.handTip.setPosition(370, -220);
this.handTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.p(60, 70)), cc.moveBy(0, cc.p(-60, -70)))));
},
hideSplitLine: function() {
this.splitLine.active = !1;
this.splitWord.active = !1;
this.handTip.active = !1;
this.handTip.stopAllActions();
},
decodeOperationValue: function(e) {
this.operationsList = [];
this.shangbi_List = [];
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.shangbi_List = this.decodeEatAcition(e);
0 < this.shangbi_List.length && (this._canEat = !0);
0 != (e & 1 << cc.vv.globalSetting.OPERATE_PASS) && (this._canPass = !0);
if (0 != (e & 1 << cc.vv.globalSetting.OPERATE_PENG)) {
this.operationsList.push(cc.vv.globalSetting.OPERATE_PENG);
this._canPeng = !0;
}
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_GUO_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_CHUAN);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN_HU);
2 == e && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
}, 2);
},
judgeAutoOperation: function(e, t) {
0 != (e & 1 << t) && this.scheduleOnce(function() {
this.sendMsgOperation(t);
}, 2);
},
judgeHuCode: function(e, t) {
if (0 != (e & 1 << t)) {
this.hucode = t;
this._canWin = !0;
}
},
decodeEatAcition: function(e) {
var t = [];
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_LEFT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_CENTER_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_RIGHT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI);
return t;
},
judgeExistEatAction: function(e, t, i) {
0 != (t & 1 << i) && e.push(i);
},
showOperationBtns: function() {
this.operationBtnsNode.active = !0;
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this._canEat && (this.btn_eat.active = !0);
this._canPeng && (this.btn_peng.active = !0);
this._canPass && (this.btn_pass.active = !0);
this._canWin && (this.btn_win.active = !0);
this.isTianHu && (this.operationBtnsNode.active = !1);
},
showIcon: function(e, t) {
if (1 != this.isReconnecting) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wei");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
e == cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN && (i.y += 130);
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
},
showItemCards: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = t[0], a = t[1], s = cc.vv.FPF_Utils.getItemCards(n, a), c = this._itemsNodes[e].convertToNodeSpace(cc.v2(640, 410)), r = 1 == e ? -1 : 1, o = i ? .2 : 0;
this._PlayerItemCount[e] = 0 <= this.specialItemIndex ? this.specialItemIndex : this._PlayerItemCount[e];
for (var h = 0; h < s.length; h++) {
var l = null;
if (0 < s[h]) {
l = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_SAO && h < 2 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(n == cc.vv.globalSetting.ITEM_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) && h < 3 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (n >= cc.vv.globalSetting.ITEM_LEFT_CHI && n <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI && 2 == h) {
l.getComponent("zipai_card").setBlack(!1);
}
} else l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
l.setScale(.55);
l.parent = this._itemsNodes[e];
l.setPosition(c.x, c.y);
l.runAction(cc.moveTo(o, cc.p(r * this._PlayerItemCount[e] * this._handCardSpriteSize.width * .55 + r * this._handCardSpriteSize.width * .55 / 2, .55 * this._handCardSpriteSize.height * h)));
}
this.specialItemIndex < 0 ? this._PlayerItemCount[e]++ : this._PlayerItemCount[e] = this._playerItems[e].length;
},
judgeIsChongZhao: function(e) {
var t = this._playerItems[e].length;
if ((n = this._playerItems[e][t - 1][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) for (var i = 0; i < t - 1; i++) {
var n;
if ((n = this._playerItems[e][i][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) return !0;
}
return !1;
},
showGameOverHandCards: function(e, t) {
this.gameOverHandNode.active = !0;
var i = this.gameOverHandNode.getChildByName([ "right", "left" ][t - 1]);
i.active = !0;
i.removeAllChildren();
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = i;
a.setScale(.75);
a.setPosition(n % 7 * this._handCardSpriteSize.width * .75 - 126, .75 * this._handCardSpriteSize.height - .75 * this._handCardSpriteSize.height * Math.floor(n / 7));
}
},
deleteOutCards: function(e) {
var t = this.getNeedDeleteCards(e);
if (1 != t.length) {
for (var i in t) for (var n = !1, a = 0; a < this._handcardsInfoList.length; a++) {
for (var s = 0; s < this._handcardsInfoList[a].cards.length; s++) {
var c = this._handcardsInfoList[a].cards[s].getComponent("zipai_card").getValue();
if (t[i] == c) {
this.deleteOutCard(a, s);
n = !0;
break;
}
}
if (1 == n) break;
}
this.replaceCards();
} else {
this.deleteOutCard(this._outCardCoordinate.x, this._outCardCoordinate.y);
this.replaceCards();
}
},
deleteOutCard: function(e, t) {
this._handcardsInfoList[e].cards[t].destroy();
1 < this._handcardsInfoList[e].cards.length ? this._handcardsInfoList[e].cards.splice(t, 1) : this._handcardsInfoList.splice(e, 1);
},
getNeedDeleteCards: function(e) {
for (var t = [], i = 0; i < this.holdstemp.length; i++) {
var n = e.indexOf(this.holdstemp[i]);
-1 != n ? e.splice(n, 1) : t.push(this.holdstemp[i]);
}
return t;
},
getSelfFoldCount: function() {
for (var e = 0, t = 0; t < this._handcardsInfoList.length; t++) e += this._handcardsInfoList[t].cards.length;
return e;
},
OnClickBtnEat: function() {
cc.vv.audioMgr.playBtnClick();
this.eatlist = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.clearXiabiCards();
this.showEatCards(this.shangbi_List, cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI);
},
OnClickBtnPeng: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PENG);
},
OnClickBtnWin: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(this.hucode);
},
OnClickBtnPass: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.has_action = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
},
OnClickCloseEatNode: function() {
if (1 == this.eatNode.active) {
this.eatNode.active = !1;
this.shangbi_way = null;
this.xiabi_way = null;
}
},
sendMsgOperation: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, i = JSON.parse(cc.vv.msgTemp_GLZP.CS_card_type_action);
i.action = e;
i.xiabi_action = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("wp_card_type_action", i);
},
showEatCards: function(e, t) {
if (0 != e.length) for (var i in e) e[i] == cc.vv.globalSetting.OPERATE_LEFT_CHI ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 1, this.recentOutCardValue + 2 ], cc.vv.globalSetting.OPERATE_LEFT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_CENTER_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 1, this.recentOutCardValue, this.recentOutCardValue + 1 ], cc.vv.globalSetting.OPERATE_CENTER_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_RIGHT_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 2, this.recentOutCardValue - 1, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_RIGHT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI ? this.showSingleEatCard([ 2, 7, 10 ], cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI ? this.showSingleEatCard([ 12, 17, 20 ], cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI ? this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 10, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI && (this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue - 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t));
},
showSingleEatCard: function(e, t, i) {
this.eatNode.active = !0;
this.eatlist[this.eatWayCount] = {
cardSprites: [],
operation: null,
type: null
};
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = this.eatNode;
a.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? a.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 170 - this._handCardSpriteSize.height * n) : a.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -45 - this._handCardSpriteSize.height * n);
this.eatlist[this.eatWayCount].cardSprites.push(a);
}
this.eatlist[this.eatWayCount].operation = t;
this.eatlist[this.eatWayCount].type = i;
var s = new cc.Node("New Sprite");
s.addComponent(cc.Sprite).spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("jiantou");
s.parent = this.eatNode;
s.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? s.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 10) : s.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -200);
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.15, cc.p(0, -3.5)), cc.moveBy(.3, cc.p(0, 7)), cc.moveBy(.15, cc.p(0, -3.5)))));
this.eatWayCount++;
},
dealAction: function() {
if (!this.isReconnecting) {
var e = 0;
this.node.runAction(cc.repeat(cc.sequence(cc.callFunc(function() {
cc.vv.zipai_atlasAndAudioUtils.playDealCardsSound();
}), cc.delayTime(.55)), 4));
for (var t = 0; t < this._handcardsInfoList.length; t++) for (var i = 0; i < this._handcardsInfoList[t].cards.length; i++) {
e++;
this._handcardsInfoList[t].cards[i].runAction(cc.sequence(cc.hide(), cc.delayTime(.1 * e), cc.show()));
}
}
},
showXiabiCards: function(e) {
this.xiabi_list = [];
this.eatWayCount = this.shangbi_List.length;
this.xiabi_list = this.decodeEatAcition(this.xiabi_actions[e]);
this.showEatCards(this.xiabi_list, cc.vv.zipai_cardsSort.enumTalbe.eatType.XIA_BI);
},
CloseTimer: function() {
for (var e in this._seats2) this._seats2[e].closeTimer();
},
ShowTimer: function(e, t) {
this._seats2[e].showTimer(t);
},
showPickCard: function(e, t) {
var i = this, n = null, a = this.getOutCardPos(t);
this.clearOutCard();
if (0 == e) {
(n = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK)).parent = this.outCardPools;
n.tag = 1e3;
} else n = this.createOutCard(e);
n.active = !1;
n.setPosition(a);
this.bigCardBack.setScale(.6);
this.bigCardBack.setPosition(0, 270);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, a), cc.scaleTo(.3, 1)), cc.callFunc(function() {
i.bigCardBack.active = !1;
n.active = !0;
})));
return n;
},
createOutCard: function(e) {
var t = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG);
t.parent = this.outCardPools;
t.tag = 1e3;
return t;
},
drawHolds: function(e) {
this.selfHandCardNode.removeAllChildren(!1);
this._handcardsInfoList = [];
for (var t = e.concat(), i = cc.vv.zipai_cardsSort.cardSort(t), n = 0; n < i.sort.length; n++) {
this._handcardsInfoList[n] = {
posx: n * this._outCardSpriteSize.width - 320,
cards: []
};
for (var a = 0; a < Math.ceil(i.sort[n].type); a++) {
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.threeNotSame && 2 == a && (i.sort[n].value = 10 < i.sort[n].value ? i.sort[n].value - 10 : i.sort[n].value + 10);
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.shunZi && 0 < a && i.sort[n].value++;
(s = cc.vv.zipai_drawCard.drawCard(i.sort[n].value, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.sort[n].value;
s.getComponent("zipai_card").setOrder(Math.ceil(i.sort[n].type) - a);
s.getComponent("zipai_card").setType(i.sort[n].type);
s.setLocalZOrder(Math.ceil(i.sort[n].type) - a);
this._handcardsInfoList[n].cards.push(s);
}
}
for (n = 0; n < i.single.length; n++) {
n % 3 == 0 && (this._handcardsInfoList[i.sort.length + Math.floor(n / 3)] = {
posx: (i.sort.length + Math.floor(n / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var s;
(s = cc.vv.zipai_drawCard.drawCard(i.single[n], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.single[n];
s.getComponent("zipai_card").setOrder(i.single.length - n);
s.setLocalZOrder(i.single.length - n);
this._handcardsInfoList[i.sort.length + Math.floor(n / 3)].cards.push(s);
}
this.replaceCards();
},
showHuNode: function() {
for (var e = 0; e < this._maxPlayerCount; e++) this.huNodeList[e].node.active = !0;
},
updateHuCount: function(e) {
for (var t = 0, i = 0; i < this._playerItems[e].length; i++) {
var n = this._playerItems[e][i][0], a = this._playerItems[e][i][1], s = cc.vv.FPF_Utils.getItemCards(n, a);
t += cc.vv.FPF_Utils.getHuCount(n, s);
}
this.huNodeList[e].lb.string = t;
},
replaceCards: function() {
for (var e = 0; e < this._handcardsInfoList.length; e++) for (var t = 0; t < this._handcardsInfoList[e].cards.length; t++) {
this._handcardsInfoList[e].cards[t].setPosition(e * this._outCardSpriteSize.width - 310 + (8 - this._handcardsInfoList.length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * t - .15 * this._outCardSpriteSize.height);
this._handcardsInfoList[e].cards[t].setLocalZOrder(this._handcardsInfoList[e].cards.length - t);
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setOrder(Math.ceil(this._handcardsInfoList[e].cards.length - t));
var i = this._handcardsInfoList[e].cards[t].getComponent("zipai_card").getType();
if (i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.three || i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.four) {
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setBlack(!0);
}
}
},
clearItemsCards: function() {
for (var e = 0; e < this._itemsNodes.length; e++) this._itemsNodes[e].removeAllChildren();
},
clearHolds: function() {
this.selfHandCardNode.removeAllChildren();
},
clearFolds: function() {
for (var e = 0; e < this._foldsNodes.length; e++) this._foldsNodes[e].removeAllChildren();
},
clearSurplusCards: function() {
this.surplusCardNode.removeAllChildren();
},
clearOutCard: function() {
for (;this.outCardPools.getChildByTag(1e3); ) this.outCardPools.removeChildByTag(1e3);
},
clearGameOverHandCards: function() {
this.gameOverHandNode.active = !1;
for (var e = 1; e < this.gameOverHandNode.children.length; e++) this.gameOverHandNode.children[e].removeAllChildren();
},
clearXiabiCards: function() {
for (;this.eatNode.getChildByTag(-2222); ) this.eatNode.removeChildByTag(-2222);
},
clearShangbiCards: function() {
for (;this.eatNode.getChildByTag(2222); ) this.eatNode.removeChildByTag(2222);
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {
eatNodeEventHandler: "eatNodeEventHandler",
holdsEventHandler: "holdsEventHandler"
} ],
FPF_Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a148fYmU49EJZ74iKmAgtWj", "FPF_Utils");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && (cc.vv.FPF_Utils = this);
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
i.push(t + 1);
i.push(t + 2);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_CENTER_CHI:
i.push(t - 1);
i.push(t + 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_RIGHT_CHI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
switch (t) {
case 2:
i.push(7);
i.push(10);
i.push(t);
break;

case 7:
i.push(2);
i.push(10);
i.push(t);
break;

case 10:
i.push(2);
i.push(7);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
switch (t) {
case 12:
i.push(17);
i.push(20);
i.push(t);
break;

case 17:
i.push(12);
i.push(20);
i.push(t);
break;

case 20:
i.push(12);
i.push(17);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t + 10);
i.push(t + 10);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t + 10);
i.push(t);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_PENG:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getActionCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ACTION_LEFT_CHI:
case cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI:
i.push(t + 1);
i.push(t + 2);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_CENTER_CHI:
case cc.vv.globalSetting.ACTION_CENTER_CHI_XIABI:
i.push(t - 1);
i.push(t + 1);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_RIGHT_CHI:
case cc.vv.globalSetting.ACTION_RIGHT_CHI_XIABI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI_XIABI:
switch (t) {
case 2:
i.push(7);
i.push(10);
i.push(t);
break;

case 7:
i.push(2);
i.push(10);
i.push(t);
break;

case 10:
i.push(2);
i.push(7);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI_XIABI:
switch (t) {
case 12:
i.push(17);
i.push(20);
i.push(t);
break;

case 17:
i.push(12);
i.push(20);
i.push(t);
break;

case 20:
i.push(12);
i.push(17);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t + 10);
i.push(t + 10);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t + 10);
i.push(t);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_PENG:
case cc.vv.globalSetting.ACTION_SAO:
case cc.vv.globalSetting.ACTION_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_SAO_CHUAN:
case cc.vv.globalSetting.ACTION_KAI_DUO:
case cc.vv.globalSetting.ACTION_PENG_KAI_DUO:
case cc.vv.globalSetting.ACTION_SAO_KAI_DUO:
case cc.vv.globalSetting.ACTION_SAO_SAOCHUAN:
case cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getHuCount: function(e, t) {
console.log("log-------------getHuCount item=：", e);
for (var i = 0; i < t.length; i++) for (var n = i + 1; n < t.length; n++) if (t[i] > t[n]) {
var a = t[i];
t[i] = t[n];
t[n] = a;
}
if (0 == t[0]) return 0;
switch (e) {
case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
return 10 < t[0] ? 12 : 9;

case cc.vv.globalSetting.ITEM_KAN:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
return 10 < t[0] ? 6 : 3;

case cc.vv.globalSetting.ITEM_PENG:
return 10 < t[0] ? 3 : 1;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
return 10 < t[0] ? 9 : 6;

case cc.vv.globalSetting.ITEM_DUIZI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SHUNZI:
return 0;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
return 6;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
return 3;
}
}
});
cc._RF.pop();
}, {} ],
Feedback: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d9d51JHU2NHR5bdfE7ojuCz", "Feedback");
cc.Class({
extends: cc.Component,
properties: {
feedScrollview: {
default: null,
type: cc.ScrollView
},
kefu: cc.Label,
_FeedBackData: null,
_viewlist: null,
_content: null,
_viewitemTemp: null,
_currPageId: null
},
onLoad: function() {
this._feedback = this.node.getChildByName("feedback");
this._nodeList = this._feedback.getChildByName("nodeList");
this._nodeList.active = !0;
this._emptyTip = this._nodeList.getChildByName("emptyTip");
this._emptyTip.active = !0;
this._viewlist = this._nodeList.getChildByName("feed_viewlist");
this._content = cc.find("view/content", this._viewlist);
this._viewitemTemp = this._content.children[0];
this._content.removeChild(this._viewitemTemp);
cc.find("Canvas/Feedback/feedback/btn_back");
this.feedScrollview.node.on("scroll-ended", this.onMoveVScrollBar, this);
this.kefu.string = cc.KEFU;
this.initNewAdvice();
this.initNodeAdviceInfo();
this.FeedBackShowAdvice(0);
this.adaptScreen();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this._nodeAdviceInfo.setScale(1 * i);
this._NewAdviceInfo.setScale(1 * i);
this._nodeList.setScale(1 * i);
},
addClickEvent: function(e, t, i, n) {
var a = new cc.Component.EventHandler();
a.target = t;
a.component = i;
a.handler = n;
e.getComponent(cc.Button).clickEvents.push(a);
},
onBtnBackClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
onTabNewAdviceInfo: function(e) {
this.NewAdviceClear();
this._NewAdviceInfo.active = !0;
},
onTabAdviceInfo: function(e) {
cc.vv.audioMgr.playBtnClick();
this._NewAdviceInfo.active = !1;
this._nodeAdviceInfo.active = !1;
this._nodeList.active = !0;
this.FeedBackShowAdvice(0);
},
getViewItem: function(e) {
var t = this._content;
if (t.childrenCount > e) return t.children[e];
var i = cc.instantiate(this._viewitemTemp);
t.addChild(i);
return i;
},
hrinkContent: function(e) {
for (;this._content.childrenCount > e; ) {
var t = this._content.children[this._content.childrenCount - 1];
this._content.removeChild(t, !0);
}
},
FeedBackShowAdvice: function(e) {
var i = this;
cc.vv.userMgr.getFeedBackShowAdvice(e, function(e) {
if (e) {
i._FeedBackData = e;
var t = i._FeedBackData.detail;
i.initFeedBackList(t);
}
});
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
getAdviceGame: function(e) {
return "游戏状态：" + cc.vv.gameType.getGameTypeStr(e);
},
getAdviceTypeStr: function(e) {
return 1 == e ? "反馈类型：投诉" : 2 == e ? "反馈类型：建议" : "";
},
initFeedBackList: function(e) {
for (var t = 0; t < e.length; ++t) {
var i = this.getViewItem(t);
i.nodeData = e[t];
i.idx = e[t].id;
var n = "" + (t + 1);
i.getChildByName("title").getComponent(cc.Label).string = n;
i.getChildByName("advice_type").getComponent(cc.Label).string = this.getAdviceTypeStr(e[t].advice_type);
i.getChildByName("advice_game").getComponent(cc.Label).string = this.getAdviceGame(e[t].advice_game);
i.getChildByName("status").getComponent(cc.Label).string = 0 == e[t].status ? "未解决" : "解决";
var a = this.dateFormat(1e3 * e[t].create_time);
i.getChildByName("time").getComponent(cc.Label).string = a;
}
this._emptyTip.active = 0 == e.length;
this.shrinkContent(e.length);
},
shrinkContent: function(e) {
for (;this._content.childrenCount > e; ) {
var t = this._content.children[this._content.childrenCount - 1];
this._content.removeChild(t, !0);
}
},
onMoveVScrollBar: function(e) {
if (this._FeedBackData) {
var t = this._FeedBackData.all_counts, i = 1 * this._FeedBackData.page + 1;
if (i * this._FeedBackData.rows < t) {
var n = this;
cc.vv.userMgr.getFeedBackShowAdvice(i, function(e) {
if (e) {
n._FeedBackData.page = e.info.page;
for (var t = e.info.detail, i = 0; i < t.length; i++) n._FeedBackData.detail.push(t[i]);
n.initFeedBackList(n._FeedBackData.detail);
}
});
}
}
},
initNodeAdviceInfo: function() {
this._nodeAdviceInfo = this._feedback.getChildByName("nodeAdviceInfo");
this._nodeAdviceInfo.active = !1;
var e = this._nodeAdviceInfo.getChildByName("infoScrollView").getChildByName("view");
this.decsItem = e.getChildByName("content");
this.info_advice_type = this.decsItem.getChildByName("advice_type");
this.info_status = this.decsItem.getChildByName("status");
this.info_time = this.decsItem.getChildByName("time");
this.info_btnOver = this.decsItem.getChildByName("btnOver");
this.info_advice_game = this.decsItem.getChildByName("advice_game");
this.info_text_wenti = this.decsItem.getChildByName("text_wenti");
},
updateAdvideInfo: function(e) {
this.info_advice_type.getComponent(cc.Label).string = this.getAdviceTypeStr(e.advice_type);
this.info_status.getComponent(cc.Label).string = 0 == e.status ? "未解决" : "解决";
var t = this.dateFormat(1e3 * e.create_time);
this.info_time.getComponent(cc.Label).string = t;
this.info_advice_game.getComponent(cc.Label).string = this.getAdviceGame(e.advice_game);
var i = e.msg;
e.msg_back && (i = "<color=#8D3A3A>" + e.msg + "</c>\n客服妹妹：\n<color=#ff0000>" + e.msg_back + "</c>");
this.info_text_wenti.getComponent(cc.RichText).string = i;
},
onViewItemClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this._currPageId = e.target.idx;
this.updateAdvideInfo(e.target.nodeData);
this._nodeAdviceInfo.active = !0;
this._nodeList.active = !1;
},
onBtnOpClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this._currPageId = e.target.parent.idx;
this.updateAdvideInfo(e.target.parent.nodeData);
this._nodeAdviceInfo.active = !0;
this._nodeList.active = !1;
},
onBtnCloseNodeAdviceInfo: function(e) {
cc.vv.audioMgr.playBtnClick();
this._nodeAdviceInfo.active = !1;
this._nodeList.active = !0;
},
FeedBackSolveAdvice: function() {
cc.vv.audioMgr.playBtnClick();
var t = this, e = this._currPageId;
cc.vv.userMgr.getFeedBackSolveAdvice(e, function(e) {
if ("success" == e) {
cc.vv.alert.show("提示", "删除成功，将不再显示在该列表中！");
t._nodeAdviceInfo.active = !1;
t._nodeList.active = !0;
t.shrinkContent(0);
t.FeedBackShowAdvice(0);
} else cc.vv.alert.show("提示", "提交失败！");
});
},
initNewAdvice: function() {
this._NewAdviceInfo = this._feedback.getChildByName("NewAdviceInfo");
this._NewAdviceInfo.active = !1;
this.inputStr = this._NewAdviceInfo.getChildByName("input_EditBox");
this.advice_type = "1";
this.advice_Game = "1";
},
onBtn_RuleClick: function(e) {
var t = e.checkEvents[0].customEventData;
this.advice_Game == t ? e.isChecked = !0 : this.advice_Game = t;
},
onBtn_TypeClick: function(e) {
var t = e.checkEvents[0].customEventData;
this.advice_type == t ? e.isChecked = !0 : this.advice_type = t;
},
NewAdviceClear: function() {
cc.vv.audioMgr.playBtnClick();
this._nodeAdviceInfo.active = !1;
this._nodeList.active = !1;
},
onBtnTiJiaoNewAdviceInfo: function(e) {
cc.vv.audioMgr.playBtnClick();
this.FeedBackUserAdvice();
},
FeedBackUserAdvice: function() {
cc.vv.audioMgr.playBtnClick();
var e = this.inputStr.getComponent(cc.EditBox).string;
cc.vv.userMgr.getFeedBackUserAdvice(this.advice_type, this.advice_Game, e, function(e) {
"success" == e ? cc.vv.alert.show("提示", "提交成功，请等待客服回复！") : cc.vv.alert.show("提示", "提交失败！");
});
},
onCopyClick: function(e, t) {
cc.vv.audioMgr.playBtnClick();
console.log(t);
cc.vv.anysdkMgr.copyToClipBord(cc.KEFU);
cc.vv.alert.show("提示", "客服微信复制成功！");
}
});
cc._RF.pop();
}, {} ],
GLZP_GameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "33df2O1TRNBkL+k9TIG66sp", "GLZP_GameOver");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.huCountList = [];
this.userList = [];
this._handCardSpriteSize = {
width: 40,
height: 44
};
this.itemCardTag = 1100;
this.xingSignTag = 1101;
this._maxPlayerNum = 3;
this.initNode();
this.initEventHandler();
this.showBtnReadyLabelByState();
}
},
initNode: function() {
this._gameOverRoot = this.node.getChildByName("bg");
this._surplusCardsNode = this._gameOverRoot.getChildByName("surplusCardsNode");
this.initHuIcon();
this.initCommonLabels();
this.initHuCountLabels();
this.initUsers();
this.node.active = !1;
},
initHuIcon: function() {
this.icon_huCardSign = this._gameOverRoot.getChildByName("huCardFrame");
this.icon_huCardSign.active = !1;
this.icon_huCardSign.setLocalZOrder(10);
},
initCommonLabels: function() {
this.lb_huDuo = this._gameOverRoot.getChildByName("lb_huDuo").getComponent(cc.Label);
this.lb_ziMo = this._gameOverRoot.getChildByName("lb_ziMo").getComponent(cc.Label);
this.lb_fanXing = this._gameOverRoot.getChildByName("lb_fanXing").getComponent(cc.Label);
this.lb_tianHu = this._gameOverRoot.getChildByName("lb_tianHu").getComponent(cc.Label);
this.lb_diHu = this._gameOverRoot.getChildByName("lb_diHu").getComponent(cc.Label);
this.lb_sanLongWuKan = this._gameOverRoot.getChildByName("lb_sanLongWuKan").getComponent(cc.Label);
this.lb_zongDuoCount = this._gameOverRoot.getChildByName("lb_zongDuoCount").getComponent(cc.Label);
this.lb_total = this._gameOverRoot.getChildByName("lb_total").getComponent(cc.Label);
},
initHuCountLabels: function() {
this._huCountNode = this._gameOverRoot.getChildByName("itemCardHuCountNode");
for (var e = 0; e < 8; e++) {
var t = this._huCountNode.getChildByName("huCount" + e);
t.getComponent(cc.Label).string = "";
this.huCountList.push(t);
}
},
initUsers: function() {
for (var e = this._gameOverRoot.getChildByName("UserNode"), t = 0; t < this._maxPlayerNum; t++) {
var i = {}, n = e.getChildByName("user" + t);
i.frame = n.getChildByName("frame").getComponent(cc.Sprite);
i.icon_winOrLoseTyp = n.getChildByName("icon_winOrLoseType").getComponent(cc.Sprite);
i.icon_winOrLose = n.getChildByName("icon_winOrLose").getComponent(cc.Sprite);
i.lb_score = n.getChildByName("lb_score").getComponent(cc.Label);
i.lb_name = n.getChildByName("lb_name").getComponent(cc.Label);
i.lb_id = n.getChildByName("lb_id").getComponent(cc.Label);
i.image_atavar = n.getChildByName("head").getChildByName("image_Atavar").getComponent("ImageLoader");
this.userList.push(i);
}
},
showBtnReadyLabelByState: function() {
var e = this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label);
console.log("log---------------gameOver  cc.vv.gameNetMgr.isOver=:", cc.vv.gameNetMgr.isOver);
cc.vv.gameNetMgr.isOver ? e.string = "总结算" : e.string = "继续";
},
initEventHandler: function() {
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("wp_gl_over", this.call_game_over, this);
this.gameRoot.on("wp_result_showLB", this.showLb, this);
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function(e) {
console.log("log------------show GLZP gameOver!!!!!!!!");
var t = this;
if (1 != e.detail.force) {
var i = 3.5 + (cc.vv.gameNetMgr.getIsSpcialHu() ? 1 : 0) + 1.5 * (cc.vv.gameNetMgr.gameOverData.xing_cards.length - 1) + .5 * cc.vv.gameNetMgr.totalXingCount + .2 * cc.vv.gameNetMgr.surplusCardsNum;
this.gameRoot && this.gameRoot.runAction(cc.sequence(cc.delayTime(i), cc.callFunc(function(e) {
t.onGameOver();
})));
} else this.onGameOver();
},
onGameOver: function() {
this.icon_huCardSign.active = !1;
this.node.active = !0;
var e = cc.vv.gameNetMgr.gameOverData, t = e.end_seats_data, i = (e.force, e.tian_hu, 
e.hu_user_id), n = e.pao_user_id;
this.hu_card = e.hu_card;
e.button;
this.xing_cards = e.xing_cards;
e.xing_counts;
var a, s = e.pokers, c = (this.xing_cards.length, e.hu_details);
a = this.xing_cards.concat(s);
this.pick_hu = e.pick_hu;
this.totalHuCount = 0;
this.hu_index = 0;
this.clear();
this.showSurplusCards(a);
this.showPlayer(t, i, n);
this.showItemsInfo(t, i);
this.showHuDetails(t, c);
this.showCommonLabels(e);
},
showSurplusCards: function(e) {
for (var t = 0; t < e.length; t++) {
var i = cc.vv.zipai_drawCard.drawCard(e[t], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
i.parent = this._surplusCardsNode;
i.setPosition((t + .5) * this._handCardSpriteSize.width, 0);
i.setScale(.68);
if (t < this.xing_cards.length) {
i.getComponent("zipai_card").setBlack(!1);
}
}
},
showItemsInfo: function(e, t) {
for (var i = 0; i < e.length; i++) if (t == e[i].user_id) {
for (var n = 0; n < e[i].items.length; n++) {
var a = n, s = e[i].items[n][0], c = e[i].items[n][1], r = cc.vv.GLZP_Utils.getItemCards(s, c), o = cc.vv.GLZP_Utils.getHuCount(s, r);
this.huCountList[n].getComponent(cc.Label).string = o;
this.showItemCards(r, a, cc.vv.zipai_drawCard.enumTalbe.cardSort.ITEM, s);
this.totalHuCount += o;
}
this.hu_index = i;
break;
}
},
showHuDetails: function(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i][0], a = t[i][1], s = e[this.hu_index].items.length + i;
this.showItemCards(a, s, cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS, n);
var c = cc.vv.GLZP_Utils.getHuCount(n, a);
this.huCountList[s].getComponent(cc.Label).string = c;
this.totalHuCount += c;
}
this.huCountList[7].getComponent(cc.Label).string = this.totalHuCount;
},
showItemCards: function(e, t, i, n) {
var a = cc.vv.GLZP_Utils.getAllXingCards(this.xing_cards);
console.log("log----------allXingCard=:", a);
for (var s in e) {
var c = !1, r = cc.vv.zipai_drawCard.drawCard(e[s], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == s && (r = cc.vv.zipai_drawCard.drawCard(e[s], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
r.parent = this._gameOverRoot;
r.tag = this.itemCardTag;
r.setScale(.68);
var o = this.huCountList[t].getPosition();
r.setPosition(o.x, o.y + s * this._handCardSpriteSize.height);
if (i == cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS && !this.icon_huCardSign.active && e[s] == this.hu_card) {
this.icon_huCardSign.active = !0;
this.icon_huCardSign.setScale(1.1);
this.icon_huCardSign.setPosition(o.x, o.y + s * this._handCardSpriteSize.height);
c = !0;
}
var h = cc.vv.GLZP_Utils.isXingCard(e[s], a);
console.log("log----------showItemCards isXingCard card[i]=:", h, e[s]);
if (h && !c) {
var l = new cc.Node("New Sprite"), d = l.addComponent(cc.Sprite), u = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("seletedFrame");
d.spriteFrame = u;
l.parent = this._gameOverRoot;
l.tag = this.xingSignTag;
l.setLocalZOrder(10);
l.setScale(1);
l.setPosition(o.x, o.y + s * this._handCardSpriteSize.height);
}
}
},
showPlayer: function(e, t, i) {
for (var n = 0; n < e.length; n++) for (var a = n + 1; a < e.length; a++) if (e[n].end_score < e[a].end_score) {
var s = e[n];
e[n] = e[a];
e[a] = s;
}
for (var c = 0; c < e.length; c++) {
var r = null, o = null, h = null;
if (0 < e[c].end_score) {
r = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_win");
o = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("win");
t == i && (h = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_zimo"));
} else {
r = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_lose");
e[c].end_score < 0 && (o = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("lose"));
e[c].user_id == i && this.pick_hu <= 0 && (h = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("fangpao"));
e[c].user_id == i && 0 < this.pick_hu && (h = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_dianpao"));
}
var l = this.getUserNameByID(e[c].user_id);
this.userList[c].frame.spriteFrame = r;
this.userList[c].icon_winOrLose.spriteFrame = o;
this.userList[c].icon_winOrLoseTyp.spriteFrame = h;
this.userList[c].lb_score.string = e[c].end_score;
if (cc.vv.userMgr.isHighDefend) {
this.userList[c].lb_name.string = "已屏蔽";
this.userList[c].lb_id.string = "已屏蔽";
} else {
this.userList[c].lb_name.string = l;
this.userList[c].lb_id.string = e[c].user_id;
}
this.userList[c].image_atavar.setUserID(e[c].user_id);
}
},
showCommonLabels: function(e) {
this.lb_huDuo.string = "胡舵 +" + e.base_zi_nums;
this.lb_ziMo.string = "自摸 +" + e.self_hu_zi_nums;
this.lb_fanXing.string = "番醒 +" + e.xing_zi_nums;
this.lb_tianHu.string = "天胡 +" + e.tian_hu_zi_nums;
this.lb_diHu.string = "地胡 +" + e.di_hu_zi_nums;
this.lb_sanLongWuKan.string = "三笼五坎 +" + e.san_kan_zi_nums;
var t = e.base_zi_nums + e.self_hu_zi_nums + e.xing_zi_nums + e.tian_hu_zi_nums + e.di_hu_zi_nums + e.san_kan_zi_nums;
this.lb_zongDuoCount.string = "总舵数 +" + t;
this.lb_total.string = t;
},
getUserNameByID: function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) if (e == t[i].userid) return t[i].name;
},
clearHuCount: function() {
for (var e in this.huCountList) this.huCountList[e].getComponent(cc.Label).string = "";
},
clearSurplusCards: function() {
this._surplusCardsNode.removeAllChildren();
},
clearItemCards: function() {
for (;this._gameOverRoot.getChildByTag(this.itemCardTag); ) this._gameOverRoot.removeChildByTag(this.itemCardTag);
},
clearXingSigns: function() {
for (;this._gameOverRoot.getChildByTag(this.xingSignTag); ) this._gameOverRoot.removeChildByTag(this.xingSignTag);
},
clear: function() {
this.clearHuCount();
this.clearSurplusCards();
this.clearItemCards();
this.clearXingSigns();
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.gameRoot.emit("show_gameResult"); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.active = !1;
this.gameRoot.emit("fresh_all_score");
},
onDestroy: function() {
this.gameRoot.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
GLZP_GlobalSetting: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8100b8MnmNKTYzsX1zHBxAW", "GLZP_GlobalSetting");
var o = {
DISMISS_TIME: 12e4,
GAME_TYPE_CLASSIC: 1,
MASK_PC10: 1,
MASK_PC20: 2,
MASK_HU10: 3,
MASK_HU15: 4,
MASK_ZI_5HU: 5,
MASK_ZI_3HU: 6,
MASK_SELF_HU_JIA: 7,
MASK_SELF_HU_FAN: 8,
MASK_PAO_CAN: 9,
MASK_PAO_NOT: 10,
MASK_FANXING_CAN: 11,
MASK_FANXING_NOT: 12,
MASK_XING_UP: 13,
MASK_XING_CENTER: 14,
MASK_XING_DOWN: 15,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
ITEM_LEFT_CHI: 1,
ITEM_CENTER_CHI: 2,
ITEM_RIGHT_CHI: 3,
ITEM_SMALL_ERQISHI_CHI: 4,
ITEM_BIG_ERQISHI_CHI: 5,
ITEM_TWO_BIG_SMALL_CHI: 6,
ITEM_TWO_SMALL_BIG_CHI: 7,
ITEM_PENG: 8,
ITEM_SAO: 9,
ITEM_GUO_SAO: 10,
ITEM_SAO_CHUAN: 11,
ITEM_KAI_DUO: 12,
ITEM_PENG_KAI_DUO: 13,
ITEM_SAO_KAI_DUO: 14,
ITEM_SAO_SAO_CHUAN: 15,
ITEM_SELF_SAO_CHUAN: 16,
ITEM_KAN: 17,
ITEM_DUIZI: 18,
ITEM_SHUNZI: 19,
OPERATE_PASS: 1,
OPERATE_LEFT_CHI: 2,
OPERATE_CENTER_CHI: 3,
OPERATE_RIGHT_CHI: 4,
OPERATE_SMALL_ERQISHI_CHI: 5,
OPERATE_BIG_ERQISHI_CHI: 6,
OPERATE_TWO_BIG_SMALL_CHI: 7,
OPERATE_TWO_SMALL_BIG_CHI: 8,
OPERATE_PENG: 9,
OPERATE_SAO: 10,
OPERATE_GUO_SAO: 11,
OPERATE_SAO_CHUAN: 12,
OPERATE_KAI_DUO: 13,
OPERATE_PENG_KAI_DUO: 14,
OPERATE_SAO_KAI_DUO: 15,
OPERATE_SAO_SAOCHUAN: 16,
OPERATE_HU: 17,
OPERATE_PENG_KAI_DUO_HU: 18,
OPERATE_SAO_KAI_DUO_HU: 19,
OPERATE_SAO_SAO_CHUAN_HU: 20,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_LEFT_CHI: 3,
ACTION_CENTER_CHI: 4,
ACTION_RIGHT_CHI: 5,
ACTION_SMALL_ERQISHI_CHI: 6,
ACTION_BIG_ERQISHI_CHI: 7,
ACTION_TWO_BIG_SMALL_CHI: 8,
ACTION_TWO_SMALL_BIG_CHI: 9,
ACTION_PENG: 10,
ACTION_SAO: 11,
ACTION_GUO_SAO: 12,
ACTION_SAO_CHUAN: 13,
ACTION_KAI_DUO: 14,
ACTION_PENG_KAI_DUO: 15,
ACTION_SAO_KAI_DUO: 16,
ACTION_SAO_SAOCHUAN: 17,
ACTION_SELF_SAO_CHUAN: 18,
ACTION_HU: 19,
ACTION_LEFT_CHI_XIABI: 20,
ACTION_CENTER_CHI_XIABI: 21,
ACTION_RIGHT_CHI_XIABI: 22,
ACTION_SMALL_ERQISHI_CHI_XIABI: 23,
ACTION_BIG_ERQISHI_CHI_XIABI: 24,
ACTION_TWO_BIG_SMALL_CHI_XIABI: 25,
ACTION_TWO_SMALL_BIG_CHI_XIABI: 26,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
has_rule: function(e, t) {
return 0 != (e & 1 << t);
},
type_check: function(e) {
var t = 0;
o.has_rule(e, o.GAME_TYPE_CLASSIC) && (t += 1);
return 1 == t;
},
rule_check: function(e) {
var t = 0;
o.has_rule(e, o.MASK_PC10) && (t += 1);
o.has_rule(e, o.MASK_PC20) && (t += 1);
if (1 != t) return !1;
var i = 0;
o.has_rule(e, o.MASK_INGOT_GAME) && (i += 1);
o.has_rule(e, o.MASK_GOLD_GAME) && (i += 1);
if (1 != i) return !1;
var n = 0;
o.has_rule(e, o.MASK_HU10) && (n += 1);
o.has_rule(e, o.MASK_HU15) && (n += 1);
if (1 != n) return !1;
var a = 0;
o.has_rule(e, o.MASK_ZI_5HU) && (a += 1);
o.has_rule(e, o.MASK_ZI_3HU) && (a += 1);
if (1 != a) return !1;
var s = 0;
o.has_rule(e, o.MASK_SELF_HU_JIA) && (s += 1);
o.has_rule(e, o.MASK_SELF_HU_FAN) && (s += 1);
if (1 != s) return !1;
var c = 0;
o.has_rule(e, o.MASK_FANXING_CAN) && (c += 1);
o.has_rule(e, o.MASK_FANXING_NOT) && (c += 1);
if (1 != c) return !1;
var r = 0;
o.has_rule(e, o.MASK_XING_UP) && (r += 1);
o.has_rule(e, o.MASK_XING_CENTER) && (r += 1);
o.has_rule(e, o.MASK_XING_DOWN) && (r += 1);
return 0 != r;
},
get_ingot_value: function(e) {
if (o.has_rule(e, o.MASK_INGOT_GAME)) {
if (o.has_rule(e, o.MASK_PC10)) return 1;
if (o.has_rule(e, o.MASK_PC20)) return 2;
}
if (o.has_rule(e, o.MASK_GOLD_GAME)) {
if (o.has_rule(e, o.MASK_PC10)) return 1;
if (o.has_rule(e, o.MASK_PC20)) return 2;
}
}
};
i.global = o;
cc._RF.pop();
}, {} ],
GLZP_Msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8b20bV9zftBq4pDUu53T/nL", "GLZP_Msgdefine");
var n = {};
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
tian_hu: 0,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
button: 0,
xing_cards: [],
xing_counts: []
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_action_mask = JSON.stringify({
action_mask: 0,
xiabi_actions: {},
card: 0
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.CS_card_type_action = JSON.stringify({
action: 0,
xiabi_action: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
GLZP_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "611b6u8bEZPDb1TrPpGJbsh", "GLZP_Replay");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_iconsNodes: [],
_itemNodes: [],
_foldsNodes: [],
_holdsNodes: [],
_playerPos: []
},
onLoad: function() {
if (cc.vv) {
this.replayGameNode = cc.find("Canvas/replayGame");
this.gameNode = cc.find("Canvas/game");
this.peaceNode = this.replayGameNode.getChildByName("peaceNode");
this.replayGameNode.active = !0;
this.peaceNode.active = !1;
this.gameNode.active = !1;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.initData();
this.initView();
this.initHoldNodes();
this.initSeats();
this.initBigCardBack();
this.initEvent();
this.judgeShowPeace();
} else cc.director.loadScene("loading");
},
initData: function() {
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._beginThrowCardPos = [ {
x: 0,
y: -50
}, {
x: 100,
y: 100
}, {
x: -100,
y: 100
} ];
this.holdsList = [ [], [], [] ];
this.foldsList = [ [], [], [] ];
this.itemsList = [ [], [], [] ];
this.holdsSpriteList = [ [], [], [] ];
this.actionCount = 0;
this.outPool = [];
this.outCardTag = 10086;
},
initView: function() {
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3"), s = i.getChildByName("icons"), c = i.getChildByName("items"), r = i.getChildByName("folds");
a.active = !1;
this._zhuangs.push(a);
this._iconsNodes.push(s);
this._itemNodes.push(c);
this._foldsNodes.push(r);
this._playerPos.push(i.getPosition());
}
this.cardNode = cc.find("Canvas/replayGame/cardNode");
},
initHoldNodes: function() {
for (var e = [ "selfHandCardNode", "rightHandCardNode", "leftHandCardNode" ], t = 0; t < e.length; t++) {
var i = this.replayGameNode.getChildByName(e[t]);
i && this._holdsNodes.push(i);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.holdsList[i] = e[t].holds.concat();
this.drawHolds(e[t].holds, i);
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button, n = this._seats2[t];
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.cardNode;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initEvent: function() {
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
drawHolds: function(e, t) {
var i = e.concat(), n = cc.vv.zipai_cardsSort.cardSort(i), a = 0 == t ? cc.vv.zipai_drawCard.enumTalbe.cardType.BIG : cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL;
this.holdsSpriteList[t] = [];
this._holdsNodes[t].removeAllChildren();
for (var s = 0; s < n.sort.length; s++) {
this.holdsSpriteList[t][s] = {
posx: s * this._outCardSpriteSize.width - 640,
cards: []
};
for (var c = 0; c < Math.ceil(n.sort[s].type); c++) {
2.5 == n.sort[s].type && 2 == c && (10 < n.sort[s].value ? n.sort[s].value -= 10 : n.sort[s].value += 10);
2.3 == n.sort[s].type && 0 < c && n.sort[s].value++;
(r = cc.vv.zipai_drawCard.drawCard(n.sort[s].value, a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(Math.ceil(n.sort[s].type) - c);
r.setLocalZOrder(Math.ceil(n.sort[s].type) - c);
this.holdsSpriteList[t][s].cards.push(r);
}
}
for (s = 0; s < n.single.length; s++) {
s % 3 == 0 && (this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)] = {
posx: (n.sort.length + Math.floor(s / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var r;
(r = cc.vv.zipai_drawCard.drawCard(n.single[s], a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(n.single.length - s);
r.setLocalZOrder(n.single.length - s);
this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)].cards.push(r);
}
this.replaceCards(t);
},
replaceCards: function(e) {
for (var t = 0; t < this.holdsSpriteList[e].length; t++) for (var i = 0; i < this.holdsSpriteList[e][t].cards.length; i++) {
this.holdsSpriteList[e][t].cards[i].setLocalZOrder(this.holdsSpriteList[e][t].cards.length - i);
this.holdsSpriteList[e][t].cards[i].getComponent("zipai_card").setOrder(Math.ceil(this.holdsSpriteList[e][t].cards.length - i));
if (0 == e) this.holdsSpriteList[e][t].cards[i].setPosition(t * this._outCardSpriteSize.width - 310 + (8 - this.holdsSpriteList[e].length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * i - .1 * this._outCardSpriteSize.height); else {
this.holdsSpriteList[e][t].cards[i].setScale(.75);
this.holdsSpriteList[e][t].cards[i].setPosition(t * this._handCardSpriteSize.width * .75 + (8 - this.holdsSpriteList[e].length) * this._handCardSpriteSize.width / 2 * .75, this._handCardSpriteSize.height * i * .75);
}
}
},
onDoReplayAction: function(e) {
var t = e.detail.action, i = (e.detail.next, t.d_actions), n = i[0], a = i[1], s = i[2], c = i[3], r = cc.vv.gameNetMgr.getLocalIndex(n), o = cc.vv.gameNetMgr.getLocalIndex(c);
console.log("log seat  card  act_type=:", r, s, a);
this.showTurn(r);
if (a != cc.vv.globalSetting.ACTION_HU) this.deleteCard(); else if (n == c) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO, r);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", 1);
} else {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.HU, r);
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PAO, o);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", 1);
}
if (a == cc.vv.globalSetting.ACTION_PICK) {
if (0 < this.outPool.length) {
this.updateFoldsData(this.outPool[0]._card, this.outPool[0]._seat);
this.updateFolds(this.outPool[0]._seat);
this.outPool.pop();
}
if (0 == this.actionCount) this.showFirstPickCardAction(s, r); else {
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
}
} else if (a == cc.vv.globalSetting.ACTION_OUT) {
this.outPool.push({
_card: s,
_seat: r
});
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
(h = []).push(s);
this.updateHoldsData(h, r);
this.updateHolds(r);
} else {
this.outPool.pop();
if (a < cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI) {
var h = (d = cc.vv.GLZP_Utils.getItemCards(a - 2, s)).concat();
if (a != cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) for (var l = 0; l < h.length; l++) if (s == h[l]) {
h.splice(l, 1);
break;
}
} else {
var d;
h = (d = cc.vv.GLZP_Utils.getItemCards(a, s)).concat();
}
this.showIconByAction(a, r);
this.updateHoldsData(h, r);
this.updateItemsData(d, r, a);
this.updateHolds(r);
this.updateItems(r);
}
this.actionCount++;
},
onDoReplayActionOver: function() {},
updateHolds: function(e) {
this.drawHolds(this.holdsList[e], e);
},
updateItems: function(e) {
for (var t = 1 == e ? -1 : 1, i = 0; i < this.itemsList[e].length; i++) for (var n = 0; n < this.itemsList[e][i].cards.length; n++) {
var a = null;
if (this.itemsList[e][i].act_type == cc.vv.globalSetting.ACTION_SAO || this.itemsList[e][i].act_type == cc.vv.globalSetting.ACTION_SAO_CHUAN || this.itemsList[e][i].act_type == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN || this.itemsList[e][i].act_type == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO); else if (this.itemsList[e][i].act_type == cc.vv.globalSetting.ACTION_GUO_SAO && 2 == n) a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO); else a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
a.setScale(.6);
a.parent = this._itemNodes[e];
console.log("log------------updateItems---\x3ex y=:", t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
a.setPosition(t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
}
},
updateFolds: function(e) {
for (var t = 2 == e ? 1 : -1, i = 0; i < this.foldsList[e].length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(this.foldsList[e][i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.setScale(.6);
n.parent = this._foldsNodes[e];
n.setPosition(.6 * this._handCardSpriteSize.width * i * t + t * this._handCardSpriteSize.width * .6 / 2, 0);
}
},
updateHoldsData: function(e, t) {
for (var i = 0; i < e.length; i++) for (var n = 0; n < this.holdsList[t].length; n++) if (e[i] == this.holdsList[t][n]) {
this.holdsList[t].splice(n, 1);
break;
}
},
updateItemsData: function(e, t, i) {
var n = this.itemsList[t].length;
this.itemsList[t][n] = {
cards: [],
act_type: i
};
for (var a = 0; a < this.itemsList[t].length; a++) for (var s = 0; s < this.itemsList[t][a].cards.length; s++) if (this.itemsList[t][a].cards[0] == e[0] && this.itemsList[t][a].cards[1] == e[1] && this.itemsList[t][a].cards[2] == e[2] && e[0] == e[1] && e[0] == e[2]) {
this.itemsList[t][a].cards.push(e[0]);
this.itemsList[t].pop();
return;
}
for (a = 0; a < e.length; a++) this.itemsList[t][n].cards.push(e[a]);
},
updateFoldsData: function(e, t) {
this.foldsList[t].push(e);
},
showCard: function(e, t, i) {
(e = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.cardNode;
e.tag = this.outCardTag;
e.setPosition(0, 50);
var n = this;
if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD) {
e.setPosition(this._beginThrowCardPos[t].x, this._beginThrowCardPos[t].y);
e.runAction(cc.moveTo(.1, cc.p(0, 50)));
} else if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD) {
e.active = !1;
e.setPosition(0, 50);
e.setScale(.2, 1);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.1, .2, 1), cc.callFunc(function() {
e.active = !0;
e.runAction(cc.scaleTo(.1, 1, 1));
}), cc.callFunc(function() {
n.bigCardBack.active = !1;
})));
}
},
showFirstPickCardAction: function(e, t) {
var i = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
i.parent = this.cardNode;
i.tag = this.outCardTag;
i.setPosition(0, 50);
var n = 0 < t ? this._playerPos[t] : {
x: 0,
y: -300
}, a = this;
i.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.1, cc.p(n.x, n.y)), cc.callFunc(function() {
i.destroy();
a.holdsList[t].push(e);
a.updateHolds(t);
})));
},
deleteCard: function() {
for (;this.cardNode.getChildByTag(this.outCardTag); ) this.cardNode.removeChildByTag(this.outCardTag);
},
showTurn: function(e) {
for (var t = 0; t < this._seats2.length; t++) this._seats2[t].hideIconTurn();
this._seats2[e].showIconTurn();
},
judgeShowPeace: function() {
var e = this;
if (cc.vv.gameNetMgr.getIsPeaceGame()) {
var t = cc.vv.gameNetMgr.getActionCount();
this.node.runAction(cc.sequence(cc.delayTime(t + 1), cc.callFunc(function() {
e.peaceNode.active = !0;
})));
}
},
showIconByAction: function(e, t) {
if (e >= cc.vv.globalSetting.ACTION_LEFT_CHI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI || e >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", 1);
} else if (e == cc.vv.globalSetting.ACTION_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO || e == cc.vv.globalSetting.ACTION_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("sao", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO_CHUAN || e == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("saochuan", 1);
} else if (e == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("saochuan", 1);
} else if (e >= cc.vv.globalSetting.ACTION_KAI_DUO && e <= cc.vv.globalSetting.ACTION_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("kaizhao", 1);
}
},
showIcon: function(e, t) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("sao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("saochuan");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("kaizhao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongzhao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
});
cc._RF.pop();
}, {} ],
GLZP_Room: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6958dSU1yZK4ZIHnCAlIWG+", "GLZP_Room");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_playerPos: [],
_itemsNodes: [],
_foldsNodes: [],
_iconsNodes: [],
_maxPlayerCount: null,
game_over: null
},
onLoad: function() {
var t = this;
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
this.initData();
this.initRes();
this.initView();
this.initComponent();
this.initSplitLine();
this.initOperationBtns();
this.initEatNode();
this.initHuNode();
this.initEventHandlers();
this.resetGame();
this.initBigCardBack();
this.initXing();
this.initHoldsEventHandler();
this.initEatNodeEventHandler();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/GameBaseUI", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("BaseRoom")._seats2 = i._seats2;
e.getComponent("BaseRoom").initBaseRoom();
});
});
console.log("log---------------cc.vv.gameNetMgr.seats=", cc.vv.gameNetMgr.seats);
} else this.addComponent("GLZP_Replay"); else cc.director.loadScene("loading");
},
initRes: function() {
this.gameNode = cc.find("Canvas/game");
this.outCardPools = this.gameNode.getChildByName("outCardPools");
this.lb_surplusCardNums = this.gameNode.getChildByName("lb_surplusCardNums");
this.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.gameOverHandNode = this.node.getChildByName("gameOverHandNode");
this.selfHandCardNode = this.gameNode.getChildByName("selfHandCardNode");
this.xingNode = this.node.getChildByName("xingNode");
this.surplusCardNode = this.node.getChildByName("surplusCardNode");
this.surplusCardCover = this.node.getChildByName("surplusCardCover");
},
initData: function() {
this._maxPlayerCount = 3;
this._playerItems = [ [], [], [] ];
this._PlayerItemCount = [ 0, 0, 0 ];
this._outCardCoordinate = {
x: null,
y: null
};
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.isReconnectGame = !1;
this.iconItemTag = 1111;
this.recentOutCardValue = null;
this.pickCardCount = null;
this.shangbi_way = null;
this.xiabi_way = null;
this._handcardsInfoList = [];
this.end_seats_data = null;
this.xingCard = [];
this.isTianHu = !1;
this.has_action = !1;
this.actionCount = 0;
this.hucode = 0;
this.pick_seat = -1;
this.pick_data = -1;
this.out_seat = -1;
this.out_data = -1;
},
initComponent: function() {
cc.loader.loadRes("game/zipaiGames/glzp/prefabs/game_over", cc.Prefab, function(e, t) {
if (!e) {
this.game_over = cc.instantiate(t);
this.node.addChild(this.game_over, 10);
this.initSeats();
}
}.bind(this));
cc.loader.loadRes("game/zipaiGames/prefab/game_result", cc.Prefab, function(e, t) {
e || this.node.addChild(cc.instantiate(t), 10);
}.bind(this));
},
initSplitLine: function() {
this.splitLine = this.gameNode.getChildByName("splitLine");
this.splitWord = this.gameNode.getChildByName("splitWord");
this.handTip = this.gameNode.getChildByName("hand");
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.outCardPools;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initOperationBtns: function() {
this.operationBtnsNode = this.gameNode.getChildByName("operationBtnNode");
this.btn_eat = this.operationBtnsNode.getChildByName("btn_chi");
this.btn_peng = this.operationBtnsNode.getChildByName("btn_peng");
this.btn_win = this.operationBtnsNode.getChildByName("btn_win");
this.btn_pass = this.operationBtnsNode.getChildByName("btn_pass");
this.btn_liu = this.operationBtnsNode.getChildByName("btn_liu");
this.icon_win = this.operationBtnsNode.getChildByName("icon_win");
this.icon_peng = this.operationBtnsNode.getChildByName("icon_peng");
this.icon_chi = this.operationBtnsNode.getChildByName("icon_chi");
this.icon_pass = this.operationBtnsNode.getChildByName("icon_pass");
this.icon_liu = this.operationBtnsNode.getChildByName("icon_liu");
this.btn_liu.active = !1;
this.icon_liu.active = !1;
this.initOperationBtnsListener();
},
initOperationBtnsListener: function() {
var t = this;
this.btn_eat.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnEat();
});
this.btn_peng.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPeng();
});
this.btn_win.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnWin();
});
this.btn_pass.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPass();
});
},
initEatNode: function() {
this.eatNode = this.node.getChildByName("eatNode");
this.btnCloseEatNode = this.eatNode.getChildByName("btn_close");
this.btnCloseEatNodeIndex = 15e3;
},
initHuNode: function() {
var e = [ "selfHuNode", "rightHuNode", "leftHuNode" ];
this.huNodeList = [];
for (var t = 0; t < e.length; t++) {
var i = this.gameNode.getChildByName(e[t]), n = i.getChildByName("lb_huCount").getComponent(cc.Label);
i.active = !1;
n.string = 0;
this.huNodeList[t] = {
node: i,
lb: n
};
}
},
initXing: function() {
this.word_xing = this.xingNode.getChildByName("word_xing");
this.lb_xingCount0 = this.xingNode.getChildByName("mask").getChildByName("lb_xingCount0");
this.lb_xingCount1 = this.xingNode.getChildByName("mask").getChildByName("lb_xingCount1");
},
initView: function() {
this.animworldmap = this.node.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat"), a = i.getChildByName("folds"), s = i.getChildByName("items"), c = i.getChildByName("icons");
n.getChildByName("zhuang3").active = !1;
this._foldsNodes.push(a);
this._itemsNodes.push(s);
this._iconsNodes.push(c);
this._seats2.push(n.getComponent("Seat"));
this._playerPos.push(i.getPosition());
}
},
initHoldsEventHandler: function() {
new (e("holdsEventHandler"))().init(this, "wp_gl_out");
},
initEatNodeEventHandler: function() {
new (e("eatNodeEventHandler"))().init(this);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("new_user", function(e) {
o.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
o.initSingleSeat(e.detail);
cc.vv.gameNetMgr.getLocalIndex(e.detail.seatindex);
});
this.node.on("wp_gl_button_push", function(e) {
o.onGameStart();
o.initBigCardBack();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
o._seats2[t].setZhuang(!0);
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getSeatIndexByID(cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id), c = cc.vv.gameNetMgr.getLocalIndex(s);
o._seats2[c].setScore(n, a);
for (var r = 0; r < t.length; r++) cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id == cc.vv.gameNetMgr.seats[r].userid && (cc.vv.gameNetMgr.seats[r].score = n);
}
});
this.node.on("wp_gl_state_push", function(e) {
o.canleReady();
});
this.node.on("kick_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("transfer_push", function(e) {});
this.node.on("seq_move_seat_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("wp_gl_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.OnMsgUpdateSeatHolds(t.seatindex, t.holds);
});
this.node.on("wp_gl_folds_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id);
o.OnMsgShowFlods(t, e.detail.folds);
});
this.node.on("wp_gl_out_push_err", function(e) {
o._handcardsInfoList[o._outCardCoordinate.x].cards[o._outCardCoordinate.y].setPosition(o.clickCardPos.x, o.clickCardPos.y);
});
this.node.on("wp_gl_out_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.out_user), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.out_user);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(e.detail.out_card, n.sex);
o.OnMsgShowOutCard(e.detail.out_card, i);
o.out_seat = i;
o.out_data = e.detail.out_card;
});
this.node.on("wp_gl_turn_push", function(e) {
var t = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.getLocalIndex(t);
o.OnMsgNoteOperater(t);
o.CloseTimer();
o.ShowTimer(i, 30);
});
this.node.on("wp_gl_surplus_push", function(e) {
var t = cc.vv.gameNetMgr.numOfMJ;
o.OnMsgUpdateSurplus(t);
});
this.node.on("wp_gl_action_mask_push", function(e) {
var t = e.detail.action_mask;
o.has_action = 0 < t;
o.hideSplitLine();
o.OnMsgShowOperationTypes(e.detail.action_mask, e.detail.xiabi_actions);
o.has_action && o.hideSplitLine();
if (0 == o.actionCount && !o.isReconnecting) {
var i = t & 1 << cc.vv.globalSetting.OPERATE_HU;
o.isTianHu = 0 != i;
}
o.isTianHu && o.node.runAction(cc.sequence(cc.delayTime(5.5), cc.callFunc(function() {
o.operationBtnsNode.active = !0;
o.isTianHu = !1;
})));
o.actionCount++;
});
this.node.on("wp_gl_cancel_action_push", function(e) {});
this.node.on("wp_gl_pick_card_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t), n = e.detail.card, a = cc.vv.gameNetMgr.getSeatByID(e.detail.user_id);
o.hideSplitLine();
var s = 0 == o.pickCardCount ? 2.3 : 0, c = (n = e.detail.card, a.sex);
o.node.runAction(cc.sequence(cc.delayTime(s), cc.callFunc(function() {
o.OnMsgShowPickCard(i, n, c);
})));
o.pick_seat = i;
o.pick_data = e.detail.card;
});
this.node.on("wp_gl_item_push", function(e) {
var t = e.detail.user_id, i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = e.detail.add_items;
o.OnMsgShowItems(i, t, n);
cc.vv.gameNetMgr.getLocalIndex(i);
o.eatNode.active = !1;
o.operationBtnsNode.active = !1;
o.pick_seat = -1;
o.pick_data = -1;
o.out_seat = -1;
o.out_data = -1;
o.has_action = !1;
});
this.node.on("wp_gl_hu_push", function(e) {
o.isSpcialHu = !1;
o.isSpcialHu = e.detail.special_hu;
cc.vv.gameNetMgr.setIsSpcialHu(o.isSpcialHu);
var t = o.isSpcialHu ? 1 : 0, i = e.detail;
o.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
o.OnMsgShowHu(i);
})));
});
this.node.on("wp_gl_over", function(e) {
var t = o.isSpcialHu ? 1 : 0;
o.OnMsgShowSingleGameOver(e);
o.CloseTimer();
o.hideSplitLine();
o.scheduleOnce(function() {
o.initHuNode();
o.clearHolds();
o.clearFolds();
o.clearItemsCards();
o.clearOutCard();
o.clearSurplusCards();
o.clearGameOverHandCards();
o.hideXing();
o.initData();
o.outCardPools.removeAllChildren();
o.lb_surplusCardNums.getComponent(cc.Label).string = "";
o.surplusCardCover.active = !1;
}, 3 + t + 1.5 * (cc.vv.gameNetMgr.gameOverData.xing_cards.length - 1) + .5 * cc.vv.gameNetMgr.totalXingCount + .2 * cc.vv.gameNetMgr.surplusCardsNum);
});
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else 1 == cc.vv.gameNetMgr.getIsWatch() && (this.BtnReady.node.active = !1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
},
resetGame: function() {
var e = cc.vv.gameNetMgr.turn, t = cc.vv.gameNetMgr.getLocalIndex(e);
this.isReconnecting = !1;
if (!(e < 0)) {
this.initHuNode();
this.isReconnecting = !0;
this.OnMsgNoteOperater(e);
this.OnMsgUpdateSurplus(cc.vv.gameNetMgr.numOfMJ);
this.canleReady();
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; n++) {
this.OnMsgUpdateSeatHolds(i[n].seatindex, i[n].holds);
this.OnMsgShowFlods(i[n].seatindex, i[n].folds);
this.OnMsgShowItems(i[n].seatindex, i[n].userid, i[n].items);
}
for (n = 0; n < i.length; n++) {
if (0 == cc.vv.gameNetMgr.getLocalIndex(i[n].seatindex)) {
this.xiabi_actions = {};
this.xiabi_actions = i[n].xiabi_actions;
if (i[n].select_action <= 0) {
this.OnMsgShowOperationTypes(i[n].action_mask, i[n].xiabi_actions);
this.has_action = 0 < i[n].action_mask;
}
}
}
this.hideSplitLine();
this.drawOutByLocalTurn(t);
2 == cc.vv.gameNetMgr.gamestate && this.showHuNode();
this.isReconnecting = !1;
this.isReconnectGame = !0;
}
},
drawOutByLocalTurn: function(e) {
this.pick_seat = cc.vv.gameNetMgr.syncData.pick_seat;
this.pick_data = cc.vv.gameNetMgr.syncData.pick_data;
this.out_seat = cc.vv.gameNetMgr.syncData.out_seat;
this.out_data = cc.vv.gameNetMgr.syncData.out_data;
this.recentOutCardValue = -1;
0 < this.pick_data && (this.recentOutCardValue = this.pick_data);
0 < this.out_data && (this.recentOutCardValue = this.out_data);
this.clearOutCard();
if (0 < this.recentOutCardValue) {
var t = this.createOutCard(this.recentOutCardValue), i = this.getOutCardPos(e);
t.setPosition(i);
}
this.hideSplitLine();
0 == e && this.recentOutCardValue <= 0 && !this.has_action && this.showSplitLine();
},
onGameStart: function() {
this.isGaming = !0;
this.pickCardCount = 0;
this.showHuNode();
},
OnMsgUpdateSeatHolds: function(e, t) {
if (!(0 < cc.vv.gameNetMgr.getLocalIndex(e))) {
var i = [];
i = t.concat();
if (0 == this.isReconnecting && 0 < this._handcardsInfoList.length) this.deleteOutCards(t); else {
this.drawHolds(t);
this.dealAction();
}
this.holdstemp = [];
this.holdstemp = i.concat();
}
},
OnMsgUpdateSurplus: function(e) {
this.lb_surplusCardNums.getComponent(cc.Label).string = "牌x" + e;
},
OnMsgNoteOperater: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.CloseTimer();
this.ShowTimer(t, 30);
this.hideSplitLine();
0 == t && -1 == this.pick_seat && -1 == this.pick_seat && this.showSplitLine();
},
OnMsgShowOutCard: function(e, t) {
this.recentOutCardValue = e;
this.clearOutCard();
this.hideSplitLine();
var i = this.getOutCardPos(t);
if (0 == t) {
(n = this.createOutCard(e)).setPosition(this.clickCardPos.x, this.clickCardPos.y);
n.runAction(cc.moveTo(.15, i));
} else {
var n;
(n = this.createOutCard(e)).setPosition(this._playerPos[t].x, this._playerPos[t].y);
n.setScale(.4);
n.runAction(cc.spawn(cc.scaleTo(.15, 1), cc.moveTo(.15, i)));
}
this.CloseTimer();
},
OnMsgShowOperationTypes: function(e, t) {
this.xiabi_actions = {};
this.xiabi_actions = t;
this.decodeOperationValue(e);
(this._canEat || this._canPeng || this._canWin) && this.scheduleOnce(function() {
this.showOperationBtns();
}, .5);
},
OnMsgUpdateGameCount: function() {
this.lbGameCount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
},
OnMsgShowItems: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = !this.isReconnecting;
this.isReconnecting;
this.operationBtnsNode.active = !1;
this.clearOutCard();
for (var s = 0; s < i.length; s++) {
this.operationBtnsNode.active = !1;
this.showIconByItem(i[s][0], n, t, this.isReconnecting);
this.savePlayersItem(n, i[s]);
this.showItemCards(n, i[s], a);
this.updateHuCount(n);
}
},
OnMsgShowPickCard: function(i, e, t) {
this.recentOutCardValue = e;
var n = this.showPickCard(e, i), a = !1;
if (20 == this.getSelfFoldCount() && 0 == this.pickCardCount && !this.isReconnectGame) {
n.tag = 10010;
a = !0;
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI, i);
this.scheduleOnce(function() {
var e = {};
if (0 == i) {
n.removeFromParent();
n = null;
e = {
x: 0,
y: -300
};
var t = cc.vv.zipai_drawCard.drawCard(this.recentOutCardValue, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
t.parent = this.selfHandCardNode;
t.tag = this.recentOutCardValue;
t.setPosition(0, 430);
t.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
t.destroy();
this.drawHolds(this.holdstemp);
this.isTianHu || this.showSplitLine();
}.bind(this))));
} else {
e = this._playerPos[i];
n.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
n.destroy();
})));
}
}.bind(this), 1.5);
}
a || cc.vv.zipai_atlasAndAudioUtils.playCardSound(e, t);
this.pickCardCount++;
},
OnMsgShowFlods: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = 2 == i ? 1 : -1;
if (0 == this.isReconnecting) {
var a = t.length - 1;
this.clearOutCard();
var s = this.createOutCard(t[a]);
s.active = !0;
s.parent = this._foldsNodes[i];
var c = this._foldsNodes[i].convertToNodeSpace(cc.v2(640, 370));
s.setPosition(c.x, c.y);
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.p(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0)), cc.scaleTo(.2, .55 * this._handCardSpriteSize.width / this._outCardSpriteSize.width, .55 * this._handCardSpriteSize.height / this._outCardSpriteSize.height)), cc.callFunc(function() {
s.destroy();
var e = cc.vv.zipai_drawCard.drawCard(t[a], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
e.parent = this._foldsNodes[i];
e.setScale(.55);
e.setPosition(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}.bind(this))));
} else for (var r in t) {
var o = cc.vv.zipai_drawCard.drawCard(t[r], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
o.parent = this._foldsNodes[i];
o.setScale(.55);
o.setPosition(.55 * this._handCardSpriteSize.width * r * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}
},
OnMsgShowHu: function(e) {
this.CloseTimer();
this.hideSplitLine();
this.eatNode.active = !1;
this.operationBtnsNode.active = !1;
var t = cc.vv.gameNetMgr.getSeatByID(e.hu_user_id), i = cc.vv.gameNetMgr.getSeatIndexByID(e.hu_user_id), n = cc.vv.gameNetMgr.getSeatIndexByID(e.pao_user_id), a = cc.vv.gameNetMgr.getLocalIndex(i), s = cc.vv.gameNetMgr.getLocalIndex(n);
if (a == s) {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.ZIMO, a);
} else {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.PAO, s);
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.HU, a);
}.bind(this))));
}
},
OnMsgShowSingleGameOver: function(e) {
var t = e.detail.end_seats_data, i = e.detail.hu_user_id, n = e.detail.xing_cards.concat(), a = e.detail.pokers.concat(), s = n.concat(a);
this.end_seats_data = e.detail.end_seats_data;
this.surplusCardCover.active = !0;
this.clearOutCard();
this.showOtherPlayerHolds(t);
this.turnXingCards(n, s);
this.showXingLableAction(i, n);
this.turnSurplusCards(n, s);
},
getOutCardPos: function(e) {
switch (e) {
case 0:
return cc.p(0, 70);

case 1:
return cc.p(350, 150);

case 2:
return cc.p(-350, 150);
}
},
savePlayersItem: function(e, t) {
this.doSpecialItem(t, e);
},
doSpecialItem: function(e, t) {
var i = e[0], n = e[1];
e[2];
this.specialItemIndex = -1;
if (i == cc.vv.globalSetting.ITEM_PENG_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var a = 0; a < this._playerItems[t].length; a++) {
if (n == this._playerItems[t][a][1]) {
this._playerItems[t][a] = e;
this.specialItemIndex = a;
return;
}
} else this._playerItems[t].push(e);
},
doChongZhao: function(e, t) {
if (!t) {
this.judgeIsChongZhao(e) && this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.CHONGZHAO, e);
}
},
showIconByItem: function(e, t, i, n) {
if (!n) {
var a = cc.vv.gameNetMgr.getSeatByID(i).sex;
if (e >= cc.vv.globalSetting.ITEM_LEFT_CHI && e <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", a);
} else if (e == cc.vv.globalSetting.ITEM_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO || e == cc.vv.globalSetting.ITEM_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("sao", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO_CHUAN || e == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("saochuan", a);
} else if (e == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("saochuan", a);
} else if (e >= cc.vv.globalSetting.ITEM_KAI_DUO && e <= cc.vv.globalSetting.ITEM_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("kaizhao", a);
}
}
},
showOtherPlayerHolds: function(e) {
for (var t in e) {
var i = cc.vv.gameNetMgr.getSeatIndexByID(e[t].user_id), n = cc.vv.gameNetMgr.getLocalIndex(i);
0 < n && this.showGameOverHandCards(e[t].holds, n);
}
},
turnXingCards: function(e, t) {
for (var i = this, n = 0, a = 0; a < e.length; a++) this.node.runAction(cc.sequence(cc.delayTime(1.5 * a), cc.callFunc(function() {
i.showXingCard(e[n], n, t.length);
n++;
})));
},
showXingLableAction: function(e, t) {
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(1.5 * (t.length - 1) + .8), cc.callFunc(function() {
i.showXing(e, cc.vv.gameNetMgr.totalXingCount);
})));
},
turnSurplusCards: function(e, t) {
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(1.5 * (e.length - 1) + .8 + .5 * cc.vv.gameNetMgr.totalXingCount), cc.callFunc(function() {
i.showSurplusCards(t, e.length);
})));
},
showSplitLine: function() {
this.splitLine.active = !0;
this.splitWord.active = !0;
this.handTip.active = !0;
this.handTip.setPosition(370, -220);
this.handTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.p(60, 70)), cc.moveBy(0, cc.p(-60, -70)))));
},
hideSplitLine: function() {
this.splitLine.active = !1;
this.splitWord.active = !1;
this.handTip.active = !1;
this.handTip.stopAllActions();
},
decodeOperationValue: function(e) {
this.operationsList = [];
this.shangbi_List = [];
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.shangbi_List = this.decodeEatAcition(e);
0 < this.shangbi_List.length && (this._canEat = !0);
0 != (e & 1 << cc.vv.globalSetting.OPERATE_PASS) && (this._canPass = !0);
if (0 != (e & 1 << cc.vv.globalSetting.OPERATE_PENG)) {
this.operationsList.push(cc.vv.globalSetting.OPERATE_PENG);
this._canPeng = !0;
}
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_GUO_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_CHUAN);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_SAOCHUAN);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN_HU);
2 == e && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
}, 2);
},
judgeAutoOperation: function(e, t) {
0 != (e & 1 << t) && this.scheduleOnce(function() {
this.sendMsgOperation(t);
}, 2);
},
judgeHuCode: function(e, t) {
if (0 != (e & 1 << t)) {
this.hucode = t;
this._canWin = !0;
}
},
decodeEatAcition: function(e) {
var t = [];
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_LEFT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_CENTER_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_RIGHT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI);
return t;
},
judgeExistEatAction: function(e, t, i) {
0 != (t & 1 << i) && e.push(i);
},
showOperationBtns: function() {
this.operationBtnsNode.active = !0;
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this._canEat && (this.btn_eat.active = !0);
this._canPeng && (this.btn_peng.active = !0);
this._canPass && (this.btn_pass.active = !0);
this._canWin && (this.btn_win.active = !0);
this.isTianHu && (this.operationBtnsNode.active = !1);
},
showIcon: function(e, t) {
if (!this.isReconnecting) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("sao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("saochuan");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("kaizhao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongzhao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
e == cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN && (i.y += 130);
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
},
showItemCards: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = t[0], a = t[1], s = cc.vv.GLZP_Utils.getItemCards(n, a), c = this._itemsNodes[e].convertToNodeSpace(cc.v2(640, 370)), r = 1 == e ? -1 : 1, o = i ? .2 : 0;
this._PlayerItemCount[e] = 0 <= this.specialItemIndex ? this.specialItemIndex : this._PlayerItemCount[e];
for (var h in s) {
a = null;
if (0 < s[h]) {
a = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
(n == cc.vv.globalSetting.ITEM_SAO_SAOCHUAN || n == cc.vv.globalSetting.ITEM_SAO || n == cc.vv.globalSetting.ITEM_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == h) && (a = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
} else a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
a.setScale(.55);
a.parent = this._itemsNodes[e];
a.setPosition(c.x, c.y);
a.runAction(cc.moveTo(o, cc.p(r * this._PlayerItemCount[e] * this._handCardSpriteSize.width * .55 + r * this._handCardSpriteSize.width * .55 / 2, .55 * this._handCardSpriteSize.height * h)));
}
this.specialItemIndex < 0 ? this._PlayerItemCount[e]++ : this._PlayerItemCount[e] = this._playerItems[e].length;
},
judgeIsChongZhao: function(e) {
var t = this._playerItems[e].length;
if ((n = this._playerItems[e][t - 1][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) for (var i = 0; i < t - 1; i++) {
var n;
if ((n = this._playerItems[e][i][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) return !0;
}
return !1;
},
showGameOverHandCards: function(e, t) {
this.gameOverHandNode.active = !0;
var i = this.gameOverHandNode.getChildByName([ "right", "left" ][t - 1]);
i.active = !0;
i.removeAllChildren();
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = i;
a.setScale(.75);
a.setPosition(n % 7 * this._handCardSpriteSize.width * .75 - 126, .75 * this._handCardSpriteSize.height - .75 * this._handCardSpriteSize.height * Math.floor(n / 7));
}
},
deleteOutCards: function(e) {
var t = this.getNeedDeleteCards(e);
if (1 != t.length) {
for (var i in t) for (var n = !1, a = 0; a < this._handcardsInfoList.length; a++) {
for (var s = 0; s < this._handcardsInfoList[a].cards.length; s++) {
var c = this._handcardsInfoList[a].cards[s].getComponent("zipai_card").getValue();
if (t[i] == c) {
this.deleteOutCard(a, s);
n = !0;
break;
}
}
if (1 == n) break;
}
this.replaceCards();
} else {
this.deleteOutCard(this._outCardCoordinate.x, this._outCardCoordinate.y);
this.replaceCards();
}
},
deleteOutCard: function(e, t) {
this._handcardsInfoList[e].cards[t].destroy();
1 < this._handcardsInfoList[e].cards.length ? this._handcardsInfoList[e].cards.splice(t, 1) : this._handcardsInfoList.splice(e, 1);
},
getNeedDeleteCards: function(e) {
for (var t = [], i = 0; i < this.holdstemp.length; i++) {
var n = e.indexOf(this.holdstemp[i]);
-1 != n ? e.splice(n, 1) : t.push(this.holdstemp[i]);
}
return t;
},
getSelfFoldCount: function() {
for (var e = 0, t = 0; t < this._handcardsInfoList.length; t++) e += this._handcardsInfoList[t].cards.length;
return e;
},
OnClickBtnEat: function() {
cc.vv.audioMgr.playBtnClick();
this.eatlist = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.clearXiabiCards();
this.showEatCards(this.shangbi_List, cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI);
},
OnClickBtnPeng: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PENG);
},
OnClickBtnWin: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(this.hucode);
},
OnClickBtnPass: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.has_action = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
},
OnClickCloseEatNode: function() {
if (1 == this.eatNode.active) {
this.eatNode.active = !1;
this.shangbi_way = null;
this.xiabi_way = null;
}
},
sendMsgOperation: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, i = JSON.parse(cc.vv.msgTemp_GLZP.CS_card_type_action);
i.action = e;
i.xiabi_action = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("wp_gl_card_type_action", i);
},
showEatCards: function(e, t) {
if (0 != e.length) for (var i in e) e[i] == cc.vv.globalSetting.OPERATE_LEFT_CHI ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 1, this.recentOutCardValue + 2 ], cc.vv.globalSetting.OPERATE_LEFT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_CENTER_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 1, this.recentOutCardValue, this.recentOutCardValue + 1 ], cc.vv.globalSetting.OPERATE_CENTER_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_RIGHT_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 2, this.recentOutCardValue - 1, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_RIGHT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI ? this.showSingleEatCard([ 2, 7, 10 ], cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI ? this.showSingleEatCard([ 12, 17, 20 ], cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI ? this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 10, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI && (this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue - 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t));
},
showSingleEatCard: function(e, t, i) {
this.eatNode.active = !0;
this.eatlist[this.eatWayCount] = {
cardSprites: [],
operation: null,
type: null
};
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = this.eatNode;
a.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? a.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 170 - this._handCardSpriteSize.height * n) : a.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -45 - this._handCardSpriteSize.height * n);
this.eatlist[this.eatWayCount].cardSprites.push(a);
}
this.eatlist[this.eatWayCount].operation = t;
this.eatlist[this.eatWayCount].type = i;
var s = new cc.Node("New Sprite");
s.addComponent(cc.Sprite).spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("jiantou");
s.parent = this.eatNode;
s.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? s.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 10) : s.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -200);
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.15, cc.p(0, -3.5)), cc.moveBy(.3, cc.p(0, 7)), cc.moveBy(.15, cc.p(0, -3.5)))));
this.eatWayCount++;
},
dealAction: function() {
if (!this.isReconnecting) {
var e = 0;
this.node.runAction(cc.repeat(cc.sequence(cc.callFunc(function() {
cc.vv.zipai_atlasAndAudioUtils.playDealCardsSound();
}), cc.delayTime(.55)), 4));
for (var t = 0; t < this._handcardsInfoList.length; t++) for (var i = 0; i < this._handcardsInfoList[t].cards.length; i++) {
e++;
this._handcardsInfoList[t].cards[i].runAction(cc.sequence(cc.hide(), cc.delayTime(.1 * e), cc.show()));
}
}
},
showXiabiCards: function(e) {
this.xiabi_list = [];
this.eatWayCount = this.shangbi_List.length;
this.xiabi_list = this.decodeEatAcition(this.xiabi_actions[e]);
this.showEatCards(this.xiabi_list, cc.vv.zipai_cardsSort.enumTalbe.eatType.XIA_BI);
},
CloseTimer: function() {
for (var e in this._seats2) this._seats2[e].closeTimer();
},
ShowTimer: function(e, t) {
this._seats2[e].showTimer(t);
},
showPickCard: function(e, t) {
var i = null, n = this.getOutCardPos(t);
this.clearOutCard();
if (0 == e) {
(i = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK)).parent = this.outCardPools;
i.tag = 1e3;
} else i = this.createOutCard(e);
i.active = !1;
i.setPosition(n);
this.bigCardBack.setScale(.6);
this.bigCardBack.setPosition(0, 270);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, n), cc.scaleTo(.3, 1)), cc.callFunc(function() {
this.bigCardBack.active = !1;
i.active = !0;
}.bind(this))));
return i;
},
showXingCard: function(e, t, i) {
var n = i, a = n < 10 ? 1 : 0, s = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
s.parent = this.surplusCardNode;
s.active = !1;
s.setPosition(0, 50);
s.setScale(.2, 1);
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.3, .2, 1), cc.callFunc(function() {
s.active = !0;
s.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.moveTo(.2, cc.p(t * this._outCardSpriteSize.width - 395 + (10 - n) * this._outCardSpriteSize.width / 2 * a, 130)), cc.callFunc(function() {
s.getComponent("zipai_card").setBlack(!0);
}.bind(this))));
}.bind(this)), cc.callFunc(function() {
this.bigCardBack.active = !1;
}.bind(this))));
},
createOutCard: function(e) {
var t = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG);
t.parent = this.outCardPools;
t.tag = 1e3;
return t;
},
drawHolds: function(e) {
this.selfHandCardNode.removeAllChildren(!1);
this._handcardsInfoList = [];
for (var t = e.concat(), i = cc.vv.zipai_cardsSort.cardSort(t), n = 0; n < i.sort.length; n++) {
this._handcardsInfoList[n] = {
posx: n * this._outCardSpriteSize.width - 320,
cards: []
};
for (var a = 0; a < Math.ceil(i.sort[n].type); a++) {
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.threeNotSame && 2 == a && (i.sort[n].value = 10 < i.sort[n].value ? i.sort[n].value - 10 : i.sort[n].value + 10);
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.shunZi && 0 < a && i.sort[n].value++;
(s = cc.vv.zipai_drawCard.drawCard(i.sort[n].value, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.sort[n].value;
s.getComponent("zipai_card").setOrder(Math.ceil(i.sort[n].type) - a);
s.getComponent("zipai_card").setType(i.sort[n].type);
s.setLocalZOrder(Math.ceil(i.sort[n].type) - a);
this._handcardsInfoList[n].cards.push(s);
}
}
for (n = 0; n < i.single.length; n++) {
n % 3 == 0 && (this._handcardsInfoList[i.sort.length + Math.floor(n / 3)] = {
posx: (i.sort.length + Math.floor(n / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var s;
(s = cc.vv.zipai_drawCard.drawCard(i.single[n], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.single[n];
s.getComponent("zipai_card").setOrder(i.single.length - n);
s.setLocalZOrder(i.single.length - n);
this._handcardsInfoList[i.sort.length + Math.floor(n / 3)].cards.push(s);
}
this.replaceCards();
},
showHuNode: function() {
for (var e = 0; e < this._maxPlayerCount; e++) this.huNodeList[e].node.active = !0;
},
updateHuCount: function(e) {
for (var t = 0, i = 0; i < this._playerItems[e].length; i++) {
var n = this._playerItems[e][i][0], a = this._playerItems[e][i][1], s = cc.vv.GLZP_Utils.getItemCards(n, a);
t += cc.vv.GLZP_Utils.getHuCount(n, s);
}
this.huNodeList[e].lb.string = t;
},
replaceCards: function() {
for (var e = 0; e < this._handcardsInfoList.length; e++) for (var t = 0; t < this._handcardsInfoList[e].cards.length; t++) {
this._handcardsInfoList[e].cards[t].setPosition(e * this._outCardSpriteSize.width - 310 + (8 - this._handcardsInfoList.length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * t - .1 * this._outCardSpriteSize.height);
this._handcardsInfoList[e].cards[t].setLocalZOrder(this._handcardsInfoList[e].cards.length - t);
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setOrder(Math.ceil(this._handcardsInfoList[e].cards.length - t));
}
},
showSurplusCards: function(e, t) {
for (var i = e.length, n = i < 10 ? 1 : 0, a = 0; a < e.length; a++) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
s.parent = this.surplusCardNode;
s.setLocalZOrder(10);
s.setPosition(a % 10 * this._outCardSpriteSize.width - 395 + (10 - i) * this._outCardSpriteSize.width / 2 * n, 130 - Math.floor(a / 10) * this._outCardSpriteSize.height);
s.setOpacity(0);
a < t ? s.runAction(cc.delayTime(.2 * a + .2)) : s.runAction(cc.sequence(cc.delayTime(.2 * a + .2), cc.fadeIn(0)));
}
},
showXing: function(e, t) {
if (0 != e) {
this.word_xing.active = !0;
this.showXingLable(t);
}
},
hideXing: function() {
this.lb_xingCount0.getComponent(cc.Label).string = "";
this.lb_xingCount1.getComponent(cc.Label).string = "";
this.word_xing.active = !1;
},
showXingLable: function(e) {
var t = this.xingNode.getChildByName("mask"), i = t.getChildByName("lb_xingCount0"), n = t.getChildByName("lb_xingCount1"), a = 0;
i.setPosition(0, 10);
n.setPosition(0, -90);
i.getComponent(cc.Label).string = a;
n.getComponent(cc.Label).string = a + 1;
for (var s = 0; s < e; s++) {
i.runAction(cc.sequence(cc.delayTime(.5 * (s + 1)), cc.moveBy(.5, cc.p(0, 100)).easing(cc.easeBounceOut()), cc.callFunc(function() {
a++;
i.getComponent(cc.Label).string = a;
i.setPosition(0, 10);
})));
n.runAction(cc.sequence(cc.delayTime(.5 * (s + 1)), cc.moveBy(.5, cc.p(0, 100)).easing(cc.easeBounceOut()), cc.callFunc(function() {
n.getComponent(cc.Label).string = a + 1;
n.setPosition(0, -90);
})));
}
},
clearItemsCards: function() {
for (var e = 0; e < this._itemsNodes.length; e++) this._itemsNodes[e].removeAllChildren();
},
clearHolds: function() {
this.selfHandCardNode.removeAllChildren();
},
clearFolds: function() {
for (var e = 0; e < this._foldsNodes.length; e++) this._foldsNodes[e].removeAllChildren();
},
clearSurplusCards: function() {
this.surplusCardNode.removeAllChildren();
},
clearOutCard: function() {
for (;this.outCardPools.getChildByTag(1e3); ) this.outCardPools.removeChildByTag(1e3);
},
clearGameOverHandCards: function() {
this.gameOverHandNode.active = !1;
for (var e = 1; e < this.gameOverHandNode.children.length; e++) this.gameOverHandNode.children[e].removeAllChildren();
},
clearXiabiCards: function() {
for (;this.eatNode.getChildByTag(-2222); ) this.eatNode.removeChildByTag(-2222);
},
clearShangbiCards: function() {
for (;this.eatNode.getChildByTag(2222); ) this.eatNode.removeChildByTag(2222);
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {
eatNodeEventHandler: "eatNodeEventHandler",
holdsEventHandler: "holdsEventHandler"
} ],
GLZP_Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5e0203PrjBNxJrUK/HGGtwx", "GLZP_Utils");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && (cc.vv.GLZP_Utils = this);
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI:
i.push(t);
i.push(t + 1);
i.push(t + 2);
break;

case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ACTION_CENTER_CHI_XIABI:
i.push(t - 1);
i.push(t);
i.push(t + 1);
break;

case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ACTION_RIGHT_CHI_XIABI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI_XIABI:
i.push(2);
i.push(7);
i.push(10);
break;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI_XIABI:
i.push(12);
i.push(17);
i.push(20);
break;

case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t);
i.push(t + 10);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t);
i.push(t);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ITEM_PENG:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getHuCount: function(e, t) {
for (var i = 0; i < t.length; i++) for (var n = i + 1; n < t.length; n++) if (t[i] > t[n]) {
var a = t[i];
t[i] = t[n];
t[n] = a;
}
if (0 == t[0]) return 0;
switch (e) {
case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
return 10 < t[0] ? 12 : 9;

case cc.vv.globalSetting.ITEM_KAN:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
return 10 < t[0] ? 6 : 3;

case cc.vv.globalSetting.ITEM_PENG:
return 10 < t[0] ? 3 : 1;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
return 10 < t[0] ? 9 : 6;

case cc.vv.globalSetting.ITEM_DUIZI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
return 0;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
return 6;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
return 3;

case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SHUNZI:
return 1 == t[0] ? 3 : 11 == t[0] ? 6 : 0;
}
},
decodeXingtypes: function() {
var e = {
up: 0,
center: 0,
down: 0
};
8192 & cc.vv.gameNetMgr.rule_index && (e.up = 1);
16384 & cc.vv.gameNetMgr.rule_index && (e.center = 1);
32768 & cc.vv.gameNetMgr.rule_index && (e.down = 1);
return e;
},
getAllXingCards: function(e) {
for (var t = [], i = this.decodeXingtypes(), n = 0; n < e.length; n++) {
0 < i.up && (10 == e[n] ? t.push(1) : 20 == e[n] ? t.push(11) : t.push(e[n] + 1));
0 < i.center && t.push(e[n]);
0 < i.down && (1 == e[n] ? t.push(10) : 11 == e[n] ? t.push(20) : t.push(e[n] - 1));
}
return t;
},
isXingCard: function(e, t) {
for (var i in t) if (e == t[i]) return !0;
return !1;
}
});
cc._RF.pop();
}, {} ],
GameNetMgr10003: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6c832PWsoFFG5cONq5DXIoK", "GameNetMgr10003");
var n = e("baseGameNetMgr");
cc.Class({
extends: n,
initHandlers: function() {
this._super();
var t = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("xiaohu", function(e) {
t.sendXiaohu(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sea_cards", function(e) {
t.sendXSeaCards(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sea", function(e) {
t.sendShowSea(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("piao_fen_end", function(e) {
t.sendShowPiaoFen(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("piao_score", function(e) {
t.sendXPiaoFen(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mid_hu", function(e) {
t.sendMidHu(e);
});
},
sendXSeaCards: function(e) {
this.dispatchEvent("mj_sea_cards", e);
},
sendShowSea: function(e) {
this._seabool = !0;
this._sea = e;
this.dispatchEvent("mj_show_sea", e);
},
sendXiaohu: function(e) {
var t = {};
t.seatIndex = e.seat_index;
t.holds = e.holds;
t.target = e.target;
t.rights = e.rights;
t.userId = e.user_id;
this.dispatchEvent("mj_xiao_hu", t);
},
sendXPiaoFen: function(e) {
var t = {};
t.userId = e.user_id;
t.score = e.score;
this.dispatchEvent("mj_xpiao_score", t);
},
sendShowPiaoFen: function(e) {
this.dispatchEvent("mj_fen_end", e);
},
sendMidHu: function(e) {
console.log("中途胡");
var t = {};
t.opCard = e.op_card;
t.rights = e.rights;
t.seatIndex = e.seat_index;
t.target = e.target;
t.userId = e.user_id;
this.dispatchEvent("mj_mid_hu", t);
},
n_gameOver: function(e) {
this.gameOverData = e;
null == this.gameBirds && (this._sea || this.dispatchEvent("mj_over_push", e));
},
getGameTypeStr: function() {
return "长沙麻将";
},
n_gameSync: function(e) {
this._super(e);
for (var t = 0; t < e.seats.length; t++) for (var i = e.seats[t], n = 0; n < this.seats.length; n++) {
var a = this.seats[n];
if (i.user_id == a.userid) {
this.seats[n].piao_fen = e.seats[t].piao_fen;
this.seats[n].middle_score = e.seats[t].middle_score;
this.seats[n].middle_huright = e.seats[t].middle_huright;
}
}
}
});
cc._RF.pop();
}, {
baseGameNetMgr: "baseGameNetMgr"
} ],
GameNetMgr10006: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "849abgFDgpLiaYLAqoNhUt7", "GameNetMgr10006");
var n = e("baseGameNetMgr");
cc.Class({
extends: n,
getGameTypeStr: function() {
return "转转麻将";
}
});
cc._RF.pop();
}, {
baseGameNetMgr: "baseGameNetMgr"
} ],
GameNetMgr10007: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "da2daRs0QBFTpd9n7k4G9yu", "GameNetMgr10007");
var n = e("baseGameNetMgr");
cc.Class({
extends: n,
getGameTypeStr: function() {
return "红中麻将";
}
});
cc._RF.pop();
}, {
baseGameNetMgr: "baseGameNetMgr"
} ],
GameNetMgr10008: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b77e4BukRNPkI1OlSvIkYYY", "GameNetMgr10008");
var n = e("baseGameNetMgr");
cc.Class({
extends: n,
getGameTypeStr: function() {
return "都昌栽宝";
},
getWanfaType: function() {
return cc.vv.gameType.getWaFaDecs_dczb(this.conf.type_index, this.conf.rule_index);
},
require: function(e) {
function t() {
return e.apply(this, arguments);
}
t.toString = function() {
return e.toString();
};
return t;
}(function() {
cc.vv.msgTemp_mj = e("msgdefine_dczb").msg_templete;
}),
baseInitEvent: function() {
this._super();
var t = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_button_push", function(e) {
t.n_gameBegin(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_state_push", function(e) {
t.n_gameState(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_turn_push", function(e) {
t.n_turn(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_holds_push", function(e) {
t.n_holds(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_flower_item_push", function(e) {
t.n_flowerItem(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_sync_push", function(e) {
t.n_gameSync(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_out_push", function(e) {
t.n_outCard(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_surplus_push", function(e) {
t.n_wall(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_over", function(e) {
t.n_gameOver(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_result", function(e) {
t.n_gameResult(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_throw_dice_push", function(e) {
t.n_throwDice(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_light_card_push", function(e) {
t.n_lightCard(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_action_mask_push", function(e) {
t.n_operation(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_cancel_action_push", function(e) {
t.dispatchEvent("mj_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_pick_card_push", function(e) {
t.n_pick(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_pick_gang_push", function(e) {
t.n_pickGang(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_item_push", function(e) {
t.n_item(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_hu_push", function(e) {
t.dispatchEvent("mj_hu_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_ting_cards_push", function(e) {
t.mjSyncData.ting_cards = e.cards;
t.dispatchEvent("mj_ting_push", e.cards);
});
},
get_poker_nums: function(e) {
return 136;
},
n_gameBegin: function(e) {
this.ShowLog("mj_button_push", e);
this.button = e;
this.turn = this.button;
this.dispatchEvent("mj_beign_push");
},
n_holds: function(e) {
this.ShowLog("mj_holds_push", e);
var t = this.getSeatIndexByID(e.user_id), i = this.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
var n = {
seatIndex: 0,
holds: []
};
n.seatIndex = t;
n.holds = e.holds;
this.dispatchEvent("mj_holds_push", n);
}
},
n_flowerItem: function(e) {
this.ShowLog("mj_flower_item_push", e);
var t = this.getSeatIndexByID(e.user_id), i = this.seats[t];
if (i) {
i.flower_items = e.flower_item;
this.dispatchEvent("mj_flower_item_push", t);
}
},
n_outCard: function(e) {
this.ShowLog("mj_out_push", e);
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
var i = {};
i.userId = e.out_user;
i.card = e.out_card;
i.seatIndex = this.getSeatIndexByID(e.out_user);
console.log("mj_out_push");
console.log(i);
this.dispatchEvent("mj_out_push", i);
},
n_wall: function(e) {
this.ShowLog("mj_surplus_push", e);
console.log("mj_surplus_push," + e.surplus_card_num);
if (null == this.mjSyncData) {
this.mjSyncData = {};
this.mjSyncData.gang_card_num = 0;
}
this.numOfMJ = e.surplus_card_num;
this.mjSyncData.gang_card_num = e.gang_card_num;
this.wallData || (this.wallData = {});
this.wallData.head = 136 - this.mjSyncData.gang_card_num - this.numOfMJ;
this.wallData.tail = this.mjSyncData.gang_card_num;
this.dispatchEvent("mj_wall_push", this.wallData);
console.log("-----------------杠牌:" + this.mjSyncData.gang_card_num);
this.dispatchEvent("mj_surplus_push", e);
},
n_gameOver: function(e) {
this.ShowLog("mj_over", e);
this.gameOverData = e;
this.dispatchEvent("mj_over_push", e);
},
n_gameResult: function(e) {
this.ShowLog("mj_result", e);
this.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
this.dispatchEvent("mj_result", e);
this.dispatchEvent("mj_game_result_showLB", e);
},
n_throwDice: function(e) {
this.ShowLog("mj_throw_dice_push", e);
if (null == this.mjSyncData) {
this.mjSyncData = {};
this.mjSyncData.gang_card_num = 0;
}
this.mjSyncData.throw_dice = e.throw_dice;
this.wallData = {};
this.wallData.dice = e.throw_dice[0];
this.wallData.total = 136;
this.wallData.head = 0;
this.wallData.tail = 0;
this.dispatchEvent("mj_throw_push", e);
},
n_lightCard: function(e) {
this.ShowLog("mj_light_card_push", e);
if (null == this.mjSyncData) {
this.mjSyncData = {};
this.mjSyncData.gang_card_num = 0;
}
this.mjSyncData.god_wealth = e.god_wealth;
this.mjSyncData.light_card = e.light_card;
var t = {};
t.bao = e.god_wealth;
t.gang = e.light_card;
this.dispatchEvent("mj_flower_push", t);
},
n_operation: function(e) {
this.ShowLog("mj_action_mask_push", e);
this.dispatchEvent("mj_action_push", e);
},
n_pick: function(e) {
this.ShowLog("mj_pick_gang_push", e);
this.numOfMJ = this.numOfMJ - 1;
this.wallData || (this.wallData = {});
this.wallData.head = 136 - this.mjSyncData.gang_card_num - this.numOfMJ;
this.dispatchEvent("mj_wall_push", this.wallData);
var t = this.getSeatIndexByID(e.user_id), i = this.seats[t];
i && i.holds.push(e.card);
var n = {
seatIndex: 0,
holds: []
};
n.seatIndex = i.seatindex;
n.holds = i.holds;
this.dispatchEvent("mj_pick_card_push", e.user_id);
this.dispatchEvent("mj_holds_push", n);
},
n_pickGang: function(e) {
this.ShowLog("mj_pick_gang_push", e);
this.numOfMJ = this.numOfMJ - 1;
this.mjSyncData.gang_card_num = this.mjSyncData.gang_card_num + 1;
this.wallData || (this.wallData = {});
this.wallData.tail = this.mjSyncData.gang_card_num;
this.dispatchEvent("mj_wall_push", this.wallData);
var t = this.getSeatIndexByID(e.user_id), i = this.seats[t];
i && i.holds.push(e.card);
var n = {
seatIndex: 0,
holds: []
};
n.seatIndex = i.seatindex;
n.holds = i.holds;
this.dispatchEvent("mj_pick_card_push", e.user_id);
this.dispatchEvent("mj_pick_gang_push", n);
},
n_item: function(e) {
this.ShowLog("mj_item_push", e);
var t = this.getSeatIndexByID(e.user_id), i = this.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.remove_items;
if (0 < n.length) for (var a = 0; a < i.items.length; a++) if (i.items[a][1] == n[0][1]) {
i.items.splice(a, 1);
break;
}
var s = e.add_items;
i.items.push(s[0]);
var c = {};
c.seatIndex = t;
c.a_items = s[0];
this.dispatchEvent("mj_item_tx_push", c);
}
var r = {
seatIndex: 0,
items: []
};
r.seatIndex = i.seatindex;
r.items = i.items;
this.dispatchEvent("mj_items_push", r);
this.dispatchEvent("mj_pick_card_push", e.user_id);
},
n_gameSync: function(e) {
this.ShowLog("mj_sync_push", e);
cc.sys.isNative && (e = JSON.parse(e));
this.button = e.button;
this.turn = e.turn;
this.numOfMJ = e.num_of_pokers;
this.gamestate = e.state;
this.turn = e.turn;
if (null == this.mjSyncData) {
this.mjSyncData = {};
this.mjSyncData.gang_card_num = 0;
}
this.mjSyncData.throw_dice = e.throw_dice;
this.mjSyncData.gang_card_num = e.gang_card_num;
this.wallData = {};
this.wallData.dice = e.throw_dice[0];
this.wallData.total = 136;
this.wallData.head = 136 - e.gang_card_num - this.numOfMJ;
this.wallData.tail = e.gang_card_num;
this.mjSyncData.god_wealth = e.god_wealth;
this.mjSyncData.light_card = e.light_card;
this.mjSyncData.now_out_card_data = e.now_out_card_data;
this.mjSyncData.now_out_card_seat = e.now_out_card_seat;
for (var t = 0; t < this.seats.length; ++t) {
console.log("i:" + t);
var i = this.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.flower_items = n.flower_items;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.isAuto = n.is_auto;
t == this.seatIndex && (this.mjSyncData.ting_cards = n.ting_cards);
}
}
},
initReplayGameData: function(e) {
var t = JSON.parse(e[0].change_info);
this.turn = t.turn;
this.button = t.button;
this.gameBeginDice = t.throw_dice[0];
this.wallData = {};
this.wallData.dice = t.throw_dice[1];
this.mjSyncData || (this.mjSyncData = {});
this.mjSyncData.throw_dice = t.throw_dice;
this.mjSyncData.god_wealth = t.god_wealth;
this.mjSyncData.light_card = t.light_card;
var i = cc.vv.gameNetMgr.mjSyncData.throw_dice, n = (i[0], i[1], JSON.parse(e[0].base_info));
this.creatorid = n.conf.creator;
for (var a = null, s = 0; s < this.seats.length; s++) {
(r = this.seats[s]).userid == cc.vv.userMgr.userId && (a = r.userid);
}
a || (a = this.seats[0].userid);
this.startHoldLength = 13;
for (var c = 0; c < this.seats.length; c++) {
var r;
a == (r = this.seats[c]).userid && (this.seatIndex = c);
r.seatindex = c;
r.score = null;
r.folds = [];
r.holds = [];
r.items = [];
r.flower_items = [];
}
}
});
cc._RF.pop();
}, {
baseGameNetMgr: "baseGameNetMgr",
msgdefine_dczb: "msgdefine_dczb"
} ],
GameNetMgr10009: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3a10dTb9kRGE4uOYipbNwjo", "GameNetMgr10009");
var n = e("baseGameNetMgr");
cc.Class({
extends: n,
initHandlers: function() {
this._super();
var t = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("xing", function(e) {
t.dispatchEvent("mj_xing_push", e);
});
},
get_poker_nums: function(e) {
return cc.vv.mahjongUtils.has_rule(e.rule_index, 3) ? 136 : cc.vv.mahjongUtils.has_rule(e.rule_index, 4) ? 136 : cc.vv.mahjongUtils.has_rule(e.rule_index, 5) ? 64 : void 0;
},
getGameTypeStr: function() {
return "桂柳麻将";
}
});
cc._RF.pop();
}, {
baseGameNetMgr: "baseGameNetMgr"
} ],
GameNetMgr20001: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6e5e6jYUZhJ84y5IaadmLW3", "GameNetMgr20001");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
chupai: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
max_index: -1,
pdk_red_ten: -1,
now_card_type: 0,
now_card_data: [],
tishi_card_data: [],
isReplay: !1,
check_out_double_data: null,
black_three: -1,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.unions_id = -1;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.chupai = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.max_index = -1;
this.now_card_type = 0;
this.now_card_data = [];
this.tishi_card_data = [];
this.isReplay = !1;
this.pdk_red_ten = -1;
this.black_three = -1;
},
reset: function() {
this.turn = -1;
this.chupai = -1, this.gamestate = 1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].is_auto = !1;
}
this.dispatchEvent("fresh_all_score");
this.dispatchEvent("reset");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isAuto: function() {
var e = this.seats[this.seatIndex];
return !(!e.is_auto || 1 != e.is_auto);
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
return !1;
},
isVisibleWatch: function() {
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
if (16 & this.conf.rule_index && 20009 != this.conf.server_type && e != this.seatIndex) return 2;
if (8 & this.conf.rule_index || 20002 == this.conf.server_type) {
if (0 == this.seatIndex && 2 == e) return 3;
if (2 == this.seatIndex && 0 == e) return 1;
}
return (e - this.seatIndex + 4) % 4;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "跑得快";
},
getWanfaType: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return "经典玩法";
if (4 & e.type_index) return "15牌玩法";
if (8 & e.type_index) return "癞子玩法";
if (16 & e.type_index) return "4人玩法";
}
return "";
},
getPDK_paiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return 16;
if (4 & e.type_index) return 15;
if (8 & e.type_index) return 15;
if (16 & e.type_index) {
if (4096 & e.rule_index) return 13;
if (8192 & e.rule_index) return 27;
}
}
return "";
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return "3人";
if (16 & e.rule_index) return "2人";
if (32 & e.rule_index) return "4人";
}
return "";
},
getWanfaPaiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (1024 & e.rule_index) return "15牌";
if (2048 & e.rule_index) return "16牌";
if (4096 & e.rule_index) return "一副牌";
if (8192 & e.rule_index) return "二副牌";
}
return "";
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
64 & e.rule_index && t.push("显示出牌");
128 & e.rule_index && t.push("黑桃3首出");
256 & e.rule_index && t.push("有大必管");
512 & e.rule_index && t.push("扎鸟");
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
var s = this.getWanfaPaiNum();
t.push(s);
var c = this.getWanfaZhuang();
t.push(c);
var r = this.getWanfaDecs();
t.push(r);
var o = this.getWanfaNewGoto();
t.push(o);
return t.join(" ");
}
return "";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.vv.wc.show("正在进入游戏");
cc.director.loadScene("mjgame_PDK");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
console.log("gameNetMgr中收到了disconnect事件");
if (0 == c.isOver) {
cc.vv.userMgr.roomData = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.roomData = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
c.chupai = e.chuPai;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
i.is_auto = n.is_auto;
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
5001 == e.error_code && cc.vv.alert.show("提示", "出牌不符合规则！");
5006 == e.error_code && cc.vv.alert.show("提示", "下家报单啦！要出最大的单牌哦！");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
e.user_index = c.getLocalIndex(t);
e.si = t;
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.max_index = e.max_index;
c.black_three = e.black_three;
-1 != e.red_ten && (c.pdk_red_ten = e.red_ten);
c.now_card_type = e.now_card_type;
c.now_card_data = e.now_card_data;
c.tishi_card_data = e.now_card_data;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
c.pdk_red_ten = e.redheart_ten;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.now_card_type = 1, c.now_card_data = [], c.tishi_card_data = [], c.dispatchEvent("active_clock", e);
c.dispatchEvent("game_over_show", e);
c.dispatchEvent("gameOverCancelAuto");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time_sync", function(e) {
console.log("time_sync");
c.dispatchEvent("time_sync", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("auto_push", function(e) {
console.log("auto_push");
c.getSeatByID(e.user_id).is_auto = e.is_auto;
c.dispatchEvent("auto_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("cancel_auto", function(e) {
console.log("cancel_auto");
c.getSeatByID(e.user_id).is_auto = e.is_auto;
c.dispatchEvent("cancel_auto", e);
});
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20002: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fa6e4fRzppHNq3txRjo+R18", "GameNetMgr20002");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
chupai: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
max_index: -1,
now_card_type: 0,
now_card_data: [],
tishi_card_data: [],
ddz_sync_data: null,
isReplay: !1,
ddzRate: -1,
ddz_qiangHolds: [],
ddz_base_score: 0,
check_out_double_data: null,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.chupai = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.max_index = -1;
this.now_card_type = 0;
this.now_card_data = [];
this.tishi_card_data = [];
this.ddz_sync_data = null;
this.isReplay = !1;
this.ddzRate = -1;
this.ddz_qiangHolds = [];
this.ddz_base_score = 0;
},
reset: function() {
this.turn = -1;
this.chupai = -1, this.gamestate = 1;
this.ddzRate = -1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].is_auto = !1;
}
this.dispatchEvent("fresh_all_score");
this.dispatchEvent("reset");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
return !1;
},
isVisibleWatch: function() {
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
if (this.use58()) return (e - this.seatIndex + 8) % 8;
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ) {
this.conf.rule_index, this.conf.rule_index;
return 0 != (32 & this.conf.rule_index) && e != this.seatIndex ? 2 : (e - this.seatIndex + 4) % 4;
}
if (16 & this.conf.rule_index && 20009 != this.conf.server_type && e != this.seatIndex) return 2;
if (8 & this.conf.rule_index || 20002 == this.conf.server_type) {
if (0 == this.seatIndex && 2 == e) return 3;
if (2 == this.seatIndex && 0 == e) return 1;
}
return (e - this.seatIndex + 4) % 4;
},
isGamesDZPK: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ;
},
isGamesZJH: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH;
},
use58: function() {
return this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
var e = "", t = this.conf.server_type;
t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN ? e = "跑得快" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD ? e = "斗地主" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? e = "斗牛牛" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH ? e = "诈金花" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ ? e = "德州扑克" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ ? e = "跑胡子" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 ? e = "21点" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G ? e = "三公" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI ? e = "十三水" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA ? e = "三打哈" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT && (e = "10点半");
return e;
},
getWanfaType: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return "经典玩法";
if (4 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "无花斗牛" : "15牌玩法";
if (8 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "斗公牛" : "癞子玩法";
if (16 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "无花斗公牛" : "4人玩法";
}
return "";
},
getPDK_paiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return 16;
if (4 & e.type_index) return 15;
if (8 & e.type_index) return 15;
if (16 & e.type_index) {
if (4096 & e.rule_index) return 13;
if (8192 & e.rule_index) return 27;
}
}
return "";
},
getWanfaMaxGames: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && (8 & e.type_index || 16 & e.type_index)) {
if (2 & e.rule_index) return "一圈庄";
if (4 & e.rule_index) return "两圈庄";
}
return e.max_games + "局";
}
return "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return 1 == this.use58() ? "最多5人" : "3人";
if (16 & e.rule_index) return 1 == this.use58() ? "最多8人" : "2人";
if (32 & e.rule_index) return 1 == this.use58() ? "不限制人数" : "4人";
}
return "";
},
getWanfaPaiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (1024 & e.rule_index) return "15牌";
if (2048 & e.rule_index) return "16牌";
if (4096 & e.rule_index) return "一副牌";
if (8192 & e.rule_index) return "二副牌";
}
return "";
},
getWanfaZhuang: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58()) {
if (64 & e.rule_index) return "抢庄";
if (128 & e.rule_index) return "轮庄";
if (256 & e.rule_index) return 20008 == e.server_type ? "三公做庄" : "牛牛做庄";
if (512 & e.rule_index) return "牌大做庄";
if (1024 & e.rule_index) return "霸王庄";
}
return "";
},
getWanfaxiazhu: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (64 & e.rule_index) return "有限注";
if (128 & e.rule_index) return "无限注";
if (256 & e.rule_index) return "底池限额";
}
return "";
},
getZJHdifen: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (256 & e.rule_index) return "2分";
if (512 & e.rule_index) return "5分";
if (1024 & e.rule_index) return "10分";
}
return "";
},
getWanfaNewGoto: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58() && 2048 & e.rule_index ? "（开始后允许新玩家加入）" : "";
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
if (1 == this.use58()) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
64 & e.rule_index && t.push("有限注");
128 & e.rule_index && t.push("无限注");
256 & e.rule_index && t.push("底池限额");
}
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT || this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21) {
32768 & e.rule_index && t.push("限注100");
65536 & e.rule_index && t.push("限注300");
1 << 17 & e.rule_index && t.push("限注500");
}
this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ && 4096 & e.rule_index && t.push("开牌特效");
if (8192 & e.rule_index) {
var i = "先开3张牌";
20008 == e.server_type && (i = "先开2张牌");
t.push(i);
}
16384 & e.rule_index && t.push("先开4张牌");
this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && 32768 & e.rule_index && t.push("不明牌");
} else {
if (20009 == e.server_type) {
64 & e.rule_index && t.push("庄家明牌");
128 & e.rule_index && t.push("无庄");
} else {
64 & e.rule_index && t.push("显示出牌");
128 & e.rule_index && t.push("黑桃3首出");
}
256 & e.rule_index && t.push("有大必管");
512 & e.rule_index && t.push("扎鸟");
}
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
var s = this.getWanfaPaiNum();
t.push(s);
var c = this.getWanfaZhuang();
t.push(c);
var r = this.getWanfaDecs();
t.push(r);
var o = this.getWanfaNewGoto();
t.push(o);
return t.join(" ");
}
return "";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.vv.wc.show("正在进入游戏");
cc.director.loadScene("mjgame_DDZ");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.roomData = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.roomData = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
c.ddzRate = e.rate;
c.chupai = e.chuPai;
c.ddz_qiangHolds = e.landlord_card;
c.ddz_base_score = e.base_score;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
i.is_auto = n.is_auto;
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
5001 == e.error_code && cc.vv.alert.show("提示", "出牌不符合规则！");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
c.ddzRate = e.rate;
e.user_index = c.getLocalIndex(t);
e.si = t;
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.max_index = e.max_index;
c.now_card_type = e.now_card_type;
c.now_card_data = e.now_card_data;
c.tishi_card_data = e.now_card_data;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_count_push", function(e) {
console.log("mj_count_push");
c.numOfMJ = e;
c.dispatchEvent("mj_count", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.now_card_type = 1, c.now_card_data = [], c.tishi_card_data = [], c.dispatchEvent("active_clock", e);
c.dispatchEvent("game_over_show", e);
c.dispatchEvent("gameOverCancelAuto");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker_push", function(e) {
c.dispatchEvent("call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_end_push", function(e) {
c.ddzRate = e.rate;
c.button = e.button;
console.log("----SC叫地主结束");
c.dispatchEvent("call_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_turn_push", function(e) {
c.turn = e.turn;
c.ddzRate = e.rate;
c.ddz_sync_data = e;
c.dispatchEvent("call_turn_push", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time_sync", function(e) {
console.log("time_sync");
c.dispatchEvent("time_sync", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("auto_push", function(e) {
console.log("auto_push");
c.getSeatByID(e.user_id).is_auto = e.is_auto;
c.dispatchEvent("auto_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("cancel_auto", function(e) {
console.log("cancel_auto");
c.getSeatByID(e.user_id).is_auto = e.is_auto;
c.dispatchEvent("cancel_auto", e);
});
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
doDDZCallTurn: function() {
null != this.ddz_sync_data && this.dispatchEvent("turn", this.ddz_sync_data);
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20003: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c3fb4ITXglGQbj3VBGkBiiD", "GameNetMgr20003");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isOffBanker: !1,
_bankerChose_index: -1,
_banker_status_data: null,
_bankerStatus_isOver: !1,
_newWatcher: !1,
isSys: !1,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.unions_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.isReplay = !1;
this.isOffBanker = !1;
this._bankerChose_index = -1;
this._banker_status_data = null;
this._bankerStatus_isOver = !1;
this._newWatcher = !1;
this.isSys = !1;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.isSys = !1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
this.dispatchEvent("fresh_all_score");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
fresh_all_score: function() {
this.dispatchEvent("fresh_all_score");
},
showGameOver: function() {
this.dispatchEvent("showGameOver");
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
updateGameOverTime: function(e) {
this.dispatchEvent("updateGameOverTime", e);
},
closeGameOver: function() {
this.dispatchEvent("closeGameOver");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 8) % 8;
},
use58: function() {
return !0;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "斗牛牛";
},
getWanfaType: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return "经典玩法";
if (4 & e.type_index) return "无花斗牛";
if (8 & e.type_index) return "斗公牛";
if (16 & e.type_index) return "无花斗公牛";
}
return "";
},
getWanfaMaxGames: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && (8 & e.type_index || 16 & e.type_index)) {
if (2 & e.rule_index) return "一圈庄";
if (4 & e.rule_index) return "两圈庄";
}
return e.max_games + "局";
}
return "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return "最多5人";
if (16 & e.rule_index) return "最多8人";
if (32 & e.rule_index) return "不限制人数";
}
return "";
},
getWanfaZhuang: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (64 & e.rule_index) return "抢庄";
if (128 & e.rule_index) return "轮庄";
if (256 & e.rule_index) return "牛牛做庄";
if (512 & e.rule_index) return "牌大做庄";
if (1024 & e.rule_index) return "霸王庄";
if (1 << 17 & e.rule_index) {
if (1 << 18 & e.rule_index) return "无庄通比:2分";
if (1 << 23 & e.rule_index) return "无庄通比:4分";
if (1 << 24 & e.rule_index) return "无庄通比:5分";
if (1 << 25 & e.rule_index) return "无庄通比:6分";
if (1 << 26 & e.rule_index) return "无庄通比:7分";
}
}
return "";
},
getWanfaNewGoto: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
2048 & e.rule_index && (t += "（开始后允许新玩家加入）");
65536 & e.rule_index && (t += "牛七x2  牛八x3  牛九x4  牛牛x5");
1 << 21 & e.rule_index && (t += "顺子牛(5倍)   同花牛(6倍)   葫芦牛(7倍)   顺花牛(9倍)");
2 & e.type_index && 1 << 22 & e.rule_index && (t += "银花牛(5倍)   金花牛(6倍)   炸弹牛(8倍)   五小牛(10倍)");
4 & e.type_index && 1 << 22 & e.rule_index && (t += "炸弹牛(8倍)   五小牛(10倍)");
}
return t;
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
4096 & e.rule_index && t.push("开牌特效");
8192 & e.rule_index && t.push("先开3张牌");
16384 & e.rule_index && t.push("先开4张牌");
32768 & e.rule_index && t.push("不明牌");
return t.join(" ");
}
return "";
},
getWanfa: function() {
return cc.vv.gameType.getWaFaDecs_dnn(this.conf.type_index, this.conf.rule_index);
},
initHandlers: function() {
var c = this;
cc.vv.msgTemp = e("msgdefine").msg_templete;
cc.vv.global_dnn = e("global_setting_DNN");
cc.vv.poker_util = e("poker_utils_DNN");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.director.loadScene("mjgame_DNN");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c._bankerStatus_isOver = !1;
c.isOffBanker = !1;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
c.isSys = !0;
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
e.user_index = c.getLocalIndex(t);
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
c._bankerStatus_isOver = !0;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.dispatchEvent("active_clock", e);
1 == e.force ? c.dispatchEvent("fore_game_over", e) : c.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
c.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
c.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
c.dispatchEvent("start_play_end", e);
c.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
c.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == c.multiBanker.indexOf(e.seat_index) && 0 < e.call && c.multiBanker.push(e.seat_index);
c.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker_state", function(e) {
c.isOffBanker = e.off_index == c.seatIndex;
c.dispatchEvent("offBankerState", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker", function(e) {
c.isOffBanker = !1;
c.dispatchEvent("off_banker_game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_base_status", function(e) {
c._bankerChose_index = e.chose_index;
c.dispatchEvent("bankerBaseStatus", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_base", function(e) {
c.dispatchEvent("bankerBase", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_status", function(e) {
c._banker_status_data = e;
0 == c._bankerStatus_isOver ? c.dispatchEvent("bankerStatus", e) : c.dispatchEvent("updatebankerStatusScore", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seat_clean", function(e) {
c.dispatchEvent("clear_Seats");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("twine_cards", function(e) {
c.getSelfData().holds = e.holds;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("show_cards", function(e) {
c.getSeatByID(e.user_id).holds = e.holds;
c.dispatchEvent("show_cards", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
if (e.end_time) {
c.dispatchEvent("turn_time_push", e);
c.timeData = e;
}
});
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
}
});
cc._RF.pop();
}, {
global_setting_DNN: "global_setting_DNN",
msgdefine: "msgdefine",
poker_utils_DNN: "poker_utils_DNN"
} ],
GameNetMgr20004: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b110bddMZJBLr7glmswbXlI", "GameNetMgr20004");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
_newWatcher: !1,
zjh_goldflowerStateData: null,
zjh_compare: !1,
isSys: !1,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.isReplay = !1;
this._newWatcher = !1;
this.zjh_goldflowerStateData = null;
this.zjh_compare = !1;
this.isSys = !1;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.isSys = !1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
this.dispatchEvent("fresh_all_score");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 8) % 8;
},
isGamesZJH: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH;
},
use58: function() {
return !0;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "诈金花";
},
getWanfaType: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 2 & e.type_index ? "经典玩法" : "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return "最多5人";
if (16 & e.rule_index) return "最多8人";
if (32 & e.rule_index) return "不限制人数";
}
return "";
},
getZJHdifen: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (256 & e.rule_index) return "2分";
if (512 & e.rule_index) return "5分";
if (1024 & e.rule_index) return "10分";
}
return "";
},
getWanfaMaxGames: function() {
return this.conf.max_games + "局";
},
getWanfaNewGoto: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58() && 2048 & e.rule_index ? "（开始后允许新玩家加入）" : "";
},
getMenPaiNum: function() {
var e = this.conf;
return 1 << 21 & e.rule_index ? 0 : 1 << 22 & e.rule_index ? 1 : 1 << 23 & e.rule_index ? 2 : 1 << 24 & e.rule_index ? 3 : 0;
},
getBiPaiNum: function() {
var e = this.conf;
return 65536 & e.rule_index ? 1 : 1 << 17 & e.rule_index ? 2 : 1 << 18 & e.rule_index ? 3 : 0;
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
8192 & e.rule_index && t.push("5轮开");
16384 & e.rule_index && t.push("10轮开");
32768 & e.rule_index && t.push("15轮开");
65536 & e.rule_index && t.push("1轮后可比牌");
1 << 17 & e.rule_index && t.push("2轮后可比牌");
1 << 18 & e.rule_index && t.push("3轮后可比牌");
1 << 21 & e.rule_index && t.push("不闷牌");
1 << 22 & e.rule_index && t.push("闷牌1轮");
1 << 23 & e.rule_index && t.push("闷牌2轮");
1 << 24 & e.rule_index && t.push("闷牌3轮");
4096 & e.rule_index && t.push("开牌特效");
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
var s = this.getWanfaPaiNum();
t.push(s);
var c = this.getWanfaZhuang();
t.push(c);
var r = this.getWanfaDecs();
t.push(r);
var o = this.getWanfaNewGoto();
t.push(o);
return t.join(" ");
}
return "";
},
getAudioURLByZJH: function(e, t) {
return 1 == t ? "resources/game/zjh/sounds/man/" + e + ".mp3" : "resources/game/zjh/sounds/women/" + e + ".mp3";
},
initHandlers: function() {
var r = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
r.agent_user_id = e.agent_user_id;
r.roomId = e.roomid;
r.conf = e.conf;
r.type_index = e.conf.type_index;
r.rule_index = e.conf.rule_index;
r.maxNumOfGames = e.conf.max_games;
r.numOfGames = e.num_of_games;
r.seats = e.seats;
r.unions_id = r.conf.unionid;
r.high_defend = e.conf.high_defend;
r.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == r.seats[t].userid) {
r.seats[t].sex = cc.vv.userMgr.sex;
r.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = r.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? r.seatIndex = -1 : r.seatIndex = i.seatindex;
r.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.director.loadScene("mjgame_zjh");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
r.roomId = null;
r.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = r.getSeatByID(t);
if (null != i) {
r.spliceSeatByID(t);
i.userid = 0;
i.name = "";
r.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = r.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (r.seatIndex = n);
i.push(a);
}
r.seats = i;
r.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
r.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == r.isOver) {
cc.vv.userMgr.oldRoomId = r.roomId;
r.dispatchEvent("disconnect");
} else r.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (r.seatIndex = t);
if (null == r.seats[t]) r.seats[t] = e; else {
var i = r.seats[t];
if (i.userid == e.userid) {
r.seats[t].online = !0;
r.seats[t].watch = !1;
r.seats[t].seatindex = t;
} else {
var n = r.getSeatByID(e.userid);
if (n) {
var a = r.seats.indexOf(n);
r.seats[a] = i;
r.seats[t] = n;
r.seats[t].online = !0;
r.seats[t].watch = !1;
r.seats[t].seatindex = t;
} else {
var s = r.seats.splice(t, r.seats.length);
e.online = !0;
e.watch = !1;
r.seats[t] = e;
r.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
r.dispatchEvent("new_user", r.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seat_clean", function(e) {
r.dispatchEvent("clear_Seats");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
r.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
r._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
r._newWatcher = !1;
r.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = r.getSeatByID(t);
if (i) {
i.online = e.online;
r.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = r.getSeatByID(t);
if (i) {
i.ready = e.ready;
r.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
r.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = r.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (r.seatIndex = n);
i.push(a);
}
r.seats = i;
r.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = r.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (r.seatIndex = n);
i.push(a);
}
r.seats = i;
r.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = r.getSeatIndexByID(e.user_id), i = r.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
r.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
r.button = e;
r.turn = r.button;
r._bankerStatus_isOver = !1;
r.isOffBanker = !1;
r.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
r.gamestate = e.state;
console.log("服务器过来==game_state_push:" + r.gamestate);
r.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
r.numOfMJ = e.numofmj;
r.gamestate = e.state;
r.turn = e.turn;
r.button = e.button;
r.isSys = !0;
for (var t = 0; t < r.seats.length; ++t) {
console.log("i:" + t);
var i = r.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
}
}
var a = r.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? r.seatIndex = -1 : r.seatIndex = a.seatindex;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = r.getSeatIndexByID(e.out_user);
r.seats[t].folds.push(e.out_cards_data);
e.user_index = r.getLocalIndex(t);
r.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
r.turn = e.turn;
r.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
r.numOfGames = e;
r.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_count_push", function(e) {
console.log("mj_count_push");
r.numOfMJ = e;
r.dispatchEvent("mj_count", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
r.multiBanker = [];
r.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) r.seats[t].score = e.end_seats_data[t].total_score;
r.dispatchEvent("active_clock", e);
1 == e.force ? r.dispatchEvent("fore_game_over", e) : r.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
cc.vv.userMgr.isHighDefend = 0;
r.isOver = !0;
r.gameResultData = e;
r.gameResultData.roomId = r.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
r.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
r.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
r.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
r.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
r.dissoveData = e;
r.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
r.dissoveData = null;
r.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
r.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
r.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
r.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
r.dispatchEvent("start_play_end", e);
r.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
r.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == r.multiBanker.indexOf(e.seat_index) && 0 < e.call && r.multiBanker.push(e.seat_index);
r.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("goldflower_state", function(e) {
r.turn = e.current_turn;
r.dispatchEvent("turn", e);
r.zjh_goldflowerStateData = e;
r.dispatchEvent("goldflowerState", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("open_card", function(e) {
var t = r.getSeatIndexByID(e.user_id), i = r.seats[t];
if (i) {
i.holds = e.open_card;
var n = {};
n.index = t;
r.dispatchEvent("kan_pai", n);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("compare", function(e) {
r.zjh_compare = !0;
var t = e.watch_index, i = r.seats[t];
if (i) {
i.holds = e.watch_card;
({}).index = t;
}
var n = e.compare_index, a = r.seats[n];
if (a) {
a.holds = e.compare_card;
({}).index = n;
}
r.dispatchEvent("compare_zjh", e);
var s = cc.vv.gameNetMgr.seats[t].sex, c = r.getAudioURLByZJH(7, s);
cc.vv.audioMgr.playSFX(c);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("giveup", function(e) {
var t = r.seats[e.user_index];
if (t) {
r.dispatchEvent("giveup", e.user_index);
var i = t.sex, n = r.getAudioURLByZJH(11, i);
cc.vv.audioMgr.playSFX(n);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
r.dispatchEvent("turn_time_push", e);
});
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20005: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a034eyoRCxIL4aTZu3FJ29T", "GameNetMgr20005");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
dingque: -1,
chupai: -1,
isDingQueing: !1,
isHuanSanZhang: !1,
gamestate: 1,
isOver: !1,
dissoveData: null,
max_index: -1,
pdk_red_ten: -1,
now_card_type: 0,
now_card_data: [],
tishi_card_data: [],
ddz_sync_data: null,
isReplay: !1,
ddzRate: -1,
isOffBanker: !1,
_bankerChose_index: -1,
_banker_status_data: null,
_bankerStatus_isOver: !1,
ddz_qiangHolds: [],
_newWatcher: !1,
zjh_goldflowerStateData: null,
zjh_compare: !1,
ddz_base_score: 0,
_dzpk_taxas_state_data: null,
gameDta_3dh: null,
mjSyncData: null,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.dingque = -1;
this.chupai = -1;
this.isDingQueing = !1;
this.isHuanSanZhang = !1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.max_index = -1;
this.now_card_type = 0;
this.now_card_data = [];
this.tishi_card_data = [];
this.ddz_sync_data = null;
this.isReplay = !1;
this.ddzRate = -1;
this.isOffBanker = !1;
this._bankerChose_index = -1;
this._banker_status_data = null;
this._bankerStatus_isOver = !1;
this.pdk_red_ten = -1;
this.ddz_qiangHolds = [];
this._newWatcher = !1;
this.zjh_goldflowerStateData = null;
this.ddz_base_score = 0;
this._dzpk_taxas_state_data = null;
this.gameDta_3dh = null;
this.mjSyncData = null;
this.zjh_compare = !1;
},
reset: function() {
this.turn = -1;
this.chupai = -1, this.dingque = -1;
this.gamestate = 1;
this.ddzRate = -1;
this.gameDta_3dh = null;
this.mjSyncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].outs = [];
this.seats[e].hued = !1;
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
if (this.use58()) return (e - this.seatIndex + 8) % 8;
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ) {
this.conf.rule_index, this.conf.rule_index;
return 0 != (32 & this.conf.rule_index) && e != this.seatIndex ? 2 : (e - this.seatIndex + 4) % 4;
}
if (16 & this.conf.rule_index && 20009 != this.conf.server_type && e != this.seatIndex) return 2;
if (8 & this.conf.rule_index || 20002 == this.conf.server_type) {
if (0 == this.seatIndex && 2 == e) return 3;
if (2 == this.seatIndex && 0 == e) return 1;
}
return (e - this.seatIndex + 4) % 4;
},
isGamesDZPK: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ;
},
isGamesZJH: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH;
},
use58: function() {
return this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
var e = "", t = this.conf.server_type;
t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN ? e = "跑得快" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD ? e = "斗地主" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? e = "斗牛牛" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH ? e = "诈金花" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ ? e = "德州扑克" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ ? e = "跑胡子" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 ? e = "21点" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G ? e = "三公" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI ? e = "十三水" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA ? e = "三打哈" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT && (e = "10点半");
return e;
},
getWanfaType: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return "经典玩法";
if (4 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "无花斗牛" : "15牌玩法";
if (8 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "斗公牛" : "癞子玩法";
if (16 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "无花斗公牛" : "4人玩法";
}
return "";
},
getPDK_paiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return 16;
if (4 & e.type_index) return 15;
if (8 & e.type_index) return 15;
if (16 & e.type_index) {
if (4096 & e.rule_index) return 13;
if (8192 & e.rule_index) return 27;
}
}
return "";
},
getWanfaMaxGames: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && (8 & e.type_index || 16 & e.type_index)) {
if (2 & e.rule_index) return "一圈庄";
if (4 & e.rule_index) return "两圈庄";
}
return e.max_games + "局";
}
return "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return 1 == this.use58() ? "最多5人" : "3人";
if (16 & e.rule_index) return 1 == this.use58() ? "最多8人" : "2人";
if (32 & e.rule_index) return 1 == this.use58() ? "不限制人数" : "4人";
}
return "";
},
getWanfaPaiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (1024 & e.rule_index) return "15牌";
if (2048 & e.rule_index) return "16牌";
if (4096 & e.rule_index) return "一副牌";
if (8192 & e.rule_index) return "二副牌";
}
return "";
},
getWanfaZhuang: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58()) {
if (64 & e.rule_index) return "抢庄";
if (128 & e.rule_index) return "轮庄";
if (256 & e.rule_index) return 20008 == e.server_type ? "三公做庄" : "牛牛做庄";
if (512 & e.rule_index) return "牌大做庄";
if (1024 & e.rule_index) return "霸王庄";
}
return "";
},
getWanfaxiazhu: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (64 & e.rule_index) return "有限注";
if (128 & e.rule_index) return "无限注";
if (256 & e.rule_index) return "底池限额";
}
return "";
},
getZJHdifen: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (256 & e.rule_index) return "2分";
if (512 & e.rule_index) return "5分";
if (1024 & e.rule_index) return "10分";
}
return "";
},
getWanfaNewGoto: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58() && 2048 & e.rule_index ? "（开始后允许新玩家加入）" : "";
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
if (1 == this.use58()) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
64 & e.rule_index && t.push("有限注");
128 & e.rule_index && t.push("无限注");
256 & e.rule_index && t.push("底池限额");
}
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT || this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21) {
32768 & e.rule_index && t.push("限注100");
65536 & e.rule_index && t.push("限注300");
1 << 17 & e.rule_index && t.push("限注500");
}
this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ && 4096 & e.rule_index && t.push("开牌特效");
if (8192 & e.rule_index) {
var i = "先开3张牌";
20008 == e.server_type && (i = "先开2张牌");
t.push(i);
}
16384 & e.rule_index && t.push("先开4张牌");
this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && 32768 & e.rule_index && t.push("不明牌");
} else {
if (20009 == e.server_type) {
64 & e.rule_index && t.push("庄家明牌");
128 & e.rule_index && t.push("无庄");
} else {
64 & e.rule_index && t.push("显示出牌");
128 & e.rule_index && t.push("黑桃3首出");
}
256 & e.rule_index && t.push("有大必管");
512 & e.rule_index && t.push("扎鸟");
}
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
var s = this.getWanfaPaiNum();
t.push(s);
var c = this.getWanfaZhuang();
t.push(c);
var r = this.getWanfaDecs();
t.push(r);
var o = this.getWanfaNewGoto();
t.push(o);
return t.join(" ");
}
return "";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.director.loadScene("mjgame_DZPK");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seat_clean", function(e) {
c.dispatchEvent("clear_Seats");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c._bankerStatus_isOver = !1;
c.isOffBanker = !1;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
c.ddzRate = e.rate;
c.chupai = e.chuPai;
c.ddz_qiangHolds = e.landlord_card;
c.ddz_base_score = e.base_score;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
i.d21_data = n;
i.fly_data = n;
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.sync_data = e.sandaha;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
c.ddzRate = e.rate;
e.user_index = c.getLocalIndex(t);
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.max_index = e.max_index;
-1 != e.red_ten && (c.pdk_red_ten = e.red_ten);
c.now_card_type = e.now_card_type;
c.now_card_data = e.now_card_data;
c.tishi_card_data = e.now_card_data;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_count_push", function(e) {
console.log("mj_count_push");
c.numOfMJ = e;
c.dispatchEvent("mj_count", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
c._bankerStatus_isOver = !0;
c.pdk_red_ten = e.redheart_ten;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.now_card_type = 1, c.now_card_data = [], c.tishi_card_data = [], c._dzpk_taxas_state_data = null;
c.dispatchEvent("active_clock", e);
c.dispatchEvent("game_over_show", e);
c.dispatchEvent("allocation_score", e);
c.dispatchEvent("game_over", e);
c.dispatchEvent("clear_dnn_holds", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
c.dispatchEvent("game_result", e);
c.dispatchEvent("game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker_push", function(e) {
c.dispatchEvent("call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_end_push", function(e) {
c.ddzRate = e.rate;
c.button = e.button;
console.log("----SC叫地主结束");
c.dispatchEvent("call_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_turn_push", function(e) {
c.turn = e.turn;
c.ddzRate = e.rate;
c.ddz_sync_data = e;
c.dispatchEvent("call_turn_push", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
c.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
c.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
c.dispatchEvent("start_play_end", e);
c.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
c.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == c.multiBanker.indexOf(e.seat_index) && 0 < e.call && c.multiBanker.push(e.seat_index);
c.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker_state", function(e) {
c.isOffBanker = e.off_index == c.seatIndex;
c.dispatchEvent("offBankerState", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker", function(e) {
c.isOffBanker = !1;
c.dispatchEvent("off_banker_game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_base_status", function(e) {
c._bankerChose_index = e.chose_index;
c.dispatchEvent("bankerBaseStatus", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_base", function(e) {
c.button = e.banker_index;
c.dispatchEvent("bankerBase", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_status", function(e) {
c._banker_status_data = e;
0 == c._bankerStatus_isOver ? c.dispatchEvent("bankerStatus", e) : c.dispatchEvent("updatebankerStatusScore", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("goldflower_state", function(e) {
c.turn = e.current_turn;
c.dispatchEvent("turn", e);
c.zjh_goldflowerStateData = e;
c.dispatchEvent("goldflowerState", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("open_card", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.open_card;
var n = {};
n.index = t;
c.dispatchEvent("zjh_game_holds", n);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("compare", function(e) {
c.zjh_compare = !0;
var t = e.watch_index, i = c.seats[t];
if (i) {
i.holds = e.watch_card;
(s = {}).index = t;
c.dispatchEvent("zjh_game_holds", s);
}
var n = e.compare_index, a = c.seats[n];
if (a) {
a.holds = e.compare_card;
var s;
(s = {}).index = n;
c.dispatchEvent("zjh_game_holds", s);
}
console.log("-------------炸金花 ---  比牌");
c.dispatchEvent("compare_zjh", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("giveup", function(e) {
c.seats[e.user_index] && c.dispatchEvent("giveup", e.user_index);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("taxas_state", function(e) {
c._dzpk_taxas_state_data = e;
c.dispatchEvent("taxas_state", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("point21_state", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("point21_state", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_action", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("user_action", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_buy", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("user_buy", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chose", function(e) {
e.error_code && 0 != e.error_code ? 5203 == e.error_code ? cc.vv.alert.show("出牌错误", "不能以倒水出牌!") : cc.vv.alert.show("出牌错误", "错误码" + e.error_code) : c.dispatchEvent("chose", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_banker_push", function(e) {
c.dispatchEvent("sdh_call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_end_push", function(e) {
c.button = e.button;
c.turn = e.button;
c.dispatchEvent("sdh_call_end_push", e);
c.dispatchEvent("sdh_change_button", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_turn_push", function(e) {
c.turn = e.turn;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.callTurn = e;
c.dispatchEvent("sdh_call_turn_push", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_decide_main_color_push", function(e) {
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.mainColor = e.color;
c.dispatchEvent("decide_main_color_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_bury_card_push", function(e) {
c.dispatchEvent("bury_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_dig_card_push", function(e) {
c.dispatchEvent("sdh_dig_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_turn_push", function(e) {
c.turn = e.turn;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.max_index = e.max_index;
c.gameDta_3dh.now_card_type = e.now_card_type;
0 < e.now_card_data.length ? c.gameDta_3dh.now_card_color = cc.vv.poker_util.get_poker_color(e.now_card_data[1]) : c.gameDta_3dh.now_card_color = 0;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_turn_result_push", function(e) {
c.dispatchEvent("sdh_turn_result_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_game_over", function(e) {
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.gameOverData = e;
c.dispatchEvent("sdh_bury_card_over", e);
c.dispatchEvent("active_clock", e);
c.dispatchEvent("sdh_game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_game_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_deputy_push", function(e) {
c.dispatchEvent("sdh_deputy_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("mj_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("mj_game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("mj_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("mj_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
c.turn = e.turn;
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.mjSyncData.first_throw = e.first_throw;
c.mjSyncData.second_throw = e.second_throw;
c.mjSyncData.gang_card_num = e.gang_card_num;
c.mjSyncData.god_wealth = e.god_wealth;
c.mjSyncData.light_card = e.light_card;
c.mjSyncData.now_out_card_data = e.now_out_card_data;
c.mjSyncData.now_out_card_seat = e.now_out_card_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.flower_items = n.flower_items;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("mj_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_turn_push", function(e) {
console.log("mj_turn_push");
c.turn = e.turn;
c.dispatchEvent("mj_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_surplus_push", function(e) {
console.log("mj_surplus_push," + e.surplus_card_num);
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.numOfMJ = e.surplus_card_num;
c.dispatchEvent("mj_surplus_push", e);
c.dispatchEvent("mj_update_surplus", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("mj_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("mj_result", e);
c.dispatchEvent("mj_game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_throw_dice_push", function(e) {
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.mjSyncData.first_throw = e.first_throw;
c.mjSyncData.second_throw = e.second_throw;
c.dispatchEvent("throw_dice_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_light_card_push", function(e) {
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.mjSyncData.god_wealth = e.god_wealth;
c.mjSyncData.light_card = e.light_card;
c.dispatchEvent("light_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_baiban_gang_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
var n = [ e.type, e.card ];
i.flower_items || (i.flower_items = []);
i.flower_items.push(n);
}
c.dispatchEvent("baiban_gang_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_action_mask_push", function(e) {
c.dispatchEvent("card_type_action", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_cancel_action_push", function(e) {
c.dispatchEvent("mj_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_pick_card_push", function(e) {
c.numOfMJ = c.numOfMJ - 1;
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
i && i.holds.push(e.card);
c.dispatchEvent("mj_pick_card_push", e);
c.dispatchEvent("mj_update_surplus", c.numOfMJ);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_pick_gang_push", function(e) {
c.numOfMJ = c.numOfMJ - 1;
c.mjSyncData.gang_card_num = c.mjSyncData.gang_card_num + 1;
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
i && i.holds.push(e.card);
c.dispatchEvent("mj_pick_gang_push", e);
c.dispatchEvent("mj_update_surplus", c.numOfMJ);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
console.log("---初始----seat.items.lenght:" + i.items.length);
var n = e.remove_items;
if (0 < n.length) for (var a = 0; a < i.items.length; a++) if (i.items[a][1] == n[0][1]) {
console.log("-------减少的Item:" + n[0][1]);
i.items.splice(a, 1);
break;
}
var s = e.add_items;
console.log("-------增加的Item:" + s[0]);
console.log("-------seat.items.lenght:" + i.items.length);
i.items.push(s[0]);
}
c.dispatchEvent("mj_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dice", function(e) {
c.dispatchEvent("dice_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("move", function(e) {
c.dispatchEvent("move_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("flight_event", function(e) {
c.dispatchEvent("flight_event", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("flight_state", function(e) {
for (var t in e.user_flight_state) {
var i = e.user_flight_state[t];
c.seats[t].fly_data = i;
}
});
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
doDDZCallTurn: function() {
null != this.ddz_sync_data && this.dispatchEvent("turn", this.ddz_sync_data);
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
},
setPickScoreCount: function(e) {
this.pickScoreCount = e;
},
getPickScoreCount: function() {
return this.pickScoreCount;
},
setIsLooker: function(e) {
this.isLooker = e;
},
getIsLooker: function() {
return this.isLooker;
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20007: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f623cEd9SZM96bcA/7uiDRp", "GameNetMgr20007");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
agent_user_id: -1,
unions_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
_newWatcher: !1,
isSys: !1,
isGameOver: !1,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.isReplay = !1;
this._newWatcher = !1;
this.isSys = !1;
this.isGameOver = !1;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.isSys = !1;
this.isGameOver = !1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].status_mask = null;
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
this.dispatchEvent("fresh_all_score");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 8) % 8;
},
use58: function() {
return !0;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "21点";
},
getWanfaType: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 2 & e.type_index ? "经典玩法" : "";
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return "最多5人";
if (16 & e.rule_index) return "最多8人";
if (32 & e.rule_index) return "不限制人数";
}
return "";
},
getAudioURLBy21D: function(e, t) {
return 1 == t ? "resources/game/21D/sounds/man/" + e + ".mp3" : "resources/game/21D/sounds/women/" + e + ".mp3";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.isSys = !1;
c.isGameOver = !1;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.director.loadScene("mjgame_21D");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seat_clean", function(e) {
c.dispatchEvent("clear_Seats");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
c.isSys = !0;
c.isGameOver = !1;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
i.status_mask = n.status_mask;
i.d21_data = n;
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
e.user_index = c.getLocalIndex(t);
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.isGameOver = !0;
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.dispatchEvent("active_clock", e);
1 == e.force ? c.dispatchEvent("fore_game_over", e) : c.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
c.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
c.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
c.dispatchEvent("start_play_end", e);
c.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
c.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == c.multiBanker.indexOf(e.seat_index) && 0 < e.call && c.multiBanker.push(e.seat_index);
c.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("point21_state", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("point21_state", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_action", function(e) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].sex;
if (e.error_code && 0 != e.error_code) {
var i = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", i);
}
if (1 == e.action_type) var n = 8; else if (3 == e.action_type) n = 10;
var a = c.getAudioURLBy21D(n, t);
cc.vv.audioMgr.playSFX(a);
c.dispatchEvent("user_action", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_buy", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("user_buy", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20008: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "23e02M8zllK85Mw/dYm5sTS", "GameNetMgr20008");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
ddzRate: -1,
_newWatcher: !1,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.isReplay = !1;
this._newWatcher = !1;
},
reset: function() {
this.turn = -1;
this.chupai = -1, this.gamestate = 1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
this.dispatchEvent("fresh_all_score");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 8) % 8;
},
use58: function() {
return !0;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "三公";
},
getWanfaType: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 2 & e.type_index ? "经典玩法" : "";
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return "最多5人";
if (16 & e.rule_index) return "最多8人";
if (32 & e.rule_index) return "不限制人数";
}
return "";
},
getWanfaPaiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (1024 & e.rule_index) return "15牌";
if (2048 & e.rule_index) return "16牌";
if (4096 & e.rule_index) return "一副牌";
if (8192 & e.rule_index) return "二副牌";
}
return "";
},
getWanfaZhuang: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58()) {
if (64 & e.rule_index) return "抢庄";
if (128 & e.rule_index) return "轮庄";
if (256 & e.rule_index) return "三公做庄";
if (512 & e.rule_index) return "牌大做庄";
if (1024 & e.rule_index) return "霸王庄";
}
return "";
},
getWanfaxiazhu: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (64 & e.rule_index) return "有限注";
if (128 & e.rule_index) return "无限注";
if (256 & e.rule_index) return "底池限额";
}
return "";
},
getWanfaNewGoto: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58() && 2048 & e.rule_index ? "（开始后允许新玩家加入）" : "";
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
if (1 == this.use58()) {
this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ && 4096 & e.rule_index && t.push("开牌特效");
if (8192 & e.rule_index) {
var i = "先开3张牌";
20008 == e.server_type && (i = "先开2张牌");
t.push(i);
}
16384 & e.rule_index && t.push("先开4张牌");
this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && 32768 & e.rule_index && t.push("不明牌");
} else {
if (20009 == e.server_type) {
64 & e.rule_index && t.push("庄家明牌");
128 & e.rule_index && t.push("无庄");
} else {
64 & e.rule_index && t.push("显示出牌");
128 & e.rule_index && t.push("黑桃3首出");
}
256 & e.rule_index && t.push("有大必管");
512 & e.rule_index && t.push("扎鸟");
}
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
var s = this.getWanfaPaiNum();
t.push(s);
var c = this.getWanfaZhuang();
t.push(c);
var r = this.getWanfaDecs();
t.push(r);
var o = this.getWanfaNewGoto();
t.push(o);
return t.join(" ");
}
return "";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.director.loadScene("mjgame_3G");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seat_clean", function(e) {
c.dispatchEvent("clear_Seats");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
e.user_index = c.getLocalIndex(t);
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_count_push", function(e) {
console.log("mj_count_push");
c.numOfMJ = e;
c.dispatchEvent("mj_count", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.dispatchEvent("active_clock", e);
1 == e.force ? c.dispatchEvent("fore_game_over", e) : c.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
c.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
c.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
c.dispatchEvent("start_play_end", e);
c.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
c.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == c.multiBanker.indexOf(e.seat_index) && 0 < e.call && c.multiBanker.push(e.seat_index);
c.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20009: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0c1cfbUP8xCtr684MFremUr", "GameNetMgr20009");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
agent_user_id: -1,
unions_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
dingque: -1,
chupai: -1,
isDingQueing: !1,
isHuanSanZhang: !1,
gamestate: 1,
isOver: !1,
dissoveData: null,
max_index: -1,
pdk_red_ten: -1,
now_card_type: 0,
now_card_data: [],
tishi_card_data: [],
ddz_sync_data: null,
isReplay: !1,
ddzRate: -1,
isOffBanker: !1,
_bankerChose_index: -1,
_banker_status_data: null,
_bankerStatus_isOver: !1,
ddz_qiangHolds: [],
_newWatcher: !1,
zjh_goldflowerStateData: null,
zjh_compare: !1,
ddz_base_score: 0,
_dzpk_taxas_state_data: null,
gameDta_3dh: null,
mjSyncData: null,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.unions_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.dingque = -1;
this.chupai = -1;
this.isDingQueing = !1;
this.isHuanSanZhang = !1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.max_index = -1;
this.now_card_type = 0;
this.now_card_data = [];
this.tishi_card_data = [];
this.ddz_sync_data = null;
this.isReplay = !1;
this.ddzRate = -1;
this.isOffBanker = !1;
this._bankerChose_index = -1;
this._banker_status_data = null;
this._bankerStatus_isOver = !1;
this.pdk_red_ten = -1;
this.ddz_qiangHolds = [];
this._newWatcher = !1;
this.zjh_goldflowerStateData = null;
this.ddz_base_score = 0;
this._dzpk_taxas_state_data = null;
this.gameDta_3dh = null;
this.mjSyncData = null;
this.zjh_compare = !1;
},
reset: function() {
this.turn = -1;
this.chupai = -1, this.dingque = -1;
this.gamestate = 1;
this.ddzRate = -1;
this.gameDta_3dh = null;
this.mjSyncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].outs = [];
this.seats[e].hued = !1;
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
if (this.use58()) return (e - this.seatIndex + 8) % 8;
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ) {
this.conf.rule_index, this.conf.rule_index;
return 0 != (32 & this.conf.rule_index) && e != this.seatIndex ? 2 : (e - this.seatIndex + 4) % 4;
}
if (16 & this.conf.rule_index && 20009 != this.conf.server_type && e != this.seatIndex) return 2;
if (8 & this.conf.rule_index || 20002 == this.conf.server_type) {
if (0 == this.seatIndex && 2 == e) return 3;
if (2 == this.seatIndex && 0 == e) return 1;
}
return (e - this.seatIndex + 4) % 4;
},
isGamesDZPK: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ;
},
isGamesZJH: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH;
},
use58: function() {
return this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
var e = "", t = this.conf.server_type;
t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN ? e = "跑得快" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD ? e = "斗地主" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? e = "斗牛牛" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH ? e = "诈金花" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ ? e = "德州扑克" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ ? e = "跑胡子" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 ? e = "21点" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G ? e = "三公" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI ? e = "十三水" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA ? e = "三打哈" : t == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT && (e = "10点半");
return e;
},
getWanfaType: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return "经典玩法";
if (4 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "无花斗牛" : "15牌玩法";
if (8 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "斗公牛" : "癞子玩法";
if (16 & e.type_index) return e.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? "无花斗公牛" : "4人玩法";
}
return "";
},
getPDK_paiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return 16;
if (4 & e.type_index) return 15;
if (8 & e.type_index) return 15;
if (16 & e.type_index) {
if (4096 & e.rule_index) return 13;
if (8192 & e.rule_index) return 27;
}
}
return "";
},
getWanfaMaxGames: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && (8 & e.type_index || 16 & e.type_index)) {
if (2 & e.rule_index) return "一圈庄";
if (4 & e.rule_index) return "两圈庄";
}
return e.max_games + "局";
}
return "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return 1 == this.use58() ? "最多5人" : "3人";
if (16 & e.rule_index) return 1 == this.use58() ? "最多8人" : "2人";
if (32 & e.rule_index) return 1 == this.use58() ? "不限制人数" : "4人";
}
return "";
},
getWanfaPaiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (1024 & e.rule_index) return "15牌";
if (2048 & e.rule_index) return "16牌";
if (4096 & e.rule_index) return "一副牌";
if (8192 & e.rule_index) return "二副牌";
}
return "";
},
getWanfaZhuang: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58()) {
if (64 & e.rule_index) return "抢庄";
if (128 & e.rule_index) return "轮庄";
if (256 & e.rule_index) return 20008 == e.server_type ? "三公做庄" : "牛牛做庄";
if (512 & e.rule_index) return "牌大做庄";
if (1024 & e.rule_index) return "霸王庄";
}
return "";
},
getWanfaxiazhu: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (64 & e.rule_index) return "有限注";
if (128 & e.rule_index) return "无限注";
if (256 & e.rule_index) return "底池限额";
}
return "";
},
getZJHdifen: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (256 & e.rule_index) return "2分";
if (512 & e.rule_index) return "5分";
if (1024 & e.rule_index) return "10分";
}
return "";
},
getWanfaNewGoto: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58() && 2048 & e.rule_index ? "（开始后允许新玩家加入）" : "";
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
if (1 == this.use58()) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
64 & e.rule_index && t.push("有限注");
128 & e.rule_index && t.push("无限注");
256 & e.rule_index && t.push("底池限额");
}
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT || this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21) {
32768 & e.rule_index && t.push("限注100");
65536 & e.rule_index && t.push("限注300");
1 << 17 & e.rule_index && t.push("限注500");
}
this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ && 4096 & e.rule_index && t.push("开牌特效");
if (8192 & e.rule_index) {
var i = "先开3张牌";
20008 == e.server_type && (i = "先开2张牌");
t.push(i);
}
16384 & e.rule_index && t.push("先开4张牌");
this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && 32768 & e.rule_index && t.push("不明牌");
} else {
if (20009 == e.server_type) {
64 & e.rule_index && t.push("庄家明牌");
128 & e.rule_index && t.push("无庄");
} else {
64 & e.rule_index && t.push("显示出牌");
128 & e.rule_index && t.push("黑桃3首出");
}
256 & e.rule_index && t.push("有大必管");
512 & e.rule_index && t.push("扎鸟");
}
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
var s = this.getWanfaPaiNum();
t.push(s);
var c = this.getWanfaZhuang();
t.push(c);
var r = this.getWanfaDecs();
t.push(r);
var o = this.getWanfaNewGoto();
t.push(o);
return t.join(" ");
}
return "";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.director.loadScene("mjgame_13S");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c._bankerStatus_isOver = !1;
c.isOffBanker = !1;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
c.ddzRate = e.rate;
c.chupai = e.chuPai;
c.ddz_qiangHolds = e.landlord_card;
c.ddz_base_score = e.base_score;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
i.d21_data = n;
i.fly_data = n;
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.sync_data = e.sandaha;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
c.ddzRate = e.rate;
e.user_index = c.getLocalIndex(t);
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.max_index = e.max_index;
-1 != e.red_ten && (c.pdk_red_ten = e.red_ten);
c.now_card_type = e.now_card_type;
c.now_card_data = e.now_card_data;
c.tishi_card_data = e.now_card_data;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.dispatchEvent("active_clock", e);
c.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker_push", function(e) {
c.dispatchEvent("call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_end_push", function(e) {
c.ddzRate = e.rate;
c.button = e.button;
console.log("----SC叫地主结束");
c.dispatchEvent("call_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
c.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
c.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
c.dispatchEvent("start_play_end", e);
c.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
c.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == c.multiBanker.indexOf(e.seat_index) && 0 < e.call && c.multiBanker.push(e.seat_index);
c.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker_state", function(e) {
c.isOffBanker = e.off_index == c.seatIndex;
c.dispatchEvent("offBankerState", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker", function(e) {
c.isOffBanker = !1;
c.dispatchEvent("off_banker_game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chose", function(e) {
e.error_code && 0 != e.error_code ? 5203 == e.error_code ? cc.vv.alert.show("出牌错误", "不能以倒水出牌!") : cc.vv.alert.show("出牌错误", "错误码" + e.error_code) : c.dispatchEvent("chose", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("cut", function(e) {
c.dispatchEvent("cut", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("cut_value", function(e) {
c.dispatchEvent("cut_value", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("cut_end", function(e) {
c.dispatchEvent("cut_end", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
doDDZCallTurn: function() {
null != this.ddz_sync_data && this.dispatchEvent("turn", this.ddz_sync_data);
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20010: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "27ce23r84RIAajYuiTFCRaa", "GameNetMgr20010");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
ddz_sync_data: null,
isReplay: !1,
gameDta_3dh: null,
pk_mainColor: null
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.unions_id = -1;
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.isReplay = !1;
this.gameDta_3dh = null;
this.pk_mainColor || (this.pk_mainColor = {});
this.pk_mainColor.pk_color = -1;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.gameDta_3dh = null;
this.pk_mainColor || (this.pk_mainColor = {});
this.pk_mainColor.pk_color = -1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].outs = [];
}
this.dispatchEvent("reset");
this.dispatchEvent("fresh_all_score");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 4) % 4;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
JSON.parse(i[0].actions);
var s = JSON.parse(i[0].folds), c = JSON.parse(i[0].holds), r = 0;
a.main_color || (r = a.main_color);
var o = -1 == r ? 4 : r;
this.pk_mainColor || (this.pk_mainColor = {});
this.pk_mainColor.pk_color = o;
var h = JSON.parse(i[0].base_info);
this.creatorid = h.conf.creator;
for (var l = null, d = 0; d < this.seats.length; d++) {
var u = this.seats[d];
u.userid == cc.vv.userMgr.userId && (l = u.userid);
}
l || (l = this.seats[0].userid);
for (var v = 0; v < this.seats.length; ++v) {
var g = this.seats[v];
g.seatindex = v;
g.score = null;
g.mainColor = r;
if (0 != g.user_id) {
for (var _ = null == c[v] ? [] : c[v], f = null == s[v] ? [] : s[v], p = 0; p < f.length; p++) _ = _.concat(f[p]);
g.holds = _;
g.folds = [];
} else {
g.holds = [];
g.folds = [];
}
l == g.userid && (this.seatIndex = v);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "三打哈";
},
initHandlers: function() {
var c = this;
cc.vv.poker_util = e("poker_utils_3DH");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
c.pk_mainColor || (c.pk_mainColor = {});
c.pk_mainColor.pk_color = -1;
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.vv.wc.show("正在进入游戏");
cc.director.loadScene("mjgame_3DH");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.roomData = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.roomData = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
e.user_index = c.getLocalIndex(t);
e.si = t;
c.dispatchEvent("out_card", e);
} else if (5001 == e.error_code) {
cc.vv.alert.show("提示", "亲，您不能这样出牌哦~");
return;
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
}
}
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.sync_data = e.sandaha;
var a = -1 == e.sandaha.main_color ? 4 : e.sandaha.main_color;
c.gameDta_3dh.mainColor = a;
c.pk_mainColor || (c.pk_mainColor = {});
c.pk_mainColor.pk_color = a;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_banker_push", function(e) {
c.dispatchEvent("sdh_call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_end_push", function(e) {
c.button = e.button;
c.turn = e.button;
c.dispatchEvent("sdh_call_end_push", e);
c.dispatchEvent("sdh_change_button", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_turn_push", function(e) {
c.turn = e.turn;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.callTurn = e;
c.dispatchEvent("sdh_call_turn_push", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_decide_main_color_push", function(e) {
c.gameDta_3dh || (c.gameDta_3dh = {});
var t = -1 == e.color ? 4 : e.color;
c.gameDta_3dh.mainColor = t;
c.pk_mainColor || (c.pk_mainColor = {});
c.pk_mainColor.pk_color = t;
c.dispatchEvent("decide_main_color_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_bury_card_push", function(e) {
c.dispatchEvent("bury_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_dig_card_push", function(e) {
c.dispatchEvent("sdh_dig_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_turn_push", function(e) {
c.turn = e.turn;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.max_index = e.max_index;
c.gameDta_3dh.now_card_type = e.now_card_type;
c.gameDta_3dh.now_card_data = e.now_card_data;
if (0 < e.now_card_data.length) {
var t = cc.vv.poker_util.get_poker_value(e.now_card_data[0]), i = e.now_card_data[0] % 4;
15 != t && 7 != t && 16 != t || (i = c.gameDta_3dh.mainColor);
c.gameDta_3dh.now_card_color = i;
} else c.gameDta_3dh.now_card_color = -1;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_turn_result_push", function(e) {
c.dispatchEvent("sdh_turn_result_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_game_over", function(e) {
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.gameOverData = e;
c.dispatchEvent("active_clock", e);
1 == e.force || 1 == e.all_give_up_call ? c.dispatchEvent("sdh_game_over", e) : c.dispatchEvent("sdh_bury_card_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_deputy_push", function(e) {
c.dispatchEvent("sdh_deputy_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
}
});
cc._RF.pop();
}, {
poker_utils_3DH: "poker_utils_3DH"
} ],
GameNetMgr20011: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f60cfhVe6NE2LPm81H8Nv+T", "GameNetMgr20011");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
agent_user_id: -1,
unions_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
_newWatcher: !1,
isSys: !1,
isGameOver: !1,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.isReplay = !1;
this._newWatcher = !1;
this.isSys = !1;
this.isGameOver = !1;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.isSys = !1;
this.isGameOver = !1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].status_mask = null;
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
this.dispatchEvent("fresh_all_score");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 8) % 8;
},
use58: function() {
return !0;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "十点半";
},
getWanfaType: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 2 & e.type_index ? "经典玩法" : "";
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return "最多5人";
if (16 & e.rule_index) return "最多8人";
if (32 & e.rule_index) return "不限制人数";
}
return "";
},
getWanfaZhuang: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58()) {
if (64 & e.rule_index) return "抢庄";
if (128 & e.rule_index) return "轮庄";
if (256 & e.rule_index) return 20008 == e.server_type ? "三公做庄" : "牛牛做庄";
if (512 & e.rule_index) return "牌大做庄";
if (1024 & e.rule_index) return "霸王庄";
}
return "";
},
getWanfaxiazhu: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (64 & e.rule_index) return "有限注";
if (128 & e.rule_index) return "无限注";
if (256 & e.rule_index) return "底池限额";
}
return "";
},
getWanfaNewGoto: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58() && 2048 & e.rule_index ? "（开始后允许新玩家加入）" : "";
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
if (1 == this.use58()) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT || this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21) {
32768 & e.rule_index && t.push("限注100");
65536 & e.rule_index && t.push("限注300");
1 << 17 & e.rule_index && t.push("限注500");
}
this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ && 4096 & e.rule_index && t.push("开牌特效");
} else if (20009 == e.server_type) {
64 & e.rule_index && t.push("庄家明牌");
128 & e.rule_index && t.push("无庄");
} else 64 & e.rule_index && t.push("显示出牌");
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
var s = this.getWanfaPaiNum();
t.push(s);
var c = this.getWanfaZhuang();
t.push(c);
var r = this.getWanfaDecs();
t.push(r);
var o = this.getWanfaNewGoto();
t.push(o);
return t.join(" ");
}
return "";
},
getAudioURLBySDB: function(e, t) {
return 1 == t ? "resources/game/10DB/sounds/man/" + e + ".mp3" : "resources/game/10DB/sounds/women/" + e + ".mp3";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
c.isGameOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.director.loadScene("mjgame_10DB");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seat_clean", function(e) {
c.dispatchEvent("clear_Seats");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
c.isGameOver = !1;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
i.status_mask = n.status_mask;
i.d21_data = n;
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
e.user_index = c.getLocalIndex(t);
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_count_push", function(e) {
console.log("mj_count_push");
c.numOfMJ = e;
c.dispatchEvent("mj_count", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
c.isGameOver = !0;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.dispatchEvent("active_clock", e);
1 == e.force ? c.dispatchEvent("fore_game_over", e) : c.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
c.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
c.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
c.dispatchEvent("start_play_end", e);
c.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
c.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == c.multiBanker.indexOf(e.seat_index) && 0 < e.call && c.multiBanker.push(e.seat_index);
c.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("point21_state", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("point21_state", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_action", function(e) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].sex;
if (e.error_code && 0 != e.error_code) {
var i = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", i);
}
if (1 == e.action_type) var n = 9; else if (2 == e.action_type) n = 10; else if (3 == e.action_type) n = 11;
var a = c.getAudioURLBySDB(n, t);
cc.vv.audioMgr.playSFX(a);
c.dispatchEvent("user_action", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_buy", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("user_buy", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("point105_state", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("point21_state", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
}
});
cc._RF.pop();
}, {} ],
GameNetMgr20012: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "219ccXb9CpILrnlVy9LtaZY", "GameNetMgr20012");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
gameDta_paguo: null,
pk_mainColor: null
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.unions_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.isReplay = !1;
this.gameDta_paguo = null;
this.pk_mainColor || (this.pk_mainColor = {});
this.pk_mainColor.pk_color = -1;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.gameDta_paguo = null;
this.pk_mainColor || (this.pk_mainColor = {});
this.pk_mainColor.pk_color = -1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].outs = [];
this.seats[e].can_call_banker = [];
}
this.dispatchEvent("reset");
this.dispatchEvent("fresh_all_score");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 4) % 4;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
JSON.parse(i[0].actions);
var s = JSON.parse(i[0].folds), c = JSON.parse(i[0].holds), r = a.main_color, o = -1 == r ? 4 : r;
this.pk_mainColor || (this.pk_mainColor = {});
this.pk_mainColor.pk_color = o;
var h = JSON.parse(i[0].base_info);
this.creatorid = h.conf.creator;
for (var l = null, d = 0; d < this.seats.length; d++) {
var u = this.seats[d];
u.userid == cc.vv.userMgr.userId && (l = u.userid);
}
l || (l = this.seats[0].userid);
for (var v = 0; v < this.seats.length; ++v) {
var g = this.seats[v];
g.seatindex = v;
g.score = null;
g.give_up = !1;
g.mainColor = r;
if (0 != g.user_id) {
for (var _ = null == c[v] ? [] : c[v], f = null == s[v] ? [] : s[v], p = 0; p < f.length; p++) _ = _.concat(f[p]);
g.holds = _;
g.folds = [];
} else {
g.holds = [];
g.folds = [];
}
l == g.userid && (this.seatIndex = v);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "扒锅";
},
initHandlers: function() {
var c = this;
cc.vv.poker_util = e("poker_utils_PAGUO");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
c.pk_mainColor || (c.pk_mainColor = {});
c.pk_mainColor.pk_color = -1;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.vv.wc.show("正在进入游戏");
cc.director.loadScene("mjgame_PAGUO");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.roomData = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.roomData = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.can_call_banker = n.can_call_banker;
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
c.gameDta_paguo || (c.gameDta_paguo = {});
c.pk_mainColor || (c.pk_mainColor = {});
c.pk_mainColor.pk_color = e.main_color;
c.gameDta_paguo.main_color = e.main_color;
c.gameDta_paguo.deputy = e.deputy;
c.gameDta_paguo.max_index = e.max_index;
c.gameDta_paguo.now_card_data = e.now_card_data;
c.gameDta_paguo.now_card_type = e.now_card_type;
c.gameDta_paguo.now_max_index = e.now_max_index;
c.gameDta_paguo.num_of_pokers = e.num_of_pokers;
c.gameDta_paguo.change_list = e.change_list;
c.gameDta_paguo.dig_card = e.dig_card;
c.gameDta_paguo.score = e.score;
c.gameDta_paguo.turn_card = e.turn_card;
c.gameDta_paguo.button_fu_card_counts = e.button_fu_card_counts;
var s = e.buy_double7;
c.gameDta_paguo.xiazhuang_score = 0 == s ? 80 : 25;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
console.log("--------------game_holds_push:index--" + t, "len:" + i.holds.length, "holds:" + i.holds);
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
e.user_index = c.getLocalIndex(t);
e.si = t;
c.dispatchEvent("out_card", e);
} else if (5001 == e.error_code) {
cc.vv.alert.show("提示", "亲，您不能这样出牌哦~");
return;
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("can_call_banker_push", function(e) {
var t = c.seats[c.seatIndex];
if (t) {
console.log("self.seatIndex:" + c.seatIndex, "data.can_call_banker" + e.can_call_banker);
t.can_call_banker = e.can_call_banker;
c.dispatchEvent("can_call_banker_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_turn_push", function(e) {
c.turn = e.turn;
c.dispatchEvent("call_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker_push", function(e) {
c.gameDta_paguo || (c.gameDta_paguo = {});
if (-1 != e.call) {
var t = e.user_id, i = c.getSeatIndexByID(t);
c.button = i;
c.turn = i;
c.gameDta_paguo.main_color = e.call;
c.pk_mainColor || (c.pk_mainColor = {});
c.pk_mainColor.pk_color = e.call;
c.dispatchEvent("change_button");
}
c.dispatchEvent("call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("buy_double7_turn_push", function(e) {
c.turn = e.turn;
c.dispatchEvent("buy_double7_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("buy_double7_push", function(e) {
c.gameDta_paguo || (c.gameDta_paguo = {});
if (-1 != e.buy) {
var t = e.user_id, i = c.getSeatIndexByID(t);
c.button = i;
c.turn = i;
c.gameDta_paguo.main_color = e.buy;
c.pk_mainColor || (c.pk_mainColor = {});
c.pk_mainColor.pk_color = e.buy;
c.dispatchEvent("change_button");
}
c.dispatchEvent("buy_double7_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("change_card_push", function(e) {
c.gameDta_paguo.change_list = e.change_list;
c.dispatchEvent("change_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("change_cards_data_push", function(e) {
c.dispatchEvent("change_cards_data_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dig_card_push", function(e) {
c.gameDta_paguo || (c.gameDta_paguo = {});
c.gameDta_paguo.dig_card = e.dig_card;
c.dispatchEvent("dig_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("bury_card_push", function(e) {
c.dispatchEvent("bury_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
c.turn = e.turn;
c.gameDta_paguo || (c.gameDta_paguo = {});
c.gameDta_paguo.now_max_index = e.max_index;
c.gameDta_paguo.now_card_type = e.now_card_type;
c.gameDta_paguo.now_card_data = e.now_card_data;
if (0 < e.now_card_data.length) {
var t = cc.vv.poker_util.get_poker_value(e.now_card_data[0]), i = e.now_card_data[0] % 4;
15 != t && 7 != t && 16 != t || (i = c.gameDta_paguo.main_color);
c.gameDta_paguo.now_card_color = i;
} else c.gameDta_paguo.now_card_color = -1;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_result_push", function(e) {
c.dispatchEvent("turn_result_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.gameDta_paguo || (c.gameDta_paguo = {});
c.gameDta_paguo.gameOverData = e;
c.dispatchEvent("active_clock", e);
1 == e.force || 1 == e.all_give_up_call ? c.dispatchEvent("game_over", e) : c.dispatchEvent("bury_card_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("deputy_push", function(e) {
c.dispatchEvent("deputy_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("button_fu_cards_push", function(e) {
c.gameDta_paguo || (c.gameDta_paguo = {});
c.gameDta_paguo.button_fu_card_counts = e.counts;
c.dispatchEvent("button_fu_cards_push", e);
});
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
}
});
cc._RF.pop();
}, {
poker_utils_PAGUO: "poker_utils_PAGUO"
} ],
GameNetMgr20013: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dc3ebjqxG5J6Jzt0MwNeX0a", "GameNetMgr20013");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
SyncData: null,
isReplay: !1
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.unions_id = -1;
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.SyncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.SyncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].random_cards = [];
}
this.dispatchEvent("reset");
this.dispatchEvent("fresh_all_score");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return e == this.seatIndex ? 0 : 1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.SyncData || (this.SyncData = {});
this.SyncData.public_cards = a.public_cards;
var s = a.card_types, c = JSON.parse(i[0].holds), r = JSON.parse(i[0].base_info);
this.creatorid = r.conf.creator;
for (var o = null, h = 0; h < this.seats.length; h++) {
var l = this.seats[h];
l.userid == cc.vv.userMgr.userId && (o = l.userid);
}
o || (o = this.seats[0].userid);
for (var d = 0; d < this.seats.length; ++d) {
var u = this.seats[d];
u.seatindex = d;
u.score = null;
if (0 != u.user_id) {
var v = null == c[d] ? [] : c[d];
u.holds = v;
u.pose_result = [];
var g = s[d];
for (var _ in g) {
var f = g[_], p = {};
p.row = _;
p.card_type = f.type;
p.card_value = f.max_value;
p.win = f.win ? 1 : 0;
p.index = d;
u.pose_result[_] = p;
}
}
o == u.userid && (this.seatIndex = d);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
showGameOver: function() {
this.dispatchEvent("showGameOver");
},
getGameTypeStr: function() {
return "拼拼乐";
},
getWanfaType: function() {
return cc.vv.gameType.getWaFaDecs_ppl(this.conf.type_index, this.conf.rule_index);
},
initHandlers: function() {
cc.vv.msg_templete = e("msgdefine_pinpinle").msg_templete;
var o = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
o.agent_user_id = e.agent_user_id;
o.roomId = e.roomid;
o.conf = e.conf;
o.type_index = e.conf.type_index;
o.rule_index = e.conf.rule_index;
o.maxNumOfGames = e.conf.max_games;
o.numOfGames = e.num_of_games;
o.seats = e.seats;
o.unions_id = o.conf.unionid;
o.high_defend = e.conf.high_defend;
o.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == o.seats[t].userid) {
o.seats[t].sex = cc.vv.userMgr.sex;
o.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = o.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? o.seatIndex = -1 : o.seatIndex = i.seatindex;
o.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
20013 == o.conf.server_type && cc.director.loadScene("Game_PPL");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
o.roomId = null;
o.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = o.getSeatByID(t);
if (null != i) {
o.spliceSeatByID(t);
i.userid = 0;
i.name = "";
o.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = o.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (o.seatIndex = n);
i.push(a);
}
o.seats = i;
o.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
o.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == o.isOver) {
cc.vv.userMgr.oldRoomId = o.roomId;
o.dispatchEvent("disconnect");
} else o.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (o.seatIndex = t);
if (null == o.seats[t]) o.seats[t] = e; else {
var i = o.seats[t];
if (i.userid == e.userid) {
o.seats[t].online = !0;
o.seats[t].watch = !1;
o.seats[t].seatindex = t;
} else {
var n = o.getSeatByID(e.userid);
if (n) {
var a = o.seats.indexOf(n);
o.seats[a] = i;
o.seats[t] = n;
o.seats[t].online = !0;
o.seats[t].watch = !1;
o.seats[t].seatindex = t;
} else {
var s = o.seats.splice(t, o.seats.length);
e.online = !0;
e.watch = !1;
o.seats[t] = e;
o.seats.concat(s);
}
}
}
o.dispatchEvent("new_user", o.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
o.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = o.getSeatByID(t);
if (i) {
i.online = e.online;
o.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = o.getSeatByID(t);
if (i) {
i.ready = e.ready;
o.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
o.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = o.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (o.seatIndex = n);
i.push(a);
}
o.seats = i;
o.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = o.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (o.seatIndex = n);
i.push(a);
}
o.seats = i;
o.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
o.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
o.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
o.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
o.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
o.dissoveData = e;
o.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
o.dissoveData = null;
o.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
o.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
o.numOfGames = e;
o.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
o.button = e;
o.turn = o.button;
o.dispatchEvent("game_begin_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
o.gamestate = e.state;
o.dispatchEvent("game_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = o.getSeatIndexByID(e.user_id), i = o.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
o.dispatchEvent("game_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
o.gamestate = e.state;
null == o.SyncData && (o.SyncData = {});
o.SyncData.public_cards = e.public_cards;
for (var t = 0; t < o.seats.length; ++t) {
console.log("i:" + t);
var i = o.seats[t], n = e.seats[t];
if (n) {
i.random_cards = n.random_cards;
i.holds = n.holds;
i.pose_data = n.pose_data;
i.finished = n.finished;
i.pose_result = [];
var a = n.card_types;
for (var s in a) {
var c = a[s], r = {};
r.row = s;
r.card_type = c.card_type;
r.card_value = c.card_value;
r.win = c.win;
r.index = t;
i.pose_result[s] = r;
}
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
1 == (o.gameOverData = e).force ? o.dispatchEvent("fore_game_over", e) : o.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
cc.vv.userMgr.isHighDefend = 0;
o.isOver = !0;
o.gameResultData = e;
o.gameResultData.roomId = o.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("ran_cards_push", function(e) {
o.dispatchEvent("ran_cards_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_turn_push", function(e) {
null == o.SyncData && (o.SyncData = {});
o.SyncData.count_down = e.count_down;
o.dispatchEvent("new_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("card_pose_push", function(e) {
o.dispatchEvent("card_pose_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("pub_cards_push", function(e) {
o.dispatchEvent("pub_cards_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("pose_result_push", function(e) {
var t = o.getSeatIndexByID(e.user_id), i = o.seats[t];
if (i) {
var n = {};
n.row = e.row;
n.card_type = e.card_type;
n.card_value = e.card_value;
n.win = e.win;
e.index = t;
i.pose_result || (i.pose_result = []);
i.pose_result[e.row] = n;
o.dispatchEvent("pose_result_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("pose_finish_push", function(e) {
o.dispatchEvent("pose_finish_push", e);
});
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
}
});
cc._RF.pop();
}, {
msgdefine_pinpinle: "msgdefine_pinpinle"
} ],
GameNetMgr30000: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e271cPiKlRFcpJ33vVP6MZe", "GameNetMgr30000");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
dingque: -1,
chupai: -1,
isDingQueing: !1,
isHuanSanZhang: !1,
gamestate: 1,
isOver: !1,
dissoveData: null,
max_index: -1,
pdk_red_ten: -1,
now_card_type: 0,
now_card_data: [],
tishi_card_data: [],
ddz_sync_data: null,
isReplay: !1,
ddzRate: -1,
isOffBanker: !1,
_bankerChose_index: -1,
_banker_status_data: null,
_bankerStatus_isOver: !1,
ddz_qiangHolds: [],
_newWatcher: !1,
zjh_goldflowerStateData: null,
zjh_compare: !1,
ddz_base_score: 0,
_dzpk_taxas_state_data: null,
gameDta_3dh: null,
mjSyncData: null,
multiBanker: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.dingque = -1;
this.chupai = -1;
this.isDingQueing = !1;
this.isHuanSanZhang = !1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.max_index = -1;
this.now_card_type = 0;
this.now_card_data = [];
this.tishi_card_data = [];
this.ddz_sync_data = null;
this.isReplay = !1;
this.ddzRate = -1;
this.isOffBanker = !1;
this._bankerChose_index = -1;
this._banker_status_data = null;
this._bankerStatus_isOver = !1;
this.pdk_red_ten = -1;
this.ddz_qiangHolds = [];
this._newWatcher = !1;
this.zjh_goldflowerStateData = null;
this.ddz_base_score = 0;
this._dzpk_taxas_state_data = null;
this.gameDta_3dh = null;
this.mjSyncData = null;
this.zjh_compare = !1;
},
reset: function() {
this.turn = -1;
this.chupai = -1, this.dingque = -1;
this.gamestate = 1;
this.ddzRate = -1;
this.gameDta_3dh = null;
this.mjSyncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].outs = [];
this.seats[e].hued = !1;
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear_Seats: function() {},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateDZPK_siler: function(e) {
this.dispatchEvent("update_siler", e);
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getIsWatch: function() {
if (0 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
if (e) {
return e.watch;
}
}
return this._newWatcher;
},
isVisibleWatch: function() {
if (1 == this._newWatcher) {
var e = this.getSeatByID(cc.vv.userMgr.userId);
return !e || 1 != e.join;
}
return !1;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return 4 & cc.vv.gameNetMgr.conf.rule_index && 1 == e ? 2 : e;
},
isGamesDZPK: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ;
},
isGamesZJH: function() {
return this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH;
},
use58: function() {
return this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ && this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.userid && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "飞行棋";
},
getWanfaType: function() {
var e = this.conf;
return 1 << 19 & e.rule_index ? "房主开房" : 1 << 20 & e.rule_index ? "AA开房" : "";
},
getPDK_paiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (2 & e.type_index) return 16;
if (4 & e.type_index) return 15;
if (8 & e.type_index) return 15;
if (16 & e.type_index) {
if (4096 & e.rule_index) return 13;
if (8192 & e.rule_index) return 27;
}
}
return "";
},
getWanfaMaxGames: function() {
var e = this.conf;
return 64 & e.rule_index ? "3局" : 128 & e.rule_index ? "5局" : "1局";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (4 & e.rule_index) return "2人";
if (8 & e.rule_index) return "3人";
if (16 & e.rule_index) return "4人";
}
return "";
},
getWanfaPaiNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (1024 & e.rule_index) return "15牌";
if (2048 & e.rule_index) return "16牌";
if (4096 & e.rule_index) return "一副牌";
if (8192 & e.rule_index) return "二副牌";
}
return "";
},
getWanfaZhuang: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && 1 == this.use58()) {
if (64 & e.rule_index) return "抢庄";
if (128 & e.rule_index) return "轮庄";
if (256 & e.rule_index) return 20008 == e.server_type ? "三公做庄" : "牛牛做庄";
if (512 & e.rule_index) return "牌大做庄";
if (1024 & e.rule_index) return "霸王庄";
}
return "";
},
getWanfaxiazhu: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (64 & e.rule_index) return "有限注";
if (128 & e.rule_index) return "无限注";
if (256 & e.rule_index) return "底池限额";
}
return "";
},
getZJHdifen: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index && this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
if (256 & e.rule_index) return "2分";
if (512 & e.rule_index) return "5分";
if (1024 & e.rule_index) return "10分";
}
return "";
},
getWanfaDecs: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [];
if (1 == this.use58()) {
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) {
64 & e.rule_index && t.push("有限注");
128 & e.rule_index && t.push("无限注");
256 & e.rule_index && t.push("底池限额");
}
if (this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT || this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21) {
32768 & e.rule_index && t.push("限注100");
65536 & e.rule_index && t.push("限注300");
1 << 17 & e.rule_index && t.push("限注500");
}
this.conf.server_type != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ && 4096 & e.rule_index && t.push("开牌特效");
if (8192 & e.rule_index) {
var i = "先开3张牌";
20008 == e.server_type && (i = "先开2张牌");
t.push(i);
}
16384 & e.rule_index && t.push("先开4张牌");
this.conf.server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX && 32768 & e.rule_index && t.push("不明牌");
} else {
if (20009 == e.server_type) {
64 & e.rule_index && t.push("庄家明牌");
128 & e.rule_index && t.push("无庄");
} else {
64 & e.rule_index && t.push("显示出牌");
128 & e.rule_index && t.push("黑桃3首出");
}
256 & e.rule_index && t.push("有大必管");
512 & e.rule_index && t.push("扎鸟");
}
return t.join(" ");
}
return "";
},
getWanfa: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
var t = [], i = this.getWanfaType();
t.push(i);
var n = this.getWanfaMaxGames();
t.push(n);
var a = this.getWanfaRoleNum();
t.push(a);
return t.join(" ");
}
return "";
},
initHandlers: function() {
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
10002 == c.conf.server_type ? cc.director.loadScene("yqmjgame") : 3e4 == c.conf.server_type ? cc.director.loadScene("flygame") : 20004 == c.conf.server_type ? cc.director.loadScene("mjgame_zjh") : cc.director.loadScene("mjgame");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
e.watch_join && e.watch_join;
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_watcher_comes_push", function(e) {
c._newWatcher = !0;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("join", function(e) {
console.log("join" + e.user_id, "cc.vv.userMgr.userId:" + cc.vv.userMgr.userId);
if (e.user_id == cc.vv.userMgr.userId) {
c._newWatcher = !1;
c.dispatchEvent("join_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
console.log(e);
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
c.dispatchEvent("game_holds", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin_push", function(e) {
console.log("game_action_push");
console.log("self.button:", e);
c.button = e;
c.turn = c.button;
c._bankerStatus_isOver = !1;
c.isOffBanker = !1;
c.dispatchEvent("game_begin");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
console.log("game_sync_push");
console.log(e);
cc.sys.isNative && (e = JSON.parse(e));
c.numOfMJ = e.numofmj;
c.gamestate = e.state;
c.turn = e.turn;
c.button = e.button;
c.ddzRate = e.rate;
c.chupai = e.chuPai;
c.ddz_qiangHolds = e.landlord_card;
c.ddz_base_score = e.base_score;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.holds = n.holds;
n.folds && 0 < n.folds.length ? i.folds = n.folds : i.folds = [];
i.d21_data = n;
i.fly_data = n;
}
}
var a = c.getSeatByID(cc.vv.userMgr.userId);
1 == a.watch ? c.seatIndex = -1 : c.seatIndex = a.seatindex;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.sync_data = e.sandaha;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card_push", function(e) {
console.log("out_card_push");
if (0 == e.error_code) {
var t = c.getSeatIndexByID(e.out_user);
c.seats[t].folds.push(e.out_cards_data);
c.ddzRate = e.rate;
e.user_index = c.getLocalIndex(t);
c.dispatchEvent("out_card", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn_push", function(e) {
console.log("turn_push");
c.turn = e.turn;
c.max_index = e.max_index;
-1 != e.red_ten && (c.pdk_red_ten = e.red_ten);
c.now_card_type = e.now_card_type;
c.now_card_data = e.now_card_data;
c.tishi_card_data = e.now_card_data;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_count_push", function(e) {
console.log("mj_count_push");
c.numOfMJ = e;
c.dispatchEvent("mj_count", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
c.multiBanker = [];
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.dispatchEvent("active_clock", e);
c.dispatchEvent("game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
c.isOver = !0;
c.gameResultData = e;
c.gameResultData.roomId = c.roomId;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker_push", function(e) {
c.dispatchEvent("call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_end_push", function(e) {
c.ddzRate = e.rate;
c.button = e.button;
console.log("----SC叫地主结束");
c.dispatchEvent("call_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_turn_push", function(e) {
c.turn = e.turn;
c.ddzRate = e.rate;
c.ddz_sync_data = e;
c.dispatchEvent("call_turn_push", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play", function(e) {
c.dispatchEvent("notice_start_play", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_choice", function(e) {
c.dispatchEvent("start_play_choice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("start_play_end", function(e) {
c.dispatchEvent("start_play_end", e);
c.dispatchEvent("start_play_end_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("betting", function(e) {
if (0 != e.error_code) {
var t = 304 == e.error_code ? "已经超过啦最大的筹码啦！" : e.error_code;
cc.vv.alert.show("提示", "错误码：" + t);
}
c.dispatchEvent("betting_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("call_banker", function(e) {
-1 == c.multiBanker.indexOf(e.seat_index) && 0 < e.call && c.multiBanker.push(e.seat_index);
c.dispatchEvent("call_banker", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker_state", function(e) {
c.isOffBanker = e.off_index == c.seatIndex;
c.dispatchEvent("offBankerState", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("off_banker", function(e) {
c.isOffBanker = !1;
c.dispatchEvent("off_banker_game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_base_status", function(e) {
c._bankerChose_index = e.chose_index;
c.dispatchEvent("bankerBaseStatus", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_base", function(e) {
c.button = e.banker_index;
c.dispatchEvent("bankerBase", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("banker_status", function(e) {
c._banker_status_data = e;
0 == c._bankerStatus_isOver ? c.dispatchEvent("bankerStatus", e) : c.dispatchEvent("updatebankerStatusScore", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("goldflower_state", function(e) {
c.turn = e.current_turn;
c.dispatchEvent("turn", e);
c.zjh_goldflowerStateData = e;
c.dispatchEvent("goldflowerState", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("open_card", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.open_card;
var n = {};
n.index = t;
c.dispatchEvent("zjh_game_holds", n);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("compare", function(e) {
c.zjh_compare = !0;
var t = e.watch_index, i = c.seats[t];
if (i) {
i.holds = e.watch_card;
(s = {}).index = t;
c.dispatchEvent("zjh_game_holds", s);
}
var n = e.compare_index, a = c.seats[n];
if (a) {
a.holds = e.compare_card;
var s;
(s = {}).index = n;
c.dispatchEvent("zjh_game_holds", s);
}
console.log("-------------炸金花 ---  比牌");
c.dispatchEvent("compare_zjh", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("giveup", function(e) {
c.seats[e.user_index] && c.dispatchEvent("giveup", e.user_index);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("taxas_state", function(e) {
c._dzpk_taxas_state_data = e;
c.dispatchEvent("taxas_state", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("point21_state", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("point21_state", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_action", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("user_action", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_buy", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("user_buy", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chose", function(e) {
e.error_code && 0 != e.error_code ? 5203 == e.error_code ? cc.vv.alert.show("出牌错误", "不能以倒水出牌!") : cc.vv.alert.show("出牌错误", "错误码" + e.error_code) : c.dispatchEvent("chose", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_banker_push", function(e) {
c.dispatchEvent("sdh_call_banker_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_end_push", function(e) {
c.button = e.button;
c.turn = e.button;
c.dispatchEvent("sdh_call_end_push", e);
c.dispatchEvent("sdh_change_button", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_call_turn_push", function(e) {
c.turn = e.turn;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.callTurn = e;
c.dispatchEvent("sdh_call_turn_push", e);
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_decide_main_color_push", function(e) {
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.mainColor = e.color;
c.dispatchEvent("decide_main_color_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_bury_card_push", function(e) {
c.dispatchEvent("bury_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_dig_card_push", function(e) {
c.dispatchEvent("sdh_dig_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_turn_push", function(e) {
c.turn = e.turn;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.max_index = e.max_index;
c.gameDta_3dh.now_card_type = e.now_card_type;
0 < e.now_card_data.length ? c.gameDta_3dh.now_card_color = cc.vv.poker_util.get_poker_color(e.now_card_data[1]) : c.gameDta_3dh.now_card_color = 0;
c.dispatchEvent("turn", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_turn_result_push", function(e) {
c.dispatchEvent("sdh_turn_result_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_game_over", function(e) {
c.gameOverData = e;
for (var t = 0; t < e.end_seats_data.length; t++) c.seats[t].score = e.end_seats_data[t].total_score;
c.gameDta_3dh || (c.gameDta_3dh = {});
c.gameDta_3dh.gameOverData = e;
c.dispatchEvent("sdh_bury_card_over", e);
c.dispatchEvent("active_clock", e);
c.dispatchEvent("sdh_game_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_game_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("sdh_deputy_push", function(e) {
c.dispatchEvent("sdh_deputy_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time", function(e) {
c.dispatchEvent("turn_time_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("mj_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("mj_game_state");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("mj_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("mj_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
c.turn = e.turn;
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.mjSyncData.first_throw = e.first_throw;
c.mjSyncData.second_throw = e.second_throw;
c.mjSyncData.gang_card_num = e.gang_card_num;
c.mjSyncData.god_wealth = e.god_wealth;
c.mjSyncData.light_card = e.light_card;
c.mjSyncData.now_out_card_data = e.now_out_card_data;
c.mjSyncData.now_out_card_seat = e.now_out_card_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.flower_items = n.flower_items;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
c.dispatchEvent("mj_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_turn_push", function(e) {
console.log("mj_turn_push");
c.turn = e.turn;
c.dispatchEvent("mj_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_surplus_push", function(e) {
console.log("mj_surplus_push," + e.surplus_card_num);
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.numOfMJ = e.surplus_card_num;
c.dispatchEvent("mj_surplus_push", e);
c.dispatchEvent("mj_update_surplus", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("mj_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("mj_result", e);
c.dispatchEvent("mj_game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_throw_dice_push", function(e) {
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.mjSyncData.first_throw = e.first_throw;
c.mjSyncData.second_throw = e.second_throw;
c.dispatchEvent("throw_dice_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_light_card_push", function(e) {
if (null == c.mjSyncData) {
c.mjSyncData = {};
c.mjSyncData.gang_card_num = 0;
}
c.mjSyncData.god_wealth = e.god_wealth;
c.mjSyncData.light_card = e.light_card;
c.dispatchEvent("light_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_baiban_gang_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
var n = [ e.type, e.card ];
i.flower_items || (i.flower_items = []);
i.flower_items.push(n);
}
c.dispatchEvent("baiban_gang_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_action_mask_push", function(e) {
c.dispatchEvent("card_type_action", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_cancel_action_push", function(e) {
c.dispatchEvent("mj_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_pick_card_push", function(e) {
c.numOfMJ = c.numOfMJ - 1;
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
i && i.holds.push(e.card);
c.dispatchEvent("mj_pick_card_push", e);
c.dispatchEvent("mj_update_surplus", c.numOfMJ);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_pick_gang_push", function(e) {
c.numOfMJ = c.numOfMJ - 1;
c.mjSyncData.gang_card_num = c.mjSyncData.gang_card_num + 1;
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
i && i.holds.push(e.card);
c.dispatchEvent("mj_pick_gang_push", e);
c.dispatchEvent("mj_update_surplus", c.numOfMJ);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
console.log("---初始----seat.items.lenght:" + i.items.length);
var n = e.remove_items;
if (0 < n.length) for (var a = 0; a < i.items.length; a++) if (i.items[a][1] == n[0][1]) {
console.log("-------减少的Item:" + n[0][1]);
i.items.splice(a, 1);
break;
}
var s = e.add_items;
console.log("-------增加的Item:" + s[0]);
console.log("-------seat.items.lenght:" + i.items.length);
i.items.push(s[0]);
}
c.dispatchEvent("mj_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dice", function(e) {
c.dispatchEvent("dice_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("move", function(e) {
c.dispatchEvent("move_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("flight_event", function(e) {
c.dispatchEvent("flight_event", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("robot", function(e) {
c.dispatchEvent("robot", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("flight_state", function(e) {
for (var t in e.user_flight_state) {
var i = e.user_flight_state[t];
c.seats[t].fly_data = i;
}
});
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
doDDZCallTurn: function() {
null != this.ddz_sync_data && this.dispatchEvent("turn", this.ddz_sync_data);
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
},
onShowGameResult: function() {
this.dispatchEvent("onShowGameResult");
}
});
cc._RF.pop();
}, {} ],
GameNetMgr30002: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e04ebNVKSVGV5u7iB0JsyUA", "GameNetMgr30002");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isForce: !1,
syncData: null,
isPeaceGame: !1,
actionCount: 0,
dataCache: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.isForce = !1;
this.dissoveData = null;
this.syncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.syncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
console.log("log------------------dispatchEvent   event   ->begin:", e);
this.dataEventHandler && this.dataEventHandler.emit(e, t);
console.log("log------------------dispatchEvent   event   ->end:", e);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 3) % 3;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
var s = JSON.parse(i[0].base_info).poker, c = JSON.parse(i[0].actions), r = (JSON.parse(i[0].folds), 
JSON.parse(i[0].holds), this.seats.length), o = (cc.vv.gameNetMgr.getLocalIndex(this.button), 
this.button > r - 1 ? 0 : this.button), h = 0, l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = o; g < r + o; g++) {
var _ = r - 1 < g ? g - r : g, f = this.seats[_];
d == f.userid && (this.seatIndex = g - o);
f.seatindex = _;
f.score = null;
f.folds = [];
f.holds = [];
f.items = [];
for (var p = 0; p < 20; p++) {
var m = p * r + h;
f.holds.push(s[m]);
}
h++;
}
c[c.length - 1][1] != cc.vv.globalSetting.ACTION_HU ? this.setIsPeaceGame(!0) : this.setIsPeaceGame(!1);
this.setActionCount(c.length);
},
setIsPeaceGame: function(e) {
this.isPeaceGame = e;
},
getIsPeaceGame: function() {
return this.isPeaceGame;
},
setActionCount: function(e) {
this.actionCount = e;
},
getActionCount: function() {
return this.actionCount;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "桂林字牌";
},
getWanfaType: function() {
return "经典玩法";
},
initHandlers: function() {
cc.vv.msgTemp_GLZP = e("GLZP_Msgdefine").msg_templete;
cc.vv.globalSetting = e("GLZP_GlobalSetting").global;
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("----------------login_finished-------------");
30002 == c.conf.server_type && cc.director.loadScene("zipaiGameScene");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
null == c.syncData && (c.syncData = {});
c.syncData.out_data = e.out_data;
c.syncData.out_seat = e.out_seat;
c.syncData.pick_data = e.pick_data;
c.syncData.pick_seat = e.pick_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.ready = 2 == c.gamestate;
i.xiabi_actions = n.xiabi_actions;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("wp_gl_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("wp_gl_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("wp_gl_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("wp_gl_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
c.dispatchEvent("wp_gl_out_push_err", e);
} else c.dispatchEvent("wp_gl_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_turn_push", function(e) {
console.log("wp_gl_turn_push");
c.turn = e.turn;
c.dispatchEvent("wp_gl_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_surplus_push", function(e) {
c.numOfMJ = e;
c.dispatchEvent("wp_gl_surplus_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_over", function(e) {
for (var t = (c.gameOverData = e).xing_counts, i = c.totalXingCount = 0; i < t.length; i++) c.totalXingCount += t[i];
c.surplusCardsNum = e.xing_cards.length + e.pokers.length;
c.dispatchEvent("wp_gl_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
c.dispatchEvent("wp_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_action_mask_push", function(e) {
c.dispatchEvent("wp_gl_action_mask_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_cancel_action_push", function(e) {
c.dispatchEvent("wp_gl_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_pick_card_push", function(e) {
c.dispatchEvent("wp_gl_pick_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.add_items;
i.items.push(n[0]);
}
c.dispatchEvent("wp_gl_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_gl_hu_push", function(e) {
c.dispatchEvent("wp_gl_hu_push", e);
});
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return 1 == this.use58() ? "最多5人" : "3人";
if (16 & e.rule_index) return 1 == this.use58() ? "最多8人" : "2人";
if (32 & e.rule_index) return 1 == this.use58() ? "不限制人数" : "4人";
}
return "";
},
getWanfaDecs: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
8 & e.rule_index && (t += " 10胡起胡 ");
16 & e.rule_index && (t += " 15胡起胡 ");
128 & e.rule_index && (t += " 自摸加1 ");
256 & e.rule_index && (t += " 自摸翻倍  ");
32 & e.rule_index && (t += " 5胡1子 ");
64 & e.rule_index && (t += " 3胡一子 ");
512 & e.rule_index && (t += " 可点炮 ");
1024 & e.rule_index && (t += " 不可点炮 ");
}
return t;
},
getWanfaNewGoto: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
2048 & e.rule_index && (t += " 重翻醒 ");
4096 & e.rule_index && (t += " 不重翻醒 ");
8192 & e.rule_index && (t += " 上醒 ");
16384 & e.rule_index && (t += " 中醒 ");
32768 & e.rule_index && (t += " 下醒 ");
}
return t;
},
isVisibleWatch: function() {
return !1;
},
getIsWatch: function() {
return !1;
},
setIsSpcialHu: function(e) {
this.isSpecialHu = e;
},
getIsSpcialHu: function() {
return this.isSpecialHu;
}
});
cc._RF.pop();
}, {
GLZP_GlobalSetting: "GLZP_GlobalSetting",
GLZP_Msgdefine: "GLZP_Msgdefine"
} ],
GameNetMgr30003: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f0115+allhPX7U/HPD0lpDk", "GameNetMgr30003");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isForce: !1,
syncData: null,
isPeaceGame: !1,
actionCount: 0,
dataCache: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.unions_id = -1;
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.isForce = !1;
this.dissoveData = null;
this.syncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.syncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 3) % 3;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
var s = JSON.parse(i[0].base_info).poker, c = JSON.parse(i[0].actions), r = (JSON.parse(i[0].folds), 
JSON.parse(i[0].holds), this.seats.length), o = (cc.vv.gameNetMgr.getLocalIndex(this.button), 
this.button > r - 1 ? 0 : this.button), h = 0, l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0, _ = o; _ < r + o; _++) {
var f = r - 1 < _ ? _ - r : _, p = this.seats[f];
d == p.userid && (this.seatIndex = f);
p.seatindex = f;
p.score = null;
p.folds = [];
p.holds = [];
p.items = [];
for (var m = 0; m < 20; m++) {
g = m * r + h;
p.holds.push(s[g]);
}
h++;
}
g++;
this.seats[o].holds.push(s[g]);
c[c.length - 1][1] != cc.vv.globalSetting.ACTION_HU ? this.setIsPeaceGame(!0) : this.setIsPeaceGame(!1);
this.setActionCount(c.length);
},
setIsPeaceGame: function(e) {
this.isPeaceGame = e;
},
getIsPeaceGame: function() {
return this.isPeaceGame;
},
setActionCount: function(e) {
this.actionCount = e;
},
getActionCount: function() {
return this.actionCount;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "长沙跑胡子";
},
getWanfaType: function() {
return "经典玩法";
},
initHandlers: function() {
cc.vv.msgTemp_GLZP = e("PHZ_Msgdefine").msg_templete;
cc.vv.globalSetting = e("PHZ_GlobalSetting").global;
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.vv.wc.show("正在进入游戏");
30003 == c.conf.server_type && cc.director.loadScene("zipaiGameScene");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.roomData = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.roomData = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
null == c.syncData && (c.syncData = {});
c.syncData.out_data = e.out_data;
c.syncData.out_seat = e.out_seat;
c.syncData.pick_data = e.pick_data;
c.syncData.pick_seat = e.pick_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.ready = 2 == c.gamestate;
i.xiabi_actions = n.xiabi_actions;
i.is_auto = n.is_auto;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("wp_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("wp_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("wp_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("wp_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
c.dispatchEvent("wp_out_push_err", e);
} else c.dispatchEvent("wp_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_turn_push", function(e) {
console.log("wp_turn_push");
c.turn = e.turn;
c.dispatchEvent("wp_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_surplus_push", function(e) {
c.numOfMJ = e;
c.dispatchEvent("wp_surplus_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("wp_over", e);
c.dispatchEvent("gameOverCancelAuto");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
c.dispatchEvent("game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_action_mask_push", function(e) {
c.dispatchEvent("wp_action_mask_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_cancel_action_push", function(e) {
c.dispatchEvent("wp_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_pick_card_push", function(e) {
c.dispatchEvent("wp_pick_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.add_items;
i.items.push(n[0]);
}
c.dispatchEvent("wp_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_hu_push", function(e) {
c.dispatchEvent("wp_hu_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time_sync", function(e) {
console.log("time_sync");
c.dispatchEvent("time_sync", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("auto_push", function(e) {
console.log("auto_push");
console.log("log---------data.is_auto=:", e.is_auto);
c.getSeatByID(e.user_id).is_auto = e.is_auto;
e.is_auto ? c.dispatchEvent("auto_push", e) : c.dispatchEvent("cancel_auto", e);
});
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return 1 == this.use58() ? "最多5人" : "3人";
if (16 & e.rule_index) return 1 == this.use58() ? "最多8人" : "2人";
if (32 & e.rule_index) return 1 == this.use58() ? "不限制人数" : "4人";
}
return "";
},
getWanfaDecs: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
1 << 19 & e.rule_index && (t += " 房卡游戏 ");
1 << 20 & e.rule_index && (t += " 钻石游戏 ");
8 & e.rule_index && (t += " 5番 ");
16 & e.rule_index && (t += " 不限番 ");
}
return t;
},
getWanfaNewGoto: function() {
this.conf;
return "";
},
isVisibleWatch: function() {
return !1;
},
getIsWatch: function() {
return !1;
},
setIsSpcialHu: function(e) {
this.isSpecialHu = e;
},
getIsSpcialHu: function() {
return this.isSpecialHu;
}
});
cc._RF.pop();
}, {
PHZ_GlobalSetting: "PHZ_GlobalSetting",
PHZ_Msgdefine: "PHZ_Msgdefine"
} ],
GameNetMgr30004: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e4f41XYCBBFLY9k7xysJB+w", "GameNetMgr30004");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isForce: !1,
syncData: null,
isInitHandler: !1,
isPeaceGame: !1,
actionCount: 0,
dataCache: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.unions_id = -1;
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.isForce = !1;
this.dissoveData = null;
this.syncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.syncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 4) % 4;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
var s = JSON.parse(i[0].base_info).poker, c = JSON.parse(i[0].actions), r = (JSON.parse(i[0].folds), 
JSON.parse(i[0].holds), this.seats.length), o = (cc.vv.gameNetMgr.getLocalIndex(this.button), 
this.button > r - 1 ? 0 : this.button), h = 0, l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = o; g < r + o; g++) {
var _ = r - 1 < g ? g - r : g, f = this.seats[_];
d == f.userid && (this.seatIndex = g - o);
f.seatindex = _;
f.score = null;
f.folds = [];
f.holds = [];
f.items = [];
for (var p = 0; p < 14; p++) {
var m = p * r + h;
f.holds.push(s[m]);
}
h++;
}
c[c.length - 1][1] != cc.vv.globalSetting.ACTION_HU ? this.setIsPeaceGame(!0) : this.setIsPeaceGame(!1);
this.setActionCount(c.length);
},
setIsPeaceGame: function(e) {
this.isPeaceGame = e;
},
getIsPeaceGame: function() {
return this.isPeaceGame;
},
setActionCount: function(e) {
this.actionCount = e;
},
getActionCount: function() {
return this.actionCount;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "衡阳六胡抢";
},
getWanfaType: function() {
return "经典玩法";
},
initHandlers: function() {
cc.vv.msgTemp_GLZP = e("HYLH_Msgdefine").msg_templete;
cc.vv.globalSetting = e("HYLH_GlobalSetting").global;
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
30004 == c.conf.server_type && cc.director.loadScene("zipaiGameScene");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
null == c.syncData && (c.syncData = {});
c.syncData.out_data = e.out_data;
c.syncData.out_seat = e.out_seat;
c.syncData.pick_data = e.pick_data;
c.syncData.pick_seat = e.pick_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.ready = 2 == c.gamestate;
i.xiabi_actions = n.xiabi_actions;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("wp_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_state_push", function(e) {
c.gamestate = e.state;
c.dispatchEvent("wp_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("wp_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("wp_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
c.dispatchEvent("wp_out_push_err", e);
} else c.dispatchEvent("wp_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_turn_push", function(e) {
console.log("wp_turn_push");
c.turn = e.turn;
c.dispatchEvent("wp_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_surplus_push", function(e) {
c.numOfMJ = e;
c.dispatchEvent("wp_surplus_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("wp_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
c.dispatchEvent("game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_action_mask_push", function(e) {
c.dispatchEvent("wp_action_mask_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_cancel_action_push", function(e) {
c.dispatchEvent("wp_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_pick_card_push", function(e) {
c.dispatchEvent("wp_pick_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.add_items;
i.items.push(n[0]);
}
c.dispatchEvent("wp_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_hu_push", function(e) {
c.dispatchEvent("wp_hu_push", e);
});
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
return "4人";
},
getWanfaDecs: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) {
this.setXingType(cc.vv.globalSetting.MASK_FAN_XING);
t += " 番醒 ";
}
if (16 & e.rule_index) {
this.setXingType(cc.vv.globalSetting.MASK_SUI_XING);
t += " 随醒 ";
}
if (32 & e.rule_index) {
this.setXingType(cc.vv.globalSetting.MASK_NO_XING);
t += " 不带醒 ";
}
64 & e.rule_index && (t += " 默认胡息 ");
128 & e.rule_index && (t += " 2+1 ");
256 & e.rule_index && (t += " 蚂蚁上树 ");
}
return t;
},
getWanfaNewGoto: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
512 & e.rule_index && (t += " 红黑摸 ");
1024 & e.rule_index && (t += " 一五十 ");
2048 & e.rule_index && (t += " 放炮 ");
4096 & e.rule_index && (t += " 强制胡牌 ");
8192 & e.rule_index && (t += " 自摸翻倍 ");
}
return t;
},
setXingType: function(e) {
this.xingType = e;
},
getXingType: function() {
return this.xingType;
},
isVisibleWatch: function() {
return !1;
},
getIsWatch: function() {
return !1;
},
setIsSpcialHu: function(e) {
this.isSpecialHu = e;
},
getIsSpcialHu: function() {
return this.isSpecialHu;
}
});
cc._RF.pop();
}, {
HYLH_GlobalSetting: "HYLH_GlobalSetting",
HYLH_Msgdefine: "HYLH_Msgdefine"
} ],
GameNetMgr30005: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d3d388Oq7ZBz6yhJ4/X/HVa", "GameNetMgr30005");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isForce: !1,
syncData: null,
isPeaceGame: !1,
actionCount: 0,
dataCache: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.isForce = !1;
this.dissoveData = null;
this.syncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.syncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 3) % 3;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
var s = JSON.parse(i[0].base_info).poker, c = JSON.parse(i[0].actions), r = (JSON.parse(i[0].folds), 
JSON.parse(i[0].holds), this.seats.length), o = (cc.vv.gameNetMgr.getLocalIndex(this.button), 
this.button > r - 1 ? 0 : this.button), h = 0, l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = o; g < r + o; g++) {
var _ = r - 1 < g ? g - r : g, f = this.seats[_];
d == f.userid && (this.seatIndex = g - o);
f.seatindex = _;
f.score = null;
f.folds = [];
f.holds = [];
f.items = [];
for (var p = 0; p < 20; p++) {
var m = p * r + h;
f.holds.push(s[m]);
}
h++;
}
c[c.length - 1][1] != cc.vv.globalSetting.ACTION_HU ? this.setIsPeaceGame(!0) : this.setIsPeaceGame(!1);
this.setActionCount(c.length);
},
setIsPeaceGame: function(e) {
this.isPeaceGame = e;
},
getIsPeaceGame: function() {
return this.isPeaceGame;
},
setActionCount: function(e) {
this.actionCount = e;
},
getActionCount: function() {
return this.actionCount;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "怀化红拐弯";
},
getWanfaType: function() {
return "经典玩法";
},
initHandlers: function() {
cc.vv.msgTemp_GLZP = e("HGW_Msgdefine").msg_templete;
cc.vv.globalSetting = e("HGW_GlobalSetting").global;
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
30005 == c.conf.server_type && cc.director.loadScene("zipaiGameScene");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
null == c.syncData && (c.syncData = {});
c.syncData.out_data = e.out_data;
c.syncData.out_seat = e.out_seat;
c.syncData.pick_data = e.pick_data;
c.syncData.pick_seat = e.pick_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.ready = 2 == c.gamestate;
i.xiabi_actions = n.xiabi_actions;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("wp_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("wp_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("wp_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("wp_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
c.dispatchEvent("wp_out_push_err", e);
} else c.dispatchEvent("wp_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_turn_push", function(e) {
console.log("wp_turn_push");
c.turn = e.turn;
c.dispatchEvent("wp_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_surplus_push", function(e) {
c.numOfMJ = e;
c.dispatchEvent("wp_surplus_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("wp_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
c.dispatchEvent("game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_action_mask_push", function(e) {
c.dispatchEvent("wp_action_mask_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_cancel_action_push", function(e) {
c.dispatchEvent("wp_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_pick_card_push", function(e) {
c.dispatchEvent("wp_pick_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.add_items;
i.items.push(n[0]);
}
c.dispatchEvent("wp_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_hu_push", function(e) {
c.dispatchEvent("wp_hu_push", e);
});
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
return "3人";
},
getWanfaDecs: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
1 << 19 & e.rule_index && (t += " 房卡游戏 ");
1 << 20 & e.rule_index && (t += " 钻石游戏 ");
}
return t;
},
getWanfaNewGoto: function() {
this.conf;
return "";
},
isVisibleWatch: function() {
return !1;
},
getIsWatch: function() {
return !1;
},
setIsSpcialHu: function(e) {
this.isSpecialHu = e;
},
getIsSpcialHu: function() {
return this.isSpecialHu;
}
});
cc._RF.pop();
}, {
HGW_GlobalSetting: "HGW_GlobalSetting",
HGW_Msgdefine: "HGW_Msgdefine"
} ],
GameNetMgr30006: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8d3b2IfwbdJE7cPxKMtSwUc", "GameNetMgr30006");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isForce: !1,
syncData: null,
isPeaceGame: !1,
actionCount: 0,
dataCache: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.unions_id = -1;
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.isForce = !1;
this.dissoveData = null;
this.syncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.syncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 3) % 3;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
var s = JSON.parse(i[0].base_info).poker, c = JSON.parse(i[0].actions), r = (JSON.parse(i[0].folds), 
JSON.parse(i[0].holds), this.seats.length), o = (cc.vv.gameNetMgr.getLocalIndex(this.button), 
this.button > r - 1 ? 0 : this.button), h = 0, l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = o; g < r + o; g++) {
var _ = r - 1 < g ? g - r : g, f = this.seats[_];
d == f.userid && (this.seatIndex = g - o);
f.seatindex = _;
f.score = null;
f.folds = [];
f.holds = [];
f.items = [];
for (var p = 0; p < 20; p++) {
var m = p * r + h;
f.holds.push(s[m]);
}
h++;
}
c[c.length - 1][1] != cc.vv.globalSetting.ACTION_HU ? this.setIsPeaceGame(!0) : this.setIsPeaceGame(!1);
this.setActionCount(c.length);
},
setIsPeaceGame: function(e) {
this.isPeaceGame = e;
},
getIsPeaceGame: function() {
return this.isPeaceGame;
},
setActionCount: function(e) {
this.actionCount = e;
},
getActionCount: function() {
return this.actionCount;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "娄底放炮罚";
},
getWanfaType: function() {
return "经典玩法";
},
initHandlers: function() {
cc.vv.msgTemp_GLZP = e("FPF_Msgdefine").msg_templete;
cc.vv.globalSetting = e("FPF_GlobalSetting").global;
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
30006 == c.conf.server_type && cc.director.loadScene("zipaiGameScene");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
null == c.syncData && (c.syncData = {});
c.syncData.out_data = e.out_data;
c.syncData.out_seat = e.out_seat;
c.syncData.pick_data = e.pick_data;
c.syncData.pick_seat = e.pick_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.ready = 2 == c.gamestate;
i.xiabi_actions = n.xiabi_actions;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("wp_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("wp_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("wp_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("wp_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
c.dispatchEvent("wp_out_push_err", e);
} else c.dispatchEvent("wp_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_turn_push", function(e) {
console.log("wp_turn_push");
c.turn = e.turn;
c.dispatchEvent("wp_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_surplus_push", function(e) {
c.numOfMJ = e;
c.dispatchEvent("wp_surplus_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("wp_over", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_result", function(e) {
c.isOver = !0;
c.dispatchEvent("game_result", e);
c.dispatchEvent("game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_action_mask_push", function(e) {
c.dispatchEvent("wp_action_mask_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_cancel_action_push", function(e) {
c.dispatchEvent("wp_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_pick_card_push", function(e) {
c.dispatchEvent("wp_pick_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.add_items;
i.items.push(n[0]);
}
c.dispatchEvent("wp_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_hu_push", function(e) {
c.dispatchEvent("wp_hu_push", e);
});
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
return "3人";
},
getWanfaDecs: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
1 << 19 & e.rule_index && (t += " 房卡游戏 ");
1 << 20 & e.rule_index && (t += " 钻石游戏 ");
}
return t;
},
getWanfaNewGoto: function() {
this.conf;
return "";
},
isVisibleWatch: function() {
return !1;
},
getIsWatch: function() {
return !1;
},
setIsSpcialHu: function(e) {
this.isSpecialHu = e;
},
getIsSpcialHu: function() {
return this.isSpecialHu;
}
});
cc._RF.pop();
}, {
FPF_GlobalSetting: "FPF_GlobalSetting",
FPF_Msgdefine: "FPF_Msgdefine"
} ],
GameNetMgr30007: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fac08qjDWhAQrmaU3Du2ZBy", "GameNetMgr30007");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isForce: !1,
syncData: null,
isPeaceGame: !1,
actionCount: 0,
dataCache: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.unions_id = -1;
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.isForce = !1;
this.dissoveData = null;
this.syncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.syncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 3) % 3;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
var s = JSON.parse(i[0].base_info).poker, c = JSON.parse(i[0].actions), r = (JSON.parse(i[0].folds), 
JSON.parse(i[0].holds), this.seats.length), o = (cc.vv.gameNetMgr.getLocalIndex(this.button), 
this.button > r - 1 ? 0 : this.button), h = 0, l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = 0, _ = o; _ < r + o; _++) {
var f = r - 1 < _ ? _ - r : _, p = this.seats[f];
d == p.userid && (this.seatIndex = _ - o);
p.seatindex = f;
p.score = null;
p.folds = [];
p.holds = [];
p.items = [];
for (var m = 0; m < 19; m++) {
g = m * r + h;
p.holds.push(s[g]);
}
h++;
}
g++;
this.p_index[o].holds.push(s[g]);
c[c.length - 1][1] != cc.vv.globalSetting.ACTION_HU ? this.setIsPeaceGame(!0) : this.setIsPeaceGame(!1);
this.setActionCount(c.length);
},
setIsPeaceGame: function(e) {
this.isPeaceGame = e;
},
getIsPeaceGame: function() {
return this.isPeaceGame;
},
setActionCount: function(e) {
this.actionCount = e;
},
getActionCount: function() {
return this.actionCount;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "岳阳歪胡子";
},
getWanfaType: function() {
return "经典玩法";
},
initHandlers: function() {
cc.vv.msgTemp_GLZP = e("WHZ_Msgdefine").msg_templete;
cc.vv.globalSetting = e("WHZ_GlobalSetting").global;
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
30007 == c.conf.server_type && cc.director.loadScene("zipaiGameScene");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.oldRoomId = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.oldRoomId = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_has_tian_hu_push", function(e) {
console.log("log----------wp_has_tian_hu_push");
c.dispatchEvent("wp_has_tian_hu_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.has_action = e.has_action;
c.gamestate = e.state;
null == c.syncData && (c.syncData = {});
c.syncData.out_data = e.out_data;
c.syncData.out_seat = e.out_seat;
c.syncData.pick_data = e.pick_data;
c.syncData.pick_seat = e.pick_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.lock_cards = n.lock_cards;
i.ready = 2 == c.gamestate;
i.xiabi_actions = n.xiabi_actions;
i.is_auto = n.is_auto;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("wp_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("wp_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("wp_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("wp_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
c.dispatchEvent("wp_out_push_err", e);
} else c.dispatchEvent("wp_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_lock_cards_push", function(e) {
c.dispatchEvent("wp_lock_cards_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_turn_push", function(e) {
console.log("wp_turn_push");
c.turn = e.turn;
c.dispatchEvent("wp_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_surplus_push", function(e) {
c.numOfMJ = e;
c.dispatchEvent("wp_surplus_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("wp_over", e);
c.dispatchEvent("gameOverCancelAuto");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
c.dispatchEvent("game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_action_mask_push", function(e) {
c.dispatchEvent("wp_action_mask_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_cancel_action_push", function(e) {
c.dispatchEvent("wp_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_pick_card_push", function(e) {
c.dispatchEvent("wp_pick_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.add_items;
i.items.push(n[0]);
}
c.dispatchEvent("wp_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_hu_push", function(e) {
c.dispatchEvent("wp_hu_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time_sync", function(e) {
console.log("time_sync");
c.dispatchEvent("time_sync", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("auto_push", function(e) {
console.log("auto_push");
console.log("log---------data.is_auto=:", e.is_auto);
c.getSeatByID(e.user_id).is_auto = e.is_auto;
e.is_auto ? c.dispatchEvent("auto_push", e) : c.dispatchEvent("cancel_auto", e);
});
},
connectGameServer: function(t) {
this.dissoveData = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip = t.ip + ":" + t.port;
console.log(cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].ip);
cc.vv.wc.show("正在进入房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].connect(function() {
console.log("onConnectOK");
var e = {
token: t.token,
roomid: t.roomid,
time: t.time,
sign: t.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("login", e);
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
return "3人";
},
getWanfaDecs: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
1 << 19 & e.rule_index && (t += " 房卡游戏 ");
1 << 20 & e.rule_index && (t += " 钻石游戏 ");
}
return t;
},
getWanfaNewGoto: function() {
this.conf;
return "";
},
isVisibleWatch: function() {
return !1;
},
getIsWatch: function() {
return !1;
}
});
cc._RF.pop();
}, {
WHZ_GlobalSetting: "WHZ_GlobalSetting",
WHZ_Msgdefine: "WHZ_Msgdefine"
} ],
GameNetMgr30008: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d0aa8GSsXdEV6Lmz9K2a2Oi", "GameNetMgr30008");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
isReplay: !1,
isForce: !1,
syncData: null,
isPeaceGame: !1,
actionCount: 0,
dataCache: []
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.unions_id = -1;
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.isForce = !1;
this.dissoveData = null;
this.syncData = null;
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.syncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("reset");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
return (e - this.seatIndex + 3) % 3;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
var s = JSON.parse(i[0].base_info).poker, c = JSON.parse(i[0].actions), r = (JSON.parse(i[0].folds), 
JSON.parse(i[0].holds), this.seats.length), o = (cc.vv.gameNetMgr.getLocalIndex(this.button), 
this.button > r - 1 ? 0 : this.button), h = 0, l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.userid == cc.vv.userMgr.userId && (d = v.userid);
}
d || (d = this.seats[0].userid);
for (var g = o; g < r + o; g++) {
var _ = r - 1 < g ? g - r : g, f = this.seats[_];
d == f.userid && (this.seatIndex = g - o);
f.seatindex = _;
f.score = null;
f.folds = [];
f.holds = [];
f.items = [];
for (var p = 0; p < 20; p++) {
var m = p * r + h;
f.holds.push(s[m]);
}
h++;
}
c[c.length - 1][1] != cc.vv.globalSetting.ACTION_HU ? this.setIsPeaceGame(!0) : this.setIsPeaceGame(!1);
this.setActionCount(c.length);
},
setIsPeaceGame: function(e) {
this.isPeaceGame = e;
},
getIsPeaceGame: function() {
return this.isPeaceGame;
},
setActionCount: function(e) {
this.actionCount = e;
},
getActionCount: function() {
return this.actionCount;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
var e = this.conf;
if (e && 0 < e.type_index && 0 < e.rule_index) {
if (8 & e.rule_index) return "常德全明堂";
if (16 & e.rule_index) return "常德红黑点";
}
},
getWanfaType: function() {
return "经典玩法";
},
initHandlers: function() {
cc.vv.msgTemp_GLZP = e("QMT_Msgdefine").msg_templete;
cc.vv.globalSetting = e("QMT_GlobalSetting").global;
var c = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) {
e = e.data;
c.agent_user_id = e.agent_user_id;
c.roomId = e.roomid;
c.conf = e.conf;
c.type_index = e.conf.type_index;
c.rule_index = e.conf.rule_index;
c.maxNumOfGames = e.conf.max_games;
c.numOfGames = e.num_of_games;
c.seats = e.seats;
c.unions_id = c.conf.unionid;
c.high_defend = e.conf.high_defend;
c.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
for (var t in e.seats) if (cc.vv.userMgr.userId == c.seats[t].userid) {
c.seats[t].sex = cc.vv.userMgr.sex;
c.seats[t].headimg = cc.vv.userMgr.headimg;
}
var i = c.getSeatByID(cc.vv.userMgr.userId);
1 == i.watch ? c.seatIndex = -1 : c.seatIndex = i.seatindex;
c.isOver = !1;
} else {
console.log(e.errmsg);
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
console.log("login_finished");
cc.vv.wc.show("正在进入游戏");
30008 == c.conf.server_type && cc.director.loadScene("zipaiGameScene");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
c.roomId = null;
c.clearGameData();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
var t = e, i = c.getSeatByID(t);
if (null != i) {
c.spliceSeatByID(t);
i.userid = 0;
i.name = "";
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("seq_move_seat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
cc.vv.gameNetMgr.roomId = null;
c.dispatchEvent("dispress_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
if (0 == c.isOver) {
cc.vv.userMgr.roomData = c.roomId;
c.dispatchEvent("disconnect");
} else c.roomId = null;
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
console.log("new_user_comes_push:" + e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (c.seatIndex = t);
if (null == c.seats[t]) c.seats[t] = e; else {
var i = c.seats[t];
if (i.userid == e.userid) {
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var n = c.getSeatByID(e.userid);
if (n) {
var a = c.seats.indexOf(n);
c.seats[a] = i;
c.seats[t] = n;
c.seats[t].online = !0;
c.seats[t].watch = !1;
c.seats[t].seatindex = t;
} else {
var s = c.seats.splice(t, c.seats.length);
e.online = !0;
e.watch = !1;
c.seats[t] = e;
c.seats.concat(s);
}
}
}
c.dispatchEvent("new_user", c.seats[t]);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
c.dispatchEvent("gps_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.online = e.online;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
var t = e.userid, i = c.getSeatByID(t);
if (i) {
i.ready = e.ready;
c.dispatchEvent("user_state_changed", i);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.roomData = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
c.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("kick_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = c.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (c.seatIndex = n);
i.push(a);
}
c.seats = i;
c.dispatchEvent("transfer_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
c.dispatchEvent("chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
c.dispatchEvent("quick_chat_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
c.dispatchEvent("emoji_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
c.dispatchEvent("emoji_to_cl", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
console.log("dissolve_notice_push");
console.log(e);
c.dissoveData = e;
c.dispatchEvent("dissolve_notice", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
c.dissoveData = null;
c.dispatchEvent("dissolve_cancel", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
c.dispatchEvent("voice_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
c.numOfGames = e;
c.dispatchEvent("game_num", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_sync_push", function(e) {
cc.sys.isNative && (e = JSON.parse(e));
c.button = e.button;
c.turn = e.turn;
c.numOfMJ = e.num_of_pokers;
c.gamestate = e.state;
null == c.syncData && (c.syncData = {});
c.syncData.out_data = e.out_data;
c.syncData.out_seat = e.out_seat;
c.syncData.pick_data = e.pick_data;
c.syncData.pick_seat = e.pick_seat;
for (var t = 0; t < c.seats.length; ++t) {
console.log("i:" + t);
var i = c.seats[t], n = e.seats[t];
if (n) {
i.action_mask = n.action_mask;
i.select_action = n.select_action;
i.folds = n.folds;
i.holds = n.holds;
i.items = n.items;
i.ready = 2 == c.gamestate;
i.xiabi_actions = n.xiabi_actions;
i.is_auto = n.is_auto;
}
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_button_push", function(e) {
c.button = e;
c.turn = c.button;
c.dispatchEvent("wp_button_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_state_push", function(e) {
c.gamestate = e.state;
console.log("服务器过来==game_state_push:" + c.gamestate);
c.dispatchEvent("wp_state_push");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_holds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.holds = e.holds;
e.index = t;
c.dispatchEvent("wp_holds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_folds_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.folds = e.folds;
e.index = t;
c.dispatchEvent("wp_folds_push", e);
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_out_push", function(e) {
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
c.dispatchEvent("wp_out_push_err", e);
} else c.dispatchEvent("wp_out_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_turn_push", function(e) {
console.log("wp_turn_push");
c.turn = e.turn;
c.dispatchEvent("wp_turn_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_surplus_push", function(e) {
c.numOfMJ = e;
c.dispatchEvent("wp_surplus_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_over", function(e) {
c.gameOverData = e;
c.dispatchEvent("wp_over", e);
c.dispatchEvent("gameOverCancelAuto");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_result", function(e) {
c.isOver = !0;
cc.vv.userMgr.isHighDefend = 0;
c.dispatchEvent("game_result", e);
c.dispatchEvent("game_result_showLB", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_action_mask_push", function(e) {
c.dispatchEvent("wp_action_mask_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_cancel_action_push", function(e) {
c.dispatchEvent("wp_cancel_action_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_pick_card_push", function(e) {
c.dispatchEvent("wp_pick_card_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_item_push", function(e) {
var t = c.getSeatIndexByID(e.user_id), i = c.seats[t];
if (i) {
i.items || (i.items = []);
var n = e.add_items;
i.items.push(n[0]);
}
c.dispatchEvent("wp_item_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wp_hu_push", function(e) {
c.dispatchEvent("wp_hu_push", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time_sync", function(e) {
console.log("time_sync");
c.dispatchEvent("time_sync", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("auto_push", function(e) {
console.log("auto_push");
console.log("log---------data.is_auto---=:", e.is_auto);
c.getSeatByID(e.user_id).is_auto = e.is_auto;
e.is_auto ? c.dispatchEvent("auto_push", e) : c.dispatchEvent("cancel_auto", e);
});
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
},
getWanfaMaxGames: function() {
var e = this.conf;
return e && 0 < e.type_index && 0 < e.rule_index ? e.max_games + "局" : "";
},
getWanfaRoleNum: function() {
return "3人";
},
getWanfaDecs: function() {
var e = this.conf, t = "";
if (e && 0 < e.type_index && 0 < e.rule_index) {
1 << 19 & e.rule_index && (t += " 房卡游戏 ");
1 << 20 & e.rule_index && (t += " 钻石游戏 ");
8 & e.rule_index && (t = "常德全明堂");
16 & e.rule_index && (t = "常德红黑点");
t = 32 & e.rule_index ? "托管" : "不托管";
}
return t;
},
getWanfaNewGoto: function() {
this.conf;
return "";
},
isVisibleWatch: function() {
return !1;
},
getIsWatch: function() {
return !1;
},
setIsSpcialHu: function(e) {
this.isSpecialHu = e;
},
getIsSpcialHu: function() {
return this.isSpecialHu;
}
});
cc._RF.pop();
}, {
QMT_GlobalSetting: "QMT_GlobalSetting",
QMT_Msgdefine: "QMT_Msgdefine"
} ],
GameNetMgr80001: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6558aFh00ZJnYm3INdh9fd1", "GameNetMgr80001");
var a = e("buffer").Buffer;
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
seatIndex: -1,
seats: [],
turn: -1,
button: -1,
isOver: !1,
dissoveData: null,
now_card_type: 0,
now_card_data: [],
tishi_card_data: [],
challenge: null,
matchInfo: null,
matchID: [],
token: 0,
_sceneLoading: !1,
turn_msg: [],
count: 0,
current_loops: 0,
max_loops: 0
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
this.seatIndex = -1;
this.seats = [];
this.turn = -1;
this.button = -1;
this.isOver = !1;
this.dissoveData = null;
this.now_card_type = 0;
this.now_card_data = [];
this.tishi_card_data = [];
this.current_loops = 0;
this.max_loops = 0;
cc.vv.match.table_sync = null;
},
reset: function() {
this.turn = -1;
this.current_loops = 0;
for (var e = this.max_loops = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].ready = !1;
}
this.dispatchEvent("reset");
this.dispatchEvent("clear_Seats");
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
}
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
match_getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].user_id == e) return t;
}
return -1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
getGameTypeStr: function() {
return "跑得快";
},
initHandlers: function() {
var n = this, e = cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH];
e.addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) e = e.data; else {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
cc.vv.wc.hide();
}
});
e.addHandler("disconnect", function(e) {
if (1 == cc.vv.match.nowMatch) {
cc.vv.userMgr.inMatch = !0;
n.dispatchEvent("disconnect");
}
});
e.addHandler("key", function(e) {
cc.log(e);
var t = {};
t.keys = cc.vv.dhrc4.gen_key();
n.challenge = t;
n.challenge.secret = cc.vv.dhrc4.secret(n.challenge.keys.private_key, e.public_key);
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("challenge", n.challenge.keys.public_key);
});
e.addHandler("challenge", function(e) {
cc.log(e);
var t = {
rd_text: cc.vv.dhrc4.decrypto(e.cy_str, n.challenge.secret),
token: n.matchInfo.token
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("auth", t);
});
e.addHandler("auth_result", function(e) {
cc.log("auth_result", e);
if (0 != e) {
var t = cc.vv.error.errorMsg(e.toString());
cc.vv.alert.show("提示", t);
cc.vv.wc.hide();
}
});
e.addHandler("auth_finish", function(e) {
cc.vv.match.matchWillBegin || cc.vv.wc.hide();
cc.log(e);
});
e.addHandler("match_counts", function(e) {
cc.log("match_counts", e);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_COUNTS, e);
var t = {
match_type: 80001,
load: e
};
cc.vv.netMgr.hallIEventDispatcher.emit("match_counts", t);
if (e == n.matchInfo.max_user) {
cc.vv.match.matchWillBegin = !0;
cc.vv.wc.show("即将进入比赛...");
}
});
e.addHandler("match_prepare", function(e) {
console.log("----------------match_prepare", e);
if (n._sceneLoading) cc.vv.eventMgr.emit(cc.vv.event.MATCH_WAITING_PIPEI, null); else {
n._sceneLoading = !0;
cc.director.loadScene("MatchGame_PDK");
console.log("load_mjgame_PDK");
cc.vv.eventMgr.emit(cc.vv.event.MATCH_TIME);
}
cc.vv.eventMgr.emit(cc.vv.event.MATCH_GAME_PREPARE);
});
e.addHandler("table_sync", function(e) {
console.log("table_sync", e);
cc.vv.match.matchWillBegin = !0;
if (1 == cc.vv.userMgr.inMatch) {
cc.vv.userMgr.inMatch = !1;
n.state = e.state;
n.turn = e.turn;
n.now_card_data = e.current_cards;
n.now_card_type = e.current_type;
n.tishi_card_data = e.current_cards;
for (var t = 0; t < e.seats.length; t++) {
e.seats[t].name = new a(e.seats[t].name, "base64").toString();
n.seats.splice(t, 0, e.seats[t]);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_GAME_HOLDS, n.seats[t].seat_index);
e.seats[t].user_id == cc.vv.userMgr.userId && (n.seatIndex = e.seats[t].seat_index);
if (e.seats[t].user_id == e.turn) {
var i = -1;
i = 0 != t ? t - 1 : e.seats.length - 1;
}
}
n.turn_msg = [];
n.turn_msg[0] = e.turn;
n.turn_msg[1] = 15;
n.lastOutCard = {};
n.lastOutCard.user_index = n.getLocalIndex(i);
n.lastOutCard.si = i;
n.lastOutCard.out_user = e.seats[i].user_id;
n.lastOutCard.out_cards_data = e.current_cards;
cc.vv.eventMgr.emit(cc.vv.event.MATCH_OUT_CARD, n.lastOutCard);
} else for (t = 0; t < e.seats.length; t++) {
e.seats[t].name = new a(e.seats[t].name, "base64").toString();
e.seats[t].table_id = "1000";
n.seats.splice(t, 0, e.seats[t]);
}
});
e.addHandler("match_new_user", function(e) {
console.log("----------------match_new_user", e);
e.folds = [];
e.holds = [];
e.name = new a(e.name, "base64").toString();
n.seats.push(e);
parseInt(e.user_id) == cc.vv.userMgr.userId && (n.seatIndex = e.seat_index);
cc.log(n.seats);
});
e.addHandler("match_begin", function(e) {
cc.log("----------------match_begin:", e);
cc.vv.wc.hide();
if (!n._sceneLoading) {
n._sceneLoading = !0;
cc.vv.wc.show("即将进入比赛...", !0);
cc.director.loadScene("MatchGame_PDK");
}
cc.vv.eventMgr.emit(cc.vv.event.MATCH_TIME);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_GAME_START);
if (e) {
n.current_loops = e.current_loops;
n.max_loops = e.max_loops;
cc.vv.eventMgr.emit(cc.vv.event.MATCH_GAME_COUNTS);
}
});
e.addHandler("match_holds", function(e) {
cc.log("----------------match_holds:", e);
var t = n.match_getSeatIndexByID(e.user_id), i = n.seats[t];
null != i.folds && (i.folds = e.folds);
null != i.holds && (i.holds = e.holds);
cc.log("seat:", n.seats);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_GAME_HOLDS, n.seats[t].seat_index);
});
e.addHandler("match_out_card", function(e) {
cc.log("----------------match_out_card:", e);
var t = n.match_getSeatIndexByID(e.user_id);
n.seats[t];
e.user_index = n.getLocalIndex(t);
e.si = t;
e.out_user = e.user_id;
e.out_cards_data = e.out_info[1];
cc.vv.eventMgr.emit(cc.vv.event.MATCH_OUT_CARD, e);
});
e.addHandler("match_turn", function(e) {
cc.log("----------------match_turn:", e);
n.turn = e[0];
n.now_card_type = e[3];
n.now_card_data = e[4];
n.tishi_card_data = e[4];
cc.vv.eventMgr.emit(cc.vv.event.MATCH_TURN, e);
});
e.addHandler("time_sync", function(e) {
cc.log("----------------time_sync:", e);
});
e.addHandler("state_sync", function(e) {
cc.log("----------------state_sync:", e);
1 == e.online && (cc.vv.match.table_sync = !0);
});
e.addHandler("match_game_end", function(e) {
n.now_card_type = 1, n.now_card_data = [], n.tishi_card_data = [], cc.log("----------------match_game_end:", e);
for (var t = 0; t < e.length; t++) e[t];
cc.vv.eventMgr.emit(cc.vv.event.MATCH_END_ONE, e);
});
e.addHandler("table_status", function(e) {
cc.log("----------------table_status:", e);
});
e.addHandler("all_end", function(e) {
cc.log("----------------all_end:", e);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_END);
cc.vv.match.matchAllEnd = !0;
cc.vv.match.matchClear();
});
e.addHandler("top_list", function(e) {
cc.log("----------------top_list:", e);
cc.vv.match.matchAllEnd = !0;
cc.vv.eventMgr.emit(cc.vv.event.MATCH_TOP_LIST, e);
});
e.addHandler("waiting", function(e) {
cc.log("----------------waiting:", e);
n.now_card_type = 1;
n.now_card_data = [];
n.tishi_card_data = [];
cc.vv.eventMgr.emit(cc.vv.event.MATCH_GEME_WAIT);
});
},
deal_table_sync: function(e) {},
getLocalIndex: function(e) {
return -1 == e ? -1 : (e - this.seatIndex + 3) % 3;
},
doTurnChange: function(e) {
var t = {
last: this.turn,
turn: e
};
this.turn = e;
this.dispatchEvent("game_chupai", t);
},
updateGameServer: function(e) {
cc.log(e);
for (var t = Object.keys(cc.vv.match.matchMess), i = 0, n = 0; n < t.length; n++) {
i = parseInt(t[n]);
cc.vv.match.matchMess[i][0].token && this.matchID.push(i);
}
this.dissoveData = null;
var a = cc.vv.match.matchMess[i][0];
this.matchInfo = a;
this.conf = {
rule_index: 0
};
this.conf.rule_index += 256;
console.log("移位：8");
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
requestUserSex: function(t) {
var i = this, e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
target: t
};
cc.vv.http.sendRequest("/other_user_info", e, function(e) {
i.match_getSeatByID(t).sex = e.sex;
});
},
getWanfaType: function() {
return "经典玩法";
},
getWanfaRoleNum: function() {
return "3人";
},
getWanfaDecs: function() {
return "";
},
getWanfaPaiNum: function() {
return "一副牌";
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].user_id == e) return this.seats[t];
}
return null;
},
match_getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].user_id == e) return this.seats[t];
}
return null;
},
isSelfTurn: function() {
var e = this.turn, t = this.match_getSeatIndexByID(e);
return 0 == this.getLocalIndex(t);
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
}
});
cc._RF.pop();
}, {
buffer: 47
} ],
GameNetMgr80002: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1fdf5S0uwNCKonf8kKgu5wP", "GameNetMgr80002");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: [],
turn: -1,
button: -1,
chupai: -1,
gamestate: -1,
isOver: !1,
dissoveData: null,
max_index: -1,
tishi_card_data: [],
isReplay: !1,
ddzRate: -1,
ddz_qiangHolds: [],
ddz_base_score: 0,
check_out_double_data: null,
multiBanker: [],
auth_finish: !1,
call_banker: 0,
node_game_over: null,
issue_reward: !1
},
ctor: function() {
this.conf = {};
this.conf.server_type = 80002;
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.clearGameData();
},
clearGameData: function() {
Object.assign(this.properties, {
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: [],
turn: -1,
button: -1,
chupai: -1,
gamestate: -1,
isOver: !1,
dissoveData: null,
max_index: -1,
tishi_card_data: [],
isReplay: !1,
ddzRate: -1,
ddz_qiangHolds: [],
ddz_base_score: 0,
auth_finish: !1,
call_banker: 0,
issue_reward: !1
});
},
reset: function() {
this.turn = -1;
this.chupai = -1;
this.gamestate = -1;
this.ddzRate = -1;
this.button = -1;
this.issue_reward = !1;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].is_auto = !1;
}
this.dispatchEvent("fresh_all_score");
this.dispatchEvent("reset");
},
clear_Seats: function() {},
clear: function() {
this.dataEventHandler = null;
this.seats = [];
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].user_id == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].user_id == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].user_id == e) {
this.seats.splice(t, 1);
break;
}
}
},
isSingle: function() {
for (var e = 0; e < this.seats.length; e++) {
if (1 == this.seats[e].holds.length) return !0;
}
return !1;
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 3, i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : this.seatIndex;
return i < e ? e - i : e == i ? 0 : t + e - i;
},
use58: function() {
return !1;
},
prepareReplay: function(e, t, i) {
var n = JSON.parse(e.base_info);
this.isReplay = !0;
this.roomId = e.id;
this.conf = n;
this.conf.server_type = n.server_type;
this.type_index = n.type_index;
this.rule_index = n.rule_index;
this.maxNumOfGames = n.max_games;
this.numOfGames = t;
this.seats = e.user_data;
this.seatIndex = this.getSeatIndexByID(cc.vv.userMgr.userId);
var a = JSON.parse(i[0].change_info);
this.turn = a.turn;
this.button = a.button;
this.group_list = a.group_list;
var s = [];
a.public_card && (s = a.public_card);
var c = [];
a.give_list && (c = a.give_list);
JSON.parse(i[0].actions);
var r = JSON.parse(i[0].folds), o = JSON.parse(i[0].holds), h = 0;
a.main_color || (h = a.main_color);
var l = JSON.parse(i[0].base_info);
this.creatorid = l.conf.creator;
for (var d = null, u = 0; u < this.seats.length; u++) {
var v = this.seats[u];
v.user_id == cc.vv.userMgr.userId && (d = v.user_id);
}
d || (d = this.seats[0].user_id);
for (var g = 0; g < this.seats.length; ++g) {
var _ = this.seats[g];
_.seatindex = g;
_.score = null;
_.public_card = s;
_.give_up = !1;
_.mainColor = h;
c[g] && (_.give_up = c[g]);
if (0 != _.user_id) {
for (var f = null == o[g] ? [] : o[g], p = null == r[g] ? [] : r[g], m = 0; m < p.length; m++) f = f.concat(p[m]);
_.holds = f;
_.folds = [];
} else {
_.holds = [];
_.folds = [];
}
d == _.user_id && (this.seatIndex = g);
}
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
initHandlers: function() {
var a = this, e = cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH];
e.addHandler("disconnect", function() {
cc.error("disconnect");
a.dispatchEvent("disconnect");
if (a.node_game_over || a.issue_reward) ; else {
"hall" != cc.director.getScene().name && cc.director.loadScene("hall", function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].close();
cc.vv.wc.show("网络错误，正在重新连接网络。");
});
}
});
e.addHandler("key", function(e) {
console.log("收到 key", e);
var t = {};
t.keys = cc.vv.dhrc4.gen_key();
a.challenge = t;
a.challenge.secret = cc.vv.dhrc4.secret(a.challenge.keys.private_key, e.public_key);
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("challenge", {
key: a.challenge.keys.public_key
});
});
e.addHandler("challenge", function(e) {
console.log("收到 challenge", e);
var t = {
rd_text: cc.vv.dhrc4.decrypto(e.cy_str, a.challenge.secret),
token: cc.vv.userMgr.token
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("auth", t);
});
e.addHandler("auth_finish", function(e) {
console.log("收到 auth_finish", e);
a.auth_finish = !0;
});
e.addHandler("competition_registry", function(e) {
cc.log("收到 competition_registry", e);
cc.director.loadScene("MatchGame_DDZ", function() {
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_MY_INFO);
});
});
e.addHandler("match_number", function(e) {
cc.log("收到 match_number", e);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_PLAYER_NUMBER_CHANGE, e);
});
e.addHandler("game_start", function(e) {
cc.log("收到 game_start", e);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_TXT_TIP, {
isShow: !1
});
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_TABLE_WAIT, {
isShow: !1
});
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_REMOVE_GAME_OVER);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_REMOVE_REWARD_DIALOG);
a.roomId = e.table_id;
a.seats = e.seat_info;
a.current_round = e.current_round;
a.round_num = e.round_num;
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_UPDATE_GAME_ROUND, {
isShow: !0
});
a.seats.map(function(e, t) {
cc.vv.userMgr.userId == e.user_id && (a.seatIndex = t);
e.seatindex = t;
e.folds = [];
});
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_INIT_SEATS);
});
e.addHandler("error", function(e) {
cc.log("收到 error", e);
});
e.addHandler("match_start", function(e) {
cc.log("收到 match_start", e);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_GAME_PREPARE);
cc.vv.wc.hide();
});
e.addHandler("game_state_push", function(e) {
cc.log("收到 game_state_push", e);
a.gamestate = e.state;
a.dispatchEvent("game_state");
});
e.addHandler("call_turn_push", function(e) {
cc.log("收到 call_turn_push", e);
a.turn = e.turn;
a.ddzRate = e.rate;
a.call_banker = e.call_banker;
a.gamestate = e.state;
a.dispatchEvent("call_turn_push", e);
a.dispatchEvent("turn", e);
});
e.addHandler("call_banker_push", function(e) {
cc.log("收到 call_banker_push", e);
a.dispatchEvent("call_banker_push", e);
});
e.addHandler("call_end_push", function(e) {
cc.log("收到 call_end_push", e);
a.ddzRate = e.rate;
a.button = e.button;
console.log("----SC叫地主结束");
a.ddz_qiangHolds = e.landlord_card;
a.dispatchEvent("call_end_push", e);
});
e.addHandler("turn_push", function(e) {
cc.log("收到 turn_push", e);
a.turn = e.turn;
a.tishi_card_data = e.card_data.cards;
a.last_card_data = e.card_data;
a.dispatchEvent("turn", e);
});
e.addHandler("out_card_push", function(e) {
cc.log("收到 out_card_push", e);
a.seats[e.index].folds.push(e.cards);
a.ddzRate = e.rate;
e.user_index = a.getLocalIndex(e.index);
a.dispatchEvent("out_card", e);
});
e.addHandler("game_holds_push", function(e) {
cc.log("收到 game_holds_push", e);
var t = a.getSeatIndexByID(e.user_id), i = a.seats[t];
if (i) {
i.holds = e.holds;
var n = e.folds.length;
i.folds = 0 < n ? e.folds : [];
e.index = t;
a.dispatchEvent("game_holds", e);
}
});
e.addHandler("auto_push", function(e) {
cc.log("收到 auto_push", e);
var t = a.getSeatByID(e.user_id);
if (t) {
t.is_auto = e.is_auto;
a.dispatchEvent("auto_push", e);
}
});
e.addHandler("game_over", function(e) {
cc.log("收到 game_over", e);
});
e.addHandler("game_end", function(e) {
cc.log("收到 game_end", e);
a.gameOverData = e;
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_UPDATE_GAME_ROUND, {
isShow: !1
});
for (var t = 0; t < e.seat_info.length; t++) a.seats[t].score = e.seat_info[t].score;
if (-1 == e.winner) for (t = 0; t < e.seat_info.length; t++) {
e.seat_info[t].end_score = -e.win_score;
a.seats[t].end_score = -e.win_score;
} else {
if (e.winner == a.seatIndex) if (a.seatIndex == a.button) {
e.seat_info[a.seatIndex].end_score = e.win_score;
a.seats[a.seatIndex].end_score = e.win_score;
for (t = 0; t < e.seat_info.length; t++) if (t != a.seatIndex) {
e.seat_info[t].end_score = -e.win_score / (e.seat_info.length - 1);
a.seats[t].end_score = -e.win_score / (e.seat_info.length - 1);
}
} else {
e.seat_info[a.button].end_score = -e.win_score;
a.seats[a.button].end_score = -e.win_score;
for (t = 0; t < e.seat_info.length; t++) if (t != a.button) {
e.seat_info[t].end_score = e.win_score / (e.seat_info.length - 1);
a.seats[t].end_score = e.win_score / (e.seat_info.length - 1);
}
} else if (a.seatIndex == a.button) {
a.seats[a.seatIndex].end_score = -e.win_score;
for (t = 0; t < e.seat_info.length; t++) t != a.seatIndex && (a.seats[t].end_score = e.win_score / (e.seat_info.length - 1));
} else {
a.seats[a.button].end_score = e.win_score;
for (t = 0; t < e.seat_info.length; t++) t != a.button && (a.seats[t].end_score = -e.win_score / (e.seat_info.length - 1));
}
}
a.tishi_card_data = [];
a.dispatchEvent("game_over_show", e);
});
e.addHandler("match_over", function(e) {
cc.log("收到 match_over", e);
});
e.addHandler("table_wait", function(e) {
cc.log("收到 table_wait", e);
var t = function() {
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_CLEAR_SEATS);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_MY_INFO);
e.isShow = !0;
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_TABLE_WAIT, e);
};
"MatchGame_DDZ" != cc.director.getScene().name ? cc.director.loadScene("MatchGame_DDZ", function() {
t();
}) : t();
});
e.addHandler("match_reconnection", function(e) {
cc.error("收到 matchReconnection", e);
});
e.addHandler("table_info", function(n) {
cc.error("收到 table_info", n);
cc.vv.userMgr.inMatch = !1;
cc.director.loadScene("MatchGame_DDZ", function() {
a.gamestate = n.state;
a.turn = n.turn;
a.roomId = n.table_id;
a.seats = n.seat_info;
a.current_round = n.current_round;
a.round_num = n.round_num;
a.call_banker = n.call_banker;
a.tishi_card_data = n.card_data.cards;
a.last_card_data = n.card_data;
a.ddzRate = n.rate;
a.button = n.button;
a.ddz_qiangHolds = n.landlord_card;
a.seats.map(function(e, t) {
cc.vv.userMgr.userId == e.user_id && (a.seatIndex = t);
e.seatindex = t;
});
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_INIT_SEATS);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_UPDATE_GAME_ROUND, {
isShow: !0
});
a.dispatchEvent("call_end_push", n);
-1 == n.button && cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_LORD_CARD);
for (var e = 0; e < n.seats.length; e++) {
var t = a.getSeatIndexByID(n.seats[e]);
a.dispatchEvent("game_holds", {
index: t
});
}
if (a.isSelfTurn()) {
0 == a.gamestate ? a.dispatchEvent("call_turn_push") : a.gamestate;
a.dispatchEvent("turn", {
time_out: n.time_out
});
}
for (var i = 0; i < n.seat_info.length; i++) a.dispatchEvent("auto_push", n.seat_info[i]);
});
});
e.addHandler("issue_reward", function(e) {
cc.log("收到 issue_reward", e);
a.issue_reward = !0;
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_REWARD_DIALOG, e);
});
e.addHandler("competition_cancel", function(e) {
cc.log("收到 competition_cancel", e);
cc.vv.userMgr.inMatch = !1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].close(!0);
cc.director.loadScene("hall");
});
},
sendTuoGuan: function(e) {
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("auto_push", {
is_auto: e
});
}
});
cc._RF.pop();
}, {} ],
GameNetMgrClub: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "783a3mJBURCn7Ue4JalSMt5", "GameNetMgrClub");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
chatEventHandle: null,
conf: null
},
onLoad: function() {},
start: function() {},
initHandlers: function() {
var i = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("login_result", function(e) {
console.log(e);
if (0 === e.errcode) e = e.data; else {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("disconnect", function(e) {
i.dispatchEvent("disconnect");
i.chatDispatchEvent("duanxian");
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("key", function(e) {
cc.log(e);
var t = {};
t.keys = cc.vv.dhrc4.gen_key();
i.challenge = t;
i.challenge.secret = cc.vv.dhrc4.secret(i.challenge.keys.private_key, e.public_key);
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].send("challenge", i.challenge.keys.public_key);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("challenge", function(e) {
cc.log(e);
var t = {
rd_text: cc.vv.dhrc4.decrypto(e.cy_str, i.challenge.secret),
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].send("auth", t);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("auth_result", function(e) {
cc.log("auth_result", e);
if (0 != e) {
var t = cc.vv.error.errorMsg(e.toString());
cc.vv.alert.show("提示", t);
cc.vv.wc.hide();
}
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("auth_finish", function(e) {
cc.log(e);
cc.vv.wc.hide();
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("union_chat", function(e) {
cc.log("union_chat", e);
i.chatDispatchEvent("get_chat_msg", e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].addHandler("history_union_chat", function(e) {
cc.log("history_union_chat", e);
i.chatDispatchEvent("get_history_chat", e);
});
},
connectGameServer: function(e) {
cc.vv.netMgr.connectVoiceServer(e.chat_url);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
chatDispatchEvent: function(e, t) {
this.chatEventHandle && this.chatEventHandle.emit(e, t);
}
});
cc._RF.pop();
}, {} ],
GameOver_13S: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e9a52CoH2hMYqyGa8ICXzQF", "GameOver_13S");
cc.Class({
extends: cc.Component,
properties: {
gameOver_pk_prefab: {
default: null,
type: cc.Prefab
},
_gameover: null,
_seats: [],
_seats_re: [],
_pingju: null,
_win: null,
_lose: null,
_time: -1,
_qiePai: null
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._btnQiePai = this._gameover.getChildByName("btnQiePai");
this._time_num = this._gameover.getChildByName("time_num");
this._time_num.active = !1;
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
this._qiePai = this._gameover.getChildByName("btnQiePai");
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_13S", "onBtnReadyClicked");
cc.vv.utils.addClickEvent(this._btnQiePai, this.node, "GameOver_13S", "onBtnQiePaiClicked");
var t = this._gameover.getChildByName("result_13S");
t.active = !0;
var i = t;
i.active = !0;
for (var n = i.getChildByName("result_list"), a = 0; a < n.children.length; ++a) {
var s = n.children[a], c = {};
c.username = s.getChildByName("username").getComponent(cc.Label);
c.dao1 = s.getChildByName("dao1");
c.dao2 = s.getChildByName("dao2");
c.userid = s.getChildByName("userID").getComponent(cc.Label);
c.sprIcon = s.getChildByName("icon").getComponent("ImageLoader");
c.dao3 = s.getChildByName("dao3");
c.type = s.getChildByName("type").getComponent(cc.Label);
c.score = s.getChildByName("jifen").getComponent(cc.RichText);
c.isMySelf = s.getChildByName("isMySelf");
c.isMySelf.active = !1;
var r = s.getChildByName("dizhu");
if (r) {
c.dizhuIcon = r;
c.dizhuIcon.active = !1;
}
this._seats.push(c);
this._seats_re.push(s);
}
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.node.on("game_result_showLB", this.showLb, this);
}
},
showLb: function() {
cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算";
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameOverData;
console.log(e);
for (var t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
var i = 0, n = 0;
this._gameover.active = !0;
for (var a = cc.vv.gameNetMgr.seats, s = 0; s < a.length; ++s) {
var c = this._seats[s];
if (o = e.end_seats_data[s]) {
this._seats_re[s].active = !0;
this.showPlayer(c, o, s, e.button);
if (o.end_score < i) {
i = o.end_score;
n = o.user_id;
}
}
}
var r = 0;
for (s = 0; s < a.length; ++s) {
var o;
(o = e.end_seats_data[s]) && o.end_score == i && r++;
}
1 == r && cc.vv.userMgr.userId == n ? this._qiePai.active = !0 : this._qiePai.active = !1;
},
showPlayer: function(e, t, i, n) {
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.gameNetMgr.getSelfData().userid == t.user_id && t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle");
cc.find("Canvas/game_over/win/pingju");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/13S/sounds/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/13S/sounds/lose.mp3");
} else if (0 == t.end_score) {
this._pingju.active = !0;
_ping.getComponent(cc.Animation).play("pingju");
}
}
t.banker && t.banker == "" + i && (e.dizhuIcon.active = !0);
var c = cc.vv.gameNetMgr.getSeatByID(t.user_id);
e.sprIcon.setUserID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = n == i ? c.name + "(庄家)" : c.name;
e.userid.string = "ID:" + t.user_id;
}
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
this.setDaoNode(e.dao1, t.folds[0]);
this.setDaoNode(e.dao2, t.folds[1]);
this.setDaoNode(e.dao3, t.folds[2]);
this.setDaoType(e.type, t.score_info);
},
setDaoNode: function(e, t) {
if (t && t.length) for (var i = 20 * -Math.floor(t.length / 2), n = 0; n < t.length; n++) {
var a = t[n], s = null;
s = cc.instantiate(this.gameOver_pk_prefab);
var c = this.get_poker_display_value(a);
s.val = Math.floor(a / 4);
s.col = a % 4;
s.getComponent("MyPoker_old").setValueAndColor(c, s.col);
s.parent = e;
s.setPosition(i, 0);
s.scaleX = s.scaleY = .3;
i += 30;
}
},
setDaoType: function(e, t) {
t.out ? 1 < t.out.type ? e.string = this.getOutTypeName(t.out.type) : e.string = this.getDaoTypeName(t.stage[0].type) + " " + this.getDaoTypeName(t.stage[1].type) + " " + this.getDaoTypeName(t.stage[2].type) : e.string = "";
},
get_poker_display_value: function(e) {
return e < 4 ? 15 : Math.floor(e / 4) + 2;
},
onBtnReadyClicked: function() {
console.log("onBtnReadyClicked");
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this._gameover.active = !1;
this.node.emit("fresh_all_score");
},
onBtnQiePaiClicked: function() {
console.log("onBtnQiePaiClicked");
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("cut");
cc.vv.gameNetMgr.reset();
}
this._gameover.active = !1;
this.node.emit("fresh_all_score");
},
onBtnShareClicked: function() {
console.log("onBtnShareClicked");
},
onBtnXiaZhuangClick: function() {},
update: function(e) {
if (0 < this._time) {
this._time -= e;
if (0 < this._alertTime && this._time < this._alertTime) {
cc.vv.audioMgr.playSFX("timeup_alarm.mp3");
this._alertTime = -1;
}
var t = "";
this._time < 0 && (this._time = 0);
var i = Math.ceil(this._time);
i < 10 && (t = "0");
if (i < 1) {
this._time_num.active = !1;
this._gameover.active = !1;
}
this._time_num.getComponent(cc.Label).string = "倒计时自动关闭：" + t + i;
}
},
getOutTypeName: function(e) {
var t = "无类型";
switch (e) {
case 2:
t = "三同花";
break;

case 3:
t = "三顺子";
break;

case 4:
t = "六对半";
break;

case 5:
t = "五对三条";
break;

case 6:
t = "四套三条";
break;

case 7:
t = "双怪冲三";
break;

case 8:
t = "凑一色";
break;

case 9:
t = "全小";
break;

case 10:
t = "全大";
break;

case 11:
t = "三分天下";
break;

case 12:
t = "三同花顺";
break;

case 13:
t = "12皇族";
break;

case 14:
t = "一条龙";
break;

case 15:
t = "至尊青龙";
}
return t;
},
getDaoTypeName: function(e) {
var t = "乌龙";
switch (e) {
case 2:
t = "对子";
break;

case 3:
t = "二对";
break;

case 4:
t = "三条";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "炸弹";
break;

case 9:
t = "同花顺";
}
return t;
}
});
cc._RF.pop();
}, {} ],
GameOver_21D: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1839dmm02ZFwqXeIqzcx3ER", "GameOver_21D");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_21D", "onBtnReadyClicked");
this.result58 = this._gameover.getChildByName("result58");
var t = this.result58;
t.active = !0;
for (var i = t.getChildByName("result_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n], s = {};
s.username = a.getChildByName("username").getComponent(cc.Label);
s.userid = a.getChildByName("userID").getComponent(cc.Label);
s.sprIcon = a.getChildByName("icon").getComponent("ImageLoader");
s.reason = a.getChildByName("reason").getComponent(cc.Label);
s.fan = a.getChildByName("fan").getComponent(cc.Label);
s.score = a.getChildByName("score").getComponent(cc.RichText);
s.isMySelf = a.getChildByName("isMySelf");
s.isMySelf.active = !1;
var c = a.getChildByName("fan1");
c && (s.fan1 = c.getComponent(cc.Label));
var r = a.getChildByName("holds");
r && (s.holds = r);
this._seats.push(s);
this._seats_re.push(a);
}
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameOverData;
console.log(e);
for (var t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
this._gameover.active = !0;
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n, e.button);
}
}
var c = 8 == i.length ? 30 : 0;
this.result58.setPositionY(c);
},
showPlayer: function(e, t, i, n) {
e.fan && (e.fan.string = "");
e.fan1 && (e.fan1.string = "");
e.holds && e.holds.removeAllChildren();
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle"), c = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
} else if (0 == t.end_score) {
this._pingju.active = !0;
c.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = r.name;
e.userid.string = "ID:" + t.user_id;
}
e.sprIcon.setUserID(t.user_id);
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
var o = cc.vv.gameNetMgr.conf.server_type, h = t.bet_coin;
0 == h && (h = "0");
e.reason.string = h;
n == i && (e.reason.string = "庄家");
var l = e.holds;
l.removeAllChildren();
var d = t.holds, u = 40;
d[1] && 0 < d[1].length && (u = 20);
if (20007 == o && 2 == d.length) {
for (var v = d[0], g = 0; g < v.length; g++) {
var _ = v[g], f = null;
(f = cc.instantiate(cc.find("Canvas").getComponent("MJGame_21D").gameOver_pk_prefab)).parent = l;
var p = 30 + g * u;
f.setPosition(p, 0);
f.poker_id = _;
this.setSpriteFrameByMJID(f, _);
}
var m = cc.vv.poker_util.d21_CardTypeSre(t.card_type[0].type, v), C = d[1];
if (0 < C.length) {
for (var y = 0; y < C.length; y++) {
_ = C[y], f = null;
(f = cc.instantiate(cc.find("Canvas").getComponent("MJGame_21D").gameOver_pk_prefab)).parent = l;
p = 30 + y * u + 230;
f.setPosition(p, 0);
f.poker_id = _;
this.setSpriteFrameByMJID(f, _);
}
e.fan1.string = cc.vv.poker_util.d21_CardTypeSre(t.card_type[1].type, C);
}
e.fan.string = m;
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker_old").setValueAndColorByID(t, !0);
e.active = !0;
},
onBtnReadyClicked: function() {
console.log("onBtnReadyClicked");
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
update: function(e) {},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameOver_3DH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "774c7r0zqFNvIw2zFQ36wYx", "GameOver_3DH");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_win: null,
_lose: null
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lost");
this._liuju = this._gameover.getChildByName("liuju");
this._win.active = !1;
this._lose.active = !1;
this._liuju.active = !1;
this.btn_ready = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(this.btn_ready, this.node, "GameOver_3DH", "onBtnReadyClicked");
this.lbl_jiaofen = this._gameover.getChildByName("lbl_jiaofen").getChildByName("lb").getComponent(cc.Label);
this.lbl_df = this._gameover.getChildByName("lbl_df").getChildByName("lb").getComponent(cc.Label);
this.lbl_type = this._gameover.getChildByName("lbl_type").getComponent(cc.Label);
for (var e = this._gameover.getChildByName("seatList"), t = 0; t < e.children.length; ++t) {
var i = e.children[t], n = {};
n.username = i.getChildByName("lb_name").getComponent(cc.Label);
n.fan = i.getChildByName("lb_fen").getComponent(cc.Label);
var a = i.getChildByName("icon");
if (a) {
n.icon = a;
n.icon.active = !1;
}
this._seats.push(n);
}
cc.vv.gameNetMgr.isOver ? this.btn_ready.getChildByName("lb").getComponent(cc.Label).string = "总结算" : this.btn_ready.getChildByName("lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameDta_3dh.gameOverData, t = cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex;
this._win.active = !1;
this._lose.active = !1;
var i = this._liuju.active = !1;
1 != e.force && 1 != e.all_give_up_call || (i = !0);
if (0 == i) {
var n = cc.find("Canvas/game_over/lost/shule"), a = cc.find("Canvas/game_over/win/yingle");
if (1 == t) if (1 == e.winner) {
this._win.active = !0;
a.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/3DH/sounds/win.mp3");
} else {
n.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/3DH/sounds/lose.mp3");
} else if (2 == e.winner) {
this._win.active = !0;
a.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/3DH/sounds/win.mp3");
} else {
n.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/3DH/sounds/lose.mp3");
}
this._lose.active = !this._win.active;
this.lbl_type.string = [ "", "大光", "小光", "过庄", "大倒", "小倒", "垮庄" ][e.win_lose_state];
} else {
this._liuju.active = !0;
this.lbl_type.string = "";
}
this.lbl_jiaofen.string = e.call_score;
this.lbl_df.string = e.game_score;
for (var s = 0, c = cc.vv.gameNetMgr.seats, r = 0; r < c.length; ++r) {
var o = e.end_seats_data[r], h = c[r];
if (o) {
var l = null;
if (r == cc.vv.gameNetMgr.button) (l = this._seats[3]).fan.string = o.end_score; else {
(l = this._seats[s]).fan.string = o.end_score;
l.icon.active = !1;
r == cc.vv.gameNetMgr.seatIndex && (l.icon.active = !0);
s++;
}
cc.vv.userMgr.isHighDefend ? l.username.string = "已屏蔽" : l.username.string = h.name;
}
}
},
onBtnReadyClicked: function() {
console.log("onBtnReadyClicked");
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
update: function(e) {},
onDestroy: function() {
this.node.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
GameOver_3G: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ced1ag5At9KFKhw6hoYmZ/N", "GameOver_3G");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_3G", "onBtnReadyClicked");
this.result58 = this._gameover.getChildByName("result58");
var t = this.result58;
t.active = !0;
for (var i = t.getChildByName("result_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n], s = {};
s.username = a.getChildByName("username").getComponent(cc.Label);
s.userid = a.getChildByName("userID").getComponent(cc.Label);
s.sprIcon = a.getChildByName("icon").getComponent("ImageLoader");
s.reason = a.getChildByName("reason").getComponent(cc.Label);
s.fan = a.getChildByName("fan").getComponent(cc.Label);
s.score = a.getChildByName("score").getComponent(cc.RichText);
s.isMySelf = a.getChildByName("isMySelf");
s.isMySelf.active = !1;
var c = a.getChildByName("fan1");
c && (s.fan1 = c.getComponent(cc.Label));
var r = a.getChildByName("holds");
r && (s.holds = r);
this._seats.push(s);
this._seats_re.push(a);
}
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
cc.vv.gameNetMgr.clear_Seats();
var e = cc.vv.gameNetMgr.gameOverData;
console.log(e);
for (var t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
this._gameover.active = !0;
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n, e.button);
}
}
var c = 8 == i.length ? 30 : 0;
this.result58.setPositionY(c);
},
showPlayer: function(e, t, i, n) {
e.fan && (e.fan.string = "");
e.fan1 && (e.fan1.string = "");
e.holds && e.holds.removeAllChildren();
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle"), c = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/3g/sounds/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/3g/sounds/lose.mp3");
} else if (0 == t.end_score) {
this._pingju.active = !0;
c.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = r.name;
e.userid.string = "ID:" + t.user_id;
}
e.sprIcon.setUserID(t.user_id);
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
cc.vv.gameNetMgr.conf.server_type;
var o = t.bet_coin;
0 == o && (o = "0");
e.reason.string = o;
var h = e.holds;
n == i && (e.reason.string = "庄家");
var l;
l = cc.vv.poker_util.sangongCardTypeSre(t.card_type.type, t.card_type.max_value);
for (var d = t.holds, u = 0; u < d.length; u++) {
var v = d[u], g = null;
(g = cc.instantiate(cc.find("Canvas").getComponent("MJGame_3G").gameOver_pk_prefab)).parent = h;
var _ = 30 + 40 * u;
g.setPosition(_, 0);
g.poker_id = v;
this.setSpriteFrameByMJID(g, v);
}
e.fan.string = l;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker_old").setValueAndColorByID(t, !0);
e.active = !0;
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
update: function(e) {},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameOver_DCZB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ec735fuiOZNYIvcjmLojNCj", "GameOver_DCZB");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._gameover.active = !1;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_DCZB", "onBtnReadyClicked");
this.userNode = this._gameover.getChildByName("UserNode");
this.userPanel = this.userNode.getChildByName("user");
cc.vv.Event.on("mj_over_push", this.call_game_over, this);
cc.vv.Event.on("mj_game_result_showLB", this.showLb, this);
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/dc_game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/dc_game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
}
},
call_game_over: function(e) {
var t = this;
if (1 != e.detail.force) {
this.vas = cc.find("Canvas");
this.vas && this.vas.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
t.onGameOver();
})));
} else this.onGameOver();
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
cc.find("Canvas/dc_game_over/btnReady/lb").getComponent(cc.Label).string = "总结算";
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameOverData, t = e.hu_user_id, i = e.pao_user_id, n = e.hu_card, a = e.button;
this.node.active = !0;
this.userNode.removeAllChildren();
for (var s = cc.vv.gameNetMgr.seats, c = 0; c < s.length; c++) {
var r = s[c], o = e.end_seats_data[c];
if (o) {
console.log(o);
this.showPlayer(r, o, t, i, n, c, a);
}
}
},
showPlayer: function(e, t, i, n, a, s, c) {
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
cc.find("Canvas/dc_game_over/lose/shule"), cc.find("Canvas/dc_game_over/win/yingle"), 
cc.find("Canvas/dc_game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
cc.vv.audioMgr.playSFX("resources/game/soundsPublic/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
cc.vv.audioMgr.playSFX("resources/game/soundsPublic/lose.mp3");
} else 0 == t.end_score && (this._pingju.active = !0);
}
var r = cc.instantiate(this.userPanel), o = r.getComponent("user_over_item");
if (cc.vv.userMgr.userId == t.user_id) {
o.setBenRen(!0);
o.setSelfLine(!0);
} else {
o.setBenRen(!1);
o.setSelfLine(!1);
}
o.setHeadIcon(t.user_id);
o.setName(e.name);
o.setId(t.user_id);
this.showOutcomeType(o, t, i, n, a, t.holds);
this.showButton(o, c, e.seatindex);
var h = cc.vv.gameNetMgr.gameOverData.ret_detail;
this.showLabel(o, t, i, h);
this.showHuapLabel(o, "花牌");
this.showHuapItem(o, t.flower_items);
this.showHouse(o, !1);
this.showScore(o, t.end_score);
this.showHolds(o, t.holds);
this.showAction(o, t.items);
r.parent = this.userNode;
},
showHuapItem: function(e, t) {
e.setHuaPShow(t);
},
showAction: function(e, t) {
e.setActionShow(t);
},
showHolds: function(e, t) {
var i = this.simpleSort(t);
e.setHoldsShow(i);
},
simpleSort: function(e) {
var t = cc.vv.gameNetMgr.mjSyncData;
if (t) {
var i = t.god_wealth, n = t.light_card;
return e = e.sort(function(e, t) {
return e != i && e != n || t == i ? t != i && t != n || e == i ? e - t : 1 : -1;
});
}
},
showScore: function(e, t) {
e.setScore(t);
},
showHouse: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
e.setHouse(t);
},
showHuapLabel: function(e) {
1 < arguments.length && void 0 !== arguments[1] && arguments[1];
},
showLabel: function(e, t, i, n) {
0 < i ? e.setDecs(this.addLabel(t, i, n)) : e.setDecs("");
},
addLabel: function(e, t, i) {
var n = "";
if (e.user_id == t) {
var a = [ "", "明杠", "暗杠", "栽宝", "无宝当", "自摸", "胡牌", "七对", "烂牌", "对对胡", "幺九牌" ], s = "";
for (var c in i) s = s + a[c] + "x" + i[c] + "  ";
n = s;
}
return n;
},
showHuCard: function(e, t) {
e.setHuItem(t);
},
showButton: function(e, t, i) {
t == i ? e.setZhuang(!0) : e.setZhuang(!1);
},
showOutcomeType: function(e, t, i, n, a, s) {
if (t.user_id == i) {
if (i == n) {
e.setOutcomeType("自摸");
a = s.pop();
} else e.setOutcomeType("胡");
this.showHuCard(e, a);
} else {
e.setOutcomeType("");
this.showHuCard(e, -1);
}
t.user_id == n && i != n && e.setOutcomeType("炮手");
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) {
this._gameresult = cc.find("Canvas/dc_game_result");
this._gameresult.active = !0;
} else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this._gameover.active = !1;
this.node.dispatchEvent(new cc.Event.EventCustom("mj_clear_push", !0));
this.node.dispatchEvent(new cc.Event.EventCustom("fresh_all_score", !0));
},
onDestroy: function() {
cc.vv.Event.off("dc_game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
GameOver_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1e786UJ3gFB2aSCvK0aqM7v", "GameOver_DDZ");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1,
_springIconList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_DDZ", "onBtnReadyClicked");
for (var t = this._gameover.getChildByName("result"), i = t.getChildByName("result_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n], s = {};
s.username = a.getChildByName("username").getComponent(cc.Label);
s.userid = a.getChildByName("userID").getComponent(cc.Label);
s.sprIcon = a.getChildByName("icon").getComponent("ImageLoader");
s.reason = a.getChildByName("reason").getComponent(cc.Label);
s.fan = a.getChildByName("fan").getComponent(cc.Label);
s.score = a.getChildByName("score").getComponent(cc.RichText);
s.isMySelf = a.getChildByName("isMySelf");
s.isMySelf.active = !1;
var c = a.getChildByName("dizhu");
s.dizhuIcon = c;
s.dizhuIcon.active = !1;
this._seats.push(s);
this._seats_re.push(a);
}
this.ddz_node = t.getChildByName("nodeDDZ");
this.ddz_fen = this.ddz_node.getChildByName("lbl_difen").getComponent(cc.Label);
var r = this.ddz_node.getChildByName("spring_list");
for (n = 0; n < r.children.length; n++) this._springIconList.push(r.children[n]);
this.springMC = this.ddz_node.getChildByName("springMC");
var o = this.springMC.getChildByName("btnSpring");
o && cc.vv.utils.addClickEvent(o, this.node, "GameOver_DDZ", "springMC_btnSpring");
var h = this.springMC.getChildByName("btnReady");
h && cc.vv.utils.addClickEvent(h, this.node, "GameOver_DDZ", "onBtnBackOver");
this.show_node = this.springMC.getChildByName("show_node");
this.spring_bg_1 = this.show_node.getChildByName("spring_bg_1");
this.show_holds_1 = this.spring_bg_1.getChildByName("holds");
var l = this.spring_bg_1.getChildByName("head");
this.show_icon_1 = l.getChildByName("icon").getComponent("ImageLoader");
this.show_name_1 = l.getChildByName("name").getComponent(cc.Label);
this.spring_bg_2 = this.show_node.getChildByName("spring_bg_2");
this.spring_bg_2.active = !1;
this.show_holds_2 = this.spring_bg_2.getChildByName("holds");
var d = this.spring_bg_2.getChildByName("head");
this.show_icon_2 = d.getChildByName("icon").getComponent("ImageLoader");
this.show_name_2 = d.getChildByName("name").getComponent(cc.Label);
cc.find("Canvas/game_over/btnReady").active = !0;
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
this.adaptScreen();
}
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this.ddz_node.setScale(1 * i);
},
springMC_btn_close: function() {
this.springMC.active = !1;
},
springMC_btnSpring: function() {
cc.vv.anysdkMgr.shareResult(0);
},
onGameOver: function() {
for (var e = cc.vv.gameNetMgr.gameOverData, t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
for (var i = 0; i < this._springIconList.length; i++) this._springIconList[i].active = !1;
cc.find("Canvas/game_over/btnReady").active = !0;
for (var n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; ++a) {
var s = this._seats[a], c = e.end_seats_data[a];
if (c) {
this._seats_re[a].active = !0;
this.showPlayer(s, c, a, e.button);
}
}
},
showPlayer: function(e, t, i, n) {
e.fan && (e.fan.string = "");
e.holds && e.holds.removeAllChildren();
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle"), c = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/ddz/sounds/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/ddz/sounds/lose.mp3");
} else if (0 == t.end_score) {
this._pingju.active = !0;
c.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = r.name;
e.userid.string = "ID:" + t.user_id;
}
e.sprIcon.setUserID(t.user_id);
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
e.fan.string = t.boom_num;
e.reason.string = t.card_num;
this.ddz_node.active = !0;
this.ddz_fen.string = t.base_score + "分";
e.dizhuIcon.active = !1;
t.banker == i && (e.dizhuIcon.active = !0);
1 == t.spring ? t.banker == i && (this._springIconList[i].active = !0) : 2 == t.spring && t.banker != i && (this._springIconList[i + 3].active = !0);
if (cc.vv.userMgr.userId == t.user_id) {
this.springMC.active = !1;
if (1 == t.spring) {
if (t.banker == i) {
this.springMC.active = !0;
this._springIconList[i].active = !0;
this.updateSpring(t);
}
} else if (2 == t.spring && t.banker != i) {
this.springMC.active = !0;
this._springIconList[i + 3].active = !0;
this.updateSpring(t);
}
}
},
updateSpring: function(e) {
cc.find("Canvas/game_over/btnReady").active = !1;
this.spring_bg_1.active = !1;
this.spring_bg_2.active = !1;
var t = cc.vv.gameNetMgr.getSeatByID(e.user_id), i = null;
if (1 == e.spring) {
this.spring_bg_1.active = !0;
this.show_icon_1.setUserID(e.user_id);
this.show_name_1.string = t.name;
i = this.show_holds_1;
} else if (2 == e.spring) {
this.spring_bg_2.active = !0;
this.show_icon_2.setUserID(e.user_id);
this.show_name_2.string = t.name;
i = this.show_holds_2;
}
i.removeAllChildren();
var n = e.holds, a = e.folds;
a || (a = []);
for (var s = 0; s < a.length; s++) {
var c = a[s];
n = n.concat(c);
}
n = n.sort(function(e, t) {
return t - e;
});
for (var r = 0; r < n.length; r++) {
var o = n[r], h = null;
(h = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DDZ").pk_prefab)).parent = i;
var l = 30 * r;
h.setPosition(l, 0);
h.poker_id = o;
this.setSpriteFrameByMJID(h, o);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onBtnReadyClicked: function() {
console.log("onBtnReadyClicked");
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
onBtnBackOver: function() {
cc.vv.audioMgr.playBtnClick();
this.springMC.active = !1;
cc.find("Canvas/game_over/btnReady").active = !0;
},
update: function(e) {},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameOver_DNN: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9f7caQkZ65IoIGnRCuPqQRN", "GameOver_DNN");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
timeOver: {
type: cc.Label,
default: null
}
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._btnXiazhuang = this._gameover.getChildByName("btnXiazhuang");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
this._btnXiazhuang.active = !1;
this._btnXiazhuang && cc.vv.utils.addClickEvent(this._btnXiazhuang, this.node, "GameOver_DNN", "onBtnXiaZhuangClicked");
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_DNN", "onBtnReadyClicked");
this.selectResult = this._gameover.getChildByName("result58");
for (var t = this.selectResult.getChildByName("result_list"), i = 0; i < t.children.length; ++i) {
var n = t.children[i], a = {};
a.username = n.getChildByName("username").getComponent(cc.Label);
a.userid = n.getChildByName("userID").getComponent(cc.Label);
a.sprIcon = n.getChildByName("icon").getComponent("ImageLoader");
a.reason = n.getChildByName("reason").getComponent(cc.Label);
a.fan = n.getChildByName("fan").getComponent(cc.Label);
a.score = n.getChildByName("score").getComponent(cc.RichText);
a.isMySelf = n.getChildByName("isMySelf");
a.isMySelf.active = !1;
var s = n.getChildByName("fan1");
s && (a.fan1 = s.getComponent(cc.Label));
var c = n.getChildByName("holds");
c && (a.holds = c);
this._seats.push(a);
this._seats_re.push(n);
}
cc.find("Canvas").on("off_banker_game_over", this.cb_offBankerGameOver, this);
cc.find("Canvas").on("updateGameOverTime", this.onUpdateGameOverTime, this);
cc.find("Canvas").on("closeGameOver", this.onCloseGameOver, this);
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
cb_offBankerGameOver: function(e) {
this.offBankerGameOver();
},
onUpdateGameOverTime: function(e) {
cc.vv.gameNetMgr.isOver ? this.timeOver.string = "" : this.timeOver.string = e.detail;
},
onCloseGameOver: function() {
cc.vv.gameNetMgr.fresh_all_score();
cc.vv.UILoader.destroy(this.node);
},
offBankerGameOver: function() {},
onGameOver: function() {
cc.vv.gameNetMgr.clear_Seats();
this._btnXiazhuang.active = cc.vv.gameNetMgr.isOffBanker;
var e = cc.vv.gameNetMgr.gameOverData;
console.log(e);
for (var t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
this._gameover.active = !0;
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n, e.button);
}
}
var c = 8 == i.length ? 30 : 0;
this.selectResult.setPositionY(c);
},
showPlayer: function(e, t, i, n) {
e.fan.string = "";
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle"), c = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/dnn/sounds/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/dnn/sounds/lose.mp3");
} else if (0 == t.end_score) {
this._pingju.active = !0;
c.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = r.name;
e.userid.string = "ID:" + t.user_id;
}
e.sprIcon.setUserID(t.user_id);
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
var o = t.bet_coin;
0 == o && (o = "0");
e.reason.string = o;
n == i && (e.reason.string = "庄家");
var h = e.holds;
h.removeAllChildren();
for (var l = t.holds, d = 0; d < l.length; d++) {
var u = l[d], v = null;
(v = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DNN").gameOver_pk_prefab)).parent = h;
var g = 30 + 40 * d;
v.setPosition(g, 0);
v.poker_id = u;
this.setSpriteFrameByMJID(v, u);
}
e.fan.string = cc.vv.poker_util.dnnCardTypeSre(t.card_type.type, t.card_type.max_value);
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker_old").setValueAndColorByID(t, !0);
e.active = !0;
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
onBtnXiaZhuangClicked: function() {
cc.vv.audioMgr.playBtnClick();
var e = JSON.parse(cc.vv.msgTemp.CS_OffBanker);
e.off_index = cc.vv.gameNetMgr.seatIndex;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("off_banker", e);
this._btnXiazhuang.active = !1;
},
update: function(e) {},
onDestroy: function() {
if (cc.find("Canvas")) {
cc.find("Canvas").off("off_banker_game_over", this.cb_offBankerGameOver, this);
cc.find("Canvas").off("updateGameOverTime", this.onUpdateGameOverTime, this);
cc.find("Canvas").off("closeGameOver", this.onCloseGameOver, this);
}
}
});
cc._RF.pop();
}, {} ],
GameOver_DZPK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b4714k1vApPMrLeh9nQ1Trd", "GameOver_DZPK");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._time_num = this._gameover.getChildByName("time_num");
this._time_num.active = !1;
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_DZPK", "onBtnReadyClicked");
this.result58 = this._gameover.getChildByName("result58");
this.result58.active = !1;
var t = 1 == cc.vv.gameNetMgr.use58() ? this.result58 : result;
t.active = !0;
for (var i = t.getChildByName("result_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n], s = {};
s.username = a.getChildByName("username").getComponent(cc.Label);
s.userid = a.getChildByName("userID").getComponent(cc.Label);
s.sprIcon = a.getChildByName("icon").getComponent("ImageLoader");
s.reason = a.getChildByName("reason").getComponent(cc.Label);
s.fan = a.getChildByName("fan").getComponent(cc.Label);
s.score = a.getChildByName("score").getComponent(cc.RichText);
s.isMySelf = a.getChildByName("isMySelf");
s.isMySelf.active = !1;
var c = a.getChildByName("fan1");
c && (s.fan1 = c.getComponent(cc.Label));
var r = a.getChildByName("holds");
r && (s.holds = r);
this._seats.push(s);
this._seats_re.push(a);
}
this.node.on("game_result_showLB", this.showLb, this);
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this._gameover.active = !1;
this.call_game_over();
}
},
showLb: function() {
cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function() {
if (cc.vv.gameNetMgr.gameOverData.force) {
console.log("log-----------gameOver is force");
this.onGameOver();
} else cc.find("Canvas").runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
var e = cc.vv.gameNetMgr.getPickScoreCount();
cc.find("Canvas").runAction(cc.sequence(cc.delayTime(6 + 2 * e), cc.callFunc(function(e) {
this.onGameOver();
}.bind(this))));
}.bind(this))));
},
onGameOver: function() {
for (var e = cc.vv.gameNetMgr.gameOverData, t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n, e.button, e.force);
}
}
var c = 8 == i.length ? 30 : 0;
this.result58.setPositionY(c);
this._gameover.active = !0;
console.log("log-----------------onGameOver----------------");
},
showPlayer: function(e, t, i, n, a) {
e.fan && (e.fan.string = "");
e.fan1 && (e.fan1.string = "");
e.holds && e.holds.removeAllChildren();
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score && 0 == a) {
var s = cc.find("Canvas/game_over/lose/shule"), c = cc.find("Canvas/game_over/win/yingle"), r = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
var o = t.end_score - t.bet_coin;
if (0 < o) {
this._win.active = !0;
c.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/win.mp3");
} else if (o < 0) {
this._lose.active = !0;
s.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/lose.mp3");
} else if (0 == o) {
this._pingju.active = !0;
r.getComponent(cc.Animation).play("pingju");
}
}
var h = cc.vv.gameNetMgr.getSeatByID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = h.name;
e.userid.string = "ID:" + t.user_id;
}
e.sprIcon.setUserID(t.user_id);
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
var l = cc.vv.gameNetMgr.conf.server_type, d = t.bet_coin;
0 == d && (d = "0");
e.reason.string = d;
var u = e.holds;
u.removeAllChildren();
var v = "";
if (20005 == l) {
if (i == cc.vv.gameNetMgr.seatIndex && 1 == t.empty) {
this._time_num.active = !0;
this._time = 5;
}
0 == e.reason.string && 1 == t.empty && (e.reason.string = "空注");
v = 1 == t.give_up ? "弃牌" : cc.vv.poker_util.dzpkCardTypeSre(t.card_type.type);
for (var g = t.public_card ? t.public_card : [], _ = [], f = 0; f < h.holds.length; f++) {
var p = h.holds[f];
_.push(p);
}
for (var m = 0; m < g.length; m++) {
p = g[m];
_.push(p);
}
var C = cc.vv.poker_util.dzpk_checkCard(_).card_check;
t.give_up && (C = [ -1, -1, -1, -1, -1 ]);
if (1 == a) {
for (var y = 0; y < _.length; y++) {
p = _[y];
var b = null;
(b = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DZPK").gameOver_pk_prefab)).parent = u;
var M = 30 + 40 * y;
b.setPosition(M, 0);
b.poker_id = p;
this.setSpriteFrameByMJID(b, p);
}
e.fan.string = "";
return;
}
}
for (y = 0; y < C.length; y++) {
p = C[y], b = null;
(b = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DZPK").gameOver_pk_prefab)).parent = u;
M = 30 + 40 * y;
b.setPosition(M, 0);
b.poker_id = p;
this.setSpriteFrameByMJID(b, p);
}
e.fan.string = v;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker_old").setValueAndColorByID(t, !0);
e.active = !0;
},
onBtnReadyClicked: function() {
console.log("onBtnReadyClicked");
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
this.node.destroy();
}
},
onBtnShareClicked: function() {
console.log("onBtnShareClicked");
},
update: function(e) {
if (0 < this._time) {
this._time -= e;
if (0 < this._alertTime && this._time < this._alertTime) {
cc.vv.audioMgr.playSFX("timeup_alarm.mp3");
this._alertTime = -1;
}
this._time < 0 && (this._time = 0);
var t = Math.ceil(this._time);
t < 10 && "0";
if (t < 1) {
cc.vv.gameNetMgr.isOver && (this._gameresult.active = !0);
this.node.emit("fresh_all_score");
}
this._time_num.getComponent(cc.Label).string = "";
}
}
});
cc._RF.pop();
}, {} ],
GameOver_FLY: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6a84aYt5DxAmJQKK6K+x9Vg", "GameOver_FLY");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._gameover.active = !1;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._time_num = this._gameover.getChildByName("time_num");
this._time_num.active = !1;
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_FLY", "onBtnReadyClicked");
var t = this._gameover.getChildByName("btnShare");
cc.vv.utils.addClickEvent(t, this.node, "GameOver_FLY", "onBtnShareClicked");
var i = this._gameover.getChildByName("result");
i.active = !0;
for (var n = i.getChildByName("result_list"), a = 0; a < n.children.length; ++a) {
var s = n.children[a], c = {};
c.username = s.getChildByName("username").getComponent(cc.Label);
c.icon = s.getChildByName("icon").getComponent("ImageLoader");
c.finish = s.getChildByName("finish").getComponent(cc.Label);
c.hit = s.getChildByName("hit").getComponent(cc.Label);
c.score = s.getChildByName("score").getComponent(cc.Label);
c.isMySelf = s.getChildByName("benren");
c.isMySelf.active = !1;
this._seats.push(c);
this._seats_re.push(s);
}
}
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameOverData;
console.log(e);
for (var t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
this._gameover.active = !0;
var i = cc.vv.gameNetMgr.seats;
i.sort(function(e, t) {
return e.end_score - t.end_score;
});
for (var n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n);
}
}
},
showPlayer: function(e, t, i) {
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.gameNetMgr.getSelfData().userid == t.user_id && t.end_score) {
var n = cc.find("Canvas/game_over/lose/shule"), a = cc.find("Canvas/game_over/win/yingle"), s = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
a.getComponent(cc.Animation).play("win");
var c = this.getAudioURLByFLY(2);
cc.vv.audioMgr.playSFX(c);
} else if (t.end_score < 0) {
this._lose.active = !0;
n.getComponent(cc.Animation).play("lose");
} else if (0 == t.end_score) {
this._pingju.active = !0;
s.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
cc.vv.userMgr.isHighDefend ? e.username.string = "已屏蔽" : e.username.string = r.name;
e.icon.setUserID(t.user_id);
0 < t.end_score ? e.score.string = "+" + t.end_score : e.score.string = t.end_score;
e.finish.string = "X" + t.success_flight;
e.hit.string = "X" + t.kick_flight;
},
setDaoNode: function(e, t) {
for (var i = 20 * -Math.floor(t.length / 2), n = 0; n < t.length; n++) {
var a = t[n], s = null;
s = cc.instantiate(this.node.getComponent("MJGame").gameOver_pk_prefab);
var c = this.get_poker_display_value(a);
s.val = Math.floor(a / 4);
s.col = a % 4;
s.getComponent("MyPoker_old").setValueAndColor(c, s.col);
s.parent = e;
s.setPosition(i, 0);
s.scaleX = s.scaleY = .3;
i += 30;
}
},
getAudioURLByFLY: function(e) {
return "resources/game/fly/sounds/" + e + ".mp3";
},
setDaoType: function(e, t) {
1 < t.out.type ? e.string = this.getOutTypeName(t.out.type) : e.string = this.getDaoTypeName(t.stage[0].type) + " " + this.getDaoTypeName(t.stage[1].type) + " " + this.getDaoTypeName(t.stage[2].type);
},
get_poker_display_value: function(e) {
return e < 4 ? 15 : Math.floor(e / 4) + 2;
},
onBtnReadyClicked: function() {
console.log("onBtnReadyClicked");
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this._gameover.active = !1;
this.node.emit("fresh_all_score");
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.anysdkMgr.shareResult(0);
},
update: function(e) {
if (0 < this._time) {
this._time -= e;
if (0 < this._alertTime && this._time < this._alertTime) {
cc.vv.audioMgr.playSFX("timeup_alarm.mp3");
this._alertTime = -1;
}
var t = "";
this._time < 0 && (this._time = 0);
var i = Math.ceil(this._time);
i < 10 && (t = "0");
if (i < 1) {
this._time_num.active = !1;
this._gameover.active = !1;
}
this._time_num.getComponent(cc.Label).string = "倒计时自动关闭：" + t + i;
}
}
});
cc._RF.pop();
}, {} ],
GameOver_PAGUO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5275fHZJYBGS4sfouqBhiZR", "GameOver_PAGUO");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_win: null,
_lose: null
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lost");
this._liuju = this._gameover.getChildByName("liuju");
this._win.active = !1;
this._lose.active = !1;
this._liuju.active = !1;
this.btn_ready = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(this.btn_ready, this.node, "GameOver_PAGUO", "onBtnReadyClicked");
this.lbl_jiaofen = this._gameover.getChildByName("lbl_jiaofen").getChildByName("lb").getComponent(cc.Label);
this.lbl_df = this._gameover.getChildByName("lbl_df").getChildByName("lb").getComponent(cc.Label);
this.lbl_type = this._gameover.getChildByName("lbl_type").getComponent(cc.Label);
for (var e = this._gameover.getChildByName("seatList"), t = 0; t < e.children.length; ++t) {
var i = e.children[t], n = {};
n.username = i.getChildByName("lb_name").getComponent(cc.Label);
n.fan = i.getChildByName("lb_fen").getComponent(cc.Label);
var a = i.getChildByName("icon");
if (a) {
n.icon = a;
n.icon.active = !1;
}
this._seats.push(n);
}
cc.vv.gameNetMgr.isOver ? this.btn_ready.getChildByName("lb").getComponent(cc.Label).string = "总结算" : this.btn_ready.getChildByName("lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameDta_paguo.gameOverData, t = cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex;
this._win.active = !1;
this._lose.active = !1;
var i = this._liuju.active = !1;
1 != e.force && 1 != e.all_give_up_call || (i = !0);
if (0 == i) {
var n = cc.find("Canvas/game_over/lost/shule"), a = cc.find("Canvas/game_over/win/yingle");
if (1 == t) if (1 == e.winner) {
this._win.active = !0;
a.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/paguo/sounds/win.mp3");
} else {
n.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/paguo/sounds/lose.mp3");
} else if (2 == e.winner) {
this._win.active = !0;
a.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/paguo/sounds/win.mp3");
} else {
n.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/paguo/sounds/lose.mp3");
}
this._lose.active = !this._win.active;
this.lbl_type.string = [ "", "过庄大光", "过庄小光", "过庄", "下庄", "下庄小光", "下庄大光" ][e.win_lose_state];
} else {
this._liuju.active = !0;
this.lbl_type.string = "";
}
this.lbl_jiaofen.string = e.call_score;
this.lbl_df.string = e.game_score;
this._gameover.active = !0;
for (var s = 0, c = cc.vv.gameNetMgr.seats, r = 0; r < c.length; ++r) {
var o = e.end_seats_data[r], h = c[r];
if (o) {
var l = null;
if (r == cc.vv.gameNetMgr.button) (l = this._seats[3]).fan.string = o.end_score; else {
(l = this._seats[s]).fan.string = o.end_score;
l.icon.active = !1;
r == cc.vv.gameNetMgr.seatIndex && (l.icon.active = !0);
s++;
}
cc.vv.userMgr.isHighDefend ? l.username.string = "已屏蔽" : l.username.string = h.name;
}
}
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
update: function(e) {},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameOver_PDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "80347a2+uNNqrBDCSwwfAtZ", "GameOver_PDK");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_PDK", "onBtnReadyClicked");
var t = this._gameover.getChildByName("result");
t.active = !0;
for (var i = t.getChildByName("result_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n], s = {};
s.username = a.getChildByName("username").getComponent(cc.Label);
s.userid = a.getChildByName("userID").getComponent(cc.Label);
s.sprIcon = a.getChildByName("icon").getComponent("ImageLoader");
s.reason = a.getChildByName("reason").getComponent(cc.Label);
s.fan = a.getChildByName("fan").getComponent(cc.Label);
s.score = a.getChildByName("score").getComponent(cc.RichText);
s.isMySelf = a.getChildByName("isMySelf");
s.isMySelf.active = !1;
var c = a.getChildByName("ht10");
if (c) {
s.ht10 = c;
s.ht10.active = !1;
}
var r = a.getChildByName("qg");
if (r) {
s.qguang = r;
s.qguang.active = !1;
}
this._seats.push(s);
this._seats_re.push(a);
}
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
for (var e = cc.vv.gameNetMgr.gameOverData, t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n, e.button);
}
}
},
showPlayer: function(e, t, i, n) {
e.fan && (e.fan.string = "");
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle"), c = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/pdk/sounds/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/pdk/sounds/lose.mp3");
} else if (0 == t.end_score) {
this._pingju.active = !0;
c.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
e.sprIcon.setUserID(t.user_id);
e.fan.string = t.boom_num;
e.reason.string = t.card_num;
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = r.name;
e.userid.string = "ID:" + t.user_id;
}
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
e.ht10.active = !1;
i == cc.vv.gameNetMgr.pdk_red_ten && (e.ht10.active = !0);
var o = r.holds;
if (o) {
var h = cc.vv.gameNetMgr.getPDK_paiNum();
e.qguang.active = !1;
o.length || console.log("-------------log");
o.length == h && (e.qguang.active = !0);
}
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
console.log("onBtnReadyClicked");
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
console.log("onBtnShareClicked");
},
update: function(e) {},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameOver_PPL: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4d5a96bWe5PPJFd1IY1Er0F", "GameOver_PPL");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("liuju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lost");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_PPL", "onBtnReadyClicked");
this._lb_decs = this._gameover.getChildByName("lb_decs").getComponent(cc.Label);
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameOverData;
this._lb_decs.string = "";
for (var t = cc.vv.gameNetMgr.seats, i = -1, n = 0; n < t.length; ++n) {
var a = e.end_seats_data[n];
if (a) {
var s = a.end_score;
if (n == cc.vv.gameNetMgr.seatIndex) {
this._lb_decs.string = "得分：" + s;
0 < s ? i = 1 : 0 == s && (i = 0);
}
}
}
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
-1 == i ? this._lose.active = !0 : 0 == i ? this._pingju.active = !0 : this._win.active = !0;
this._gameover.active = !0;
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameOver_SDB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8d9fbk4l8FBGJvDUTtILtH7", "GameOver_SDB");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_SDB", "onBtnReadyClicked");
this.result58 = this._gameover.getChildByName("result58");
var t = this.result58;
t.active = !0;
for (var i = t.getChildByName("result_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n], s = {};
s.username = a.getChildByName("username").getComponent(cc.Label);
s.userid = a.getChildByName("userID").getComponent(cc.Label);
s.sprIcon = a.getChildByName("icon").getComponent("ImageLoader");
s.reason = a.getChildByName("reason").getComponent(cc.Label);
s.fan = a.getChildByName("fan").getComponent(cc.Label);
s.score = a.getChildByName("score").getComponent(cc.RichText);
s.isMySelf = a.getChildByName("isMySelf");
s.isMySelf.active = !1;
var c = a.getChildByName("fan1");
c && (s.fan1 = c.getComponent(cc.Label));
var r = a.getChildByName("holds");
r && (s.holds = r);
this._seats.push(s);
this._seats_re.push(a);
}
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
var e = cc.vv.gameNetMgr.gameOverData;
console.log(e);
for (var t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
this._gameover.active = !0;
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n, e.button);
}
}
var c = 8 == i.length ? 30 : 0;
this.result58.setPositionY(c);
},
showPlayer: function(e, t, i, n) {
e.fan && (e.fan.string = "");
e.fan1 && (e.fan1.string = "");
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle"), c = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/10DB/sounds/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/10DB/sounds/lose.mp3");
} else if (0 == t.end_score) {
this._pingju.active = !0;
c.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
e.sprIcon.setUserID(t.user_id);
} else {
e.username.string = r.name;
e.userid.string = "ID:" + t.user_id;
e.sprIcon.setUserID(t.user_id);
}
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
var o = cc.vv.poker_util.d10_CardTypeSre(t.card_type.type, t.holds), h = t.bet_coin;
0 == h && (h = "0");
e.reason.string = h;
n == i && (e.reason.string = "庄家");
var l = e.holds;
l.removeAllChildren();
for (var d = t.holds, u = 0; u < d.length; u++) {
var v = d[u], g = null;
(g = cc.instantiate(cc.find("Canvas").getComponent("MJGame_SDB").gameOver_pk_prefab)).parent = l;
var _ = 30 + 40 * u;
g.setPosition(_, 0);
g.poker_id = v;
this.setSpriteFrameByMJID(g, v);
}
e.fan.string = o;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker_old").setValueAndColorByID(t, !0);
e.active = !0;
},
onBtnReadyClicked: function() {
console.log("onBtnReadyClicked");
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
update: function(e) {},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameOver_zjh: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "62fb01ypjNIrKPHeM1WVfTb", "GameOver_zjh");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this._gameover = this.node;
this._pingju = this._gameover.getChildByName("pingju");
this._win = this._gameover.getChildByName("win");
this._lose = this._gameover.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
var e = this._gameover.getChildByName("btnReady");
cc.vv.utils.addClickEvent(e, this.node, "GameOver_zjh", "onBtnReadyClicked");
this.result58 = this._gameover.getChildByName("result58");
var t = this.result58;
t.active = !0;
for (var i = t.getChildByName("result_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n], s = {};
s.username = a.getChildByName("username").getComponent(cc.Label);
s.userid = a.getChildByName("userID").getComponent(cc.Label);
s.sprIcon = a.getChildByName("icon").getComponent("ImageLoader");
s.reason = a.getChildByName("reason").getComponent(cc.Label);
s.fan = a.getChildByName("fan").getComponent(cc.Label);
s.score = a.getChildByName("score").getComponent(cc.RichText);
s.isMySelf = a.getChildByName("isMySelf");
s.isMySelf.active = !1;
var c = a.getChildByName("fan1");
c && (s.fan1 = c.getComponent(cc.Label));
var r = a.getChildByName("holds");
r && (s.holds = r);
this._seats.push(s);
this._seats_re.push(a);
}
cc.vv.gameNetMgr.isOver ? cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "总结算" : cc.find("Canvas/game_over/btnReady/lb").getComponent(cc.Label).string = "继续";
this.onGameOver();
}
},
onGameOver: function() {
for (var e = cc.vv.gameNetMgr.gameOverData, t = 0; t < this._seats_re.length; t++) this._seats_re[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = this._seats[n], s = e.end_seats_data[n];
if (s) {
this._seats_re[n].active = !0;
this.showPlayer(a, s, n, e.button);
}
}
},
showPlayer: function(e, t, i, n) {
e.fan && (e.fan.string = "");
e.fan1 && (e.fan1.string = "");
e.holds && e.holds.removeAllChildren();
cc.vv.userMgr.userId == t.user_id ? e.isMySelf.active = !0 : e.isMySelf.active = !1;
if (cc.vv.userMgr.userId == t.user_id && null != t.end_score) {
var a = cc.find("Canvas/game_over/lose/shule"), s = cc.find("Canvas/game_over/win/yingle"), c = cc.find("Canvas/game_over/pingju/ping");
this._win.active = !1;
this._lose.active = !1;
this._pingju.active = !1;
if (0 < t.end_score) {
this._win.active = !0;
s.getComponent(cc.Animation).play("win");
cc.vv.audioMgr.playSFX("resources/game/public/sounds/win.mp3");
} else if (t.end_score < 0) {
this._lose.active = !0;
a.getComponent(cc.Animation).play("lose");
cc.vv.audioMgr.playSFX("resources/game/public/sounds/lose.mp3");
} else if (0 == t.end_score) {
this._pingju.active = !0;
c.getComponent(cc.Animation).play("pingju");
}
}
var r = cc.vv.gameNetMgr.getSeatByID(t.user_id);
if (cc.vv.userMgr.isHighDefend) {
e.username.string = "已屏蔽";
e.userid.string = "已屏蔽";
} else {
e.username.string = r.name;
e.userid.string = "ID:" + t.user_id;
}
e.sprIcon.setUserID(t.user_id);
0 < t.end_score ? e.score.string = "<color=#D6D81A>" + t.end_score + "</c>" : e.score.string = "<color=#1EE0E3>" + t.end_score + "</c>";
var o = t.bet_coin;
0 == o && (o = "0");
e.reason.string = o;
var h = e.holds, l = "";
l = 1 == t.give_up ? "弃牌" : cc.vv.poker_util.zjhCardTypeSre(t.card_type.type);
for (var d = t.holds, u = 0; u < d.length; u++) {
var v = d[u], g = null;
(g = cc.instantiate(cc.find("Canvas").getComponent("MJGame_ZJH").gameOver_pk_prefab)).parent = h;
var _ = 30 + 40 * u;
g.setPosition(_, 0);
g.poker_id = v;
this.setSpriteFrameByMJID(g, v);
}
e.fan.string = l;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker_old").setValueAndColorByID(t, !0);
e.active = !0;
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) cc.vv.gameNetMgr.onShowGameResult(); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
cc.vv.UILoader.destroy(this.node);
}
},
update: function(e) {},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameResult_13S: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "026ccuyfm5AdZrp0tdeAtqn", "GameResult_13S");
cc.Class({
extends: cc.Component,
properties: {
_seatsList: [],
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_13S", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_13S", "onBtnShareClicked");
}
},
onGameEnd: function() {
for (var e = cc.vv.gameNetMgr.gameResultData, t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.sss_type_count) {
v["type_" + g] = t.sss_type_count[g];
}
r = [ "特殊牌型", "同花顺", "炸弹", "葫芦", "三条", "同花", "顺子", "二对" ];
o = [ t.banker_count, v.type_0 ? v.type_0 : 0, v.type_9 ? v.type_9 : 0, v.type_8 ? v.type_8 : 0, v.type_7 ? v.type_7 : 0, v.type_6 ? v.type_6 : 0, v.type_5 ? v.type_5 : 0, v.type_4 ? v.type_4 : 0, v.type_3 ? v.type_3 : 0 ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
}
});
cc._RF.pop();
}, {} ],
GameResult_21D: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "616116Txp5EQ42Qr+MRF0Y+", "GameResult_21D");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_21D", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_21D", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function() {
var e = cc.vv.gameNetMgr.gameResultData;
e && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
console.log("结算成绩：", t);
cc.vv.userMgr.isHighDefend = 0;
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.point21_type_count) {
v["type_" + g] = t.point21_type_count[g];
}
r = [ "", "爆", "<21点", "21点", "五龙", "黑杰克", "", "" ];
o = [ "", null == v.type_1 ? 0 : v.type_1, null == v.type_2 ? 0 : v.type_2, null == v.type_3 ? 0 : v.type_3, null == v.type_4 ? 0 : v.type_4, null == v.type_5 ? 0 : v.type_5, null == v.type_6 ? "" : v.type_6, null == v.type_7 ? "" : v.type_7 ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("game_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
GameResult_3DH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3be5aW5mERF5a1WZHUyelXl", "GameResult_3DH");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatsList: [],
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
this._result_clubID = this._gameresult.getChildByName("clubID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_3DH", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_3DH", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function(e) {
(e = cc.vv.gameNetMgr.gameResultData) && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
e.getChildByName("paoshou").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
cc.vv.gameNetMgr.unions_id ? this._result_clubID.string = "(俱乐部" + cc.vv.gameNetMgr.unions_id + ")" : this._result_clubID.node.active = !1;
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "", "最高得分", "", "失败局数", "", "胜利局数", "", "流局局数" ];
var _ = t.draw_counts ? t.draw_counts : 0;
o = [ "", t.max_score, "", t.lose_counts, "", t.win_counts, "", _ ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("game_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
GameResult_3G: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "46a8eV+sx1AFqC+5AjDIzXK", "GameResult_3G");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_3G", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_3G", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function(e) {
(e = cc.vv.gameNetMgr.gameResultData) && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "", "庄", "散点", "至尊九", "三条", "三公", "", "" ];
o = [ "", t.banker_count, null == v.type_1 ? 0 : v.type_1, null == v.type_5 ? 0 : v.type_5, Number(null == v.type_3 ? 0 : v.type_3) + Number(null == v.type_4 ? 0 : v.type_4), null == v.type_2 ? 0 : v.type_2, "", "" ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameResult_DCZB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d62f30YBE5FS7JKug/uWIci", "GameResult_DCZB");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._gameresult.active = !1;
this._result_name = this._gameresult.getChildByName("title_node").getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("title_node").getChildByName("roomID").getComponent(cc.Label);
this._result_clubID = this._gameresult.getChildByName("title_node").getChildByName("clubID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/dc_game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_DCZB", "onBtnCloseClicked");
var n = cc.find("Canvas/dc_game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_DCZB", "onBtnShareClicked");
cc.vv.Event.on("mj_result", this.call_game_result, this);
}
},
call_game_result: function(e) {
var t = e.detail.off_banker;
t && 1 == t && (this._gameresult.active = !0);
this.onGameEnd(e.detail);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0, s = 0; s < e.over_seats_data.length; ++s) {
var c = e.over_seats_data[s].total_score;
n < c && (n = c);
var r = e.over_seats_data[s].pao_counts;
a < r && (a = r);
}
var o = 4 < i.length ? 4 : 0;
for (s = 0; s < i.length; ++s) {
var h = i[s];
this._seatNodeList[o].active = !0;
if (e.over_seats_data[s]) {
var l = !(e.over_seats_data[s].total_score != n || !n);
this.showResult(this._seatNodeList[o], e.over_seats_data[s], h.userid, l, a);
}
o++;
}
},
showResult: function(e, t, i, n, a) {
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var s = e.getChildByName("fangzhu"), c = cc.vv.gameNetMgr.getSeatIndexByID(i);
s.active = 0 == c;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
0 != a && a == t.pao_counts ? e.getChildByName("paoshou").active = !0 : e.getChildByName("paoshou").active = !1;
var r = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = r.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
this._result_name.string = "都昌栽宝";
cc.vv.gameNetMgr.unions_id ? this._result_clubID.string = "(俱乐部" + cc.vv.gameNetMgr.unions_id + ")" : this._result_clubID.node.active = !1;
this._result_roomID.string = cc.vv.gameNetMgr.roomId;
for (var o, h, l = e.getChildByName("labels"), d = e.getChildByName("values"), u = 0; u < 8; u++) {
var v = "lb" + (u + 1);
l.getChildByName(v).getComponent(cc.Label).string = "";
d.getChildByName(v).getComponent(cc.Label).string = "";
}
var g = [];
for (var _ in t.goldflower_type_count) {
g["type_" + _] = t.goldflower_type_count[_];
}
o = [ "", "最高得分", "", "失败局数", "", "胜利局数", "", "流局局数" ];
var f = t.draw_counts ? t.draw_counts : 0;
h = [ "", t.max_score, "", t.lose_counts, "", t.win_counts, "", f ];
for (u = 0; u < 8; u++) {
v = "lb" + (u + 1);
l.getChildByName(v).getComponent(cc.Label).string = o[u];
d.getChildByName(v).getComponent(cc.Label).string = h[u];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
cc.vv.Event.off("mj_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
GameResult_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a48c6wl7V9AIbqEVj2HYKQX", "GameResult_DDZ");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatsList: [],
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
this._result_clubID = this._gameresult.getChildByName("clubID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_DDZ", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_DDZ", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function(e) {
(e = cc.vv.gameNetMgr.gameResultData) && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
cc.vv.gameNetMgr.unions_id ? this._result_clubID.string = "(俱乐部" + cc.vv.gameNetMgr.unions_id + ")" : this._result_clubID.node.active = !1;
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "", "最高得分", "", "失败局数", "", "胜利局数", "", "打出炸弹" ];
o = [ "", t.max_score, "", t.lose_counts, "", t.win_counts, "", t.boom_counts ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameResult_DNN: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d33a9rP/hOS57JoT5tE1Kn", "GameResult_DNN");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_DNN", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_DNN", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function(e) {
(e = cc.vv.gameNetMgr.gameResultData) && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.ox_type_count) {
v["type_" + g] = t.ox_type_count[g];
}
r = [ "", "庄", "无牛", "有牛", "牛牛", "金花牛", "炸弹牛", "五小牛" ];
o = [ "", t.banker_count, null == v.type_1 ? 0 : v.type_1, null == v.type_2 ? 0 : v.type_2, null == v.type_3 ? 0 : v.type_3, null == v.type_4 ? 0 : v.type_4, null == v.type_5 ? 0 : v.type_5, null == v.type_6 ? 0 : v.type_6 ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameResult_DZPK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "81437cAJr5L/q8Jupydd9RR", "GameResult_DZPK");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_DZPK", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_DZPK", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function() {
var e = cc.vv.gameNetMgr.gameResultData;
e && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
console.log("log----------onGameEnd=:");
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "输", "赢", "顺子", "同花", "葫芦", "4个", "同花顺", "皇家同花顺" ];
o = [ t.lose_counts, t.win_counts, null == v.type_5 ? 0 : v.type_5, null == v.type_6 ? 0 : v.type_6, null == v.type_7 ? 0 : v.type_7, null == v.type_8 ? 0 : v.type_8, null == v.type_9 ? 0 : v.type_9, null == v.type_10 ? 0 : v.type_10 ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("game_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
GameResult_FLY: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a0f9dVztalL7I7jSPUux0om", "GameResult_FLY");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seats: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seats.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_FLY", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_FLY", "onBtnShareClicked");
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "", "打掉飞机", "", "收回飞机", "", "胜利局数", "", "失败局数" ];
o = [ "", t.kick_flight, "", t.success_flight, "", t.win_count, "", t.lose_count ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onGameEnd: function() {
for (var e = cc.vv.gameNetMgr.gameResultData, t = 0; t < this._seats.length; t++) this._seats[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
var c = 2 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seats[a].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seats[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.anysdkMgr.shareResult(0);
}
});
cc._RF.pop();
}, {} ],
GameResult_PAGUO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cbdb2b9ehVBx6/n59n2hjJP", "GameResult_PAGUO");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatsList: [],
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
this._result_clubID = this._gameresult.getChildByName("clubID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_PAGUO", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_PAGUO", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function(e) {
(e = cc.vv.gameNetMgr.gameResultData) && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
e.getChildByName("paoshou").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
cc.vv.gameNetMgr.unions_id ? this._result_clubID.string = "(俱乐部" + cc.vv.gameNetMgr.unions_id + ")" : this._result_clubID.node.active = !1;
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "", "最高得分", "", "失败局数", "", "胜利局数", "", "流局局数" ];
var _ = t.draw_counts ? t.draw_counts : 0;
o = [ "", t.max_score, "", t.lose_counts, "", t.win_counts, "", _ ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("game_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
GameResult_PDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "81e08PosiRGGr0YLRjUZyQJ", "GameResult_PDK");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatsList: [],
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
this._result_clubID = this._gameresult.getChildByName("clubID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_PDK", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_PDK", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function() {
var e = cc.vv.gameNetMgr.gameResultData;
e && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
cc.vv.gameNetMgr.unions_id ? this._result_clubID.string = "(俱乐部" + cc.vv.gameNetMgr.unions_id + ")" : this._result_clubID.node.active = !1;
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("paoshou").active = !1;
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "", "最高得分", "", "失败局数", "", "胜利局数", "", "打出炸弹" ];
o = [ "", t.max_score, "", t.lose_counts, "", t.win_counts, "", t.boom_counts ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("game_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
GameResult_PPL: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bc20cfUbpxKt7+TkofC652B", "GameResult_PPL");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatsList: [],
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_PPL", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_PPL", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function(e) {
(e = cc.vv.gameNetMgr.gameResultData) && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0, s = 0; s < e.over_seats_data.length; ++s) {
var c = e.over_seats_data[s].total_score;
n < c && (n = c);
var r = e.over_seats_data[s].pao_counts;
a < r && (a = r);
}
var o = 4 < i.length ? 4 : 0;
for (s = 0; s < i.length; ++s) {
var h = i[s];
this._seatNodeList[o].active = !0;
if (e.over_seats_data[s]) {
var l = !(e.over_seats_data[s].total_score != n || !n);
this.showResult(this._seatNodeList[o], e.over_seats_data[s], h.userid, l, a);
}
o++;
}
},
showResult: function(e, t, i, n, a) {
cc.vv.userMgr.isHighDefend = 0;
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var s = e.getChildByName("fangzhu"), c = cc.vv.gameNetMgr.getSeatIndexByID(i);
s.active = 0 == c;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
e.getChildByName("paoshou").active = !1;
var r = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = r.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
this._result_name.string = "拼拼乐";
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
for (var o, h, l = e.getChildByName("labels"), d = e.getChildByName("values"), u = 0; u < 8; u++) {
var v = "lb" + (u + 1);
l.getChildByName(v).getComponent(cc.Label).string = "";
d.getChildByName(v).getComponent(cc.Label).string = "";
}
var g = [];
for (var _ in t.goldflower_type_count) {
g["type_" + _] = t.goldflower_type_count[_];
}
o = [ "", "最高得分", "", "失败局数", "", "胜利局数", "", "流局局数" ];
var f = t.draw_counts ? t.draw_counts : 0;
h = [ "", t.max_score, "", t.lose_counts, "", t.win_counts, "", f ];
for (u = 0; u < 8; u++) {
v = "lb" + (u + 1);
l.getChildByName(v).getComponent(cc.Label).string = o[u];
d.getChildByName(v).getComponent(cc.Label).string = h[u];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("game_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
GameResult_SDB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4da57M26PVDr55AQqmD19yT", "GameResult_SDB");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_SDB", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_SDB", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function() {
var e = cc.vv.gameNetMgr.gameResultData;
e && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
cc.vv.userMgr.isHighDefend = 0;
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.point105_type_count) {
v["type_" + g] = t.point105_type_count[g];
}
r = [ "", "爆", "<十点半", "十点半", "五小", "人五小", "天王", "" ];
o = [ "", null == v.type_1 ? 0 : v.type_1, null == v.type_2 ? 0 : v.type_2, null == v.type_3 ? 0 : v.type_3, null == v.type_4 ? 0 : v.type_4, null == v.type_5 ? 0 : v.type_5, null == v.type_6 ? 0 : v.type_6, "", "" ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameResult_ZJH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5c7d1/txGVMN4cwExKtqBBT", "GameResult_ZJH");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
var i = cc.find("Canvas/game_result/btnClose");
i && cc.vv.utils.addClickEvent(i, this.node, "GameResult_ZJH", "onBtnCloseClicked");
var n = cc.find("Canvas/game_result/btnShare");
n && cc.vv.utils.addClickEvent(n, this.node, "GameResult_ZJH", "onBtnShareClicked");
this.call_game_result();
}
},
call_game_result: function(e) {
(e = cc.vv.gameNetMgr.gameResultData) && this.onGameEnd(e);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0; a < e.over_seats_data.length; ++a) {
var s = e.over_seats_data[a].total_score;
n < s && (n = s);
}
var c = 4 < i.length ? 4 : 0;
for (a = 0; a < i.length; ++a) {
var r = i[a];
this._seatNodeList[c].active = !0;
if (e.over_seats_data[a]) {
var o = !(e.over_seats_data[a].total_score != n || !n);
this.showResult(this._seatNodeList[c], e.over_seats_data[a], r.userid, o);
}
c++;
}
},
showResult: function(e, t, i, n) {
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
this._result_roomID.string = cc.vv.gameNetMgr.gameResultData.roomId;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
for (var r, o, h = e.getChildByName("labels"), l = e.getChildByName("values"), d = 0; d < 8; d++) {
var u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = "";
l.getChildByName(u).getComponent(cc.Label).string = "";
}
var v = [];
for (var g in t.goldflower_type_count) {
v["type_" + g] = t.goldflower_type_count[g];
}
r = [ "输", "赢", "散牌", "对子", "连子", "金花", "金花顺", "三个头" ];
o = [ t.lose_counts, t.win_counts, null == v.type_1 ? 0 : v.type_1, null == v.type_2 ? 0 : v.type_2, null == v.type_3 ? 0 : v.type_3, null == v.type_4 ? 0 : v.type_4, null == v.type_5 ? 0 : v.type_5, null == v.type_6 ? 0 : v.type_6 ];
for (d = 0; d < 8; d++) {
u = "lb" + (d + 1);
h.getChildByName(u).getComponent(cc.Label).string = r[d];
l.getChildByName(u).getComponent(cc.Label).string = o[d];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
GameType: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c40b8JplDJJYpsaNdeTTfny", "GameType");
var n = {
MAJIANG_TYPE: 1e4,
SERVER_TYPE_MJ_SC: 10001,
SERVER_TYPE_MJ_YQ: 10002,
SERVER_TYPE_MJ_HN: 10003,
SERVER_TYPE_MJ_WZ: 10004,
SERVER_TYPE_MJ_FZ: 10005,
SERVER_TYPE_MJ_ZZ: 10006,
SERVER_TYPE_MJ_HZ: 10007,
SERVER_TYPE_MJ_DC: 10008,
SERVER_TYPE_MJ_GL: 10009,
POKER_TYPE: 2e4,
SERVER_TYPE_PK_RUN: 20001,
SERVER_TYPE_PK_LANDLORD: 20002,
SERVER_TYPE_PK_OX: 20003,
SERVER_TYPE_PK_JINH: 20004,
SERVER_TYPE_PK_DEZ: 20005,
SERVER_TYPE_PK_PHZ: 20006,
SERVER_TYPE_PK_21: 20007,
SERVER_TYPE_PK_3G: 20008,
SERVER_TYPE_PK_SHISANSHUI: 20009,
SERVER_TYPE_PK_SANDAHA: 20010,
SERVER_TYPE_PK_10POINT: 20011,
SERVER_TYPE_PK_PAGUO: 20012,
SERVER_TYPE_PK_PINGOINGLE: 20013,
SERVER_TYPE_FLY: 3e4,
SERVER_TYPE_SSP: 30001,
SERVER_TYPE_GLZP: 30002,
SERVER_TYPE_PHZ: 30003,
SERVER_TYPE_HYLH: 30004,
SERVER_TYPE_HGW: 30005,
SERVER_TYPE_FPF: 30006,
SERVER_TYPE_WHZ: 30007,
SERVER_TYPE_QMT: 30008
};
i.GAME_TYPE = n;
i.getGameTypeStr = function(e) {
var t = "";
e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN ? t = "跑得快" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD ? t = "斗地主" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? t = "斗牛牛" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH ? t = "诈金花" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ ? t = "德州扑克" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ ? t = "跑胡子" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 ? t = "21点" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G ? t = "三公" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI ? t = "十三水" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA ? t = "三打哈" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT ? t = "10点半" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ ? t = "乐清麻将武汉花" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ ? t = "福州麻将" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ ? t = "温州麻将" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY ? t = "飞行棋" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_SSP ? t = "四色牌" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP ? t = "桂林字牌" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ ? t = "长沙跑胡子" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH ? t = "衡阳六胡抢" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW ? t = "怀化红拐弯" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF ? t = "娄底放炮罚" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ ? t = "岳阳歪胡子" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT ? t = "常德全明堂" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HN ? t = "长沙麻将" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_ZZ ? t = "转转麻将" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HZ ? t = "红中麻将" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PAGUO ? t = "扒锅" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC ? t = "都昌栽宝" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_GL ? t = "桂柳麻将" : e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PINGOINGLE && (t = "拼拼乐");
return t;
}, i.getWaFaDecs = function(e, t, i) {
if (t < 0 || i < 0) return "";
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN) return cc.vv.gameType.getWaFaDecs_pdk(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD) return cc.vv.gameType.getWaFaDecs_ddz(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX) return cc.vv.gameType.getWaFaDecs_dnn(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) return cc.vv.gameType.getWaFaDecs_zjh(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ) return cc.vv.gameType.getWaFaDecs_dzpk(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ) ; else {
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT) return cc.vv.gameType.getWaFaDecs_21d(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G) return cc.vv.gameType.getWaFaDecs_3g(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI) return cc.vv.gameType.getWaFaDecs_13s(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA) return cc.vv.gameType.getWaFaDecs_3dh(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ) return cc.vv.gameType.getWaFaDecs_yqmj(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ) return cc.vv.gameType.getWaFaDecs_fzmj(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ) return cc.vv.gameType.getWaFaDecs_wzmj(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY) return cc.vv.gameType.getWaFaDecs_fly(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_SSP) return cc.vv.gameType.getWaFaDecs_ssp(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP) return cc.vv.gameType.getWaFaDecs_glzp(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ) return cc.vv.gameType.getWaFaDecs_phz(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH) return cc.vv.gameType.getWaFaDecs_hylh(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW) return cc.vv.gameType.getWaFaDecs_hgw(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF) return cc.vv.gameType.getWaFaDecs_fpf(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ) return cc.vv.gameType.getWaFaDecs_whz(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT) return cc.vv.gameType.getWaFaDecs_qmt(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HN) return cc.vv.gameType.getWaFaDecs_hnmj(e, t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_ZZ) return cc.vv.gameType.getWaFaDecs_hnmj(e, t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HZ) return cc.vv.gameType.getWaFaDecs_hnmj(e, t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PAGUO) return cc.vv.gameType.getWaFaDecs_paguo(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC) return cc.vv.gameType.getWaFaDecs_dczb(t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_GL) return cc.vv.gameType.getWaFaDecs_hnmj(e, t, i);
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PINGOINGLE) return cc.vv.gameType.getWaFaDecs_ppl(e, t, i);
}
}, i.getMaxPlayer = function(e, t, i) {
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN) return 8 & i ? 3 : 2;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD) return 3;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX) return 8 & i ? 5 : 8;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH) return 8 & i ? 5 : 8;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ) return 8 & i ? 5 : 8;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ) ; else {
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT) return 8 & i ? 5 : 8;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G) return 8 & i ? 5 : 8;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH) return 4;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA) return 4;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_YQ) ; else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ) {
if (8 & i) return 4;
if (16 & i) return 3;
if (32 & i) return 2;
} else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ) {
if (8 & i) return 4;
if (16 & i) return 3;
if (32 & i) return 4;
} else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FLY) {
if (4 & i) return 2;
if (16 & i) return 4;
} else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_SSP) {
if (8 & i) return 4;
if (16 & i) return 3;
if (32 & i) return 2;
} else {
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT || e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ) return 3;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HN) {
if (8 & i) return 4;
if (16 & i) return 3;
} else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_ZZ) {
if (8 & i) return 4;
if (16 & i) return 3;
if (32 & i) return 2;
} else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HZ) {
if (8 & i) return 4;
if (16 & i) return 3;
} else {
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PAGUO) return 4;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC) return 4;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PINGOINGLE) return 2;
}
}
}
return 0;
}, i.getWaFaDecs_glzp = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("8局");
4 & t && i.push("16局");
8 & t && i.push("10胡起胡");
16 & t && i.push("15胡起胡");
32 & t && i.push("5胡1子");
64 & t && i.push("3胡1子");
128 & t && i.push("自摸翻倍");
256 & t && i.push("自摸翻倍");
512 & t && i.push("可点炮");
1024 & t && i.push("不可点炮");
2048 & t && i.push("翻重醒");
4096 & t && i.push("不翻重醒");
8192 & t && i.push("上醒");
16384 & t && i.push("中醒");
32768 & t && i.push("下醒");
return i.join(" ");
};
i.getWaFaDecs_phz = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("8局");
4 & t && i.push("16局");
8 & t && i.push("5番");
16 & t && i.push("不限番");
32 & t ? i.push("托管") : i.push("不托管");
return i.join(" ");
};
i.getWaFaDecs_hylh = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("8局");
4 & t && i.push("16局");
8 & t && i.push("番醒");
16 & t && i.push("随醒");
32 & t && i.push("不带醒");
64 & t && i.push("默认胡息");
128 & t && i.push("2+1");
256 & t && i.push("蚂蚁上树");
512 & t && i.push("红黑摸");
1024 & t && i.push("一五十");
2048 & t && i.push("放炮");
4096 & t && i.push("强制胡牌");
8192 & t && i.push("自摸翻倍");
return i.join(" ");
};
i.getWaFaDecs_hgw = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("8局");
4 & t && i.push("16局");
return i.join(" ");
};
i.getWaFaDecs_fpf = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("8局");
4 & t && i.push("16局");
return i.join(" ");
};
i.getWaFaDecs_whz = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("8局");
4 & t && i.push("16局");
8 & t ? i.push("托管") : i.push("不托管");
return i.join(" ");
};
i.getWaFaDecs_qmt = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("8局");
4 & t && i.push("16局");
if (8 & t) if (64 & t) {
i.push("6-8番");
256 & t && i.push("天胡:6");
512 & t && i.push("地胡:6");
1024 & t && i.push("点胡:4");
2048 & t && i.push("红胡:2+n");
4096 & t && i.push("乌胡:6");
8192 & t && i.push("对对胡:6");
16384 & t && i.push("大字胡:6");
32768 & t && i.push("小字胡:8");
65536 & t && i.push("海底胡:6");
1 << 17 & t && i.push("听胡:6");
1 << 21 & t && i.push("项项息:3");
1 << 22 & t && i.push("印:2+n");
} else if (128 & t) {
i.push("8-10番");
256 & t && i.push("天胡:6");
512 & t && i.push("地胡:6");
1024 & t && i.push("点胡:6");
2048 & t && i.push("红胡:3+n");
4096 & t && i.push("乌胡:8");
8192 & t && i.push("对对胡:8");
16384 & t && i.push("大字胡:8+n");
32768 & t && i.push("小字胡:10+n");
65536 & t && i.push("海底胡:6");
1 << 17 & t && i.push("听胡:6");
1 << 23 & t && i.push("耍猴:8");
1 << 24 & t && i.push("黄番:总番数*2");
1 << 25 & t && i.push("大团圆:8");
1 << 26 & t && i.push("七行息:8");
1 << 27 & t && i.push("假行行:4");
1 << 28 & t && i.push("四七红:3");
1 << 29 & t && i.push("背靠背:8");
}
if (16 & t) {
2048 & t && i.push("红胡:2");
1024 & t && i.push("点胡:3");
1 << 18 & t && i.push("红乌:4");
4096 & t && i.push("乌胡:5");
}
32 & t ? i.push("托管") : i.push("不托管");
return i.join(" ");
};
i.getWaFaDecs_ssp = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
8 & t && i.push("4人");
16 & t && i.push("3人");
32 & t && i.push("2人");
64 & t && i.push("留6张");
1024 & t && i.push("大倍玩法");
128 & t && i.push("放胡单赔");
256 & t && i.push("放胡双倍单赔");
512 & t && i.push("放胡全赔");
return i.join(" ");
};
i.getWaFaDecs_fly = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
1 << 19 & t && i.push("房主开房");
1 << 20 & t && i.push("AA开房");
32 & t && i.push("1局");
64 & t && i.push("3局");
128 & t && i.push("5局");
4 & t && i.push("2人");
8 & t && i.push("3人");
16 & t && i.push("4人");
i.push("6点起飞");
return i.join(" ");
};
i.getWaFaDecs_yqmj = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
8 & t && i.push("4人");
16 & t && i.push("3人(3台起胡)");
32 & t && i.push("2人(15台起胡)");
64 & t && i.push("大花");
128 & t && i.push("小花");
256 & t && i.push("平方花");
512 & t && i.push("虫草花");
1024 & t && i.push("15台起翻");
2048 & t && i.push("25台起翻");
return i.join(" ");
};
i.getWaFaDecs_3dh = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("6局");
4 & t && i.push("12局");
8 & t && i.push("逼庄");
16 & t && i.push("不逼庄");
32 & t && i.push("托管");
return i.join(" ");
};
i.getWaFaDecs_13s = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典13水");
4 & e && i.push("乐清13水");
2 & t && i.push("10局");
4 & t && i.push("20局");
i.push("2~4人");
if (2 & e) {
64 & t && i.push("抢庄13水");
128 & t && i.push("普通13水");
} else {
512 & t && i.push("2翻");
1024 & t && i.push("3翻");
}
i.push("特殊牌型");
return i.join(" ");
};
i.getWaFaDecs_3g = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
8 & t && i.push("最多5人");
16 & t && i.push("最多8人");
32 & t && i.push("不限制人数");
64 & t && i.push("抢庄");
128 & t && i.push("轮庄");
256 & t && i.push("三公坐庄");
512 & t && i.push("牌大做庄");
1024 & t && i.push("霸王庄");
4096 & t && i.push("开牌特效");
8192 & t && i.push("先开2张牌");
2048 & t && i.push("（开始后允许新玩家加入）");
return i.join(" ");
};
i.getWaFaDecs_21d = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
8 & t && i.push("最多5人");
16 & t && i.push("最多8人");
32 & t && i.push("不限制人数");
64 & t && i.push("抢庄");
128 & t && i.push("轮庄");
1024 & t && i.push("霸王庄");
32768 & t && i.push("限注100");
65536 & t && i.push("限注300");
1 << 17 & t && i.push("限注500");
4096 & t && i.push("开牌特效");
2048 & t && i.push("（开始后允许新玩家加入）");
return i.join(" ");
};
i.getWaFaDecs_dzpk = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
8 & t && i.push("最多5人");
16 & t && i.push("最多8人");
32 & t && i.push("不限制人数");
8192 & t && i.push("底分1000分");
16384 & t && i.push("底分2000分");
32768 & t && i.push("底分3000分");
2048 & t && i.push("（开始后允许新玩家加入）");
return i.join(" ");
};
i.getWaFaDecs_zjh = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
8 & t && i.push("最多5人");
16 & t && i.push("最多8人");
32 & t && i.push("不限制人数");
256 & t && i.push("底分2分");
512 & t && i.push("底分5分");
1024 & t && i.push("底分10分");
8192 & t && i.push("5轮开");
16384 & t && i.push("10轮开");
32768 & t && i.push("15轮开");
65536 & t && i.push("1轮后可比牌");
1 << 17 & t && i.push("2轮后可比牌");
1 << 18 & t && i.push("3轮后可比牌");
1 << 21 & t && i.push("不闷牌");
1 << 22 & t && i.push("闷牌1轮");
1 << 23 & t && i.push("闷牌2轮");
1 << 24 & t && i.push("闷牌3轮");
4096 & t && i.push("开牌特效");
2048 & t && i.push("（开始后允许新玩家加入）");
return i.join(" ");
};
i.getWaFaDecs_dnn = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
4 & e && i.push("无花斗牛");
8 & e && i.push("斗公牛");
16 & e && i.push("无花斗公牛");
if (8 & e || 16 & e) {
2 & t && i.push("一圈庄");
4 & t && i.push("两圈庄");
} else {
2 & t && i.push("10局");
4 & t && i.push("20局");
}
8 & t && i.push("最多5人");
16 & t && i.push("最多8人");
32 & t && i.push("不限制人数");
64 & t && i.push("抢庄");
128 & t && i.push("轮庄");
256 & t && i.push("牛牛做庄");
512 & t && i.push("牌大做庄");
1024 & t && i.push("霸王庄");
4096 & t && i.push("开牌特效");
8192 & t && i.push("先开3张牌");
16384 & t && i.push("先开4张牌");
32768 & t && i.push("不明牌");
2048 & t && i.push("（开始后允许新玩家加入）");
65536 & t && i.push("(牛牛五倍)");
return i.join(" ");
};
i.getWaFaDecs_ddz = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
i.push("3人");
i.push("一副牌");
16384 & t && i.push("王炸、2炸必要");
32768 & t && i.push("托管");
return i.join(" ");
};
i.getWaFaDecs_pdk = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & e && i.push("经典玩法");
4 & e && i.push("15牌玩法");
8 & e && i.push("癞子玩法");
16 & e && i.push("4人玩法");
2 & t && i.push("10局");
4 & t && i.push("20局");
8 & t && i.push("3人");
16 & t && i.push("2人");
32 & t && i.push("4人");
1024 & t && i.push("15牌");
2048 & t && i.push("16牌");
4096 & t && i.push("一副牌");
8192 & t && i.push("二副牌");
64 & t && i.push("显示出牌");
128 & t && i.push("黑桃3首出");
256 & t && i.push("有大必管");
512 & t && i.push("红桃10翻倍");
16384 & t && i.push("托管");
return i.join(" ");
};
i.getWaFaDecs_fzmj = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & t && i.push("8局");
4 & t && i.push("16局");
8 & t && i.push("4人");
16 & t && i.push("3人");
32 & t && i.push("2人");
64 & t && i.push("放胡单赔");
128 & t && i.push("放胡双倍单赔");
256 & t && i.push("放胡全赔");
512 & t && i.push("带花牌");
1024 & t && i.push("金龙");
2048 & t && i.push("1翻");
4096 & t && i.push("2翻");
8192 & t && i.push("5翻");
16384 & t && i.push("10翻");
return i.join(" ");
};
i.getWaFaDecs_wzmj = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & t && i.push("8局");
4 & t && i.push("16局");
8 & t && i.push("4人");
16 & t && i.push("3人");
32 & t && i.push("2人");
64 & t && i.push("进阶2468");
128 & t && i.push("普通1234");
256 & t && i.push("买、顶底加倍");
512 & t && i.push("杠算分");
1024 & t && i.push("杠上花双翻");
2048 & t && i.push("三背");
4096 & t && i.push("跟风");
return i.join(" ");
};
i.getWaFaDecs_dczb = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & t && i.push("8局");
4 & t && i.push("16局");
8 & t && i.push("托管");
return i.join(" ");
};
i.getWaFaDecs_paguo = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & t && i.push("6局");
4 & t && i.push("12局");
8 & t && i.push("双七双翻");
16 & t && i.push("托管");
return i.join(" ");
};
i.getWaFaDecs_ppl = function(e, t) {
var i = [];
1 << 19 & t && i.push("房卡开房");
1 << 20 & t && i.push("钻石开房");
2 & t && i.push("10局");
4 & t && i.push("20局");
return i.join(" ");
};
i.getWaFaDecs_hnmj = function(e, t, i) {
var n = [], a = function(e, t) {
return 0 != (e & 1 << t);
};
1 << 19 & i && n.push("房卡开房　");
1 << 20 & i && n.push("钻石开房　");
2 & i && n.push("8局　");
4 & i && n.push("16局　");
8 & i && n.push("4人　");
16 & i && n.push("3人　");
32 & i && n.push("2人　");
switch (e) {
case 10003:
n.push("可抢杠胡　258做将　庄闲分");
a(i, 21) && n.push("栽宝　");
a(i, 22) && n.push("三同　");
a(i, 23) && n.push("一枝花　");
a(i, 24) && n.push("金童玉女　");
a(i, 25) && n.push("步步高　");
a(i, 26) && n.push("中途四喜　");
a(i, 27) && n.push("中途六六顺　");
a(i, 28) && n.push("自由飘分　");
if (a(i, 16)) {
n.push("中鸟加分　");
a(i, 12) && n.push("抓鸟2个　");
a(i, 13) && n.push("抓鸟4个　");
a(i, 14) && n.push("抓鸟6个　");
}
if (a(i, 17)) {
n.push("中鸟翻倍　");
a(i, 12) && n.push("抓鸟1个　");
a(i, 13) && n.push("抓鸟2个　");
}
if (a(i, 18)) {
n.push("中鸟加倍　　");
a(i, 12) && n.push("抓鸟1个　");
a(i, 13) && n.push("抓鸟2个　");
}
a(i, 29) && n.push("托管　");
break;

case 10006:
a(i, 6) && n.push("可抢杠胡　");
a(i, 7) && n.push("只能自摸　");
a(i, 8) && n.push("可胡七对　");
a(i, 9) && n.push("红中癞子　");
a(i, 12) && n.push("抓鸟2个　");
a(i, 13) && n.push("抓鸟4个　");
a(i, 14) && n.push("抓鸟6个　");
a(i, 22) && n.push("托管　");
break;

case 10007:
a(i, 7) && n.push("只能自摸　");
a(i, 8) && n.push("可胡七对　");
a(i, 12) && n.push("抓鸟2个　");
a(i, 13) && n.push("抓鸟4个　");
a(i, 14) && n.push("抓鸟6个　");
a(i, 15) && n.push("一鸟全中　");
a(i, 22) && n.push("托管　");
break;

case 10009:
a(i, 6) && n.push("可吃牌　");
a(i, 7) && n.push("可点炮　");
a(i, 8) && n.push("上醒　");
a(i, 9) && n.push("中醒　");
a(i, 10) && n.push("下醒　");
a(i, 11) && n.push("看花色　");
a(i, 12) && n.push("不看花色　　　");
a(i, 13) && n.push("点炮包醒　　　");
a(i, 14) && n.push("托管　");
}
return n.join(" ");
};
cc._RF.pop();
}, {} ],
GameUpdateMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "18b6dxVKMlPMq2dbYJfgUj1", "GameUpdateMgr");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
checkGameVersion: function() {
for (var e = 0; e < cc.serverGames.length; e++) {
var t = cc.serverGames[e], i = this.getLocalGameByType(t.gameType);
if (i) this.compareVersion(t.version, i.version) && (i.newVersion = 1); else {
var n = t;
n.newVersion = 1;
cc.games.push(n);
}
}
cc.sys.localStorage.setItem("localGames", JSON.stringify(cc.games));
},
getLocalGameByType: function(e) {
for (var t = 0; t < cc.games.length; t++) {
var i = cc.games[t];
if (i.gameType == e) return i;
}
return null;
},
compareVersion: function(e, t) {
for (var i = e.split("."), n = (t.split("."), 0); n < i.length; n++) {
if (i[n] > arr[2]) return 1;
if (i[n] < arr[2]) return 0;
}
return 0;
},
setGameVersion: function(e, t) {
var i = this.getLocalGameByType(e);
i.version = t;
i.newVersion = 0;
cc.sys.localStorage.setItem("localGames", JSON.stringify(res.games));
}
});
cc._RF.pop();
}, {} ],
HGW_GameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7ba67Ys5VhOJJmWjSE23xxJ", "HGW_GameOver");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.initData();
this.initNode();
this.initEventHandler();
this.showBtnReadyLabelByState();
}
},
initData: function() {
this.huCountList = [];
this.itemLableList = [];
this.userList = [];
this.itemCardTag = 1100;
this._maxPlayerNum = 3;
this._handCardSpriteSize = {
width: 56,
height: 62
};
},
initNode: function() {
this._gameOverRoot = this.node.getChildByName("bg");
this._surplusCardsNode = this._gameOverRoot.getChildByName("surplusCardsNode");
this.initHuIcon();
this.initCommonLabels();
this.initHuCountLabels();
this.initUsers();
this.initFanLables();
this.node.active = !1;
},
initCommonLabels: function() {
this.lb_huXi = this._gameOverRoot.getChildByName("lb_huXi").getComponent(cc.Label);
this.lb_fanShu = this._gameOverRoot.getChildByName("lb_fanShu").getComponent(cc.Label);
this.lb_tunShu = this._gameOverRoot.getChildByName("lb_tunShu").getComponent(cc.Label);
this.lb_total = this._gameOverRoot.getChildByName("lb_total").getComponent(cc.Label);
},
initHuIcon: function() {
this.icon_huCardSign = this._gameOverRoot.getChildByName("huCardFrame");
this.icon_huCardSign.active = !1;
this.icon_huCardSign.setLocalZOrder(10);
},
initHuCountLabels: function() {
this._huCountNode = this._gameOverRoot.getChildByName("itemCardHuCountNode");
for (var e = 0; e < 8; e++) {
var t = this._huCountNode.getChildByName("huCount" + e), i = this._huCountNode.getChildByName("itemLable" + e);
t.getComponent(cc.Label).string = "";
i.getComponent(cc.Label).string = "";
this.huCountList.push(t);
this.itemLableList.push(i);
}
},
initUsers: function() {
for (var e = this._gameOverRoot.getChildByName("UserNode"), t = 0; t < this._maxPlayerNum; t++) {
var i = {}, n = e.getChildByName("user" + t);
i.frame = n.getChildByName("frame").getComponent(cc.Sprite);
i.icon_winOrLoseTyp = n.getChildByName("icon_winOrLoseType").getComponent(cc.Sprite);
i.icon_winOrLose = n.getChildByName("icon_winOrLose").getComponent(cc.Sprite);
i.lb_score = n.getChildByName("lb_score").getComponent(cc.Label);
i.lb_name = n.getChildByName("lb_name").getComponent(cc.Label);
i.lb_id = n.getChildByName("lb_id").getComponent(cc.Label);
i.image_atavar = n.getChildByName("head").getChildByName("image_Atavar").getComponent("ImageLoader");
this.userList.push(i);
}
},
initFanLables: function() {
var e = this._gameOverRoot.getChildByName("fanLabelNode");
this.Lb_fanTypeList = [];
for (var t = 0; t < 12; t++) {
var i = "lb_fanType" + t, n = e.getChildByName(i).getComponent(cc.Label);
this.Lb_fanTypeList.push(n);
}
},
showBtnReadyLabelByState: function() {
var e = this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label);
cc.vv.gameNetMgr.isOver ? e.string = "总结算" : e.string = "继续";
},
initEventHandler: function() {
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("wp_over", this.call_game_over, this);
this.gameRoot.on("game_result_showLB", this.showLb, this);
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function(e) {
var t = this;
if (1 != e.detail.force) {
var i = cc.vv.gameNetMgr.getIsSpcialHu() ? 1 : 0;
this.gameRoot && this.gameRoot.runAction(cc.sequence(cc.delayTime(3.5 + i), cc.callFunc(function(e) {
t.onGameOver();
})));
} else this.onGameOver();
},
onGameOver: function() {
this.icon_huCardSign.active = !1;
this.node.active = !0;
var e = cc.vv.gameNetMgr.gameOverData, t = e.end_seats_data, i = (e.force, e.tian_hu, 
e.hu_user_id), n = e.pao_user_id;
this.hu_card = e.hu_card;
e.button;
var a = e.pokers, s = e.hu_details;
this.totalHuCount = 0;
this.hu_index = 0;
this.pick_hu = e.pick_hu;
console.log("log------------fangroup=:", e.fan_group);
this.clear();
this.showSurplusCards(a);
this.showItemsInfo(t, i);
this.showHuDetails(t, s);
this.showFanGroups(e.fan_group);
this.showPlayer(t, i, n);
this.lb_huXi.string = "胡息 +" + e.total_hu_nums;
this.lb_fanShu.string = "番数 +" + e.total_fan_nums;
this.lb_tunShu.string = "囤数 +" + e.base_zi_nums;
},
showSurplusCards: function(e) {
for (var t = 0; t < e.length; t++) {
var i = cc.vv.zipai_drawCard.drawCard(e[t], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
i.parent = this._surplusCardsNode;
i.setScale(.6);
i.setPosition((t + .5) * this._handCardSpriteSize.width * .6, 0);
}
},
showItemsInfo: function(e, t) {
for (var i = 0; i < e.length; i++) if (t == e[i].user_id) {
for (var n = 0; n < e[i].items.length; n++) {
var a = n, s = e[i].items[n][0], c = e[i].items[n][1], r = cc.vv.HGW_Utils.getItemCards(s, c), o = cc.vv.HGW_Utils.getHuCount(s, r), h = this.getItemType(s);
this.huCountList[n].getComponent(cc.Label).string = o;
this.itemLableList[a].getComponent(cc.Label).string = h;
this.showItemCards(r, a, cc.vv.zipai_drawCard.enumTalbe.cardSort.ITEM, s);
this.totalHuCount += o;
}
this.hu_index = i;
break;
}
},
showHuDetails: function(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i][0], a = t[i][1], s = e[this.hu_index].items.length + i;
this.showItemCards(a, s, cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS, n);
var c = cc.vv.HGW_Utils.getHuCount(n, a), r = this.getItemType(n);
this.huCountList[s].getComponent(cc.Label).string = c;
this.itemLableList[s].getComponent(cc.Label).string = r;
this.totalHuCount += c;
}
this.huCountList[7].getComponent(cc.Label).string = this.totalHuCount;
this.lb_total.string = this.totalHuCount;
},
showItemCards: function(e, t, i, n) {
for (var a in e) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == a && (s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
s.parent = this._gameOverRoot;
s.tag = this.itemCardTag;
s.setScale(.5);
var c = this.huCountList[t].getPosition();
s.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
if (i == cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS && !this.icon_huCardSign.active && e[a] == this.hu_card) {
this.icon_huCardSign.active = !0;
this.icon_huCardSign.setScale(.8);
this.icon_huCardSign.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
!0;
}
}
},
getItemType: function(e) {
console.log("log-----------getItemType  item=:", e);
var t = "";
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
t = "吃";
break;

case cc.vv.globalSetting.ITEM_PENG:
t = "碰";
break;

case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
t = "偎";
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
t = "提";
break;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
t = "跑";
break;

case cc.vv.globalSetting.ITEM_KAN:
t = "坎";
break;

case cc.vv.globalSetting.ITEM_DUIZI:
t = "对";
break;

case cc.vv.globalSetting.ITEM_SHUNZI:
t = "句";
}
return t;
},
showPlayer: function(e, t, i) {
this.sortByScore(e);
for (var n = 0; n < e.length; n++) {
var a = null, s = null, c = null;
if (0 < e[n].end_score) {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_win");
s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("win");
t == i && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_zimo"));
} else {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_lose");
e[n].end_score < 0 && (s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("lose"));
e[n].user_id == i && this.pick_hu <= 0 && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("fangpao"));
e[n].user_id == i && 0 < this.pick_hu && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_dianpao"));
}
var r = this.getUserNameByID(e[n].user_id);
this.userList[n].frame.spriteFrame = a;
this.userList[n].icon_winOrLose.spriteFrame = s;
this.userList[n].icon_winOrLoseTyp.spriteFrame = c;
this.userList[n].lb_score.string = e[n].end_score;
if (cc.vv.userMgr.isHighDefend) {
this.userList[n].lb_name.string = "已屏蔽";
this.userList[n].lb_id.string = "已屏蔽";
} else {
this.userList[n].lb_name.string = r;
this.userList[n].lb_id.string = e[n].user_id;
}
this.userList[n].image_atavar.setUserID(e[n].user_id);
}
},
sortByScore: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t].end_score < e[i].end_score) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
showFanGroups: function(e) {
this.resetfanLabels();
var t = 0;
for (var i in e) {
var n = Number(i);
this.showSingleFanGroup(t, n, e[i]);
t++;
}
},
resetfanLabels: function() {
for (var e = 0; e < this.Lb_fanTypeList.length; e++) this.Lb_fanTypeList[e].string = "";
},
showSingleFanGroup: function(e, t, i) {
var n = "";
switch (t) {
case cc.vv.globalSetting.FAN_TYPE_TIAN_HU:
n = "天胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DI_HU:
n = "地胡";
break;

case cc.vv.globalSetting.FAN_TYPE_PENG_PENG_HU:
n = "碰碰胡";
break;

case cc.vv.globalSetting.FAN_TYPE_SHIBA_DA:
n = "十八大";
break;

case cc.vv.globalSetting.FAN_TYPE_SHILIU_XIAO:
n = "十六小";
break;

case cc.vv.globalSetting.FAN_TYPE_HEI_HU:
n = "乌胡";
break;

case cc.vv.globalSetting.FAN_TYPE_SHI_HONG:
n = "红胡";
break;

case cc.vv.globalSetting.FAN_TYPE_YI_DIAN_HONG:
n = "点胡";
break;

case cc.vv.globalSetting.FAN_TYPE_SELF_HU:
n = "自摸";
break;

case cc.vv.globalSetting.FAN_TYPE_HAIDI_HU:
n = "海底胡";
}
this.Lb_fanTypeList[e].string = 0 < i ? n + "x" + i + "番" : n;
},
getUserNameByID: function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) if (e == t[i].userid) return t[i].name;
},
clear: function() {
this.clearHuCount();
this.clearItemLabels();
this.clearItemCards();
this.clearSurplusCards();
},
clearHuCount: function() {
for (var e in this.huCountList) this.huCountList[e].getComponent(cc.Label).string = "";
},
clearItemLabels: function() {
for (var e in this.itemLableList) this.itemLableList[e].getComponent(cc.Label).string = "";
},
clearItemCards: function() {
for (;this._gameOverRoot.getChildByTag(this.itemCardTag); ) this._gameOverRoot.removeChildByTag(this.itemCardTag);
},
clearSurplusCards: function() {
this._surplusCardsNode.removeAllChildren();
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.gameRoot.emit("show_gameResult"); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.active = !1;
this.gameRoot.emit("fresh_all_score");
},
onDestroy: function() {
this.gameRoot.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
HGW_GlobalSetting: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ccb4fBPz9ZCcahLOmZI2wBQ", "HGW_GlobalSetting");
var n = {
DISMISS_TIME: 12e4,
GAME_TYPE_CLASSIC: 1,
MASK_PC10: 1,
MASK_PC20: 2,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
ITEM_LEFT_CHI: 1,
ITEM_CENTER_CHI: 2,
ITEM_RIGHT_CHI: 3,
ITEM_SMALL_ERQISHI_CHI: 4,
ITEM_BIG_ERQISHI_CHI: 5,
ITEM_TWO_BIG_SMALL_CHI: 6,
ITEM_TWO_SMALL_BIG_CHI: 7,
ITEM_PENG: 8,
ITEM_SAO: 9,
ITEM_GUO_SAO: 10,
ITEM_SAO_CHUAN: 11,
ITEM_KAI_DUO: 12,
ITEM_PENG_KAI_DUO: 13,
ITEM_SAO_KAI_DUO: 14,
ITEM_SAO_SAO_CHUAN: 15,
ITEM_SELF_SAO_CHUAN: 16,
ITEM_KAN: 17,
ITEM_DUIZI: 18,
ITEM_SHUNZI: 19,
OPERATE_PASS: 1,
OPERATE_LEFT_CHI: 2,
OPERATE_CENTER_CHI: 3,
OPERATE_RIGHT_CHI: 4,
OPERATE_SMALL_ERQISHI_CHI: 5,
OPERATE_BIG_ERQISHI_CHI: 6,
OPERATE_TWO_BIG_SMALL_CHI: 7,
OPERATE_TWO_SMALL_BIG_CHI: 8,
OPERATE_PENG: 9,
OPERATE_SAO: 10,
OPERATE_GUO_SAO: 11,
OPERATE_SAO_CHUAN: 12,
OPERATE_KAI_DUO: 13,
OPERATE_PENG_KAI_DUO: 14,
OPERATE_SAO_KAI_DUO: 15,
OPERATE_SAO_SAO_CHUAN: 16,
OPERATE_HU: 17,
OPERATE_PENG_KAI_DUO_HU: 18,
OPERATE_SAO_KAI_DUO_HU: 19,
OPERATE_SAO_SAO_CHUAN_HU: 20,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_LEFT_CHI: 3,
ACTION_CENTER_CHI: 4,
ACTION_RIGHT_CHI: 5,
ACTION_SMALL_ERQISHI_CHI: 6,
ACTION_BIG_ERQISHI_CHI: 7,
ACTION_TWO_BIG_SMALL_CHI: 8,
ACTION_TWO_SMALL_BIG_CHI: 9,
ACTION_PENG: 10,
ACTION_SAO: 11,
ACTION_GUO_SAO: 12,
ACTION_SAO_CHUAN: 13,
ACTION_KAI_DUO: 14,
ACTION_PENG_KAI_DUO: 15,
ACTION_SAO_KAI_DUO: 16,
ACTION_SAO_SAOCHUAN: 17,
ACTION_SELF_SAO_CHUAN: 18,
ACTION_HU: 19,
ACTION_LEFT_CHI_XIABI: 20,
ACTION_CENTER_CHI_XIABI: 21,
ACTION_RIGHT_CHI_XIABI: 22,
ACTION_SMALL_ERQISHI_CHI_XIABI: 23,
ACTION_BIG_ERQISHI_CHI_XIABI: 24,
ACTION_TWO_BIG_SMALL_CHI_XIABI: 25,
ACTION_TWO_SMALL_BIG_CHI_XIABI: 26,
FAN_TYPE_TIAN_HU: 1,
FAN_TYPE_DI_HU: 2,
FAN_TYPE_PENG_PENG_HU: 3,
FAN_TYPE_SHIBA_DA: 4,
FAN_TYPE_SHILIU_XIAO: 5,
FAN_TYPE_HEI_HU: 6,
FAN_TYPE_SHI_HONG: 7,
FAN_TYPE_YI_DIAN_HONG: 8,
FAN_TYPE_SELF_HU: 9,
FAN_TYPE_HAIDI_HU: 10,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
MIN_HUXI_NUMS: 15,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
has_rule: function(e, t) {
return 0 != (e & 1 << t);
},
type_check: function(e) {
var t = 0;
n.has_rule(e, n.GAME_TYPE_CLASSIC) && (t += 1);
return 1 == t;
},
rule_check: function(e) {
var t = 0;
n.has_rule(e, n.MASK_PC10) && (t += 1);
n.has_rule(e, n.MASK_PC20) && (t += 1);
if (1 != t) return !1;
var i = 0;
n.has_rule(e, n.MASK_INGOT_GAME) && (i += 1);
n.has_rule(e, n.MASK_GOLD_GAME) && (i += 1);
return 1 == i;
},
get_ingot_value: function(e) {
if (n.has_rule(e, n.MASK_INGOT_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 1;
if (n.has_rule(e, n.MASK_PC20)) return 2;
}
if (n.has_rule(e, n.MASK_GOLD_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 1;
if (n.has_rule(e, n.MASK_PC20)) return 2;
}
}
};
i.global = n;
cc._RF.pop();
}, {} ],
HGW_Msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f2b92uhxqNMvaPjREtWtSMg", "HGW_Msgdefine");
var n = {};
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
button: 0,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
total_hu_nums: 0,
base_zi_nums: 0,
total_fan_nums: 0,
pokers: [],
hu_details: [],
fan_group: {}
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_action_mask = JSON.stringify({
action_mask: 0,
xiabi_actions: {},
card: 0
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.CS_card_type_action = JSON.stringify({
action: 0,
xiabi_action: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
HGW_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "732c62A5ehFf6yMhVnLbAj8", "HGW_Replay");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_iconsNodes: [],
_itemNodes: [],
_foldsNodes: [],
_holdsNodes: [],
_playerPos: []
},
onLoad: function() {
if (cc.vv) {
this.replayGameNode = cc.find("Canvas/replayGame");
this.gameNode = cc.find("Canvas/game");
this.peaceNode = this.replayGameNode.getChildByName("peaceNode");
this.replayGameNode.active = !0;
this.peaceNode.active = !1;
this.gameNode.active = !1;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.initData();
this.initView();
this.initHoldNodes();
this.initSeats();
this.initBigCardBack();
this.initEvent();
this.judgeShowPeace();
} else cc.director.loadScene("loading");
},
initData: function() {
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._beginThrowCardPos = [ {
x: 0,
y: -50
}, {
x: 100,
y: 100
}, {
x: -100,
y: 100
} ];
this.holdsList = [ [], [], [] ];
this.foldsList = [ [], [], [] ];
this.itemsList = [ [], [], [] ];
this.holdsSpriteList = [ [], [], [] ];
this.actionCount = 0;
this.outPool = [];
this.outCardTag = 10086;
},
initView: function() {
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3"), s = i.getChildByName("icons"), c = i.getChildByName("items"), r = i.getChildByName("folds");
a.active = !1;
this._zhuangs.push(a);
this._iconsNodes.push(s);
this._itemNodes.push(c);
this._foldsNodes.push(r);
this._playerPos.push(i.getPosition());
}
this.cardNode = cc.find("Canvas/replayGame/cardNode");
},
initHoldNodes: function() {
for (var e = [ "selfHandCardNode", "rightHandCardNode", "leftHandCardNode" ], t = 0; t < e.length; t++) {
var i = this.replayGameNode.getChildByName(e[t]);
i && this._holdsNodes.push(i);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.holdsList[i] = e[t].holds.concat();
this.drawHolds(e[t].holds, i);
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button, n = this._seats2[t];
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.cardNode;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initEvent: function() {
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
drawHolds: function(e, t) {
var i = e.concat(), n = cc.vv.zipai_cardsSort.cardSort(i), a = 0 == t ? cc.vv.zipai_drawCard.enumTalbe.cardType.BIG : cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL;
this.holdsSpriteList[t] = [];
this._holdsNodes[t].removeAllChildren();
for (var s = 0; s < n.sort.length; s++) {
this.holdsSpriteList[t][s] = {
posx: s * this._outCardSpriteSize.width - 640,
cards: []
};
for (var c = 0; c < Math.ceil(n.sort[s].type); c++) {
2.5 == n.sort[s].type && 2 == c && (10 < n.sort[s].value ? n.sort[s].value -= 10 : n.sort[s].value += 10);
2.3 == n.sort[s].type && 0 < c && n.sort[s].value++;
(r = cc.vv.zipai_drawCard.drawCard(n.sort[s].value, a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(Math.ceil(n.sort[s].type) - c);
r.setLocalZOrder(Math.ceil(n.sort[s].type) - c);
this.holdsSpriteList[t][s].cards.push(r);
}
}
for (s = 0; s < n.single.length; s++) {
s % 3 == 0 && (this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)] = {
posx: (n.sort.length + Math.floor(s / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var r;
(r = cc.vv.zipai_drawCard.drawCard(n.single[s], a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(n.single.length - s);
r.setLocalZOrder(n.single.length - s);
this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)].cards.push(r);
}
this.replaceCards(t);
},
replaceCards: function(e) {
for (var t = 0; t < this.holdsSpriteList[e].length; t++) for (var i = 0; i < this.holdsSpriteList[e][t].cards.length; i++) {
this.holdsSpriteList[e][t].cards[i].setLocalZOrder(this.holdsSpriteList[e][t].cards.length - i);
this.holdsSpriteList[e][t].cards[i].getComponent("zipai_card").setOrder(Math.ceil(this.holdsSpriteList[e][t].cards.length - i));
if (0 == e) this.holdsSpriteList[e][t].cards[i].setPosition(t * this._outCardSpriteSize.width - 310 + (8 - this.holdsSpriteList[e].length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * i - .1 * this._outCardSpriteSize.height); else {
this.holdsSpriteList[e][t].cards[i].setScale(.75);
this.holdsSpriteList[e][t].cards[i].setPosition(t * this._handCardSpriteSize.width * .75 + (8 - this.holdsSpriteList[e].length) * this._handCardSpriteSize.width / 2 * .75, this._handCardSpriteSize.height * i * .75);
}
}
},
onDoReplayAction: function(e) {
var t = e.detail.action, i = (e.detail.next, t.d_actions), n = i[0], a = i[1], s = i[2], c = i[3], r = cc.vv.gameNetMgr.getLocalIndex(n), o = cc.vv.gameNetMgr.getLocalIndex(c);
console.log("log seat  card  act_type=:", r, s, a);
this.showTurn(r);
if (a != cc.vv.globalSetting.ACTION_HU) this.deleteCard(); else if (n == c) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO, r);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", 1);
} else {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.HU, r);
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PAO, o);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", 1);
}
if (a == cc.vv.globalSetting.ACTION_PICK) {
if (0 < this.outPool.length) {
this.updateFoldsData(this.outPool[0]._card, this.outPool[0]._seat);
this.updateFolds(this.outPool[0]._seat);
this.outPool.pop();
}
if (0 == this.actionCount) this.showFirstPickCardAction(s, r); else {
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
}
} else if (a == cc.vv.globalSetting.ACTION_OUT) {
this.outPool.push({
_card: s,
_seat: r
});
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
(h = []).push(s);
this.updateHoldsData(h, r);
this.updateHolds(r);
} else {
this.outPool.pop();
if (a < cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI) {
var h = (d = cc.vv.HGW_Utils.getItemCards(a - 2, s)).concat();
if (a != cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) for (var l = 0; l < h.length; l++) if (s == h[l]) {
h.splice(l, 1);
break;
}
} else {
var d;
h = (d = cc.vv.HGW_Utils.getItemCards(a, s)).concat();
}
this.showIconByAction(a, r);
this.updateHoldsData(h, r);
this.updateItemsData(d, r, a);
this.updateHolds(r);
this.updateItems(r);
}
this.actionCount++;
},
onDoReplayActionOver: function() {},
updateHolds: function(e) {
this.drawHolds(this.holdsList[e], e);
},
updateItems: function(e) {
for (var t = 1 == e ? -1 : 1, i = 0; i < this.itemsList[e].length; i++) for (var n = 0; n < this.itemsList[e][i].cards.length; n++) {
var a = null;
if (0 < this.itemsList[e][i].cards[n]) {
a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
var s = this.itemsList[e][i].act_type;
s == cc.vv.globalSetting.ACTION_SAO && n < 2 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(s == cc.vv.globalSetting.ACTION_SAO_CHUAN || s == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN || s == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) && n < 3 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI && 2 == n) {
var c = !1;
a.getComponent("zipai_card").setBlack(c);
}
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI && 2 == n) {
c = !1;
a.getComponent("zipai_card").setBlack(c);
}
} else a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
a.setScale(.6);
a.parent = this._itemNodes[e];
a.setPosition(t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
}
},
updateFolds: function(e) {
for (var t = 2 == e ? 1 : -1, i = 0; i < this.foldsList[e].length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(this.foldsList[e][i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.setScale(.6);
n.parent = this._foldsNodes[e];
n.setPosition(.6 * this._handCardSpriteSize.width * i * t + t * this._handCardSpriteSize.width * .6 / 2, 0);
}
},
updateHoldsData: function(e, t) {
for (var i = 0; i < e.length; i++) for (var n = 0; n < this.holdsList[t].length; n++) if (e[i] == this.holdsList[t][n]) {
this.holdsList[t].splice(n, 1);
break;
}
},
updateItemsData: function(e, t, i) {
var n = this.itemsList[t].length;
this.itemsList[t][n] = {
cards: [],
act_type: i
};
for (var a = 0; a < this.itemsList[t].length; a++) for (var s = 0; s < this.itemsList[t][a].cards.length; s++) if (this.itemsList[t][a].cards[0] == e[0] && this.itemsList[t][a].cards[1] == e[1] && this.itemsList[t][a].cards[2] == e[2] && e[0] == e[1] && e[0] == e[2]) {
this.itemsList[t][a].cards.push(e[0]);
this.itemsList[t].pop();
return;
}
for (a = 0; a < e.length; a++) this.itemsList[t][n].cards.push(e[a]);
},
updateFoldsData: function(e, t) {
this.foldsList[t].push(e);
},
showCard: function(e, t, i) {
(e = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.cardNode;
e.tag = this.outCardTag;
e.setPosition(0, 50);
var n = this;
if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD) {
e.setPosition(this._beginThrowCardPos[t].x, this._beginThrowCardPos[t].y);
e.runAction(cc.moveTo(.1, cc.p(0, 50)));
} else if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD) {
e.active = !1;
e.setPosition(0, 50);
e.setScale(.2, 1);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.1, .2, 1), cc.callFunc(function() {
e.active = !0;
e.runAction(cc.scaleTo(.1, 1, 1));
}), cc.callFunc(function() {
n.bigCardBack.active = !1;
})));
}
},
showFirstPickCardAction: function(e, t) {
var i = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
i.parent = this.cardNode;
i.tag = this.outCardTag;
i.setPosition(0, 50);
var n = 0 < t ? this._playerPos[t] : {
x: 0,
y: -300
}, a = this;
i.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.1, cc.p(n.x, n.y)), cc.callFunc(function() {
i.destroy();
a.holdsList[t].push(e);
a.updateHolds(t);
})));
},
deleteCard: function() {
for (;this.cardNode.getChildByTag(this.outCardTag); ) this.cardNode.removeChildByTag(this.outCardTag);
},
showTurn: function(e) {
for (var t = 0; t < this._seats2.length; t++) this._seats2[t].hideIconTurn();
this._seats2[e].showIconTurn();
},
judgeShowPeace: function() {
var e = this;
if (cc.vv.gameNetMgr.getIsPeaceGame()) {
var t = cc.vv.gameNetMgr.getActionCount();
this.node.runAction(cc.sequence(cc.delayTime(t + 1), cc.callFunc(function() {
e.peaceNode.active = !0;
})));
}
},
showIconByAction: function(e, t) {
if (e >= cc.vv.globalSetting.ACTION_LEFT_CHI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI || e >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", 1);
} else if (e == cc.vv.globalSetting.ACTION_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO || e == cc.vv.globalSetting.ACTION_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("wai", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO_CHUAN || e == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e >= cc.vv.globalSetting.ACTION_KAI_DUO && e <= cc.vv.globalSetting.ACTION_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", 1);
}
},
showIcon: function(e, t) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wei");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
});
cc._RF.pop();
}, {} ],
HGW_Room: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5bfa5SjP4VLw6us6ksA83P4", "HGW_Room");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_playerPos: [],
_itemsNodes: [],
_foldsNodes: [],
_iconsNodes: [],
_maxPlayerCount: null,
game_over: null
},
onLoad: function() {
var t = this;
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
this.initData();
this.initRes();
this.initView();
this.initComponent();
this.initSplitLine();
this.initOperationBtns();
this.initEatNode();
this.initHuNode();
this.initEventHandlers();
this.resetGame();
this.initBigCardBack();
this.initHoldsEventHandler();
this.initEatNodeEventHandler();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/GameBaseUI", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("BaseRoom")._seats2 = i._seats2;
e.getComponent("BaseRoom").initBaseRoom();
});
});
} else this.addComponent("HGW_Replay"); else cc.director.loadScene("loading");
},
initRes: function() {
this.gameNode = cc.find("Canvas/game");
this.outCardPools = this.gameNode.getChildByName("outCardPools");
this.lb_surplusCardNums = this.gameNode.getChildByName("lb_surplusCardNums");
this.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.gameOverHandNode = this.node.getChildByName("gameOverHandNode");
this.selfHandCardNode = this.gameNode.getChildByName("selfHandCardNode");
this.xingNode = this.node.getChildByName("xingNode");
this.surplusCardNode = this.node.getChildByName("surplusCardNode");
},
initData: function() {
this._maxPlayerCount = 3;
this._playerItems = [ [], [], [] ];
this._PlayerItemCount = [ 0, 0, 0 ];
this._outCardCoordinate = {
x: null,
y: null
};
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.isReconnectGame = !1;
this.iconItemTag = 1111;
this.recentOutCardValue = null;
this.pickCardCount = null;
this.shangbi_way = null;
this.xiabi_way = null;
this._handcardsInfoList = [];
this.end_seats_data = null;
this.xingCard = [];
this.isTianHu = !1;
this.has_action = !1;
this.actionCount = 0;
this.hucode = 0;
this.pick_seat = -1;
this.pick_data = -1;
this.out_seat = -1;
this.out_data = -1;
},
initComponent: function() {
cc.loader.loadRes("game/zipaiGames/hgw/prefabs/game_over", cc.Prefab, function(e, t) {
if (!e) {
this.game_over = cc.instantiate(t);
this.node.addChild(this.game_over, 10);
this.initSeats();
}
}.bind(this));
cc.loader.loadRes("game/zipaiGames/prefab/game_result", cc.Prefab, function(e, t) {
e || this.node.addChild(cc.instantiate(t), 10);
}.bind(this));
},
initSplitLine: function() {
this.splitLine = this.gameNode.getChildByName("splitLine");
this.splitWord = this.gameNode.getChildByName("splitWord");
this.handTip = this.gameNode.getChildByName("hand");
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.outCardPools;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initOperationBtns: function() {
this.operationBtnsNode = this.gameNode.getChildByName("operationBtnNode");
this.btn_eat = this.operationBtnsNode.getChildByName("btn_chi");
this.btn_peng = this.operationBtnsNode.getChildByName("btn_peng");
this.btn_win = this.operationBtnsNode.getChildByName("btn_win");
this.btn_pass = this.operationBtnsNode.getChildByName("btn_pass");
this.btn_liu = this.operationBtnsNode.getChildByName("btn_liu");
this.icon_win = this.operationBtnsNode.getChildByName("icon_win");
this.icon_peng = this.operationBtnsNode.getChildByName("icon_peng");
this.icon_chi = this.operationBtnsNode.getChildByName("icon_chi");
this.icon_pass = this.operationBtnsNode.getChildByName("icon_pass");
this.icon_liu = this.operationBtnsNode.getChildByName("icon_liu");
this.btn_liu.active = !1;
this.icon_liu.active = !1;
this.initOperationBtnsListener();
},
initOperationBtnsListener: function() {
var t = this;
this.btn_eat.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnEat();
});
this.btn_peng.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPeng();
});
this.btn_win.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnWin();
});
this.btn_pass.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPass();
});
},
initEatNode: function() {
this.eatNode = this.node.getChildByName("eatNode");
this.btnCloseEatNode = this.eatNode.getChildByName("btn_close");
this.btnCloseEatNodeIndex = 15e3;
},
initHuNode: function() {
var e = [ "selfHuNode", "rightHuNode", "leftHuNode" ];
this.huNodeList = [];
for (var t = 0; t < e.length; t++) {
var i = this.gameNode.getChildByName(e[t]), n = i.getChildByName("lb_huCount").getComponent(cc.Label);
i.active = !1;
n.string = 0;
this.huNodeList[t] = {
node: i,
lb: n
};
}
},
initView: function() {
this.animworldmap = this.node.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat"), a = i.getChildByName("folds"), s = i.getChildByName("items"), c = i.getChildByName("icons");
n.getChildByName("zhuang3").active = !1;
this._foldsNodes.push(a);
this._itemsNodes.push(s);
this._iconsNodes.push(c);
this._seats2.push(n.getComponent("Seat"));
this._playerPos.push(i.getPosition());
}
},
initHoldsEventHandler: function() {
new (e("holdsEventHandler"))().init(this, "wp_out");
},
initEatNodeEventHandler: function() {
new (e("eatNodeEventHandler"))().init(this);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("new_user", function(e) {
o.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
o.initSingleSeat(e.detail);
cc.vv.gameNetMgr.getLocalIndex(e.detail.seatindex);
});
this.node.on("wp_button_push", function(e) {
o.onGameStart();
o.initBigCardBack();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
o._seats2[t].setZhuang(!0);
cc.vv.anysdkMgr.getBatteryLevel();
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getSeatIndexByID(cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id), c = cc.vv.gameNetMgr.getLocalIndex(s);
o._seats2[c].setScore(n, a);
for (var r = 0; r < t.length; r++) cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id == cc.vv.gameNetMgr.seats[r].userid && (cc.vv.gameNetMgr.seats[r].score = n);
}
});
this.node.on("wp_state_push", function(e) {
o.canleReady();
});
this.node.on("kick_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("transfer_push", function(e) {});
this.node.on("seq_move_seat_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("wp_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.OnMsgUpdateSeatHolds(t.seatindex, t.holds);
});
this.node.on("wp_folds_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id);
o.OnMsgShowFlods(t, e.detail.folds);
});
this.node.on("wp_out_push_err", function(e) {
o._handcardsInfoList[o._outCardCoordinate.x].cards[o._outCardCoordinate.y].setPosition(o.clickCardPos.x, o.clickCardPos.y);
});
this.node.on("wp_out_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.out_user), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.out_user);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(e.detail.out_card, n.sex);
o.OnMsgShowOutCard(e.detail.out_card, i);
o.out_seat = i;
o.out_data = e.detail.out_card;
});
this.node.on("wp_turn_push", function(e) {
var t = cc.vv.gameNetMgr.turn;
o.OnMsgNoteOperater(t);
});
this.node.on("wp_surplus_push", function(e) {
var t = cc.vv.gameNetMgr.numOfMJ;
o.OnMsgUpdateSurplus(t);
});
this.node.on("wp_action_mask_push", function(e) {
var t = e.detail.action_mask;
o.has_action = 0 < t;
o.hideSplitLine();
o.OnMsgShowOperationTypes(e.detail.action_mask, e.detail.xiabi_actions);
o.has_action && o.hideSplitLine();
if (0 == o.actionCount && !o.isReconnecting) {
var i = t & 1 << cc.vv.globalSetting.OPERATE_HU;
o.isTianHu = 0 != i;
}
o.isTianHu && o.node.runAction(cc.sequence(cc.delayTime(5.5), cc.callFunc(function() {
o.operationBtnsNode.active = !0;
o.isTianHu = !1;
})));
o.actionCount++;
});
this.node.on("wp_cancel_action_push", function(e) {});
this.node.on("wp_pick_card_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.user_id), a = 0 == o.pickCardCount ? 2.3 : 0, s = e.detail.card, c = n.sex;
o.hideSplitLine();
o.node.runAction(cc.sequence(cc.delayTime(a), cc.callFunc(function() {
o.OnMsgShowPickCard(i, s, c);
})));
o.pick_seat = i;
o.pick_data = e.detail.card;
});
this.node.on("wp_item_push", function(e) {
var t = e.detail.user_id, i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = e.detail.add_items;
o.OnMsgShowItems(i, t, n);
cc.vv.gameNetMgr.getLocalIndex(i);
o.eatNode.active = !1;
o.operationBtnsNode.active = !1;
o.pick_seat = -1;
o.pick_data = -1;
o.out_seat = -1;
o.out_data = -1;
o.has_action = !1;
});
this.node.on("wp_hu_push", function(e) {
o.isSpcialHu = !1;
o.isSpcialHu = e.detail.special_hu;
cc.vv.gameNetMgr.setIsSpcialHu(o.isSpcialHu);
var t = o.isSpcialHu ? 1 : 0, i = e.detail;
o.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
o.OnMsgShowHu(i);
})));
});
this.node.on("wp_over", function(e) {
var t = o.isSpcialHu ? 1 : 0;
o.CloseTimer();
o.OnMsgShowSingleGameOver(e);
o.hideSplitLine();
o.scheduleOnce(function() {
o.initHuNode();
o.clearHolds();
o.clearFolds();
o.clearItemsCards();
o.clearOutCard();
o.clearSurplusCards();
o.clearGameOverHandCards();
o.initData();
o.outCardPools.removeAllChildren();
o.lb_surplusCardNums.getComponent(cc.Label).string = "";
}, 3 + t);
});
},
onGameStart: function() {
this.isGaming = !0;
this.pickCardCount = 0;
this.showHuNode();
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else 1 == cc.vv.gameNetMgr.getIsWatch() && (this.BtnReady.node.active = !1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
},
resetGame: function() {
var e = cc.vv.gameNetMgr.turn, t = cc.vv.gameNetMgr.getLocalIndex(e);
this.isReconnecting = !1;
if (!(e < 0)) {
this.initHuNode();
this.isReconnecting = !0;
this.OnMsgNoteOperater(e);
this.OnMsgUpdateSurplus(cc.vv.gameNetMgr.numOfMJ);
this.canleReady();
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; n++) {
this.OnMsgUpdateSeatHolds(i[n].seatindex, i[n].holds);
this.OnMsgShowFlods(i[n].seatindex, i[n].folds);
this.OnMsgShowItems(i[n].seatindex, i[n].userid, i[n].items);
}
for (n = 0; n < i.length; n++) {
if (0 == cc.vv.gameNetMgr.getLocalIndex(i[n].seatindex)) {
this.xiabi_actions = {};
this.xiabi_actions = i[n].xiabi_actions;
if (i[n].select_action <= 0) {
this.OnMsgShowOperationTypes(i[n].action_mask, i[n].xiabi_actions);
this.has_action = 0 < i[n].action_mask;
}
}
}
this.hideSplitLine();
this.drawOutByLocalTurn(t);
2 == cc.vv.gameNetMgr.gamestate && this.showHuNode();
this.isReconnecting = !1;
this.isReconnectGame = !0;
}
},
drawOutByLocalTurn: function(e) {
this.pick_seat = cc.vv.gameNetMgr.syncData.pick_seat;
this.pick_data = cc.vv.gameNetMgr.syncData.pick_data;
this.out_seat = cc.vv.gameNetMgr.syncData.out_seat;
this.out_data = cc.vv.gameNetMgr.syncData.out_data;
this.recentOutCardValue = -1;
0 < this.pick_data && (this.recentOutCardValue = this.pick_data);
0 < this.out_data && (this.recentOutCardValue = this.out_data);
this.clearOutCard();
if (0 < this.recentOutCardValue) {
var t = this.createOutCard(this.recentOutCardValue), i = this.getOutCardPos(e);
t.setPosition(i);
}
this.hideSplitLine();
0 == e && this.recentOutCardValue <= 0 && !this.has_action && this.showSplitLine();
},
OnMsgUpdateSeatHolds: function(e, t) {
if (!(0 < cc.vv.gameNetMgr.getLocalIndex(e))) {
var i = [];
i = t.concat();
if (0 == this.isReconnecting && 0 < this._handcardsInfoList.length) this.deleteOutCards(t); else {
this.drawHolds(t);
this.dealAction();
}
this.holdstemp = [];
this.holdstemp = i.concat();
}
},
OnMsgUpdateSurplus: function(e) {
this.lb_surplusCardNums.getComponent(cc.Label).string = "牌x" + e;
},
OnMsgNoteOperater: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.CloseTimer();
this.ShowTimer(t, 30);
this.hideSplitLine();
0 == t && -1 == this.pick_seat && -1 == this.out_seat && this.showSplitLine();
var i = this;
if (0 == t && 21 == this.getSelfFoldCount()) {
this.hideSplitLine();
this.node.runAction(cc.sequence(cc.delayTime(2.4), cc.callFunc(function() {
i.showSplitLine();
})));
}
},
OnMsgShowOutCard: function(e, t) {
this.recentOutCardValue = e;
this.clearOutCard();
this.hideSplitLine();
var i = this.getOutCardPos(t);
if (0 == t) {
(n = this.createOutCard(e)).setPosition(this.clickCardPos.x, this.clickCardPos.y);
n.runAction(cc.moveTo(.15, i));
} else {
var n;
(n = this.createOutCard(e)).setPosition(this._playerPos[t].x, this._playerPos[t].y);
n.setScale(.4);
n.runAction(cc.spawn(cc.scaleTo(.15, 1), cc.moveTo(.15, i)));
}
this.CloseTimer();
},
OnMsgShowOperationTypes: function(e, t) {
this.xiabi_actions = {};
this.xiabi_actions = t;
this.decodeOperationValue(e);
(this._canEat || this._canPeng || this._canWin) && this.scheduleOnce(function() {
this.showOperationBtns();
}, .5);
},
OnMsgUpdateGameCount: function() {
this.lbGameCount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
},
OnMsgShowItems: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = !this.isReconnecting;
this.operationBtnsNode.active = !1;
this.clearOutCard();
for (var s = 0; s < i.length; s++) {
this.showIconByItem(i[s][0], n, t, this.isReconnecting);
this.savePlayersItem(n, i[s]);
this.showItemCards(n, i[s], a);
this.updateHuCount(n);
}
},
OnMsgShowPickCard: function(i, e, t) {
this.recentOutCardValue = e;
var n = this.showPickCard(e, i), a = !1;
if (0 == this.pickCardCount && 20 == this.getSelfFoldCount() && !this.isReconnectGame) {
n.tag = 10010;
a = !0;
this.scheduleOnce(function() {
var e = {};
if (0 == i) {
n.removeFromParent();
n = null;
e = {
x: 0,
y: -300
};
var t = cc.vv.zipai_drawCard.drawCard(this.recentOutCardValue, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
t.parent = this.selfHandCardNode;
t.tag = this.recentOutCardValue;
t.setPosition(0, 430);
t.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
t.destroy();
this.drawHolds(this.holdstemp);
this.isTianHu || this.showSplitLine();
}.bind(this))));
} else {
e = this._playerPos[i];
n.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.fadeOut(0), cc.callFunc(function() {
n.destroy();
})));
}
}.bind(this), 1.5);
}
a || cc.vv.zipai_atlasAndAudioUtils.playCardSound(e, t);
this.pickCardCount++;
},
OnMsgShowFlods: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = 2 == i ? 1 : -1;
if (0 == this.isReconnecting) {
var a = t.length - 1;
this.clearOutCard();
var s = this.createOutCard(t[a]);
s.active = !0;
s.parent = this._foldsNodes[i];
var c = this._foldsNodes[i].convertToNodeSpace(cc.v2(640, 370));
s.setPosition(c.x, c.y);
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.p(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0)), cc.scaleTo(.2, .55 * this._handCardSpriteSize.width / this._outCardSpriteSize.width, .55 * this._handCardSpriteSize.height / this._outCardSpriteSize.height)), cc.callFunc(function() {
s.destroy();
var e = cc.vv.zipai_drawCard.drawCard(t[a], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
e.parent = this._foldsNodes[i];
e.setScale(.55);
e.setPosition(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}.bind(this))));
} else for (var r in t) {
var o = cc.vv.zipai_drawCard.drawCard(t[r], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
o.parent = this._foldsNodes[i];
o.setScale(.55);
o.setPosition(.55 * this._handCardSpriteSize.width * r * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}
},
OnMsgShowHu: function(e) {
this.CloseTimer();
this.hideSplitLine();
this.eatNode.active = !1;
this.operationBtnsNode.active = !1;
var t = cc.vv.gameNetMgr.getSeatByID(e.hu_user_id), i = cc.vv.gameNetMgr.getSeatIndexByID(e.hu_user_id), n = cc.vv.gameNetMgr.getSeatIndexByID(e.pao_user_id), a = cc.vv.gameNetMgr.getLocalIndex(i), s = cc.vv.gameNetMgr.getLocalIndex(n);
if (a == s) {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.ZIMO, a);
} else {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.PAO, s);
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.HU, a);
}.bind(this))));
}
},
OnMsgShowSingleGameOver: function(e) {
var t = e.detail.end_seats_data;
e.detail.hu_user_id, e.detail.pokers.concat();
this.end_seats_data = e.detail.end_seats_data;
for (var i in t) {
var n = cc.vv.gameNetMgr.getSeatIndexByID(t[i].user_id), a = cc.vv.gameNetMgr.getLocalIndex(n);
0 < a && this.showGameOverHandCards(t[i].holds, a);
}
this.clearOutCard();
},
getOutCardPos: function(e) {
switch (e) {
case 0:
return cc.p(0, 70);

case 1:
return cc.p(350, 150);

case 2:
return cc.p(-350, 150);
}
},
savePlayersItem: function(e, t) {
this.doSpecialItem(t, e);
},
doSpecialItem: function(e, t) {
var i = e[0], n = e[1];
e[2];
this.specialItemIndex = -1;
if (i == cc.vv.globalSetting.ITEM_PENG_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var a = 0; a < this._playerItems[t].length; a++) {
if (n == this._playerItems[t][a][1]) {
this._playerItems[t][a] = e;
this.specialItemIndex = a;
return;
}
} else this._playerItems[t].push(e);
},
doChongZhao: function(e, t) {
if (!t) {
this.judgeIsChongZhao(e) && this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.CHONGZHAO, e);
}
},
showIconByItem: function(e, t, i, n) {
if (!n) {
var a = cc.vv.gameNetMgr.getSeatByID(i).sex;
if (e >= cc.vv.globalSetting.ITEM_LEFT_CHI && e <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", a);
} else if (e == cc.vv.globalSetting.ITEM_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO || e == cc.vv.globalSetting.ITEM_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("wai", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO_CHUAN || e == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e >= cc.vv.globalSetting.ITEM_KAI_DUO && e <= cc.vv.globalSetting.ITEM_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", a);
}
}
},
showSplitLine: function() {
this.splitLine.active = !0;
this.splitWord.active = !0;
this.handTip.active = !0;
this.handTip.setPosition(370, -220);
this.handTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.p(60, 70)), cc.moveBy(0, cc.p(-60, -70)))));
},
hideSplitLine: function() {
this.splitLine.active = !1;
this.splitWord.active = !1;
this.handTip.active = !1;
this.handTip.stopAllActions();
},
decodeOperationValue: function(e) {
this.operationsList = [];
this.shangbi_List = [];
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.shangbi_List = this.decodeEatAcition(e);
0 < this.shangbi_List.length && (this._canEat = !0);
0 != (e & 1 << cc.vv.globalSetting.OPERATE_PASS) && (this._canPass = !0);
if (0 != (e & 1 << cc.vv.globalSetting.OPERATE_PENG)) {
this.operationsList.push(cc.vv.globalSetting.OPERATE_PENG);
this._canPeng = !0;
}
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_GUO_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_CHUAN);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN_HU);
2 == e && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
}, 2);
},
judgeAutoOperation: function(e, t) {
0 != (e & 1 << t) && this.scheduleOnce(function() {
this.sendMsgOperation(t);
}, 2);
},
judgeHuCode: function(e, t) {
if (0 != (e & 1 << t)) {
this.hucode = t;
this._canWin = !0;
}
},
decodeEatAcition: function(e) {
var t = [];
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_LEFT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_CENTER_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_RIGHT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI);
return t;
},
judgeExistEatAction: function(e, t, i) {
0 != (t & 1 << i) && e.push(i);
},
showOperationBtns: function() {
this.operationBtnsNode.active = !0;
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this._canEat && (this.btn_eat.active = !0);
this._canPeng && (this.btn_peng.active = !0);
this._canPass && (this.btn_pass.active = !0);
this._canWin && (this.btn_win.active = !0);
this.isTianHu && (this.operationBtnsNode.active = !1);
},
showIcon: function(e, t) {
if (1 != this.isReconnecting) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wei");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
e == cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN && (i.y += 130);
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
},
showItemCards: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = t[0], a = t[1], s = cc.vv.HGW_Utils.getItemCards(n, a), c = this._itemsNodes[e].convertToNodeSpace(cc.v2(640, 410)), r = 1 == e ? -1 : 1, o = i ? .2 : 0;
this._PlayerItemCount[e] = 0 <= this.specialItemIndex ? this.specialItemIndex : this._PlayerItemCount[e];
for (var h = 0; h < s.length; h++) {
var l = null;
if (0 < s[h]) {
l = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_SAO && h < 2 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(n == cc.vv.globalSetting.ITEM_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) && h < 3 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (n >= cc.vv.globalSetting.ITEM_LEFT_CHI && n <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI && 2 == h) {
l.getComponent("zipai_card").setBlack(!1);
}
} else l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
l.setScale(.55);
l.parent = this._itemsNodes[e];
l.setPosition(c.x, c.y);
l.runAction(cc.moveTo(o, cc.p(r * this._PlayerItemCount[e] * this._handCardSpriteSize.width * .55 + r * this._handCardSpriteSize.width * .55 / 2, .55 * this._handCardSpriteSize.height * h)));
}
this.specialItemIndex < 0 ? this._PlayerItemCount[e]++ : this._PlayerItemCount[e] = this._playerItems[e].length;
},
judgeIsChongZhao: function(e) {
var t = this._playerItems[e].length;
if ((n = this._playerItems[e][t - 1][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) for (var i = 0; i < t - 1; i++) {
var n;
if ((n = this._playerItems[e][i][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) return !0;
}
return !1;
},
showGameOverHandCards: function(e, t) {
this.gameOverHandNode.active = !0;
var i = this.gameOverHandNode.getChildByName([ "right", "left" ][t - 1]);
i.active = !0;
i.removeAllChildren();
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = i;
a.setScale(.75);
a.setPosition(n % 7 * this._handCardSpriteSize.width * .75 - 126, .75 * this._handCardSpriteSize.height - .75 * this._handCardSpriteSize.height * Math.floor(n / 7));
}
},
deleteOutCards: function(e) {
var t = this.getNeedDeleteCards(e);
if (1 != t.length) {
for (var i in t) for (var n = !1, a = 0; a < this._handcardsInfoList.length; a++) {
for (var s = 0; s < this._handcardsInfoList[a].cards.length; s++) {
var c = this._handcardsInfoList[a].cards[s].getComponent("zipai_card").getValue();
if (t[i] == c) {
this.deleteOutCard(a, s);
n = !0;
break;
}
}
if (1 == n) break;
}
this.replaceCards();
} else {
this.deleteOutCard(this._outCardCoordinate.x, this._outCardCoordinate.y);
this.replaceCards();
}
},
deleteOutCard: function(e, t) {
this._handcardsInfoList[e].cards[t].destroy();
1 < this._handcardsInfoList[e].cards.length ? this._handcardsInfoList[e].cards.splice(t, 1) : this._handcardsInfoList.splice(e, 1);
},
getNeedDeleteCards: function(e) {
for (var t = [], i = 0; i < this.holdstemp.length; i++) {
var n = e.indexOf(this.holdstemp[i]);
-1 != n ? e.splice(n, 1) : t.push(this.holdstemp[i]);
}
return t;
},
getSelfFoldCount: function() {
for (var e = 0, t = 0; t < this._handcardsInfoList.length; t++) e += this._handcardsInfoList[t].cards.length;
return e;
},
OnClickBtnEat: function() {
cc.vv.audioMgr.playBtnClick();
this.eatlist = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.clearXiabiCards();
this.showEatCards(this.shangbi_List, cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI);
},
OnClickBtnPeng: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PENG);
},
OnClickBtnWin: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(this.hucode);
},
OnClickBtnPass: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.has_action = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
},
OnClickCloseEatNode: function() {
if (1 == this.eatNode.active) {
this.eatNode.active = !1;
this.shangbi_way = null;
this.xiabi_way = null;
}
},
sendMsgOperation: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, i = JSON.parse(cc.vv.msgTemp_GLZP.CS_card_type_action);
i.action = e;
i.xiabi_action = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("wp_card_type_action", i);
},
showEatCards: function(e, t) {
if (0 != e.length) for (var i in e) e[i] == cc.vv.globalSetting.OPERATE_LEFT_CHI ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 1, this.recentOutCardValue + 2 ], cc.vv.globalSetting.OPERATE_LEFT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_CENTER_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 1, this.recentOutCardValue, this.recentOutCardValue + 1 ], cc.vv.globalSetting.OPERATE_CENTER_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_RIGHT_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 2, this.recentOutCardValue - 1, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_RIGHT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI ? this.showSingleEatCard([ 2, 7, 10 ], cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI ? this.showSingleEatCard([ 12, 17, 20 ], cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI ? this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 10, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI && (this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue - 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t));
},
showSingleEatCard: function(e, t, i) {
this.eatNode.active = !0;
this.eatlist[this.eatWayCount] = {
cardSprites: [],
operation: null,
type: null
};
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = this.eatNode;
a.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? a.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 170 - this._handCardSpriteSize.height * n) : a.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -45 - this._handCardSpriteSize.height * n);
this.eatlist[this.eatWayCount].cardSprites.push(a);
}
this.eatlist[this.eatWayCount].operation = t;
this.eatlist[this.eatWayCount].type = i;
var s = new cc.Node("New Sprite");
s.addComponent(cc.Sprite).spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("jiantou");
s.parent = this.eatNode;
s.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? s.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 10) : s.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -200);
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.15, cc.p(0, -3.5)), cc.moveBy(.3, cc.p(0, 7)), cc.moveBy(.15, cc.p(0, -3.5)))));
this.eatWayCount++;
},
dealAction: function() {
if (!this.isReconnecting) {
var e = 0;
this.node.runAction(cc.repeat(cc.sequence(cc.callFunc(function() {
cc.vv.zipai_atlasAndAudioUtils.playDealCardsSound();
}), cc.delayTime(.55)), 4));
for (var t = 0; t < this._handcardsInfoList.length; t++) for (var i = 0; i < this._handcardsInfoList[t].cards.length; i++) {
e++;
this._handcardsInfoList[t].cards[i].runAction(cc.sequence(cc.hide(), cc.delayTime(.1 * e), cc.show()));
}
}
},
showXiabiCards: function(e) {
this.xiabi_list = [];
this.eatWayCount = this.shangbi_List.length;
this.xiabi_list = this.decodeEatAcition(this.xiabi_actions[e]);
this.showEatCards(this.xiabi_list, cc.vv.zipai_cardsSort.enumTalbe.eatType.XIA_BI);
},
CloseTimer: function() {
for (var e in this._seats2) this._seats2[e].closeTimer();
},
ShowTimer: function(e, t) {
this._seats2[e].showTimer(t);
},
showPickCard: function(e, t) {
var i = null, n = this.getOutCardPos(t);
this.clearOutCard();
if (0 == e) {
(i = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK)).parent = this.outCardPools;
i.tag = 1e3;
} else i = this.createOutCard(e);
i.active = !1;
i.setPosition(n);
this.bigCardBack.setScale(.6);
this.bigCardBack.setPosition(0, 270);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, n), cc.scaleTo(.3, 1)), cc.callFunc(function() {
this.bigCardBack.active = !1;
i.active = !0;
}.bind(this))));
return i;
},
createOutCard: function(e) {
var t = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG);
t.parent = this.outCardPools;
t.tag = 1e3;
return t;
},
drawHolds: function(e) {
this.selfHandCardNode.removeAllChildren(!1);
this._handcardsInfoList = [];
for (var t = e.concat(), i = cc.vv.zipai_cardsSort.cardSort(t), n = 0; n < i.sort.length; n++) {
this._handcardsInfoList[n] = {
posx: n * this._outCardSpriteSize.width - 320,
cards: []
};
for (var a = 0; a < Math.ceil(i.sort[n].type); a++) {
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.threeNotSame && 2 == a && (i.sort[n].value = 10 < i.sort[n].value ? i.sort[n].value - 10 : i.sort[n].value + 10);
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.shunZi && 0 < a && i.sort[n].value++;
(s = cc.vv.zipai_drawCard.drawCard(i.sort[n].value, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.sort[n].value;
s.getComponent("zipai_card").setOrder(Math.ceil(i.sort[n].type) - a);
s.getComponent("zipai_card").setType(i.sort[n].type);
s.setLocalZOrder(Math.ceil(i.sort[n].type) - a);
this._handcardsInfoList[n].cards.push(s);
}
}
for (n = 0; n < i.single.length; n++) {
n % 3 == 0 && (this._handcardsInfoList[i.sort.length + Math.floor(n / 3)] = {
posx: (i.sort.length + Math.floor(n / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var s;
(s = cc.vv.zipai_drawCard.drawCard(i.single[n], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.single[n];
s.getComponent("zipai_card").setOrder(i.single.length - n);
s.setLocalZOrder(i.single.length - n);
this._handcardsInfoList[i.sort.length + Math.floor(n / 3)].cards.push(s);
}
this.replaceCards();
},
showHuNode: function() {
for (var e = 0; e < this._maxPlayerCount; e++) this.huNodeList[e].node.active = !0;
},
updateHuCount: function(e) {
for (var t = 0, i = 0; i < this._playerItems[e].length; i++) {
var n = this._playerItems[e][i][0], a = this._playerItems[e][i][1], s = cc.vv.HGW_Utils.getItemCards(n, a);
t += cc.vv.HGW_Utils.getHuCount(n, s);
}
this.huNodeList[e].lb.string = t;
},
replaceCards: function() {
for (var e = 0; e < this._handcardsInfoList.length; e++) for (var t = 0; t < this._handcardsInfoList[e].cards.length; t++) {
this._handcardsInfoList[e].cards[t].setPosition(e * this._outCardSpriteSize.width - 310 + (8 - this._handcardsInfoList.length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * t - .15 * this._outCardSpriteSize.height);
this._handcardsInfoList[e].cards[t].setLocalZOrder(this._handcardsInfoList[e].cards.length - t);
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setOrder(Math.ceil(this._handcardsInfoList[e].cards.length - t));
var i = this._handcardsInfoList[e].cards[t].getComponent("zipai_card").getType();
if (i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.three || i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.four) {
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setBlack(!0);
}
}
},
clearItemsCards: function() {
for (var e = 0; e < this._itemsNodes.length; e++) this._itemsNodes[e].removeAllChildren();
},
clearHolds: function() {
this.selfHandCardNode.removeAllChildren();
},
clearFolds: function() {
for (var e = 0; e < this._foldsNodes.length; e++) this._foldsNodes[e].removeAllChildren();
},
clearSurplusCards: function() {
this.surplusCardNode.removeAllChildren();
},
clearOutCard: function() {
for (;this.outCardPools.getChildByTag(1e3); ) this.outCardPools.removeChildByTag(1e3);
},
clearGameOverHandCards: function() {
this.gameOverHandNode.active = !1;
for (var e = 1; e < this.gameOverHandNode.children.length; e++) this.gameOverHandNode.children[e].removeAllChildren();
},
clearXiabiCards: function() {
for (;this.eatNode.getChildByTag(-2222); ) this.eatNode.removeChildByTag(-2222);
},
clearShangbiCards: function() {
for (;this.eatNode.getChildByTag(2222); ) this.eatNode.removeChildByTag(2222);
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
l;
}
});
cc._RF.pop();
}, {
eatNodeEventHandler: "eatNodeEventHandler",
holdsEventHandler: "holdsEventHandler"
} ],
HGW_Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "04246nPR+tAiZ5Ofhg4HkqO", "HGW_Utils");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && (cc.vv.HGW_Utils = this);
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI:
i.push(t + 1);
i.push(t + 2);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ACTION_CENTER_CHI_XIABI:
i.push(t - 1);
i.push(t + 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ACTION_RIGHT_CHI_XIABI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI_XIABI:
switch (t) {
case 2:
i.push(7);
i.push(10);
i.push(t);
break;

case 7:
i.push(2);
i.push(10);
i.push(t);
break;

case 10:
i.push(2);
i.push(7);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI_XIABI:
switch (t) {
case 12:
i.push(17);
i.push(20);
i.push(t);
break;

case 17:
i.push(12);
i.push(20);
i.push(t);
break;

case 20:
i.push(12);
i.push(17);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t);
i.push(t + 10);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t);
i.push(t);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ITEM_PENG:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getHuCount: function(e, t) {
for (var i = 0; i < t.length; i++) for (var n = i + 1; n < t.length; n++) if (t[i] > t[n]) {
var a = t[i];
t[i] = t[n];
t[n] = a;
}
if (0 == t[0]) return 0;
switch (e) {
case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
return 10 < t[0] ? 12 : 9;

case cc.vv.globalSetting.ITEM_KAN:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
return 10 < t[0] ? 6 : 3;

case cc.vv.globalSetting.ITEM_PENG:
return 10 < t[0] ? 3 : 1;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
return 10 < t[0] ? 9 : 6;

case cc.vv.globalSetting.ITEM_DUIZI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
return 0;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
return 6;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
return 3;

case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SHUNZI:
return 1 == t[0] ? 3 : 11 == t[0] ? 6 : 0;
}
}
});
cc._RF.pop();
}, {} ],
HTTP: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "90ae61J525JQIt5taF3Nce2", "HTTP");
cc.GLOBAL_CONFIG_URL = "http://assets.totorotec.com/config_test.json";
cc.ENV = "dev";
var h = cc.Class({
extends: cc.Component,
statics: {
sessionId: 0,
userId: 0,
master_url: "",
url: "",
sendRequest: function(e, t, i, n, a) {
null == t && (t = {});
t.time = Math.floor(Date.now() / 1e3);
cc.vv.sign.make_sign(t);
var s = cc.loader.getXMLHttpRequest();
s.timeout = 5e3;
var c = "?";
for (var r in t) {
"?" != c && (c += "&");
c += r + "=" + t[r];
}
null == n && (n = h.url);
var o = n + e + encodeURI(c);
console.log("RequestURL:" + o);
console.log("extraUrl=:", n);
s.open("GET", o, !0);
cc.sys.isNative && s.setRequestHeader("Accept-Encoding", "gzip,deflate", "text/html;charset=UTF-8");
s.onreadystatechange = function() {
if (4 === s.readyState && 200 <= s.status && s.status < 300) {
console.log("http res(" + s.responseText.length + "):" + s.responseText);
try {
var e = null;
if (a) {
var t = secret.aes_decrypt(s.responseText, null);
e = JSON.parse(t);
} else e = JSON.parse(s.responseText);
null !== i && i(e);
} catch (e) {
console.log("err:" + e);
} finally {
cc.vv && cc.vv.wc;
}
}
};
cc.vv && cc.vv.wc;
s.send();
return s;
},
sendRequest_http: function(e, t, i) {
var n = cc.loader.getXMLHttpRequest();
n.timeout = 5e3;
var a = "?";
for (var s in t) {
"?" != a && (a += "&");
a += s + "=" + t[s];
}
var c = e + encodeURI(a);
console.log("RequestURL:" + c);
n.open("GET", c, !0);
cc.sys.isNative && n.setRequestHeader("Access-Control-Allow-Origin", "Accept-Encoding", "gzip,deflate", "text/html;charset=UTF-8");
n.onreadystatechange = function() {
if (4 === n.readyState && 200 <= n.status && n.status < 300) {
console.log("http res(" + n.responseText.length + "):" + n.responseText);
try {
var e = n.responseText;
null !== i && i(e);
} catch (e) {
console.log("err:" + e);
} finally {
cc.vv && cc.vv.wc;
}
}
};
cc.vv && cc.vv.wc;
n.send();
return n;
}
}
});
cc._RF.pop();
}, {} ],
HYLH_GameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d587racItKCK2f76mIApLz", "HYLH_GameOver");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.initData();
this.initNode();
this.initEventHandler();
this.showBtnReadyLabelByState();
}
},
initData: function() {
this.huCountList = [];
this.itemLableList = [];
this.userList = [];
this._maxPlayerNum = 4;
this.itemCardTag = 1100;
this.xingSignTag = 1101;
this._handCardSpriteSize = {
width: 56,
height: 62
};
},
initNode: function() {
this._gameOverRoot = this.node.getChildByName("bg");
this._surplusCardsNode = this._gameOverRoot.getChildByName("surplusCardsNode");
this.initHuIcon();
this.initCommonLabels();
this.initHuCountLabels();
this.initUsers();
this.initFanLables();
this.node.active = !1;
},
initHuIcon: function() {
this.icon_huCardSign = this._gameOverRoot.getChildByName("huCardFrame");
this.icon_huCardSign.active = !1;
this.icon_huCardSign.setLocalZOrder(10);
},
initCommonLabels: function() {
this.lb_huXi = this._gameOverRoot.getChildByName("lb_huXi").getComponent(cc.Label);
this.lb_fanShu = this._gameOverRoot.getChildByName("lb_fanShu").getComponent(cc.Label);
this.lb_tunShu = this._gameOverRoot.getChildByName("lb_tunShu").getComponent(cc.Label);
this.lb_xing = this._gameOverRoot.getChildByName("lb_xing").getComponent(cc.Label);
this.lb_total = this._gameOverRoot.getChildByName("lb_total").getComponent(cc.Label);
},
initHuCountLabels: function() {
this._huCountNode = this._gameOverRoot.getChildByName("itemCardHuCountNode");
for (var e = 0; e < 8; e++) {
var t = this._huCountNode.getChildByName("huCount" + e), i = this._huCountNode.getChildByName("itemLable" + e);
t.getComponent(cc.Label).string = "";
i.getComponent(cc.Label).string = "";
this.huCountList.push(t);
this.itemLableList.push(i);
}
},
initUsers: function() {
for (var e = this._gameOverRoot.getChildByName("UserNode"), t = 0; t < this._maxPlayerNum; t++) {
var i = {}, n = e.getChildByName("user" + t);
i.frame = n.getChildByName("frame").getComponent(cc.Sprite);
i.icon_winOrLoseTyp = n.getChildByName("icon_winOrLoseType").getComponent(cc.Sprite);
i.icon_winOrLose = n.getChildByName("icon_winOrLose").getComponent(cc.Sprite);
i.lb_score = n.getChildByName("lb_score").getComponent(cc.Label);
i.lb_name = n.getChildByName("lb_name").getComponent(cc.Label);
i.lb_id = n.getChildByName("lb_id").getComponent(cc.Label);
i.image_atavar = n.getChildByName("head").getChildByName("image_Atavar").getComponent("ImageLoader");
this.userList.push(i);
}
},
initFanLables: function() {
var e = this._gameOverRoot.getChildByName("fanLabelNode");
this.Lb_fanTypeList = [];
for (var t = 0; t < 2; t++) {
var i = "lb_fanType" + t, n = e.getChildByName(i).getComponent(cc.Label);
this.Lb_fanTypeList.push(n);
}
},
showBtnReadyLabelByState: function() {
var e = this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label);
cc.vv.gameNetMgr.isOver ? e.string = "总结算" : e.string = "继续";
},
initEventHandler: function() {
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("wp_over", this.call_game_over, this);
this.gameRoot.on("game_result_showLB", this.showLb, this);
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function(e) {
var t = this;
if (1 != e.detail.force) {
var i = cc.vv.gameNetMgr.getIsSpcialHu() ? 1 : 0;
this.gameRoot && this.gameRoot.runAction(cc.sequence(cc.delayTime(3.5 + i), cc.callFunc(function(e) {
t.onGameOver();
})));
} else this.onGameOver();
},
onGameOver: function() {
this.icon_huCardSign.active = !1;
this.node.active = !0;
var e = cc.vv.gameNetMgr.gameOverData, t = e.end_seats_data, i = (e.force, e.tian_hu, 
e.hu_user_id), n = e.pao_user_id;
this.hu_card = e.hu_card;
e.button;
var a = e.pokers, s = e.hu_details;
this.xingCard = e.xing_card;
this.totalHuCount = 0;
this.hu_index = 0;
this.pick_hu = e.pick_hu;
console.log("log----------fan_group xing_card xing_nums=:", e.fan_group, e.xing_card, e.xing_nums);
this.clear();
this.showSurplusCards(a);
this.showItemsInfo(t, i);
this.showHuDetails(t, s);
this.showPlayer(t, i, n);
this.showFanGroups(e.fan_group);
this.showXingInfo(e.xing_card, e.xing_nums);
this.lb_huXi.string = "胡息 +" + e.total_hu_nums;
this.lb_fanShu.string = "番数 +" + e.total_fan_nums;
this.lb_tunShu.string = "囤数 +" + e.base_zi_nums;
},
showSurplusCards: function(e) {
for (var t = 0, i = 0; i < e.length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(e[i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.parent = this._surplusCardsNode;
n.setScale(.6);
n.setPosition((i + .5) * this._handCardSpriteSize.width * .6, 5);
if (e[i] == this.xingCard && t <= 0) {
n.getComponent("zipai_card").setBlack(!1);
t++;
}
}
},
showItemsInfo: function(e, t) {
for (var i = 0; i < e.length; i++) if (t == e[i].user_id) {
for (var n = 0; n < e[i].items.length; n++) {
var a = n, s = e[i].items[n][0], c = e[i].items[n][1], r = cc.vv.HYLH_Utils.getItemCards(s, c), o = cc.vv.HYLH_Utils.getHuCount(s, r), h = this.getItemType(s);
this.huCountList[n].getComponent(cc.Label).string = o;
this.itemLableList[a].getComponent(cc.Label).string = h;
this.showItemCards(r, a, cc.vv.zipai_drawCard.enumTalbe.cardSort.ITEM, s);
this.totalHuCount += o;
}
this.hu_index = i;
break;
}
},
showHuDetails: function(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i][0], a = t[i][1], s = e[this.hu_index].items.length + i;
this.showItemCards(a, s, cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS, n);
var c = cc.vv.HYLH_Utils.getHuCount(n, a), r = this.getItemType(n);
this.huCountList[s].getComponent(cc.Label).string = c;
this.itemLableList[s].getComponent(cc.Label).string = r;
this.totalHuCount += c;
}
this.huCountList[7].getComponent(cc.Label).string = this.totalHuCount;
this.lb_total.string = this.totalHuCount;
},
showItemCards: function(e, t, i, n) {
for (var a in e) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == a && (s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
s.parent = this._gameOverRoot;
s.setScale(.5);
s.tag = this.itemCardTag;
var c = this.huCountList[t].getPosition();
s.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
if (i == cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS && !this.icon_huCardSign.active && e[a] == this.hu_card) {
this.icon_huCardSign.active = !0;
this.icon_huCardSign.setScale(.8);
this.icon_huCardSign.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
!0;
}
e[a] == this.xingCard && this.showXingIcon(s.getPosition());
}
},
getItemType: function(e) {
var t = "";
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
t = "吃";
break;

case cc.vv.globalSetting.ITEM_PENG:
t = "碰";
break;

case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
t = "偎";
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
t = "提";
break;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
t = "跑";
break;

case cc.vv.globalSetting.ITEM_KAN:
t = "坎";
break;

case cc.vv.globalSetting.ITEM_DUIZI:
t = "对";
break;

case cc.vv.globalSetting.ITEM_SMALL_YIWUSHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_YIWUSHI_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_SHUNZI:
t = "句";
}
return t;
},
showPlayer: function(e, t, i) {
this.sortByScore(e);
for (var n = 0; n < e.length; n++) {
var a = null, s = null, c = null;
if (0 < e[n].end_score) {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_win");
s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("win");
t == i && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_zimo"));
} else {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_lose");
e[n].end_score < 0 && (s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("lose"));
e[n].user_id == i && this.pick_hu <= 0 && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("fangpao"));
e[n].user_id == i && 0 < this.pick_hu && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_dianpao"));
}
var r = this.getUserNameByID(e[n].user_id);
this.userList[n].frame.spriteFrame = a;
this.userList[n].icon_winOrLose.spriteFrame = s;
this.userList[n].icon_winOrLoseTyp.spriteFrame = c;
this.userList[n].lb_score.string = e[n].end_score;
if (cc.vv.userMgr.isHighDefend) {
this.userList[n].lb_name.string = "已屏蔽";
this.userList[n].lb_id.string = "已屏蔽";
} else {
this.userList[n].lb_name.string = r;
this.userList[n].lb_id.string = e[n].user_id;
}
this.userList[n].image_atavar.setUserID(e[n].user_id);
}
},
sortByScore: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t].end_score < e[i].end_score) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
showFanGroups: function(e) {
this.resetfanLabels();
var t = 0;
for (var i in e) {
var n = Number(i);
this.showSingleFanGroup(t, n, e[i]);
t++;
}
},
resetfanLabels: function() {
for (var e = 0; e < this.Lb_fanTypeList.length; e++) this.Lb_fanTypeList[e].string = "";
},
showSingleFanGroup: function(e, t, i) {
var n = "";
switch (t) {
case cc.vv.globalSetting.FAN_TYPE_SELF_HU:
n = "自摸";
break;

case cc.vv.globalSetting.FAN_TYPE_YI_DIAN_HONG:
n = "点红";
break;

case cc.vv.globalSetting.FAN_TYPE_XIAO_HONG_HU:
n = "小红胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DA_HONG_HU:
n = "大红胡";
break;

case cc.vv.globalSetting.FAN_TYPE_WU_HU:
n = "乌胡";
}
this.Lb_fanTypeList[e].string = 0 < i ? n + "x" + i + "番" : n;
},
showXingInfo: function(e, t) {
this.lb_xing.string = "";
if (!(e <= 0)) {
console.log("log-------------showXingInfo ->  xingCard=:", e);
var i = cc.vv.HYLH_Utils.NumberToChinese(e), n = cc.vv.gameNetMgr.getXingType(), a = "";
n == cc.vv.globalSetting.MASK_FAN_XING ? a = "翻醒:" : n == cc.vv.globalSetting.MASK_SUI_XING && (a = "随醒:");
a = a + "醒[" + i + "] +" + t + "分";
this.lb_xing.string = a;
}
},
showXingIcon: function(e) {
var t = new cc.Node("New Sprite"), i = t.addComponent(cc.Sprite), n = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("bird");
i.spriteFrame = n;
t.parent = this._gameOverRoot;
t.tag = this.xingSignTag;
t.setLocalZOrder(10);
t.setScale(1);
t.setPosition(e.x + this._handCardSpriteSize.width / 4, e.y + this._handCardSpriteSize.height / 4);
},
getUserNameByID: function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) if (e == t[i].userid) return t[i].name;
},
clear: function() {
this.clearHuCount();
this.clearItemLabels();
this.clearItemCards();
this.clearXingSigns();
this.clearSurplusCards();
},
clearHuCount: function() {
for (var e in this.huCountList) this.huCountList[e].getComponent(cc.Label).string = "";
},
clearItemLabels: function() {
for (var e in this.itemLableList) this.itemLableList[e].getComponent(cc.Label).string = "";
},
clearItemCards: function() {
for (;this._gameOverRoot.getChildByTag(this.itemCardTag); ) this._gameOverRoot.removeChildByTag(this.itemCardTag);
},
clearXingSigns: function() {
for (;this._gameOverRoot.getChildByTag(this.xingSignTag); ) this._gameOverRoot.removeChildByTag(this.xingSignTag);
},
clearSurplusCards: function() {
this._surplusCardsNode.removeAllChildren();
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.gameRoot.emit("show_gameResult"); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.active = !1;
this.gameRoot.emit("fresh_all_score");
},
onDestroy: function() {
this.gameRoot.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
HYLH_GlobalSetting: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b6e60q/lNtIOIkIDeSvwacw", "HYLH_GlobalSetting");
var a = {
DISMISS_TIME: 12e4,
GAME_TYPE_CLASSIC: 1,
MASK_PC10: 1,
MASK_PC20: 2,
MASK_FAN_XING: 3,
MASK_SUI_XING: 4,
MASK_NO_XING: 5,
MASK_HUXI_DEFAULT: 6,
MASK_TWO_AND_ONE: 7,
MASK_MMYI_UPTREE: 8,
MASK_RED_AND_BLACK: 9,
MASK_ONE_FIVE_TEN: 10,
MASK_PAO: 11,
MASK_MUST_HU: 12,
MASK_SELF_HU_FAN: 13,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
ITEM_LEFT_CHI: 1,
ITEM_CENTER_CHI: 2,
ITEM_RIGHT_CHI: 3,
ITEM_SMALL_ERQISHI_CHI: 4,
ITEM_BIG_ERQISHI_CHI: 5,
ITEM_TWO_BIG_SMALL_CHI: 6,
ITEM_TWO_SMALL_BIG_CHI: 7,
ITEM_PENG: 8,
ITEM_SAO: 9,
ITEM_GUO_SAO: 10,
ITEM_SAO_CHUAN: 11,
ITEM_KAI_DUO: 12,
ITEM_PENG_KAI_DUO: 13,
ITEM_SAO_KAI_DUO: 14,
ITEM_SAO_SAO_CHUAN: 15,
ITEM_SELF_SAO_CHUAN: 16,
ITEM_KAN: 17,
ITEM_DUIZI: 18,
ITEM_SHUNZI: 19,
ITEM_SMALL_YIWUSHI_CHI: 20,
ITEM_BIG_YIWUSHI_CHI: 21,
OPERATE_PASS: 1,
OPERATE_LEFT_CHI: 2,
OPERATE_CENTER_CHI: 3,
OPERATE_RIGHT_CHI: 4,
OPERATE_SMALL_ERQISHI_CHI: 5,
OPERATE_BIG_ERQISHI_CHI: 6,
OPERATE_TWO_BIG_SMALL_CHI: 7,
OPERATE_TWO_SMALL_BIG_CHI: 8,
OPERATE_PENG: 9,
OPERATE_SAO: 10,
OPERATE_GUO_SAO: 11,
OPERATE_SAO_CHUAN: 12,
OPERATE_KAI_DUO: 13,
OPERATE_PENG_KAI_DUO: 14,
OPERATE_SAO_KAI_DUO: 15,
OPERATE_SAO_SAO_CHUAN: 16,
OPERATE_HU: 17,
OPERATE_PENG_KAI_DUO_HU: 18,
OPERATE_SAO_KAI_DUO_HU: 19,
OPERATE_SAO_SAO_CHUAN_HU: 20,
OPERATE_SMALL_YIWUSHI_CHI: 21,
OPERATE_BIG_YIWUSHI_CHI: 22,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_LEFT_CHI: 3,
ACTION_CENTER_CHI: 4,
ACTION_RIGHT_CHI: 5,
ACTION_SMALL_ERQISHI_CHI: 6,
ACTION_BIG_ERQISHI_CHI: 7,
ACTION_TWO_BIG_SMALL_CHI: 8,
ACTION_TWO_SMALL_BIG_CHI: 9,
ACTION_PENG: 10,
ACTION_SAO: 11,
ACTION_GUO_SAO: 12,
ACTION_SAO_CHUAN: 13,
ACTION_KAI_DUO: 14,
ACTION_PENG_KAI_DUO: 15,
ACTION_SAO_KAI_DUO: 16,
ACTION_SAO_SAOCHUAN: 17,
ACTION_SELF_SAO_CHUAN: 18,
ACTION_HU: 19,
ACTION_LEFT_CHI_XIABI: 20,
ACTION_CENTER_CHI_XIABI: 21,
ACTION_RIGHT_CHI_XIABI: 22,
ACTION_SMALL_ERQISHI_CHI_XIABI: 23,
ACTION_BIG_ERQISHI_CHI_XIABI: 24,
ACTION_TWO_BIG_SMALL_CHI_XIABI: 25,
ACTION_TWO_SMALL_BIG_CHI_XIABI: 26,
ACTION_SMALL_YIWUSHI_CHI: 27,
ACTION_BIG_YIWUSHI_CHI: 28,
ACTION_SMALL_YIWUSHI_CHI_XIABI: 29,
ACTION_BIG_YIWUSHI_CHI_XIABI: 30,
FAN_TYPE_SELF_HU: 1,
FAN_TYPE_YI_DIAN_HONG: 2,
FAN_TYPE_XIAO_HONG_HU: 3,
FAN_TYPE_DA_HONG_HU: 4,
FAN_TYPE_WU_HU: 5,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
MIN_HUXI_NUMS: 6,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
has_rule: function(e, t) {
return 0 != (e & 1 << t);
},
type_check: function(e) {
var t = 0;
a.has_rule(e, a.GAME_TYPE_CLASSIC) && (t += 1);
return 1 == t;
},
rule_check: function(e) {
var t = 0;
a.has_rule(e, a.MASK_PC10) && (t += 1);
a.has_rule(e, a.MASK_PC20) && (t += 1);
if (1 != t) return !1;
var i = 0;
a.has_rule(e, a.MASK_INGOT_GAME) && (i += 1);
a.has_rule(e, a.MASK_GOLD_GAME) && (i += 1);
if (1 != i) return !1;
a.has_rule(e, a.MASK_FAN_XING) && 1;
a.has_rule(e, a.MASK_SUI_XING) && 1;
a.has_rule(e, a.MASK_NO_XING) && 1;
if (1 != fan_type) return !1;
var n = 0;
a.has_rule(e, a.MASK_TWO_AND_ONE) && (n += 1);
a.has_rule(e, a.MASK_MMYI_UPTREE) && (n += 1);
return 1 == n;
},
get_ingot_value: function(e) {
if (a.has_rule(e, a.MASK_INGOT_GAME)) {
if (a.has_rule(e, a.MASK_PC10)) return 1;
if (a.has_rule(e, a.MASK_PC20)) return 2;
}
if (a.has_rule(e, a.MASK_GOLD_GAME)) {
if (a.has_rule(e, a.MASK_PC10)) return 1;
if (a.has_rule(e, a.MASK_PC20)) return 2;
}
}
};
i.global = a;
cc._RF.pop();
}, {} ],
HYLH_Msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "96249IplcBLGoCyxo3nRJR8", "HYLH_Msgdefine");
var n = {};
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
button: 0,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
total_hu_nums: 0,
base_zi_nums: 0,
total_fan_nums: 0,
xing_card: 0,
xing_nums: 0,
pokers: [],
hu_details: [],
fan_group: {}
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_action_mask = JSON.stringify({
action_mask: 0,
xiabi_actions: {},
card: 0
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.CS_card_type_action = JSON.stringify({
action: 0,
xiabi_action: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
HYLH_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5e3060Z2LNM0qFrp9uC6/H6", "HYLH_Replay");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_iconsNodes: [],
_itemNodes: [],
_foldsNodes: [],
_holdsNodes: [],
_playerPos: []
},
onLoad: function() {
if (cc.vv) {
this.replayGameNode = cc.find("Canvas/replayGame");
this.gameNode = cc.find("Canvas/game");
this.peaceNode = this.replayGameNode.getChildByName("peaceNode");
this.replayGameNode.active = !0;
this.peaceNode.active = !1;
this.gameNode.active = !1;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.initData();
this.initView();
this.initHoldNodes();
this.initSeats();
this.initBigCardBack();
this.resIconCardPos();
this.initEvent();
this.judgeShowPeace();
} else cc.director.loadScene("loading");
},
initData: function() {
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._beginThrowCardPos = [ {
x: 0,
y: -50
}, {
x: 100,
y: 100
}, {
x: 0,
y: 50
}, {
x: -100,
y: 100
} ];
this.holdsList = [ [], [], [], [] ];
this.foldsList = [ [], [], [], [] ];
this.itemsList = [ [], [], [], [] ];
this.holdsSpriteList = [ [], [], [], [] ];
this.actionCount = 0;
this.outPool = [];
this.outCardTag = 10086;
},
initView: function() {
for (var e = [ "myself", "right", "up", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3"), s = i.getChildByName("icons"), c = i.getChildByName("items"), r = i.getChildByName("folds");
a.active = !1;
this._zhuangs.push(a);
this._iconsNodes.push(s);
this._itemNodes.push(c);
this._foldsNodes.push(r);
this._playerPos.push(i.getPosition());
}
this.cardNode = cc.find("Canvas/replayGame/cardNode");
},
resIconCardPos: function() {
var e = this.node.getChildByName("bg").getChildByName("icon_card"), t = this.node.getChildByName("game").getChildByName("lb_surplusCardNums");
e.setPosition(0, 58);
t.getComponent(cc.Label).string = "";
},
initHoldNodes: function() {
for (var e = [ "selfHandCardNode", "rightHandCardNode", "upHandCardNode", "leftHandCardNode" ], t = 0; t < e.length; t++) {
var i = this.replayGameNode.getChildByName(e[t]);
i && this._holdsNodes.push(i);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.holdsList[i] = e[t].holds.concat();
this.drawHolds(e[t].holds, i);
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button, n = this._seats2[t];
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.cardNode;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initEvent: function() {
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
drawHolds: function(e, t) {
var i = e.concat(), n = cc.vv.zipai_cardsSort.cardSort(i), a = 0 == t ? cc.vv.zipai_drawCard.enumTalbe.cardType.BIG : cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL;
this.holdsSpriteList[t] = [];
this._holdsNodes[t].removeAllChildren();
for (var s = 0; s < n.sort.length; s++) {
this.holdsSpriteList[t][s] = {
posx: s * this._outCardSpriteSize.width - 640,
cards: []
};
for (var c = 0; c < Math.ceil(n.sort[s].type); c++) {
2.5 == n.sort[s].type && 2 == c && (10 < n.sort[s].value ? n.sort[s].value -= 10 : n.sort[s].value += 10);
2.3 == n.sort[s].type && 0 < c && n.sort[s].value++;
(r = cc.vv.zipai_drawCard.drawCard(n.sort[s].value, a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(Math.ceil(n.sort[s].type) - c);
r.setLocalZOrder(Math.ceil(n.sort[s].type) - c);
this.holdsSpriteList[t][s].cards.push(r);
}
}
for (s = 0; s < n.single.length; s++) {
s % 3 == 0 && (this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)] = {
posx: (n.sort.length + Math.floor(s / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var r;
(r = cc.vv.zipai_drawCard.drawCard(n.single[s], a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(n.single.length - s);
r.setLocalZOrder(n.single.length - s);
this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)].cards.push(r);
}
this.replaceCards(t);
},
replaceCards: function(e) {
for (var t = 0; t < this.holdsSpriteList[e].length; t++) for (var i = 0; i < this.holdsSpriteList[e][t].cards.length; i++) {
this.holdsSpriteList[e][t].cards[i].setLocalZOrder(this.holdsSpriteList[e][t].cards.length - i);
this.holdsSpriteList[e][t].cards[i].getComponent("zipai_card").setOrder(Math.ceil(this.holdsSpriteList[e][t].cards.length - i));
if (0 == e) this.holdsSpriteList[e][t].cards[i].setPosition(t * this._outCardSpriteSize.width - 310 + (8 - this.holdsSpriteList[e].length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * i - .1 * this._outCardSpriteSize.height); else {
this.holdsSpriteList[e][t].cards[i].setScale(.75);
this.holdsSpriteList[e][t].cards[i].setPosition(t * this._handCardSpriteSize.width * .75 + (8 - this.holdsSpriteList[e].length) * this._handCardSpriteSize.width / 2 * .75, this._handCardSpriteSize.height * i * .75);
}
}
},
onDoReplayAction: function(e) {
var t = e.detail.action, i = (e.detail.next, t.d_actions), n = i[0], a = i[1], s = i[2], c = i[3], r = cc.vv.gameNetMgr.getLocalIndex(n), o = cc.vv.gameNetMgr.getLocalIndex(c);
console.log("log seat  card  act_type=:", r, s, a);
this.showTurn(r);
if (a != cc.vv.globalSetting.ACTION_HU) this.deleteCard(); else if (n == c) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO, r);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", 1);
} else {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.HU, r);
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PAO, o);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", 1);
}
if (a == cc.vv.globalSetting.ACTION_PICK) {
if (0 < this.outPool.length) {
this.updateFoldsData(this.outPool[0]._card, this.outPool[0]._seat);
this.updateFolds(this.outPool[0]._seat);
this.outPool.pop();
}
if (0 == this.actionCount) this.showFirstPickCardAction(s, r); else {
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
}
} else if (a == cc.vv.globalSetting.ACTION_OUT) {
this.outPool.push({
_card: s,
_seat: r
});
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
(h = []).push(s);
this.updateHoldsData(h, r);
this.updateHolds(r);
} else {
this.outPool.pop();
if (a < cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI) {
var h = (d = this.getItemCards(a, s)).concat();
if (a != cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) for (var l = 0; l < h.length; l++) if (s == h[l]) {
h.splice(l, 1);
break;
}
} else {
var d;
h = (d = this.getItemCards(a, s)).concat();
}
this.showIconByAction(a, r);
this.updateHoldsData(h, r);
this.updateItemsData(d, r, a);
this.updateHolds(r);
this.updateItems(r);
}
this.actionCount++;
},
onDoReplayActionOver: function() {},
updateHolds: function(e) {
this.drawHolds(this.holdsList[e], e);
},
updateItems: function(e) {
for (var t = 1 == e ? -1 : 1, i = 0; i < this.itemsList[e].length; i++) for (var n = 0; n < this.itemsList[e][i].cards.length; n++) {
var a = null;
if (0 < this.itemsList[e][i].cards[n]) {
a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
var s = this.itemsList[e][i].act_type;
s == cc.vv.globalSetting.ACTION_SAO && n < 2 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(s == cc.vv.globalSetting.ACTION_SAO_CHUAN || s == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN || s == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) && n < 3 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI && 2 == n) {
var c = !1;
a.getComponent("zipai_card").setBlack(c);
}
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI && 2 == n) {
c = !1;
a.getComponent("zipai_card").setBlack(c);
}
} else a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
a.setScale(.6);
a.parent = this._itemNodes[e];
a.setPosition(t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
}
},
updateFolds: function(e) {
var t = -1;
2 != e && 3 != e || (t = 1);
for (var i = 0; i < this.foldsList[e].length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(this.foldsList[e][i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.setScale(.6);
n.parent = this._foldsNodes[e];
n.setPosition(.6 * this._handCardSpriteSize.width * i * t + t * this._handCardSpriteSize.width * .6 / 2, 0);
}
},
updateHoldsData: function(e, t) {
for (var i = 0; i < e.length; i++) for (var n = 0; n < this.holdsList[t].length; n++) if (e[i] == this.holdsList[t][n]) {
this.holdsList[t].splice(n, 1);
break;
}
},
updateItemsData: function(e, t, i) {
var n = this.itemsList[t].length;
this.itemsList[t][n] = {
cards: [],
act_type: i
};
for (var a = 0; a < this.itemsList[t].length; a++) for (var s = 0; s < this.itemsList[t][a].cards.length; s++) if (this.itemsList[t][a].cards[0] == e[0] && this.itemsList[t][a].cards[1] == e[1] && this.itemsList[t][a].cards[2] == e[2] && e[0] == e[1] && e[0] == e[2]) {
this.itemsList[t][a].cards.push(e[0]);
this.itemsList[t].pop();
return;
}
for (a = 0; a < e.length; a++) this.itemsList[t][n].cards.push(e[a]);
},
updateFoldsData: function(e, t) {
this.foldsList[t].push(e);
},
showCard: function(e, t, i) {
(e = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.cardNode;
e.tag = this.outCardTag;
e.setPosition(0, 50);
var n = this;
if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD) {
e.setPosition(this._beginThrowCardPos[t].x, this._beginThrowCardPos[t].y);
e.runAction(cc.moveTo(.1, cc.p(0, 50)));
} else if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD) {
e.active = !1;
e.setPosition(0, 50);
e.setScale(.2, 1);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.1, .2, 1), cc.callFunc(function() {
e.active = !0;
e.runAction(cc.scaleTo(.1, 1, 1));
}), cc.callFunc(function() {
n.bigCardBack.active = !1;
})));
}
},
showFirstPickCardAction: function(e, t) {
var i = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
i.parent = this.cardNode;
i.tag = this.outCardTag;
i.setPosition(0, 50);
var n = 0 < t ? this._playerPos[t] : {
x: 0,
y: -300
}, a = this;
i.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.1, cc.p(n.x, n.y)), cc.callFunc(function() {
i.destroy();
a.holdsList[t].push(e);
a.updateHolds(t);
})));
},
deleteCard: function() {
for (;this.cardNode.getChildByTag(this.outCardTag); ) this.cardNode.removeChildByTag(this.outCardTag);
},
showTurn: function(e) {
for (var t = 0; t < this._seats2.length; t++) this._seats2[t].hideIconTurn();
this._seats2[e].showIconTurn();
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ACTION_LEFT_CHI:
case cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI:
i.push(t + 1);
i.push(t + 2);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_CENTER_CHI:
case cc.vv.globalSetting.ACTION_CENTER_CHI_XIABI:
i.push(t - 1);
i.push(t + 1);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_RIGHT_CHI:
case cc.vv.globalSetting.ACTION_RIGHT_CHI_XIABI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI_XIABI:
switch (t) {
case 2:
i.push(7);
i.push(10);
i.push(t);
break;

case 7:
i.push(2);
i.push(10);
i.push(t);
break;

case 10:
i.push(2);
i.push(7);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI_XIABI:
switch (t) {
case 12:
i.push(17);
i.push(20);
i.push(t);
break;

case 17:
i.push(12);
i.push(20);
i.push(t);
break;

case 20:
i.push(12);
i.push(17);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_SMALL_YIWUSHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_YIWUSHI_CHI_XIABI:
switch (t) {
case 1:
i.push(5);
i.push(10);
i.push(t);
break;

case 5:
i.push(1);
i.push(10);
i.push(t);
break;

case 10:
i.push(1);
i.push(5);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_BIG_YIWUSHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_YIWUSHI_CHI_XIABI:
switch (t) {
case 11:
i.push(15);
i.push(20);
i.push(t);
break;

case 15:
i.push(11);
i.push(20);
i.push(t);
break;

case 20:
i.push(11);
i.push(15);
i.push(t);
}
break;

case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t);
i.push(t + 10);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t);
i.push(t);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ACTION_PENG:
case cc.vv.globalSetting.ACTION_SAO:
case cc.vv.globalSetting.ACTION_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ACTION_SAO_CHUAN:
case cc.vv.globalSetting.ACTION_KAI_DUO:
case cc.vv.globalSetting.ACTION_PENG_KAI_DUO:
case cc.vv.globalSetting.ACTION_SAO_KAI_DUO:
case cc.vv.globalSetting.ACTION_SAO_SAOCHUAN:
case cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
judgeShowPeace: function() {
var e = this;
if (cc.vv.gameNetMgr.getIsPeaceGame()) {
var t = cc.vv.gameNetMgr.getActionCount();
this.node.runAction(cc.sequence(cc.delayTime(t + 1), cc.callFunc(function() {
e.peaceNode.active = !0;
})));
}
},
showIconByAction: function(e, t) {
if (e >= cc.vv.globalSetting.ACTION_LEFT_CHI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI || e >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && e <= cc.vv.globalSetting.ACTION_BIG_YIWUSHI_CHI_XIABI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", 1);
} else if (e == cc.vv.globalSetting.ACTION_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO || e == cc.vv.globalSetting.ACTION_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("weiqi", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO_CHUAN || e == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e >= cc.vv.globalSetting.ACTION_KAI_DUO && e <= cc.vv.globalSetting.ACTION_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", 1);
}
},
showIcon: function(e, t) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("xiu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
});
cc._RF.pop();
}, {} ],
HYLH_Room: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dfb08jycYxJHZqBhqqyEuSg", "HYLH_Room");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_playerPos: [],
_itemsNodes: [],
_foldsNodes: [],
_iconsNodes: [],
_maxPlayerCount: null,
game_over: null
},
onLoad: function() {
var t = this;
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
this.initData();
this.initRes();
this.initView();
this.initComponent();
this.initSplitLine();
this.initOperationBtns();
this.initEatNode();
this.initHuNode();
this.initEventHandlers();
this.resetGame();
this.initBigCardBack();
this.initHoldsEventHandler();
this.initEatNodeEventHandler();
this.resIconCardPos();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/GameBaseUI", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("BaseRoom")._seats2 = i._seats2;
e.getComponent("BaseRoom").initBaseRoom();
});
});
} else this.addComponent("HYLH_Replay"); else cc.director.loadScene("loading");
},
initRes: function() {
this.gameNode = cc.find("Canvas/game");
this.outCardPools = this.gameNode.getChildByName("outCardPools");
this.lb_surplusCardNums = this.gameNode.getChildByName("lb_surplusCardNums");
this.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.gameOverHandNode = this.node.getChildByName("gameOverHandNode");
this.selfHandCardNode = this.gameNode.getChildByName("selfHandCardNode");
this.xingNode = this.node.getChildByName("xingNode");
this.surplusCardNode = this.node.getChildByName("surplusCardNode");
},
initData: function() {
this._maxPlayerCount = 4;
this._playerItems = [ [], [], [], [] ];
this._PlayerItemCount = [ 0, 0, 0, 0 ];
this._outCardCoordinate = {
x: null,
y: null
};
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.isReconnectGame = !1;
this.iconItemTag = 1111;
this.recentOutCardValue = null;
this.pickCardCount = null;
this.shangbi_way = null;
this.xiabi_way = null;
this._handcardsInfoList = [];
this.end_seats_data = null;
this.xingCard = [];
this.isTianHu = !1;
this.has_action = !1;
this.actionCount = 0;
this.hucode = 0;
this.pick_seat = -1;
this.pick_data = -1;
this.out_seat = -1;
this.out_data = -1;
},
initComponent: function() {
cc.loader.loadRes("game/zipaiGames/hylh/prefabs/game_over", cc.Prefab, function(e, t) {
if (!e) {
this.game_over = cc.instantiate(t);
this.node.addChild(this.game_over, 10);
this.initSeats();
}
}.bind(this));
cc.loader.loadRes("game/zipaiGames/prefab/game_result", cc.Prefab, function(e, t) {
e || this.node.addChild(cc.instantiate(t), 10);
}.bind(this));
},
initSplitLine: function() {
this.splitLine = this.gameNode.getChildByName("splitLine");
this.splitWord = this.gameNode.getChildByName("splitWord");
this.handTip = this.gameNode.getChildByName("hand");
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.outCardPools;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initOperationBtns: function() {
this.operationBtnsNode = this.gameNode.getChildByName("operationBtnNode");
this.btn_eat = this.operationBtnsNode.getChildByName("btn_chi");
this.btn_peng = this.operationBtnsNode.getChildByName("btn_peng");
this.btn_win = this.operationBtnsNode.getChildByName("btn_win");
this.btn_pass = this.operationBtnsNode.getChildByName("btn_pass");
this.btn_liu = this.operationBtnsNode.getChildByName("btn_liu");
this.icon_win = this.operationBtnsNode.getChildByName("icon_win");
this.icon_peng = this.operationBtnsNode.getChildByName("icon_peng");
this.icon_chi = this.operationBtnsNode.getChildByName("icon_chi");
this.icon_pass = this.operationBtnsNode.getChildByName("icon_pass");
this.icon_liu = this.operationBtnsNode.getChildByName("icon_liu");
this.btn_liu.active = !1;
this.icon_liu.active = !1;
this.initOperationBtnsListener();
},
initOperationBtnsListener: function() {
var t = this;
this.btn_eat.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnEat();
});
this.btn_peng.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPeng();
});
this.btn_win.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnWin();
});
this.btn_pass.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPass();
});
},
initEatNode: function() {
this.eatNode = this.node.getChildByName("eatNode");
this.btnCloseEatNode = this.eatNode.getChildByName("btn_close");
this.btnCloseEatNodeIndex = 15e3;
},
initHuNode: function() {
var e = [ "selfHuNode", "rightHuNode", "topHuNode", "leftHuNode" ];
this.huNodeList = [];
for (var t = 0; t < e.length; t++) {
var i = this.gameNode.getChildByName(e[t]), n = i.getChildByName("lb_huCount").getComponent(cc.Label);
i.active = !1;
n.string = 0;
this.huNodeList[t] = {
node: i,
lb: n
};
}
},
initView: function() {
this.animworldmap = this.node.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var e = [ "myself", "right", "up", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat"), a = i.getChildByName("folds"), s = i.getChildByName("items"), c = i.getChildByName("icons");
n.getChildByName("zhuang3").active = !1;
this._foldsNodes.push(a);
this._itemsNodes.push(s);
this._iconsNodes.push(c);
this._seats2.push(n.getComponent("Seat"));
this._playerPos.push(i.getPosition());
}
},
initHoldsEventHandler: function() {
new (e("holdsEventHandler"))().init(this, "wp_out");
},
initEatNodeEventHandler: function() {
new (e("eatNodeEventHandler"))().init(this);
},
resIconCardPos: function() {
var e = this.node.getChildByName("bg").getChildByName("icon_card"), t = this.node.getChildByName("game").getChildByName("lb_surplusCardNums");
e.setPosition(0, 58);
t.setPosition(137, 64);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("new_user", function(e) {
o.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
o.initSingleSeat(e.detail);
cc.vv.gameNetMgr.getLocalIndex(e.detail.seatindex);
});
this.node.on("wp_button_push", function(e) {
o.onGameStart();
o.initBigCardBack();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
o._seats2[t].setZhuang(!0);
cc.vv.anysdkMgr.getBatteryLevel();
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getSeatIndexByID(cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id), c = cc.vv.gameNetMgr.getLocalIndex(s);
o._seats2[c].setScore(n, a);
for (var r = 0; r < t.length; r++) cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id == cc.vv.gameNetMgr.seats[r].userid && (cc.vv.gameNetMgr.seats[r].score = n);
}
});
this.node.on("wp_state_push", function(e) {
o.canleReady();
});
this.node.on("kick_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("transfer_push", function(e) {});
this.node.on("seq_move_seat_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("wp_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.OnMsgUpdateSeatHolds(t.seatindex, t.holds);
});
this.node.on("wp_folds_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id);
o.OnMsgShowFlods(t, e.detail.folds);
});
this.node.on("wp_out_push_err", function(e) {
o._handcardsInfoList[o._outCardCoordinate.x].cards[o._outCardCoordinate.y].setPosition(o.clickCardPos.x, o.clickCardPos.y);
});
this.node.on("wp_out_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.out_user), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.out_user);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(e.detail.out_card, n.sex);
o.OnMsgShowOutCard(e.detail.out_card, i);
o.out_seat = i;
o.out_data = e.detail.out_card;
});
this.node.on("wp_turn_push", function(e) {
var t = cc.vv.gameNetMgr.turn;
o.OnMsgNoteOperater(t);
});
this.node.on("wp_surplus_push", function(e) {
var t = cc.vv.gameNetMgr.numOfMJ;
o.OnMsgUpdateSurplus(t);
});
this.node.on("wp_action_mask_push", function(e) {
var t = e.detail.action_mask;
o.has_action = 0 < t;
o.hideSplitLine();
o.OnMsgShowOperationTypes(e.detail.action_mask, e.detail.xiabi_actions);
o.has_action && o.hideSplitLine();
if (0 == o.actionCount && !o.isReconnecting) {
var i = t & 1 << cc.vv.globalSetting.OPERATE_HU;
o.isTianHu = 0 != i;
}
o.isTianHu && o.node.runAction(cc.sequence(cc.delayTime(5.5), cc.callFunc(function() {
o.operationBtnsNode.active = !0;
o.isTianHu = !1;
})));
o.actionCount++;
});
this.node.on("wp_cancel_action_push", function(e) {});
this.node.on("wp_pick_card_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.user_id);
o.hideSplitLine();
var a = 0 == o.pickCardCount ? 14 * .1 + .3 : 0, s = e.detail.card, c = n.sex;
o.node.runAction(cc.sequence(cc.delayTime(a), cc.callFunc(function() {
o.OnMsgShowPickCard(i, s, c);
})));
o.pick_seat = i;
o.pick_data = e.detail.card;
});
this.node.on("wp_item_push", function(e) {
var t = e.detail.user_id, i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = e.detail.add_items;
o.OnMsgShowItems(i, t, n);
cc.vv.gameNetMgr.getLocalIndex(i);
o.eatNode.active = !1;
o.operationBtnsNode.active = !1;
o.pick_seat = -1;
o.pick_data = -1;
o.out_seat = -1;
o.out_data = -1;
o.has_action = !1;
});
this.node.on("wp_hu_push", function(e) {
o.isSpcialHu = !1;
o.isSpcialHu = e.detail.special_hu;
cc.vv.gameNetMgr.setIsSpcialHu(o.isSpcialHu);
var t = o.isSpcialHu ? 1 : 0, i = e.detail;
o.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
o.OnMsgShowHu(i);
})));
});
this.node.on("wp_over", function(e) {
var t = o.isSpcialHu ? 1 : 0;
o.CloseTimer();
o.OnMsgShowSingleGameOver(e);
o.hideSplitLine();
o.scheduleOnce(function() {
o.initHuNode();
o.clearHolds();
o.clearFolds();
o.clearItemsCards();
o.clearOutCard();
o.clearSurplusCards();
o.clearGameOverHandCards();
o.initData();
o.outCardPools.removeAllChildren();
o.lb_surplusCardNums.getComponent(cc.Label).string = "";
}, 3 + t);
});
},
onGameStart: function() {
this.isGaming = !0;
this.pickCardCount = 0;
this.showHuNode();
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else 1 == cc.vv.gameNetMgr.getIsWatch() && (this.BtnReady.node.active = !1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
},
resetGame: function() {
var e = cc.vv.gameNetMgr.turn, t = cc.vv.gameNetMgr.getLocalIndex(e);
this.isReconnecting = !1;
if (!(e < 0)) {
this.initHuNode();
this.isReconnecting = !0;
this.OnMsgNoteOperater(e);
this.OnMsgUpdateSurplus(cc.vv.gameNetMgr.numOfMJ);
this.canleReady();
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; n++) {
this.OnMsgUpdateSeatHolds(i[n].seatindex, i[n].holds);
this.OnMsgShowFlods(i[n].seatindex, i[n].folds);
this.OnMsgShowItems(i[n].seatindex, i[n].userid, i[n].items);
}
for (n = 0; n < i.length; n++) {
if (0 == cc.vv.gameNetMgr.getLocalIndex(i[n].seatindex)) {
this.xiabi_actions = {};
this.xiabi_actions = i[n].xiabi_actions;
if (i[n].select_action <= 0) {
this.OnMsgShowOperationTypes(i[n].action_mask, i[n].xiabi_actions);
this.has_action = 0 < i[n].action_mask;
}
}
}
this.hideSplitLine();
this.drawOutByLocalTurn(t);
2 == cc.vv.gameNetMgr.gamestate && this.showHuNode();
this.isReconnecting = !1;
this.isReconnectGame = !0;
}
},
drawOutByLocalTurn: function(e) {
this.pick_seat = cc.vv.gameNetMgr.syncData.pick_seat;
this.pick_data = cc.vv.gameNetMgr.syncData.pick_data;
this.out_seat = cc.vv.gameNetMgr.syncData.out_seat;
this.out_data = cc.vv.gameNetMgr.syncData.out_data;
this.recentOutCardValue = -1;
0 < this.pick_data && (this.recentOutCardValue = this.pick_data);
0 < this.out_data && (this.recentOutCardValue = this.out_data);
this.clearOutCard();
if (0 < this.recentOutCardValue) {
var t = this.createOutCard(this.recentOutCardValue), i = this.getOutCardPos(e);
t.setPosition(i);
}
this.hideSplitLine();
0 == e && this.recentOutCardValue <= 0 && !this.has_action && this.showSplitLine();
},
OnMsgUpdateSeatHolds: function(e, t) {
if (!(0 < cc.vv.gameNetMgr.getLocalIndex(e))) {
var i = [];
i = t.concat();
if (0 == this.isReconnecting && 0 < this._handcardsInfoList.length) this.deleteOutCards(t); else {
this.drawHolds(t);
this.dealAction();
}
this.holdstemp = [];
this.holdstemp = i.concat();
}
},
OnMsgUpdateSurplus: function(e) {
this.lb_surplusCardNums.getComponent(cc.Label).string = "牌x" + e;
},
OnMsgNoteOperater: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.CloseTimer();
this.ShowTimer(t, 30);
this.hideSplitLine();
0 == t && -1 == this.pick_seat && -1 == this.out_seat && this.showSplitLine();
if (0 == t && 21 == this.getSelfFoldCount()) {
this.hideSplitLine();
this.node.runAction(cc.sequence(cc.delayTime(2.4), cc.callFunc(function() {
this.showSplitLine();
}.bind(this))));
}
},
OnMsgShowOutCard: function(e, t) {
this.recentOutCardValue = e;
this.clearOutCard();
this.hideSplitLine();
var i = this.getOutCardPos(t);
if (0 == t) {
(n = this.createOutCard(e)).setPosition(this.clickCardPos.x, this.clickCardPos.y);
n.runAction(cc.moveTo(.15, i));
} else {
var n;
(n = this.createOutCard(e)).setPosition(this._playerPos[t].x, this._playerPos[t].y);
n.setScale(.4);
n.runAction(cc.spawn(cc.scaleTo(.15, 1), cc.moveTo(.15, i)));
}
this.CloseTimer();
},
OnMsgShowOperationTypes: function(e, t) {
this.xiabi_actions = {};
this.xiabi_actions = t;
this.decodeOperationValue(e);
(this._canEat || this._canPeng || this._canWin) && this.scheduleOnce(function() {
this.showOperationBtns();
}, .5);
},
OnMsgUpdateGameCount: function() {
this.lbGameCount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
},
OnMsgShowItems: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = !this.isReconnecting;
this.operationBtnsNode.active = !1;
this.clearOutCard();
for (var s = 0; s < i.length; s++) {
this.showIconByItem(i[s][0], n, t, this.isReconnecting);
this.savePlayersItem(n, i[s]);
this.showItemCards(n, i[s], a);
this.updateHuCount(n);
}
},
OnMsgShowPickCard: function(i, e, t) {
this.recentOutCardValue = e;
var n = this.showPickCard(e, i), a = !1;
if (14 == this.getSelfFoldCount() && 0 == this.pickCardCount && !this.isReconnectGame) {
n.tag = 10010;
a = !0;
this.scheduleOnce(function() {
var e = {};
if (0 == i) {
n.removeFromParent();
n = null;
e = {
x: 0,
y: -300
};
var t = cc.vv.zipai_drawCard.drawCard(this.recentOutCardValue, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
t.parent = this.selfHandCardNode;
t.tag = this.recentOutCardValue;
t.setPosition(0, 360);
t.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
t.destroy();
this.drawHolds(this.holdstemp);
this.isTianHu || this.showSplitLine();
}.bind(this))));
} else {
e = this._playerPos[i];
n.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
n.destroy();
})));
}
}.bind(this), 1.5);
}
a || cc.vv.zipai_atlasAndAudioUtils.playCardSound(e, t);
this.pickCardCount++;
},
OnMsgShowFlods: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = -1;
2 != i && 3 != i || (n = 1);
if (0 == this.isReconnecting) {
var a = t.length - 1;
this.clearOutCard();
var s = this.createOutCard(t[a]);
s.active = !0;
s.parent = this._foldsNodes[i];
var c = this._foldsNodes[i].convertToNodeSpace(cc.v2(640, 370));
s.setPosition(c.x, c.y);
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.p(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0)), cc.scaleTo(.2, .55 * this._handCardSpriteSize.width / this._outCardSpriteSize.width, .55 * this._handCardSpriteSize.height / this._outCardSpriteSize.height)), cc.callFunc(function() {
s.destroy();
var e = cc.vv.zipai_drawCard.drawCard(t[a], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
e.parent = this._foldsNodes[i];
e.setScale(.55);
e.setPosition(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}.bind(this))));
} else for (var r in t) {
var o = cc.vv.zipai_drawCard.drawCard(t[r], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
o.parent = this._foldsNodes[i];
o.setScale(.55);
o.setPosition(.55 * this._handCardSpriteSize.width * r * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}
},
OnMsgShowHu: function(e) {
this.CloseTimer();
this.hideSplitLine();
this.eatNode.active = !1;
this.operationBtnsNode.active = !1;
var t = cc.vv.gameNetMgr.getSeatByID(e.hu_user_id), i = cc.vv.gameNetMgr.getSeatIndexByID(e.hu_user_id), n = cc.vv.gameNetMgr.getSeatIndexByID(e.pao_user_id), a = cc.vv.gameNetMgr.getLocalIndex(i), s = cc.vv.gameNetMgr.getLocalIndex(n);
if (a == s) {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.ZIMO, a);
} else {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.PAO, s);
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.HU, a);
}.bind(this))));
}
},
OnMsgShowSingleGameOver: function(e) {
var t = e.detail.end_seats_data;
e.detail.hu_user_id, e.detail.pokers.concat();
this.end_seats_data = e.detail.end_seats_data;
for (var i in t) {
var n = cc.vv.gameNetMgr.getSeatIndexByID(t[i].user_id), a = cc.vv.gameNetMgr.getLocalIndex(n);
0 < a && this.showGameOverHandCards(t[i].holds, a);
}
this.clearOutCard();
},
getOutCardPos: function(e) {
switch (e) {
case 0:
return cc.p(0, 0);

case 1:
return cc.p(350, 150);

case 2:
return cc.p(0, 200);

case 3:
return cc.p(-350, 150);
}
},
savePlayersItem: function(e, t) {
this.doSpecialItem(t, e);
},
doSpecialItem: function(e, t) {
var i = e[0], n = e[1];
e[2];
this.specialItemIndex = -1;
if (i == cc.vv.globalSetting.ITEM_PENG_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var a = 0; a < this._playerItems[t].length; a++) {
if (n == this._playerItems[t][a][1]) {
this._playerItems[t][a] = e;
this.specialItemIndex = a;
return;
}
} else this._playerItems[t].push(e);
},
doChongZhao: function(e, t) {
if (!t) {
this.judgeIsChongZhao(e) && this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.CHONGZHAO, e);
}
},
showIconByItem: function(e, t, i, n) {
if (!n) {
var a = cc.vv.gameNetMgr.getSeatByID(i).sex;
if (e >= cc.vv.globalSetting.ITEM_LEFT_CHI && e <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI || e == cc.vv.globalSetting.ITEM_SMALL_YIWUSHI_CHI || e == cc.vv.globalSetting.ITEM_BIG_YIWUSHI_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", a);
} else if (e == cc.vv.globalSetting.ITEM_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO || e == cc.vv.globalSetting.ITEM_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("weiqi", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO_CHUAN || e == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e >= cc.vv.globalSetting.ITEM_KAI_DUO && e <= cc.vv.globalSetting.ITEM_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", a);
}
}
},
showSplitLine: function() {
this.splitLine.active = !0;
this.splitWord.active = !0;
this.handTip.active = !0;
this.handTip.setPosition(370, -220);
this.handTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.p(60, 70)), cc.moveBy(0, cc.p(-60, -70)))));
},
hideSplitLine: function() {
this.splitLine.active = !1;
this.splitWord.active = !1;
this.handTip.active = !1;
this.handTip.stopAllActions();
},
decodeOperationValue: function(e) {
this.operationsList = [];
this.shangbi_List = [];
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.shangbi_List = this.decodeEatAcition(e);
0 < this.shangbi_List.length && (this._canEat = !0);
0 != (e & 1 << cc.vv.globalSetting.OPERATE_PASS) && (this._canPass = !0);
if (0 != (e & 1 << cc.vv.globalSetting.OPERATE_PENG)) {
this.operationsList.push(cc.vv.globalSetting.OPERATE_PENG);
this._canPeng = !0;
}
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_GUO_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_CHUAN);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN_HU);
2 == e && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
}, 2);
},
judgeAutoOperation: function(e, t) {
0 != (e & 1 << t) && this.scheduleOnce(function() {
this.sendMsgOperation(t);
}, 2);
},
judgeHuCode: function(e, t) {
if (0 != (e & 1 << t)) {
this.hucode = t;
this._canWin = !0;
}
},
decodeEatAcition: function(e) {
var t = [];
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_LEFT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_CENTER_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_RIGHT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_SMALL_YIWUSHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_BIG_YIWUSHI_CHI);
return t;
},
judgeExistEatAction: function(e, t, i) {
0 != (t & 1 << i) && e.push(i);
},
showOperationBtns: function() {
this.operationBtnsNode.active = !0;
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this._canEat && (this.btn_eat.active = !0);
this._canPeng && (this.btn_peng.active = !0);
this._canPass && (this.btn_pass.active = !0);
this._canWin && (this.btn_win.active = !0);
this.isTianHu && (this.operationBtnsNode.active = !1);
},
showIcon: function(e, t) {
if (1 != this.isReconnecting) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("xiu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
e == cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN && (i.y += 130);
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
},
showItemCards: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = t[0], a = t[1], s = cc.vv.HYLH_Utils.getItemCards(n, a), c = this._itemsNodes[e].convertToNodeSpace(cc.v2(640, 410)), r = 1 == e ? -1 : 1, o = i ? .2 : 0;
this._PlayerItemCount[e] = 0 <= this.specialItemIndex ? this.specialItemIndex : this._PlayerItemCount[e];
for (var h = 0; h < s.length; h++) {
var l = null;
if (0 < s[h]) {
l = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_SAO && h < 2 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(n == cc.vv.globalSetting.ITEM_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) && h < 3 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (n >= cc.vv.globalSetting.ITEM_LEFT_CHI && n <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI && 2 == h) {
l.getComponent("zipai_card").setBlack(!1);
}
} else l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
l.setScale(.55);
l.parent = this._itemsNodes[e];
l.setPosition(c.x, c.y);
l.runAction(cc.moveTo(o, cc.p(r * this._PlayerItemCount[e] * this._handCardSpriteSize.width * .55 + r * this._handCardSpriteSize.width * .55 / 2, .55 * this._handCardSpriteSize.height * h)));
}
this.specialItemIndex < 0 ? this._PlayerItemCount[e]++ : this._PlayerItemCount[e] = this._playerItems[e].length;
},
judgeIsChongZhao: function(e) {
var t = this._playerItems[e].length;
if ((n = this._playerItems[e][t - 1][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) for (var i = 0; i < t - 1; i++) {
var n;
if ((n = this._playerItems[e][i][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) return !0;
}
return !1;
},
showGameOverHandCards: function(e, t) {
this.gameOverHandNode.active = !0;
var i = this.gameOverHandNode.getChildByName([ "right", "up", "left" ][t - 1]);
i.active = !0;
i.removeAllChildren();
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = i;
a.setScale(.75);
a.setPosition(n % 7 * this._handCardSpriteSize.width * .75 - 126, .75 * this._handCardSpriteSize.height - .75 * this._handCardSpriteSize.height * Math.floor(n / 7));
}
},
deleteOutCards: function(e) {
var t = this.getNeedDeleteCards(e);
if (1 != t.length) {
for (var i in t) for (var n = !1, a = 0; a < this._handcardsInfoList.length; a++) {
for (var s = 0; s < this._handcardsInfoList[a].cards.length; s++) {
var c = this._handcardsInfoList[a].cards[s].getComponent("zipai_card").getValue();
if (t[i] == c) {
this.deleteOutCard(a, s);
n = !0;
break;
}
}
if (1 == n) break;
}
this.replaceCards();
} else {
this.deleteOutCard(this._outCardCoordinate.x, this._outCardCoordinate.y);
this.replaceCards();
}
},
deleteOutCard: function(e, t) {
this._handcardsInfoList[e].cards[t].destroy();
1 < this._handcardsInfoList[e].cards.length ? this._handcardsInfoList[e].cards.splice(t, 1) : this._handcardsInfoList.splice(e, 1);
},
getNeedDeleteCards: function(e) {
for (var t = [], i = 0; i < this.holdstemp.length; i++) {
var n = e.indexOf(this.holdstemp[i]);
-1 != n ? e.splice(n, 1) : t.push(this.holdstemp[i]);
}
return t;
},
getSelfFoldCount: function() {
for (var e = 0, t = 0; t < this._handcardsInfoList.length; t++) e += this._handcardsInfoList[t].cards.length;
return e;
},
OnClickBtnEat: function() {
cc.vv.audioMgr.playBtnClick();
this.eatlist = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.clearXiabiCards();
this.showEatCards(this.shangbi_List, cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI);
},
OnClickBtnPeng: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PENG);
},
OnClickBtnWin: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.sendMsgOperation(this.hucode);
},
OnClickBtnPass: function() {
cc.vv.audioMgr.playBtnClick();
this.operationBtnsNode.active = !1;
this.has_action = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
},
OnClickCloseEatNode: function() {
if (1 == this.eatNode.active) {
this.eatNode.active = !1;
this.shangbi_way = null;
this.xiabi_way = null;
}
},
sendMsgOperation: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, i = JSON.parse(cc.vv.msgTemp_GLZP.CS_card_type_action);
i.action = e;
i.xiabi_action = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("wp_card_type_action", i);
},
showEatCards: function(e, t) {
if (0 != e.length) for (var i in e) switch (e[i]) {
case cc.vv.globalSetting.OPERATE_LEFT_CHI:
this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 1, this.recentOutCardValue + 2 ], cc.vv.globalSetting.OPERATE_LEFT_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_CENTER_CHI:
this.showSingleEatCard([ this.recentOutCardValue - 1, this.recentOutCardValue, this.recentOutCardValue + 1 ], cc.vv.globalSetting.OPERATE_CENTER_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_RIGHT_CHI:
this.showSingleEatCard([ this.recentOutCardValue - 2, this.recentOutCardValue - 1, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_RIGHT_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI:
this.showSingleEatCard([ 2, 7, 10 ], cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI:
this.showSingleEatCard([ 12, 17, 20 ], cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_SMALL_YIWUSHI_CHI:
this.showSingleEatCard([ 1, 5, 10 ], cc.vv.globalSetting.OPERATE_SMALL_YIWUSHI_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_BIG_YIWUSHI_CHI:
this.showSingleEatCard([ 11, 15, 20 ], cc.vv.globalSetting.OPERATE_BIG_YIWUSHI_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI:
this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 10, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t);
break;

case cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI:
this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue - 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t);
}
},
showSingleEatCard: function(e, t, i) {
this.eatNode.active = !0;
this.eatlist[this.eatWayCount] = {
cardSprites: [],
operation: null,
type: null
};
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = this.eatNode;
a.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? a.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 170 - this._handCardSpriteSize.height * n) : a.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -45 - this._handCardSpriteSize.height * n);
this.eatlist[this.eatWayCount].cardSprites.push(a);
}
this.eatlist[this.eatWayCount].operation = t;
this.eatlist[this.eatWayCount].type = i;
var s = new cc.Node("New Sprite");
s.addComponent(cc.Sprite).spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("jiantou");
s.parent = this.eatNode;
s.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? s.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 10) : s.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -200);
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.15, cc.p(0, -3.5)), cc.moveBy(.3, cc.p(0, 7)), cc.moveBy(.15, cc.p(0, -3.5)))));
this.eatWayCount++;
},
dealAction: function() {
if (!this.isReconnecting) {
var e = 0;
this.node.runAction(cc.repeat(cc.sequence(cc.callFunc(function() {
cc.vv.zipai_atlasAndAudioUtils.playDealCardsSound();
}), cc.delayTime(.55)), 4));
for (var t = 0; t < this._handcardsInfoList.length; t++) for (var i = 0; i < this._handcardsInfoList[t].cards.length; i++) {
e++;
this._handcardsInfoList[t].cards[i].runAction(cc.sequence(cc.hide(), cc.delayTime(.1 * e), cc.show()));
}
}
},
showXiabiCards: function(e) {
this.xiabi_list = [];
this.eatWayCount = this.shangbi_List.length;
this.xiabi_list = this.decodeEatAcition(this.xiabi_actions[e]);
this.showEatCards(this.xiabi_list, cc.vv.zipai_cardsSort.enumTalbe.eatType.XIA_BI);
},
CloseTimer: function() {
for (var e in this._seats2) this._seats2[e].closeTimer();
},
ShowTimer: function(e, t) {
this._seats2[e].showTimer(t);
},
showPickCard: function(e, t) {
var i = null, n = this.getOutCardPos(t);
this.clearOutCard();
if (0 == e) {
(i = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK)).parent = this.outCardPools;
i.tag = 1e3;
} else i = this.createOutCard(e);
i.active = !1;
i.setPosition(n);
this.bigCardBack.setScale(.6);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, n), cc.scaleTo(.3, 1)), cc.callFunc(function() {
this.bigCardBack.active = !1;
i.active = !0;
}.bind(this))));
return i;
},
createOutCard: function(e) {
var t = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG);
t.parent = this.outCardPools;
t.tag = 1e3;
return t;
},
drawHolds: function(e) {
this.selfHandCardNode.removeAllChildren(!1);
this._handcardsInfoList = [];
for (var t = e.concat(), i = cc.vv.zipai_cardsSort.cardSort(t), n = 0; n < i.sort.length; n++) {
this._handcardsInfoList[n] = {
posx: n * this._outCardSpriteSize.width - 320,
cards: []
};
for (var a = 0; a < Math.ceil(i.sort[n].type); a++) {
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.threeNotSame && 2 == a && (i.sort[n].value = 10 < i.sort[n].value ? i.sort[n].value - 10 : i.sort[n].value + 10);
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.shunZi && 0 < a && i.sort[n].value++;
(s = cc.vv.zipai_drawCard.drawCard(i.sort[n].value, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.sort[n].value;
s.getComponent("zipai_card").setOrder(Math.ceil(i.sort[n].type) - a);
s.getComponent("zipai_card").setType(i.sort[n].type);
s.setLocalZOrder(Math.ceil(i.sort[n].type) - a);
this._handcardsInfoList[n].cards.push(s);
}
}
for (n = 0; n < i.single.length; n++) {
n % 3 == 0 && (this._handcardsInfoList[i.sort.length + Math.floor(n / 3)] = {
posx: (i.sort.length + Math.floor(n / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var s;
(s = cc.vv.zipai_drawCard.drawCard(i.single[n], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.single[n];
s.getComponent("zipai_card").setOrder(i.single.length - n);
s.setLocalZOrder(i.single.length - n);
this._handcardsInfoList[i.sort.length + Math.floor(n / 3)].cards.push(s);
}
this.replaceCards();
},
showHuNode: function() {
for (var e = 0; e < this._maxPlayerCount; e++) this.huNodeList[e].node.active = !0;
},
updateHuCount: function(e) {
for (var t = 0, i = 0; i < this._playerItems[e].length; i++) {
var n = this._playerItems[e][i][0], a = this._playerItems[e][i][1], s = cc.vv.HYLH_Utils.getItemCards(n, a);
t += cc.vv.HYLH_Utils.getHuCount(n, s);
}
this.huNodeList[e].lb.string = t;
},
replaceCards: function() {
for (var e = 0; e < this._handcardsInfoList.length; e++) for (var t = 0; t < this._handcardsInfoList[e].cards.length; t++) {
this._handcardsInfoList[e].cards[t].setPosition(e * this._outCardSpriteSize.width - 310 + (8 - this._handcardsInfoList.length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * t - .15 * this._outCardSpriteSize.height);
this._handcardsInfoList[e].cards[t].setLocalZOrder(this._handcardsInfoList[e].cards.length - t);
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setOrder(Math.ceil(this._handcardsInfoList[e].cards.length - t));
var i = this._handcardsInfoList[e].cards[t].getComponent("zipai_card").getType();
if (i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.three || i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.four) {
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setBlack(!0);
}
}
},
clearItemsCards: function() {
for (var e = 0; e < this._itemsNodes.length; e++) this._itemsNodes[e].removeAllChildren();
},
clearHolds: function() {
this.selfHandCardNode.removeAllChildren();
},
clearFolds: function() {
for (var e = 0; e < this._foldsNodes.length; e++) this._foldsNodes[e].removeAllChildren();
},
clearSurplusCards: function() {
this.surplusCardNode.removeAllChildren();
},
clearOutCard: function() {
for (;this.outCardPools.getChildByTag(1e3); ) this.outCardPools.removeChildByTag(1e3);
},
clearGameOverHandCards: function() {
this.gameOverHandNode.active = !1;
for (var e = 1; e < this.gameOverHandNode.children.length; e++) this.gameOverHandNode.children[e].removeAllChildren();
},
clearXiabiCards: function() {
for (;this.eatNode.getChildByTag(-2222); ) this.eatNode.removeChildByTag(-2222);
},
clearShangbiCards: function() {
for (;this.eatNode.getChildByTag(2222); ) this.eatNode.removeChildByTag(2222);
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {
eatNodeEventHandler: "eatNodeEventHandler",
holdsEventHandler: "holdsEventHandler"
} ],
HYLH_Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2dd85aum0pP+5zBK2yXuRvm", "HYLH_Utils");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && (cc.vv.HYLH_Utils = this);
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
i.push(t + 1);
i.push(t + 2);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_CENTER_CHI:
i.push(t - 1);
i.push(t + 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_RIGHT_CHI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
switch (t) {
case 2:
i.push(7);
i.push(10);
i.push(t);
break;

case 7:
i.push(2);
i.push(10);
i.push(t);
break;

case 10:
i.push(2);
i.push(7);
i.push(t);
}

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
switch (t) {
case 12:
i.push(17);
i.push(20);
i.push(t);
break;

case 17:
i.push(12);
i.push(20);
i.push(t);
break;

case 20:
i.push(12);
i.push(17);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_SMALL_YIWUSHI_CHI:
switch (t) {
case 1:
i.push(5);
i.push(10);
i.push(t);
break;

case 5:
i.push(1);
i.push(10);
i.push(t);
break;

case 10:
i.push(1);
i.push(5);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_BIG_YIWUSHI_CHI:
switch (t) {
case 11:
i.push(15);
i.push(20);
i.push(t);
break;

case 15:
i.push(11);
i.push(20);
i.push(t);
break;

case 20:
i.push(11);
i.push(15);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t + 10);
i.push(t + 10);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t + 10);
i.push(t);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_PENG:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getHuCount: function(e, t) {
for (var i = 0; i < t.length; i++) for (var n = i + 1; n < t.length; n++) if (t[i] > t[n]) {
var a = t[i];
t[i] = t[n];
t[n] = a;
}
if (0 == t[0]) return 0;
switch (e) {
case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
return 10 < t[0] ? 12 : 9;

case cc.vv.globalSetting.ITEM_KAN:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
return 10 < t[0] ? 6 : 3;

case cc.vv.globalSetting.ITEM_PENG:
return 10 < t[0] ? 3 : 1;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
return 10 < t[0] ? 9 : 6;

case cc.vv.globalSetting.ITEM_DUIZI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
return 0;

case cc.vv.globalSetting.ITEM_BIG_YIWUSHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
return 6;

case cc.vv.globalSetting.ITEM_SMALL_YIWUSHI_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
return 3;

case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SHUNZI:
return 1 == t[0] ? 3 : 11 == t[0] ? 6 : 0;
}
},
decodeXingtypes: function() {
var e = {
up: 0,
center: 0,
down: 0
};
8192 & cc.vv.gameNetMgr.rule_index && (e.up = 1);
16384 & cc.vv.gameNetMgr.rule_index && (e.center = 1);
32768 & cc.vv.gameNetMgr.rule_index && (e.down = 1);
return e;
},
getAllXingCards: function(e) {
for (var t = [], i = this.decodeXingtypes(), n = 0; n < e.length; n++) {
0 < i.up && (10 == e[n] ? t.push(1) : 20 == e[n] ? t.push(11) : t.push(e[n] + 1));
0 < i.center && t.push(e[n]);
0 < i.down && (1 == e[n] ? t.push(10) : 11 == e[n] ? t.push(20) : t.push(e[n] - 1));
}
return t;
},
isXingCard: function(e, t) {
for (var i in t) if (e == t[i]) return !0;
return !1;
},
NumberToChinese: function(e) {
return [ "一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十" ][e - 1];
}
});
cc._RF.pop();
}, {} ],
HallReceiver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f3ab8DyirlFa4AgL7vRUFGx", "HallReceiver");
cc.Class({
extends: cc.Component,
init: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("login", this.dispatchLogin.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("user_mail", this.dispatchUserMail.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("global_award_status", this.dispatchGlobalAwardStutus.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_unions", this.dispatchGetUnions.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_tasks", this.dispatchGetTasks.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("create_union_room", this.dispatchCreateUnionRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("gold_to_ingot", this.dispatchGoldToIngot.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("ingot_to_gold", this.dispatchIngotToGold.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("solve_advice", this.dispatchSolveAdvice.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("user_advice", this.dispatchUserAdvice.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("show_advice", this.dispatchShowAdvice.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_detail_of_game", this.dispatchGetDetailOfGame.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_games_of_room", this.dispatchGetGamesOfRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_history_list", this.dispatchGetHistoryList.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("enter_private_room", this.dispatchEnterPrivateRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("create_user", this.dispatchCreateUser.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("other_user_info", this.dispatchOtherUserInfo.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_user_status", this.dispatchGetUserStatus.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("route_state", this.dispatchRouteState.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_user_extro_info", this.dispatchGetUserExtroInfo.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("pay_route", this.dispatchPayRoute.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("do_route", this.dispatchDoRoute.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("route_log", this.dispatchRouteLog.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("identity", this.dispatchIdentity.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_message", this.dispatchGetMessage.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("invitation_code", this.dispatchInvitationCode.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_agent_room", this.dispatchGetAgentRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("delete_agent_room", this.dispatchDeleteAgentRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_task_reward", this.dispatchGetTaskReward.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("voice_chat", this.dispatchGetVoiceChat.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_invites", this.dispatchGetInvites.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("global_award_get", this.dispatchGlobalAwardGet.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_activity", this.dispatchGetActivity.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("create_agent_room", this.dispatchCreateAgentRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("create_private_room", this.dispatchCreatePrivateRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_union_rooms", this.dispatchGetUnionRooms.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_members", this.dispatchGetMembers.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_applys", this.dispatchGetApplys.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("create_union", this.dispatchCreateUnion.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("join_union", this.dispatchJoinUnion.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("query_union", this.dispatchQueryUnion.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_unions_nums", this.dispatchGetUnionNums.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_voice", this.dispatchGetVoice.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("change_union_name", this.dispatchChangeUnionName.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("invite_union", this.dispatchInviteUnion.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_user_info", this.dispatchGetUserInfo.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("delete_member", this.dispatchDeleteMember.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("shield_join", this.dispatchShieldJoin.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("dissolve_union", this.dispatchDissolveUnion.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("leave_union", this.dispatchLeaveUnion.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("set_union_auto_create", this.dispatchSetUnionAutoCreate.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("set_union_create_conf", this.dispatchSetUnionAutoConf.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("delete_union_room", this.dispatchDeleteUnionRoom.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("user_operate_mail", this.dispatchUserOperateMail.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("agree_invite", this.dispatchAgreeInvite.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("refuse_invite", this.dispatchRefuseInvite.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("get_money_log", this.dispatchGetMoneyLog.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("give_ingot", this.dispatchGiveIngot.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("give_gold", this.dispatchGiveGold.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("base_info", this.dispatchBaseInfo.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("match_info", this.dispatchMatchInfo.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("match_join", this.dispatchMatchJoin.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("match_cancel", this.dispatchMatchCancel.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("match_history", this.dispatchMatchHistory.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("match_load_msg", this.dispatchMatchLoadMsg.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("match_get_load", this.dispatchMatchGetLoad.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("is_server_online", this.dispatchIsServerOnline.bind(this));
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].addHandler("disconnect", this.dispatchDisconect.bind(this));
},
dispatchLogin: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("login", e);
},
dispatchUserMail: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("user_mail", e);
},
dispatchGlobalAwardStutus: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("global_award_status", e);
},
dispatchGetUnions: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_unions", e);
},
dispatchGetTasks: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_tasks", e);
},
dispatchCreateUnionRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("create_union_room", e);
},
dispatchGoldToIngot: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("gold_to_ingot", e);
},
dispatchIngotToGold: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("ingot_to_gold", e);
},
dispatchSolveAdvice: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("solve_advice", e);
},
dispatchUserAdvice: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("user_advice", e);
},
dispatchShowAdvice: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("show_advice", e);
},
dispatchGetDetailOfGame: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_detail_of_game", e);
},
dispatchGetGamesOfRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_games_of_room", e);
},
dispatchGetHistoryList: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_history_list", e);
},
dispatchEnterPrivateRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("enter_private_room", e);
},
dispatchCreateUser: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("create_user", e);
},
dispatchOtherUserInfo: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("other_user_info", e);
},
dispatchGetUserStatus: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_user_status", e);
},
dispatchRouteState: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("route_state", e);
},
dispatchGetUserExtroInfo: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_user_extro_info", e);
},
dispatchPayRoute: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("pay_route", e);
},
dispatchDoRoute: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("do_route", e);
},
dispatchRouteLog: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("route_log", e);
},
dispatchIdentity: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("identity", e);
},
dispatchGetMessage: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_message", e);
},
dispatchInvitationCode: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("invitation_code", e);
},
dispatchGetAgentRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_agent_room", e);
},
dispatchDeleteAgentRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("delete_agent_room", e);
},
dispatchGetTaskReward: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_task_reward", e);
},
dispatchGetVoiceChat: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("voice_chat", e);
},
dispatchGetInvites: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_invites", e);
},
dispatchGlobalAwardGet: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("global_award_get", e);
},
dispatchGetActivity: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_activity", e);
},
dispatchCreateAgentRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("create_agent_room", e);
},
dispatchCreatePrivateRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("create_private_room", e);
},
dispatchGetUnionRooms: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_union_rooms", e);
},
dispatchGetMembers: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_members", e);
},
dispatchGetApplys: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_applys", e);
},
dispatchCreateUnion: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("create_union", e);
},
dispatchJoinUnion: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("join_union", e);
},
dispatchQueryUnion: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("query_union", e);
},
dispatchGetUnionNums: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_unions_nums", e);
},
dispatchDeleteUnionRoom: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("delete_union_room", e);
},
dispatchGetVoice: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_voice", e);
},
dispatchChangeUnionName: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("change_union_name", e);
},
dispatchInviteUnion: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("invite_union", e);
},
dispatchGetUserInfo: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_user_info", e);
},
dispatchDeleteMember: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("delete_member", e);
},
dispatchShieldJoin: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("shield_join", e);
},
dispatchDissolveUnion: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("dissolve_union", e);
},
dispatchLeaveUnion: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("leave_union", e);
},
dispatchSetUnionAutoCreate: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("set_union_auto_create", e);
},
dispatchSetUnionAutoConf: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("set_union_create_conf", e);
},
dispatchUserOperateMail: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("user_operate_mail", e);
},
dispatchAgreeInvite: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("agree_invite", e);
},
dispatchRefuseInvite: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("refuse_invite", e);
},
dispatchGetMoneyLog: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("get_money_log", e);
},
dispatchGiveIngot: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("give_ingot", e);
},
dispatchGiveGold: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("give_gold", e);
},
dispatchBaseInfo: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("base_info", e);
},
dispatchMatchInfo: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("match_info", e);
},
dispatchMatchJoin: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("match_join", e);
},
dispatchMatchCancel: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("match_cancel", e);
},
dispatchMatchHistory: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("match_history", e);
},
dispatchMatchLoadMsg: function(e) {
console.log("--------------match_load_msg");
cc.vv.netMgr.hallIEventDispatcher.emit("match_load_msg", e);
},
dispatchMatchGetLoad: function(e) {
console.log("-------------- match_get_load");
cc.vv.netMgr.hallIEventDispatcher.emit("match_get_load", e);
},
dispatchIsServerOnline: function(e) {
cc.vv.netMgr.hallIEventDispatcher.emit("is_server_online", e);
},
dispatchDisconect: function(e) {
cc.error("大厅断线需重新发送登陆请求");
var t = cc.sys.localStorage.getItem("wx_account"), i = cc.sys.localStorage.getItem("wx_sign");
cc.vv.http.url = cc.vv.http.master_url;
if (cc.sys.isMobile && !cc.sys.isNative) {
cc.error("111");
this.login1();
} else if (null != t && null != i) {
cc.error("222");
this.login2(t);
} else {
cc.error("333");
this.login3();
}
},
login3: function() {
var t = this;
clearInterval(this.reAuth);
var e = function(e) {
clearInterval(t.reAuth);
cc.vv.userMgr.onAuth(e);
cc.vv.netMgr.hallIEventDispatcher.emit("NetError", data);
cc.vv.netMgr.connectHallServer();
}, i = cc.sys.localStorage.getItem("account");
cc.error("account2 = ", i);
this.reAuth = setInterval(function() {
cc.vv.http.sendRequest("/login", {
login_type: 1,
code: i
}, e);
}, 2e3);
cc.vv.http.sendRequest("/login", {
login_type: 1,
code: i
}, e);
},
login2: function(e) {
var t = this;
clearInterval(this.authId2);
var i = function(e) {
clearInterval(t.authId2);
cc.vv.userMgr.onAuth(e);
cc.vv.netMgr.hallIEventDispatcher.emit("NetError", data);
cc.vv.netMgr.connectHallServer();
};
this.authId2 = setInterval(function() {
cc.vv.http.sendRequest("/login", {
login_type: 3,
code: e
}, i);
}, 2e3);
cc.vv.http.sendRequest("/login", {
login_type: 3,
code: e
}, i);
},
login1: function() {
if (cc.sys.isBrowser && cc.sys.isMobile) {
clearInterval(this.authId1);
var e = cc.args.code, t = function(e) {
clearInterval(this.authId1);
if (0 == e.errcode) {
cc.sys.localStorage.setItem("wx_account", e.account);
cc.sys.localStorage.setItem("wx_sign", e.sign);
}
cc.vv.userMgr.onAuth(e);
cc.vv.netMgr.hallIEventDispatcher.emit("NetError", data);
cc.vv.netMgr.connectHallServer();
};
this.authId1 = setInterval(function() {
cc.vv.http.sendRequest("/login", {
code: e,
os: "wechat_default"
}, t);
}, 2e3);
cc.vv.http.sendRequest("/login", {
code: e,
os: "wechat_default"
}, t);
}
}
});
cc._RF.pop();
}, {} ],
HallSettings: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4095WBzmtKqKHT20AgjHEq", "HallSettings");
cc.Class({
extends: cc.Component,
properties: {
_btnYXClose: null,
_btnYYOpen: null,
_btnYYClose: null
},
onLoad: function() {
if (null != cc.vv) {
console.log("颜色：~~~~~" + this.colorArr);
this.settings = this.node;
this.settingsbtn = this.settings.getChildByName("settingsbtn");
this.toggle1 = this.settingsbtn.getChildByName("toggle1");
this.checkmark1 = this.toggle1.getChildByName("checkmark");
this.checkmark1.active = !0;
this.toggle2 = this.settingsbtn.getChildByName("toggle2");
this.checkmark2 = this.toggle2.getChildByName("checkmark");
this.checkmark2.active = !1;
this.ToggleGroup_bg = this.settings.getChildByName("paimian").getChildByName("ToggleGroup_bg");
this.btn_ok = this.settings.getChildByName("btn_ok");
this.btn_ok.active = !1;
}
},
start: function() {
this.refreshVolume();
},
onbtn_zuo: function() {
cc.vv.audioMgr.playBtnClick();
this.ToggleGroup_bg.active = !1;
this.btn_ok.active = !1;
this.yinxiao.active = !0;
this.yinyue.active = !0;
cc.sys.os == cc.sys.OS_IOS ? this.btn_exit.active = !1 : this.btn_exit.active = !0;
},
onbtn_you: function() {
cc.vv.audioMgr.playBtnClick();
this.ToggleGroup_bg.active = !0;
this.btn_ok.active = !0;
this.yinxiao.active = !1;
this.yinyue.active = !1;
this.btn_exit.active = !1;
for (var e = 0; e < this.ToggleGroup_bg.children.length; e++) {
this.ToggleGroup_bg.children[e].getComponent(cc.Toggle).isChecked = !1;
}
var t = "toggle" + cc.vv.userMgr.poker_color;
this._Children_toggle = this.ToggleGroup_bg.getChildByName(t);
this._Children_toggle.getComponent(cc.Toggle).isChecked = !0;
},
onBtnShouOk: function() {
this.btn_ok.active = !0;
this.btn_exit.active = !1;
},
onbtn_ok: function() {
cc.vv.audioMgr.playBtnClick();
for (var e = 0; e < this.ToggleGroup_bg.children.length; e++) {
if (this.ToggleGroup_bg.children[e].getComponent(cc.Toggle).isChecked) {
var t = e + 1;
break;
}
}
console.log("颜色：~~~~~" + t);
this.node.active = !1;
cc.vv.userMgr.poker_color = t;
}
});
cc._RF.pop();
}, {} ],
Hall: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "6edb3jjx+FBepS1mk1xKDF2", "Hall");
cc.Class({
extends: cc.Component,
properties: {
lblName: cc.Label,
lblMoney: cc.Label,
lblGems: cc.Label,
lblID: cc.Label,
lblNotice: cc.Label,
btnJoinGame: cc.Node,
btnDaiKaiRoom: cc.Node,
sprHeadImg: cc.Sprite,
girl: cc.Sprite,
topLeft: cc.Node,
_lb_list: [],
hall_noticeList: [],
btnAuthentication: cc.Node,
guanggaoView: cc.PageView,
lbVersion: {
default: null,
type: cc.Label
},
gonggao: {
default: null,
type: cc.Node
},
nodeMore: {
default: null,
type: cc.Node
},
alert: cc.Prefab,
WaitingConnection: cc.Prefab,
mall: cc.Prefab,
a: 0,
txt_beike: {
default: null,
type: cc.Label
},
txt_diamond: {
default: null,
type: cc.Label
},
txt_fangka: {
default: null,
type: cc.Label
}
},
initNetHandlers: function() {},
onLoad: function() {
if (cc.vv) {
var t = "";
try {
this.node.addChild(cc.instantiate(this.alert), 100);
this.node.addChild(cc.instantiate(this.WaitingConnection), 110);
} catch (e) {
t += "1:";
}
try {
cc.vv.UILoader.retainScene(this.node);
"dev" == cc.ENV && cc.vv.MemoryDetector.showMemoryStatus();
this.lbVersion.string = "v" + cc.localVersion;
this._lb_list = [];
this.initLabels();
this.initAtavar();
console.log("-----------" + this.alert);
} catch (e) {
t += "2:";
}
try {
this.btnDaiKaiRoom.active = !1;
if (cc.vv && !cc.vv.userMgr.roomData) {
var e = cc.sys.localStorage.getItem("mwroomid");
console.log("是否魔窗登录冲进", e);
if (null != e && "" != e && " " != e) {
cc.vv.alert.show("提示", "检测到磨床roomid" + e);
cc.sys.localStorage.removeItem("mwroomid");
this.enterRoom(e);
}
}
} catch (e) {
t += "3:";
}
try {
cc.vv.utils.addClickEvent(this.sprHeadImg.node, this.node, "Hall", "onBtnClicked");
} catch (e) {
t += "4:";
}
try {
this.xiaoxi();
this.Task();
} catch (e) {
t += "5:";
}
try {
this.lblNotice.string = "";
this.nodeMore.active = !1;
this.refreshInfo();
this.hall_noticeList = [];
this.refreshNotice(0);
} catch (e) {
t += "6:";
}
try {
cc.vv.gameNetMgr && (cc.vv.gameNetMgr.dataEventHandler = this.node);
cc.vv.anysdkMgr.dataEventHandler = this.node;
var i = this;
this.node.on("goToRoom", function(e) {
var t = cc.sys.localStorage.getItem("mwroomid");
console.log("----------准备进入roomid:", t);
cc.sys.localStorage.removeItem("mwroomid");
i.enterRoom(t);
});
this.node.on("freshUserInfo", function(e) {
i.lblGems.string = cc.vv.userMgr.gems;
i.lblMoney.string = cc.vv.userMgr.coins;
this.txt_diamond.string = cc.vv.userMgr.gems;
this.txt_fangka.string = cc.vv.userMgr.coins;
i.refreshInfo();
});
this.node.on("updateMoney", function(e) {
i.refreshInfo();
});
this.node.on("ShareSuccess", function(e) {
var t = this;
cc.vv.UILoader.loadRes("hall/prefabs/activity", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
});
} catch (e) {
t += "7:";
}
try {
cc.vv.anysdkMgr.getWechatSign();
var n = cc.sys.localStorage.getItem("checkOrder");
console.log("检测是否有未验证订单", n);
n && (cc.sys.os == cc.sys.OS_IOS ? cc.vv.anysdkMgr.commitOrder(JSON.parse(n)) : cc.sys.os == cc.sys.OS_ANDROID && cc.vv.anysdkMgr.commitOrderWX(JSON.parse(n)));
} catch (e) {
t += "8:";
}
try {
cc.vv.anysdkMgr.getGPS();
cc.sys.localStorage.setItem("userid", cc.vv.userMgr.userId);
if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {
jsb.reflection.callStaticMethod("AppController", "checkWXInstalled") || (this.guanggaoView.node.active = !1);
}
this.adaptScreen();
this.initMsgHandler();
} catch (e) {
t += "9:";
}
"" != t && cc.vv.alert.show("警告", t + ",你的版本过旧,请退出后重新进入游戏进行更新,点击确定可以重新下载安装游戏! 如果有异常请截图后联系客服    --by--" + cc.YXNAME, function() {
cc.sys.openURL(cc.DOWNLOAD_URL);
});
} else cc.director.loadScene("loading");
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
cc.find("Canvas/bottom_left").setScale(1 * i);
},
resizeCall: function() {
cc.vv.utils.resetWindow();
},
refreshInfo: function() {
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_user_status", e);
console.log("log--------------send getUserStatus");
},
refreshNotice: function(e) {
this._page = e;
var t = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
page: this._page
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_message", t);
},
updateNoticeLb: function() {
var e = this.hall_noticeList, t = "";
if (0 == e.length) t = ""; else {
e.sort(function(e, t) {
return e.seq < t.seq;
});
for (var i = 0; i < e.length; i++) {
var n = e[i];
if (0 == n.end_time) {
t = n.msgtext;
break;
}
n.loop_times < 1 && e.splice(i, 0);
if (0 < n.loop_times) {
n.loop_times--;
t = n.msgtext;
break;
}
}
}
this.lblNotice.string = t;
},
initLabels: function() {
console.log("log--------------userifo", cc.vv.userMgr);
this.lblName.string = cc.vv.userMgr.userName;
this.lblMoney.string = cc.vv.userMgr.coins;
this.lblGems.string = cc.vv.userMgr.gems;
this.txt_diamond.string = cc.vv.userMgr.gems;
this.txt_fangka.string = cc.vv.userMgr.coins;
},
initAtavar: function() {
this.node.getChildByName("head_node").getChildByName("headimg").getChildByName("head").getComponent("Atavar").load(cc.vv.userMgr.headimg);
},
xiaoxi: function() {
var n = this;
cc.vv.userMgr.getXiaoxi(function(e) {
var t = cc.vv.utils.seekNodeByName("btn_xiaoxi", n.node).getChildByName("tip");
t.active = !1;
if (0 != e && 0 < e.mails.length) for (var i = 0; i < e.mails.length; i++) {
0 == e.mails[i].status && (t.active = !0);
}
});
cc.vv.userMgr.getGlobal_award_status(function(e) {
0 < e.length && (_tip.active = !0);
});
},
Task: function() {
cc.vv.userMgr.getTask(function(e) {
var t = cc.find("Canvas/bottom_left/task/tip");
if (t) {
t.active = !1;
var i = e.task_data, n = i[1], a = i[2];
if (0 < n.length) for (var s = 0; s < n.length; s++) {
var c = n[s];
c.schedule < c.target ? t.active = !0 : 2 != c.status && (t.active = !0);
}
if (0 < a.length) for (s = 0; s < a.length; s++) {
var r = a[s];
r.schedule < r.target ? t.active = !0 : 2 != r.status && (t.active = !0);
}
}
});
},
onBtnClicked: function(e) {
var t = this;
cc.vv.audioMgr.playBtnClick();
if ("head" == e.target.name) {
var i = this.sprHeadImg;
cc.vv.UILoader.loadRes("hall/prefabs/userinfo", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("UserInfoShow").openInHall(i);
});
});
}
},
onJoinGameClicked: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/JoinGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onBtnClub: function() {
var t = this;
cc.vv.wc.show("正在进入俱乐部");
cc.vv.userMgr.update_unions(function(i) {
i.unions.length ? cc.vv.UILoader.loadRes("club/profabs/clubMain", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
var t = n("GameNetMgrClub");
cc.vv.gameNetMgr = new t();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(i);
e.getComponent("clubMain").initEventHandlers();
});
}) : cc.vv.UILoader.loadRes("club/profabs/clubEnter", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
});
},
onbtn_settings_open: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/settings", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("Settings").isOpenExit();
});
});
},
onReturnGameClicked: function() {
cc.vv.audioMgr.playBtnClick();
this.scheduleOnce(function() {
cc.vv.gameNetMgr && (10002 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("yqmjgame") : 3e4 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("flygame") : 30001 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("Game_SSP") : 30002 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("Game_GLZP") : 20001 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_PDK") : 20002 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_DDZ") : 20003 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_DNN") : 20004 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_zjh") : 20005 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_DZPK") : 20006 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("") : 20007 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_21D") : 20008 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_3G") : 20009 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_13S") : 20010 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_3DH") : 20011 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("mjgame_10DB") : 10004 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("wzmj_game") : 10007 == cc.vv.gameNetMgr.conf.server_type ? cc.director.loadScene("HunanGame") : 10005 == cc.vv.gameNetMgr.conf.server_type && cc.director.loadScene("Game_FZMJ"));
}, .5);
cc.vv.wc.show("正在返回房间");
},
onBtnAddGemsClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.paymentRequest();
},
onCreateRoomClicked: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr && null != cc.vv.gameNetMgr.roomId) cc.vv.alert.show("提示", "房间已经创建!\n必须解散当前房间才能创建新的房间"); else {
console.log("onCreateRoomClicked");
cc.vv.userMgr.isDaiKaiRoom = !1;
cc.vv.userMgr.isClubRoom = !1;
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.UILoader.loadRes("hall/prefabs/SelectGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
onBtnMore: function() {
cc.vv.audioMgr.playBtnClick();
1 == this.nodeMore.active ? this.nodeMore.active = !1 : this.nodeMore.active = !0;
},
update: function(e) {
var t = this.lblNotice.node.x;
if ((t -= 100 * e) + this.lblNotice.node.width < -1e3) {
this.updateNoticeLb();
t = 500;
}
this.lblNotice.node.x = t;
this.ggTime || (this.ggTime = 0);
this.ggIndex || (this.ggIndex = 0);
this.ggTime += e;
if (3 < this.ggTime) {
this.ggTime = 0;
this.guanggaoView.scrollToPage(this.ggIndex, .5);
this.ggIndex++;
this.ggIndex > this.guanggaoView.getPages().length && (this.ggIndex = 0);
var i = {
user_id: cc.vv.userMgr.userId,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_user_info", i);
}
this.xxTime || (this.xxTime = 0);
this.xxTime += e;
if (30 < this.xxTime) {
this.xxTime = 0;
this.xiaoxi();
}
},
onopen_OtherOpenRoom: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/Daikai", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
start: function() {
cc.vv.audioMgr.playBGM("resources/hall/sounds/bgMain.mp3");
cc.sys.localStorage.getItem("gonggao" + cc.localVersion) || (this.gonggao.active = !0);
if (cc.vv && null != cc.vv.userMgr.roomData) {
console.log("登录完成后服务器觉得你在房间里");
this.enterRoom(cc.vv.userMgr.roomData);
cc.vv.userMgr.roomData = null;
}
this.initEventHandlers();
},
initEventHandlers: function() {
cc.vv.eventMgr.on(cc.vv.event.SHOW_MATCH_DDZ_HALL, this.showMatchDDZHall, this);
},
showMatchDDZHall: function() {
cc.error("showMatchDDZHall");
cc.vv.netMgr.hallIEventDispatcher.off("match_info");
cc.vv.netMgr.hallIEventDispatcher.on("match_info", this.onMatchInfo.bind(this));
this.onClickMatch();
},
onShare: function(e, t) {
cc.vv.audioMgr.playBtnClick();
var i = cc.vv.userMgr.userName + "(" + cc.vv.userMgr.userId + ")：我在" + cc.YXNAME + "等你一起来玩哟~", n = "输入专属邀请码(" + cc.vv.userMgr.userId + ")即可获得钻石奖励哦~";
cc.vv.anysdkMgr.shareInHall(i, n, t, 0);
this.addFriend.active = !1;
},
onOpenShowPage: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/ShowWX", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onBtnHuoDongClick: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/activity", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onBtnShareCircleClick: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(1);
},
onBtnGoClick: function() {
cc.vv.audioMgr.playBtnClick();
},
onFriend_open: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/addFriend", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
course_Open: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/Course", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
this.nodeMore.active = !1;
},
history_Open: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/History", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
feedback_Open: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/Feedback", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onBtnInvitCode: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/InvitCode", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
this.nodeMore.active = !1;
},
onExchangeClick: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/exchange", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onBtnMall_open: function() {
cc.vv.audioMgr.playBtnClick();
var e = cc.instantiate(this.mall);
this.node.addChild(e);
console.log("log------------open the mall!!!!!!");
},
onBtnTask: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/Task", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onBtnXiaoxi: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/Xiaoxi", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onBtnSongClick: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
var e = cc.vv.userMgr.agent_status;
e && 1 == e ? cc.vv.UILoader.loadRes("hall/prefabs/songfangka", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
}) : cc.vv.alert.show("提示", "您还没有开通该权限,如需开通请联系客服,客服微信:" + cc.KEFU);
this.nodeMore.active = !1;
},
onActivityClick: function(e, t) {
cc.vv.audioMgr.playBtnClick();
console.log(t);
switch (t) {
case "1":
this.onBtnInvitCode();
break;

case "2":
this.onBtnHuoDongClick();
break;

case "3":
this.onFriend_open();
}
},
onBtnGonggaoClick: function() {
this.gonggao.active = !0;
cc.vv.audioMgr.playBtnClick();
},
onBtnCloseGonggaoClick: function() {
cc.vv.audioMgr.playBtnClick();
this.gonggao.active = !1;
cc.sys.localStorage.setItem("gonggao" + cc.localVersion, "1");
},
enterRoom: function(e) {
cc.vv.userMgr.enterRoom(e, function(e) {
if (0 != e.errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
}
});
},
onBtnAuthentication: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.userMgr.identify ? cc.vv.alert.show("提示", "你已经实名认证过了") : cc.vv.UILoader.loadRes("hall/prefabs/authentication", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
this.nodeMore.active = !1;
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("match_info", this.onMatchInfo.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("NetError", this.onMsgNetError.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_message", this.onMsgGetMessage.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_user_info", this.onMsgGetUserInfo.bind(this));
},
onMsgGetUserInfo: function(e) {
if ((!(e = e.detail).user_id || e.user_id == cc.vv.userMgr.userId) && 0 == e.errcode) {
if (e.ingot) {
cc.vv.userMgr.gems = e.ingot;
this.lblGems.string = cc.vv.userMgr.gems;
this.txt_diamond = cc.vv.userMgr.gems;
}
if (e.gold) {
cc.vv.userMgr.coins = e.gold;
this.lblMoney.string = cc.vv.userMgr.coins;
this.txt_fangka = cc.vv.userMgr.coins;
}
}
},
onMatchInfo: function(e) {
cc.error("收到 onMatchInfo");
cc.log(e.detail);
cc.vv.match.match_info = e.detail;
cc.vv.match.match_info ? cc.director.loadScene("MatchHall_DDZ") : cc.vv.toast.showToast({
txt: "拉取比赛信息失败！"
});
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("NetError");
cc.vv.netMgr.hallIEventDispatcher.off("match_info");
cc.vv.netMgr.hallIEventDispatcher.off("get_message");
cc.vv.netMgr.hallIEventDispatcher.off("get_user_info");
},
onMsgGetMessage: function(e) {
if (0 !== (e = e.detail).errcode) console.log(e.errmsg); else {
for (var t = e.detail, i = 0; i < t.length; i++) {
var n = t[i];
this.hall_noticeList.push(n);
}
var a = e.rows, s = this._page + 1;
10 * s < a && this.refreshNotice(s);
0 == this._page && this.updateNoticeLb();
}
},
onMsgGetUserStatus: function(e) {
if (0 !== e.errcode) console.log(e.errmsg); else if (null != e.gems) {
cc.vv.userMgr.gems = e.gems;
cc.vv.userMgr.coins = e.coins;
this.lblGems.string = cc.vv.userMgr.gems;
this.lblMoney.string = cc.vv.userMgr.coins;
this.txt_diamond.string = cc.vv.userMgr.gems;
this.txt_fangka.string = cc.vv.userMgr.coins;
}
},
onMsgNetError: function() {
cc.vv.wc.show("网络错误，正在重新连接网络。");
},
onDestroy: function() {
this.removeMsgHandler();
},
onClickMatch: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("match_info");
},
onClickHZMJ: function() {
var t = this;
cc.vv.UILoader.loadRes("game/3DMahjong/hzmj/CreateRoom", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node.parent, function(e) {});
});
},
onClickPDK: function() {
var t = this;
cc.vv.UILoader.loadRes("game/pdk/prefabs/CreateRoom", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node.parent, function(e) {});
});
},
onClickPHZ: function() {
var t = this;
cc.vv.UILoader.loadRes("game/zipaiGames/phz/prefabs/CreateRoom", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node.parent, function(e) {});
});
},
onClickExit: function() {
cc.vv.audioMgr.playBtnClick();
cc.sys.localStorage.removeItem("wx_account");
cc.sys.localStorage.removeItem("wx_sign");
cc.vv.gameNetMgr = null;
cc.director.loadScene("login");
}
});
cc._RF.pop();
}, {
GameNetMgrClub: "GameNetMgrClub"
} ],
History: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4d7bci0LUxMT6MJKXJDj89w", "History");
var _ = e("buffer").Buffer;
cc.Class({
extends: cc.Component,
properties: {
HistoryItemPrefab: {
default: null,
type: cc.Prefab
},
scrollview: {
default: null,
type: cc.ScrollView
},
_history: null,
_viewlist: null,
_content: null,
_viewitemTemp: null,
_historyData: null,
_curRoomInfo: null,
_emptyTip: null,
_tabList: [],
_clubId: 0,
clubTop: {
default: null,
type: cc.Node
},
clubLabel: {
default: null,
type: cc.Node
},
timeSearch: {
default: null,
type: cc.Node
},
typeAll: {
default: null,
type: cc.Node
}
},
onLoad: function() {
this._history = this.node.getChildByName("history");
this._emptyTip = this._history.getChildByName("emptyTip");
this._emptyTip.active = !0;
this._viewlist = this._history.getChildByName("viewlist");
this._content = cc.find("view/content", this._viewlist);
this._viewitemTemp = this.HistoryItemPrefab;
cc.find("Canvas/History/history/btn_back");
this.scrollview.node.on("scroll-to-bottom", this.onMoveVScrollBar, this);
for (var e = cc.find("Canvas/History/history/tab_node/btn_type"), t = 1; t < 5; t++) {
var i = "Type" + t;
this._tabList.push(e.getChildByName(i));
}
this.adaptScreen();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this._viewlist.setScale(1 * i);
var n = 560 * i;
this._viewlist.setContentSize(cc.size(1250, n));
},
start: function() {
console.log("俱乐部id", this._clubId);
this._clubId || this.onButtonTab(null, 0);
},
setClubID: function(e, t) {
this._clubId = t;
this.clubTop.active = !0;
this.clubLabel.getComponent(cc.Label).string = e;
this.typeAll.active = !0;
this.typeAll.getComponent(cc.Toggle).isChecked = !0;
this.typeAll.parent.getChildByName("Type1").getComponent(cc.Toggle).isChecked = !1;
this.onButtonTab(null, -1);
},
onButtonTab: function(e, t) {
var i = t;
if (-1 == i) {
this._tabList[1].setPosition(0, -150);
this._tabList[2].setPosition(0, -225);
this._tabList[3].setPosition(0, -300);
} else if (0 == i) {
this._tabList[1].setPosition(0, -325);
this._tabList[2].setPosition(0, -400);
this._tabList[3].setPosition(0, -475);
} else if (1 == i) {
this._tabList[1].setPosition(0, -150);
this._tabList[2].setPosition(0, -400);
this._tabList[3].setPosition(0, -475);
} else if (2 == i) {
this._tabList[1].setPosition(0, -150);
this._tabList[2].setPosition(0, -225);
this._tabList[3].setPosition(0, -475);
} else if (3 == i) {
this._tabList[1].setPosition(0, -150);
this._tabList[2].setPosition(0, -225);
this._tabList[3].setPosition(0, -300);
}
this.showbtnType(i);
},
showbtnType: function(e) {
-1 == e && (this.server_type = 0);
for (var t in this._tabList) {
var i = this._tabList[t];
if (i && i.getComponent(cc.Toggle).isChecked) {
i.getChildByName("New Label").active = !1;
i.getChildByName("icon_nor").active = !1;
for (var n = i.getChildByName("Background").getChildByName("checkmark").getChildByName("tabPageView").getChildByName("view").getChildByName("content").getChildByName("btn_list"), a = 0; a < n.children.length; ++a) {
var s = n.children[a];
s && s.getComponent(cc.Toggle).isChecked && (this.server_type = s.getComponent(cc.Toggle).checkEvents[0].customEventData);
}
} else {
i.getChildByName("New Label").active = !0;
i.getChildByName("icon_nor").active = !0;
}
}
this._history.active = !0;
this.getHistoryList(this.server_type);
},
addClickEvent: function(e, t, i, n) {
var a = new cc.Component.EventHandler();
a.target = t;
a.component = i;
a.handler = n;
e.getComponent(cc.Button).clickEvents.push(a);
},
onBtnBackClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (null == this._curRoomInfo) {
this._historyData = null;
cc.vv.UILoader.destroy(this.node);
} else this.getHistoryList(this.server_type);
},
getHistoryList: function(e, t) {
this._content.removeAllChildren();
var i = this;
cc.vv.userMgr.getHistoryList(0, e, this._clubId, t, function(e) {
var t = (i._historyData = e).detail;
i.initRoomHistoryList(t);
});
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
initRoomHistoryList: function(e) {
for (var t = this._content, i = 0; i < e.length; ++i) {
var n = cc.instantiate(this._viewitemTemp);
n.idx = i;
n.parent = t;
var a = JSON.parse(e[i].base_info);
n.getChildByName("roomNo").getComponent(cc.Label).string = "房间ID:" + e[i].id;
var s = this.dateFormat(1e3 * e[i].zip_time);
n.getChildByName("time").getComponent(cc.Label).string = "时间:" + s;
console.log("时间:" + s);
n.getChildByName("btnxhuif").active = !1;
var c = n.getChildByName("btnOp");
c.active = !0;
c.idx = i;
c.getChildByName("Label").getComponent(cc.Label).string = "详情";
cc.vv.utils.addClickEvent(c, this.node, "History", "onBtnOpClicked");
for (var r = 1, o = 0, h = 0; h < 8; ++h) {
var l = e[i].user_data[h];
n.getChildByName("info" + h).getComponent(cc.Label).string = "";
n.getChildByName("info" + h).getChildByName("user_score").getComponent(cc.Label).string = "";
n.getChildByName("info" + h).getChildByName("max_win").active = !1;
var d = "";
if (l) {
l.user_score > o && (o = l.user_score);
if (cc.vv.userMgr.userId == l.userid) {
r = 0 < l.user_score ? 1 : 3;
r = 0 == l.user_score ? 2 : r;
}
l.name = new _(l.user_name, "base64").toString();
if ("" != l.name) {
4 < l.name.length && (l.name = l.name.substr(0, 4));
d = ": " + l.user_score;
n.getChildByName("info" + h).getComponent(cc.Label).string = l.name;
n.getChildByName("info" + h).getChildByName("user_score").getComponent(cc.Label).string = d;
}
}
}
for (h = 0; h < 8; ++h) {
(l = e[i].user_data[h]) && 0 < l.user_score && o == l.user_score && (n.getChildByName("info" + h).getChildByName("max_win").active = !0);
}
if (this._clubId) {
n.getChildByName("win_icon").active = !1;
n.getChildByName("lost_icon").active = !1;
n.getChildByName("ping_icon").active = !1;
n.getChildByName("game_name").active = !0;
n.getChildByName("game_name").getComponent(cc.Label).string = cc.vv.gameType.getGameTypeStr(a.server_type);
} else {
n.getChildByName("win_icon").active = 1 == r;
n.getChildByName("lost_icon").active = 3 == r;
n.getChildByName("ping_icon").active = 2 == r;
n.getChildByName("game_name").active = !1;
}
}
this._emptyTip.active = 0 == e.length;
this._curRoomInfo = null;
},
getTypeName: function(e) {
var t = "";
switch (e.server_type) {
case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN:
t = "跑得快";
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD:
t = "斗地主";
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX:
t = "斗牛牛";
}
return t;
},
initGameHistoryList: function(e, t) {
t.sort(function(e, t) {
return e.create_time < t.create_time;
});
var i = this._content;
i.removeAllChildren();
for (var n = 0; n < t.length; ++n) {
var a = cc.instantiate(this._viewitemTemp);
a.parent = i;
a.active = !0;
t.length;
a.idx = t[n].game_index;
var s = JSON.parse(e.base_info), c = t[n].game_index + "/" + s.max_games + "局";
a.getChildByName("roomNo").getComponent(cc.Label).string = c + "   房间ID:" + e.id;
var r = this.dateFormat(1e3 * t[n].create_time);
a.getChildByName("time").getComponent(cc.Label).string = "" + r;
a.getChildByName("btnOp").active = !1;
var o = a.getChildByName("btnxhuif");
o.active = !0;
o.idx = t[n].game_index;
o.getChildByName("Label").getComponent(cc.Label).string = "回放";
cc.vv.utils.addClickEvent(o, this.node, "History", "onBtnHFClicked");
for (var h = 1, l = JSON.parse(t[n].result), d = 0; d < 8; ++d) {
a.getChildByName("info" + d).getComponent(cc.Label).string = "";
a.getChildByName("info" + d).getChildByName("user_score").getComponent(cc.Label).string = "";
a.getChildByName("info" + d).getChildByName("max_win").active = !1;
var u = e.user_data[d], v = "";
if (u) {
u.name = new _(u.user_name, "base64").toString();
if ("" != u.name) {
4 < u.name.length && (u.name = u.name.substr(0, 4));
var g = l[d];
null == g && (g = "观众");
v = ": " + g;
if (cc.vv.userMgr.userId == u.userid) {
h = 0 < g ? 1 : 3;
h = 0 == g ? 2 : h;
}
a.getChildByName("info" + d).getComponent(cc.Label).string = u.name;
a.getChildByName("info" + d).getChildByName("user_score").getComponent(cc.Label).string = v;
}
}
}
if (this._clubId) {
a.getChildByName("win_icon").active = !1;
a.getChildByName("lost_icon").active = !1;
a.getChildByName("ping_icon").active = !1;
a.getChildByName("game_name").active = !0;
a.getChildByName("game_name").getComponent(cc.Label).string = cc.vv.gameType.getGameTypeStr(s.server_type);
} else {
a.getChildByName("win_icon").active = 1 == h;
a.getChildByName("lost_icon").active = 3 == h;
a.getChildByName("ping_icon").active = 2 == h;
a.getChildByName("game_name").active = !1;
}
}
this.shrinkContent(t.length);
this._curRoomInfo = e;
},
getViewItem: function(e) {
var t = this._content;
if (t.childrenCount > e) return t.children[e];
var i = cc.instantiate(this._viewitemTemp);
t.addChild(i);
return i;
},
shrinkContent: function(e) {
for (;this._content.childrenCount > e; ) {
var t = this._content.children[this._content.childrenCount - 1];
this._content.removeChild(t, !0);
}
},
getGameListOfRoom: function(e) {
var t = this, i = this._historyData.detail[e];
cc.vv.userMgr.getGamesOfRoom(i.uuid, function(e) {
0 == e.length && cc.vv.alert.show("提示", "该房间未完成1局游戏就被解散，故没有回放数据");
null != e && 0 < e.length && t.initGameHistoryList(i, e);
});
},
getDetailOfGame: function(t) {
var i = this, e = this._curRoomInfo.uuid;
JSON.parse(this._curRoomInfo.base_info);
cc.vv.wc.show("正在加载回放数据");
cc.vv.userMgr.getDetailOfGame(e, t, function(e) {
cc.vv.wc.show("正在进入回放房间");
cc.vv.replayMgr.init(i._curRoomInfo, e);
cc.vv.replayMgr.ininGameNetMgr(i._curRoomInfo, t, e);
});
},
onViewItemClicked: function(e) {
var t = e.target.idx;
console.log(t);
null == this._curRoomInfo ? this.getGameListOfRoom(t) : this.getDetailOfGame(t);
},
onBtnOpClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.parent.idx;
console.log(t);
this.getGameListOfRoom(t);
},
onBtnHFClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.parent.idx;
console.log(t);
this.getDetailOfGame(t);
},
onBtnShareClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.parent.idx;
console.log("分享：" + t);
},
onMoveVScrollBar: function(e) {
if (this._historyData) {
var t = this._historyData.all_counts, i = 1 * this._historyData.page + 1;
if (i * this._historyData.rows < t) {
var n = this;
cc.vv.userMgr.getHistoryList(i, this.server_type, this._clubId, this.dt, function(e) {
n._historyData.page = e.page;
for (var t = e.detail, i = 0; i < t.length; i++) n._historyData.detail.push(t[i]);
n.initRoomHistoryList(t);
});
}
}
},
onBtnTypeClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this.server_type = e.checkEvents[0].customEventData;
console.log("this.server_type:" + this.server_type);
this.getHistoryList(this.server_type);
},
onSaiXuanClicked: function() {
this.timeSearch.active = !0;
},
onTimeSearch: function(e, t) {
this.timeSearch.active = !1;
this.dt = null;
"1" == t && (this.dt = this.timeSearch.getComponent("TimeSearch").getDate());
console.log(this.dt);
this.getHistoryList(this.server_type, this.dt);
}
});
cc._RF.pop();
}, {
buffer: 47
} ],
HotUpdate_Games: [ function(a, e, t) {
"use strict";
cc._RF.push(e, "52d20/5as5KPoET34T4MIA1", "HotUpdate_Games");
cc.Class({
extends: cc.Component,
properties: {
manifestUrls: {
default: [],
url: cc.RawAsset
},
percent: {
default: null,
type: cc.Label
},
lblErr: {
default: null,
type: cc.Label
},
img: {
default: null,
type: cc.Node
},
btn: {
default: null,
type: cc.Node
}
},
checkCb: function(e) {
cc.log("Code: " + e.getEventCode());
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
cc.log("No local manifest file found, hot update skipped.");
cc.eventManager.removeListener(this._checkListener);
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
cc.log("Fail to download manifest file, hot update skipped.");
cc.eventManager.removeListener(this._checkListener);
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
cc.log("Already up to date with the latest remote version.");
cc.eventManager.removeListener(this._checkListener);
this.lblErr.string = "游戏不需要更新";
this.updateFinish();
return;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
this._needUpdate = !0;
this.percent.string = "00.00%";
cc.eventManager.removeListener(this._checkListener);
}
this.hotUpdate();
},
updateCb: function(e) {
var t = !1, i = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
cc.log("No local manifest file found, hot update skipped.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
var n = e.getPercent(), a = (e.getPercentByFile(), e.getMessage());
a && cc.log(a);
var s = Math.floor(100 * n) + "";
"NaN" == s && (s = "0");
this.percent.string = s + "%";
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
cc.log("Fail to download manifest file, hot update skipped.");
i = !0;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
cc.log("Already up to date with the latest remote version.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
cc.log("Update finished. " + e.getMessage());
t = !0;
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
cc.log("Update failed. " + e.getMessage());
this._failCount++;
if (this._failCount < 5) this._am.downloadFailedAssets(); else {
cc.log("Reach maximum fail count, exit update process");
i = !(this._failCount = 0);
}
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
cc.log("Asset update error: " + e.getAssetId() + ", " + e.getMessage());
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
cc.log(e.getMessage());
}
i && cc.eventManager.removeListener(this._updateListener);
if (t) {
cc.eventManager.removeListener(this._updateListener);
var c = jsb.fileUtils.getSearchPaths();
console.log("searchPaths", c);
var r = this._am.getLocalManifest().getSearchPaths();
Array.prototype.unshift(c, r);
console.log("newPaths", r);
cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(c));
jsb.fileUtils.setSearchPaths(c);
this.lblErr.string = "游戏资源更新完毕";
this.updateFinish();
}
},
hotUpdate: function() {
if (this._am && this._needUpdate) {
this.lblErr.string = "开始更新游戏资源...";
this._updateListener = new jsb.EventListenerAssetsManager(this._am, this.updateCb.bind(this));
cc.eventManager.addListener(this._updateListener, 1);
this._failCount = 0;
this._am.update();
}
},
onLoad: function() {},
updateGame: function(e) {
this.gameName = e;
console.log("gameName", e);
this.img.active = !0;
this.percent.string = "0%";
this.percent.node.active = !0;
this.btn.active = !1;
if (cc.sys.isNative) {
this.id = setInterval(function() {
self.requestNeedUpdate();
}, 3e3);
this.requestNeedUpdate();
} else this.updateFinish();
},
updateFinish: function() {
this.lblErr.string = "资源更新完成,点击确定重新装载后生效!";
console.log(this.gameName, "热更新完成");
if (this._am) {
var e = this._am.getLocalManifest().getVersion();
cc.sys.localStorage.setItem(this.gameName + "version", e);
} else cc.sys.localStorage.setItem(this.gameName + "version", cc.vv.games[this.gameName].version);
this.img.active = !1;
this.percent.node.active = !1;
this.btn.active = !0;
},
onBtnClick: function() {
cc.vv.audioMgr.stopBGM();
cc.game.restart();
},
findManifest: function(e) {
for (var t in this.manifestUrls) {
var i = this.manifestUrls[t];
console.log("数组里面的url:" + i);
if (i && -1 != i.indexOf(e)) return i;
}
},
requestNeedUpdate: function() {
var e = a("HTTP"), t = this, i = cc.sys.localStorage.getItem("userid"), n = this.lblErr.string;
n += ".";
-1 != (this.lblErr.string = n).indexOf(".......") && (this.lblErr.string = "检查游戏资源.");
console.log(cc.HOTUPDATE);
e.sendRequest("CanUpdate", {
uid: i
}, function(e) {
clearInterval(t.id);
console.log("当前用户是否需要热更新", e.up);
e && 1 == e.up ? t.readyHotUpdate() : this.updateFinish();
}, cc.HOTUPDATE);
},
readyHotUpdate: function() {
var e = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "yueyueqipai_asset/" + this.gameName;
console.log("storagePath", e);
var t = this.findManifest(this.gameName);
console.log("manifestUrl", t);
this._am = new jsb.AssetsManager(t, e);
this._am.retain();
this._needUpdate = !1;
if (this._am.getLocalManifest().isLoaded()) {
this._checkListener = new jsb.EventListenerAssetsManager(this._am, this.checkCb.bind(this));
cc.eventManager.addListener(this._checkListener, 1);
this._am.checkUpdate();
}
},
onDestroy: function() {
this._am && this._am.release();
},
update: function(e) {
this.img.rotation = this.img.rotation + 45 * e;
}
});
cc._RF.pop();
}, {
HTTP: "HTTP"
} ],
HotUpdate: [ function(a, e, t) {
"use strict";
cc._RF.push(e, "be0a82AB2NEcotEbBPY3I8L", "HotUpdate");
var i = a("buffer").Buffer;
cc.Class({
extends: cc.Component,
properties: {
manifestUrl: {
default: null,
url: cc.RawAsset
},
percent: {
default: null,
type: cc.Label
},
lblErr: {
default: null,
type: cc.Label
},
bar: {
default: null,
type: cc.ProgressBar
},
config: {
default: null,
url: cc.RawAsset
},
games: {
default: null,
url: cc.RawAsset
},
updateGame: {
default: null,
type: cc.Prefab
}
},
checkCb: function(e) {
cc.log("Code: " + e.getEventCode());
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
cc.log("No local manifest file found, hot update skipped.");
cc.eventManager.removeListener(this._checkListener);
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
cc.log("Fail to download manifest file, hot update skipped.");
cc.eventManager.removeListener(this._checkListener);
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
cc.log("Already up to date with the latest remote version.");
cc.eventManager.removeListener(this._checkListener);
this.lblErr.string = "游戏不需要更新";
cc.director.loadScene("loading");
return;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
this._needUpdate = !0;
this.percent.string = "00.00%";
cc.eventManager.removeListener(this._checkListener);
}
this.hotUpdate();
},
updateCb: function(e) {
var t = !1, i = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
cc.log("No local manifest file found, hot update skipped.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
var n = e.getPercent(), a = (e.getPercentByFile(), e.getMessage());
a && cc.log(a);
var s = Math.floor(100 * n) + "";
"NaN" == s && (s = "0");
this.percent.string = s + "%";
this.bar.progress = n;
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
cc.log("Fail to download manifest file, hot update skipped.");
i = !0;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
cc.log("Already up to date with the latest remote version.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
cc.log("Update finished. " + e.getMessage());
t = !0;
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
cc.log("Update failed. " + e.getMessage());
this._failCount++;
if (this._failCount < 5) this._am.downloadFailedAssets(); else {
cc.log("Reach maximum fail count, exit update process");
i = !(this._failCount = 0);
}
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
cc.log("Asset update error: " + e.getAssetId() + ", " + e.getMessage());
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
cc.log(e.getMessage());
}
i && cc.eventManager.removeListener(this._updateListener);
if (t) {
cc.eventManager.removeListener(this._updateListener);
var c = jsb.fileUtils.getSearchPaths(), r = this._am.getLocalManifest().getSearchPaths();
Array.prototype.unshift(c, r);
cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(c));
jsb.fileUtils.setSearchPaths(c);
this.lblErr.string = "游戏资源更新完毕";
cc.game.restart();
}
},
hotUpdate: function() {
if (this._am && this._needUpdate) {
this.lblErr.string = "开始更新游戏资源...";
this._updateListener = new jsb.EventListenerAssetsManager(this._am, this.updateCb.bind(this));
cc.eventManager.addListener(this._updateListener, 1);
this._failCount = 0;
this._am.update();
}
},
onLoad: function() {
var i = this;
cc.vv = {};
cc.vv.hotUpdateMgr = new a("GameUpdateMgr");
cc.vv.sign = a("sign");
cc.vv.http = a("HTTP");
cc.vv.updateGame = cc.instantiate(this.updateGame);
cc.loader.load(this.games, function(e, t) {
e ? cc.log(e) : cc.vv.games = t.games;
});
cc.loader.loadRes("hall/textures/Toast/global_pic_toast_bg", cc.SpriteFrame, function(e, t) {
var i = a("../components/ToastView");
cc.vv.toast = i.getInstance();
});
if ("dev" == cc.ENV) cc.loader.load(this.config, function(e, t) {
if (e) cc.log(e); else {
cc.global_config = t.dev;
i.initConfig();
cc.director.loadScene("loading");
}
}); else {
this.id = setInterval(function() {
i.requestGlobalConfig();
}, 3e3);
this.requestGlobalConfig();
}
this.lblErr.string = "检查游戏资源.";
},
requestGlobalConfig: function() {
var t = this;
cc.vv.http.sendRequest("", {}, function(e) {
if (e.prod.version) {
clearInterval(t.id);
cc.global_config = e[cc.ENV];
t.initConfig();
t.requestNeedUpdate();
}
}, cc.GLOBAL_CONFIG_URL);
},
initConfig: function() {
cc.vv.http.url = cc.vv.http.master_url = cc.global_config.login;
cc.CHANNEL = cc.global_config.channel;
cc.KEFU = cc.global_config.kefu;
cc.YXNAME = new i(cc.global_config.yxName, "base64").toString();
cc.SHARELINK = cc.global_config.sharelink;
cc.HOTUPDATE = cc.global_config.hotupdate;
cc.DOWNLOAD_URL = cc.global_config.download_url;
cc.CLIENT_URL = cc.global_config.client_url;
cc.serverGames = cc.global_config.games;
var e = cc.sys.localStorage.getItem("localGames");
if (e) {
cc.games = JSON.stringify(e);
cc.vv.hotUpdateMgr.checkGameVersion();
} else cc.loader.load(this.games, function(e, t) {
e ? cc.log(e) : cc.games = t.games;
});
},
requestNeedUpdate: function() {
var e = a("HTTP"), t = this, i = cc.sys.localStorage.getItem("userid"), n = this.lblErr.string;
n += ".";
-1 != (this.lblErr.string = n).indexOf(".......") && (this.lblErr.string = "检查游戏资源.");
console.log(cc.HOTUPDATE);
e.sendRequest("CanUpdate", {
uid: i
}, function(e) {
clearInterval(t.id);
console.log("当前用户是否需要热更新", e.up);
e && 1 == e.up ? t.readyHotUpdate() : cc.director.loadScene("loading");
}, cc.HOTUPDATE);
},
readyHotUpdate: function() {
var e = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "yueyueqipai_asset";
cc.log("Storage path for remote asset : " + e);
cc.log("Local manifest URL : " + this.manifestUrl);
this._am = new jsb.AssetsManager(this.manifestUrl, e);
this._am.retain();
cc.localVersion = this._am.getLocalManifest().getVersion();
this._needUpdate = !1;
if (this._am.getLocalManifest().isLoaded()) {
this._checkListener = new jsb.EventListenerAssetsManager(this._am, this.checkCb.bind(this));
cc.eventManager.addListener(this._checkListener, 1);
this._am.checkUpdate();
}
},
onDestroy: function() {
this._am && this._am.release();
}
});
cc._RF.pop();
}, {
"../components/ToastView": "ToastView",
HTTP: "HTTP",
buffer: 47,
sign: "sign"
} ],
Hunan_Action: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8faf7EwSqFJg63ijmmVCNtg", "Hunan_Action");
cc.Class({
extends: cc.Component,
properties: {
mj_img_1: {
default: null,
type: cc.Sprite
},
mj_img_2: {
default: null,
type: cc.Sprite
},
mj_img_3: {
default: null,
type: cc.Sprite
},
mj_img_4: {
default: null,
type: cc.Sprite
},
mj_bg_wall: {
default: [],
type: cc.Sprite
},
node_visible: cc.Node
},
setValueAndColor: function(e, t) {
this.node_visible.active = !1;
this.mj_bg_wall[0].node.active = !1;
this.mj_bg_wall[1].node.active = !1;
this.mj_bg_wall[2].node.active = !1;
this.mj_bg_wall[3].node.active = !1;
cc.vv.MJConfig.Action_setValueAndColor(this, e);
},
showGang: function(e, t) {
var i = cc.vv.mahjongmgr.getPengSpriteByID(e);
this.mj_img_1.spriteFrame = i;
this.mj_img_2.spriteFrame = i;
this.mj_img_3.spriteFrame = i;
this.mj_img_4.spriteFrame = i;
this.node_visible.active = !0;
}
});
cc._RF.pop();
}, {} ],
Hunan_ItemGang: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2db7g3MfJCoYF35PpSs2CQ", "Hunan_ItemGang");
cc.Class({
extends: cc.Component,
properties: {
action: -1,
MJ_id: -1
},
onBtn: function() {
if (-1 != this.MJ_id) {
var e = {};
e.type = this.action;
e.card = this.MJ_id;
cc.vv.Event.emit("mj_opGang_push", e);
}
this.node.destroy();
},
setHandValueAndColor: function(e) {
this.nodeY = this.node.y;
this.MJ_id = e;
var t = cc.vv.mahjongmgr.getHandSpriteByID(e);
this.node.getChildByName("item").getComponent(cc.Sprite).spriteFrame = t;
},
setHandAction: function(e) {
this.action = e;
}
});
cc._RF.pop();
}, {} ],
Hunan_Item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d9ae3bju5NJWqOR4PPgKT8R", "Hunan_Item");
cc.Class({
extends: cc.Component,
properties: {
MJ_id: -1,
_start: 0,
_move: 0,
_end: 0,
node_cai: cc.Node,
_isCai: !1,
node_bao: cc.Node,
_isBao: !1,
node_jin: cc.Node,
_isJin: !1,
node_gang: cc.Node,
_isGang: !1,
node_msk: cc.Node,
_isMsk: !1,
node_green: cc.Node,
_isGreen: !1
},
onLoad: function() {
this.node_cai && (this.node_cai.active = this._isCai);
this.node_bao && (this.node_bao.active = this._isBao);
this.node_jin && (this.node_jin.active = this._isJin);
this.node_gang && (this.node_gang.active = this._isGang);
this.node_msk && (this.node_msk.active = this._isMsk);
this.node_green && (this.node_green.active = this._isGreen);
},
setHandValueAndColor: function(e) {
this.nodeY = this.node.y;
this.isShowUp = !1;
this.MJ_id = e;
var t = cc.vv.mahjongmgr.getHandSpriteByID(e);
return this.getComponent(cc.Sprite).spriteFrame = t;
},
setOutValueAndColor: function(e) {
this.nodeY = this.node.y;
this.isShowUp = !1;
this.MJ_id = e;
var t = cc.vv.mahjongmgr.getOutSpriteByID(e);
return this.getComponent(cc.Sprite).spriteFrame = t;
},
setICON: function() {
var e = cc.vv.gameNetMgr.conf.server_type, t = cc.vv.gameNetMgr.mjSyncData, i = t.god_wealth, n = t.light_card;
if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ) {
if (this.MJ_id == i) {
this._isCai = !0;
this.node_cai.active = !0;
}
} else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ) {
if (this.MJ_id == i) {
this._isJin = !0;
this.node_jin.active = !0;
}
} else if (e == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC) {
if (this.MJ_id == i) {
this._isBao = !0;
this.node_bao.active = !0;
}
if (this.MJ_id == n) {
this._isGang = !0;
this.node_gang.active = !0;
}
}
},
setmsk: function(e) {
this._isMsk = e;
this.node_msk && (this.node_msk.active = e);
},
clearNode: function() {
this.nodeY = 0;
this.isShowUp = !1;
this.MJ_id = -1;
this.node_cai && (this.node_cai.active = !1);
this.node_bao && (this.node_bao.active = !1);
this.node_jin && (this.node_jin.active = !1);
this.node_gang && (this.node_gang.active = !1);
this.node_msk && (this.node_msk.active = !1);
},
setUp: function() {
this.node.y = this.nodeY + 20;
this.isShowUp = !0;
},
setDown: function() {
this.node.y = this.nodeY;
this.isShowUp = !1;
},
getID: function() {
return this.MJ_id;
},
setValueAndColor: function(e, t, i) {
this.nodeY = this.node.y;
this.isShowUp = !1;
this.MJ_id = t;
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = cc.vv.mahjongmgr.getMJSpriteByID(n, t, i);
this.getComponent(cc.Sprite).spriteFrame = a;
}
});
cc._RF.pop();
}, {} ],
Hunan_PokerUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1fc1e+Fa/dIY4ZHTemYos0u", "Hunan_PokerUtils");
i.index = function(e) {
return 9 * ((240 & e) >> 4) + (15 & e) - 1;
};
i.index_value = function(e) {
return 15 & (e / 9 << 4 | e % 9 + 1);
};
i.index_type = function(e) {
return (240 & (e / 9 << 4 | e % 9 + 1)) >> 4;
};
i.has_rule = function(e, t) {
return n(e, t);
};
function n(e, t) {
return 0 != (e & 1 << t);
}
i.Decs = function(e, t) {
var i = "";
switch (e) {
case 10003:
i = a(t);
break;

case 10006:
i = a(t);
break;

case 10007:
i = a(t);
break;

case 10009:
i = function(e) {
var t = "";
n(e, 2) && (t += "烂牌 ");
n(e, 3) && (t += "将将胡 ");
n(e, 4) && (t += "清一色 ");
n(e, 5) && (t += "海底捞 ");
n(e, 6) && (t += "海底捞 ");
n(e, 7) && (t += "七小对 ");
n(e, 8) && (t += "豪华七小对 ");
n(e, 9) && (t += "杠上开花 ");
n(e, 10) && (t += "抢杠胡 ");
n(e, 11) && (t += "杠上炮 ");
n(e, 12) && (t += "全求人 ");
n(e, 13) && (t += "大四喜 ");
n(e, 14) && (t += "板板胡 ");
n(e, 15) && (t += "缺一色 ");
n(e, 16) && (t += "六六顺 ");
return t;
}(t);
}
return i;
};
i.huGetIsBird = function(e, t, i, n, a, s) {
return (e == t || e == i) && (1 == s || 5 == s || 9 == s || (a[1].userid == i ? 2 == s || 6 == s : a[2].userid == i ? 3 == s || 7 == s : a[3].userid == i ? 4 == s || 8 == s : void 0));
};
i.ziMoGetIsBird = function(e, t, i) {
return e[1].userid == i ? 2 == t || 6 == t : e[2].userid == i ? 3 == t || 7 == t : e[3].userid == i ? 4 == t || 8 == t : void 0;
};
function a(e) {
var t = "";
n(e, 2) && (t += "碰碰胡 ");
n(e, 3) && (t += "将将胡 ");
n(e, 4) && (t += "清一色 ");
n(e, 5) && (t += "海底捞 ");
n(e, 6) && (t += "海底捞 ");
n(e, 7) && (t += "七小对 ");
n(e, 8) && (t += "豪华七小对 ");
n(e, 9) && (t += "杠上开花 ");
n(e, 10) && (t += "抢杠胡 ");
n(e, 11) && (t += "杠上炮 ");
n(e, 12) && (t += "全求人 ");
n(e, 13) && (t += "大四喜 ");
n(e, 14) && (t += "板板胡 ");
n(e, 15) && (t += "缺一色 ");
n(e, 16) && (t += "六六顺 ");
n(e, 19) && (t += "三同 ");
n(e, 20) && (t += "一枝花 ");
n(e, 21) && (t += "金童玉女 ");
n(e, 22) && (t += "步步高 ");
n(e, 23) && (t += "中途大四喜 ");
n(e, 24) && (t += "中途六六顺 ");
return t;
}
i.GetZZIsBird = function(e, t) {
return e < 45 && (1 == t || 5 == t || 9 == t);
};
i.GetHZIsBird = function(e, t) {
return 53 == e || (1 == t || 5 == t || 9 == t) && e < 45;
};
cc._RF.pop();
}, {} ],
Hunan_globalSetting: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ba23cK23l9KOY0vYK98oOIH", "Hunan_globalSetting");
var n = {
MASK_COLOR: 240,
MASK_VALUE: 15,
MJ_BASE_VALUE: [ 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35, 36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 40, 40, 40, 40, 41, 41, 41, 41 ],
MJ_FENG_VALUE: [ 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51, 52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55 ],
MJ_HZ_VALUE: [ 53, 53, 53, 53 ],
MJ_FLOWER_VALUE: [ 65, 66, 67, 68, 69, 70, 71, 72 ],
GAME_TYPE_CHANGSHA: 1,
GAME_TYPE_ZHUANZHUAN: 2,
GAME_TYPE_HONGZHONG: 3,
MASK_PC8: 1,
MASK_PC16: 2,
MASK_PLE4: 3,
MASK_PLE3: 4,
MASK_PLE2: 5,
ZZ_QIANGGANG: 6,
ZZ_ONLY_ZIMO: 7,
ZZ_7DUI: 8,
ZZ_HONGZHONG: 9,
CS_QIANGANG: 6,
CS_258: 10,
CS_ZHUANGXIAN: 11,
HZ_ONLY_ZIMO: 7,
HZ_7DUI: 8,
BIRD_COUNTS_2: 12,
BIRD_COUNTS_4: 13,
BIRD_COUNTS_6: 14,
BIRD_ALL: 15,
CS_BIRD_ADD: 16,
CS_BIRD_DOUBLE: 17,
CS_BIRD_ADD_DO: 18,
CS_BIRD_ONE: 12,
CS_BIRD_TWO: 13,
SAN_TONG: 22,
YI_ZHI_HUA: 23,
JIN_TONG_YUNV: 24,
BU_BU_GAO: 25,
MIDDLE_DASIXI: 26,
MIDDLE_LIULIU: 27,
PIAO_FEN: 28,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
GAME_STATE_XIAOHU: 3,
WIK_NULL: 0,
WIK_LEFT: 1,
WIK_CENTER: 2,
WIK_RIGHT: 3,
WIK_PENG: 4,
WIK_PRIVATE_GANG: 5,
WIK_GANG: 6,
WIK_XIAO_HU: 7,
WIK_CHI_HU: 8,
WIK_ZI_MO: 9,
WIK_BU_PAI: 10,
WIK_MIDDLE: 11,
CHK_NULL: 0,
CHK_CHI_HU: 1,
CHR_PENGPENG_HU: 2,
CHR_JIANGJIANG_HU: 3,
CHR_QING_YI_SE: 4,
CHR_HAI_DI_LAO: 5,
CHR_HAI_DI_PAO: 6,
CHR_QI_XIAO_DUI: 7,
CHR_HAOHUA_QI_XIAO_DUI: 8,
CHR_GANG_KAI: 9,
CHR_QIANG_GANG_HU: 10,
CHR_GANG_SHANG_PAO: 11,
CHR_QUAN_QIU_REN: 12,
CHR_XIAO_DA_SI_XI: 13,
CHR_XIAO_BAN_BAN_HU: 14,
CHR_XIAO_QUE_YI_SE: 15,
CHR_XIAO_LIU_LIU_SHUN: 16,
CHR_ZI_MO: 17,
CHR_SHU_FAN: 18,
CHR_XIAO_SAN_TONG: 19,
CHR_XIAO_YI_ZHI_HUA: 20,
CHR_XIAO_JTYN: 21,
CHR_XIAO_BBG: 22,
CHR_MIDDLE_DASIXI: 23,
CHR_MIDDLE_LLS: 24,
GAME_STATE_SCORE: 5,
MAX_OPERATION_CODE: 65535,
MAX_OPERATION_RIGHT: 4294967295,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_PICK_GANG: 3,
ACTION_LEFT_CHI: 4,
ACTION_CENTER_CHI: 5,
ACTION_RIGHT_CHI: 6,
ACTION_PENG: 7,
ACTION_DIAN_GANG: 8,
ACTION_BA_GANG: 9,
ACTION_AN_GANG: 10,
ACTION_HU: 11,
ACTION_SELF_HU: 12,
ACTION_XIAOHU: 13,
ACTION_BUPAI: 14,
ACTION_MIDDLE: 15
};
n.MASK_PC8 = 1;
n.MASK_PC16 = 2;
n.MASK_PLE4 = 3;
n.MASK_PLE3 = 4;
n.MASK_PLE2 = 5;
n.EAT_CARD = 6;
n.DIAN_PAO = 7;
n.UP_SCORE = 8;
n.MIDDLE_SCORE = 9;
n.DOWN_SCORE = 10;
n.COLOR = 11;
n.NO_COLOR = 12;
n.DIAN_ALL = 13;
n.CHK_NULL = 0;
n.CHK_CHI_HU = 1;
n.CHR_BAD_HU = 2;
n.CHR_7BAD_HU = 3;
n.CHR_7DUI = 4;
n.CHR_H7DUI = 5;
n.CHR_FENG = 6;
n.CHR_QIANG_GANG_HU = 7;
n.CHR_GANG_KAI = 8;
n.CHR_GANG_SHANG_PAO = 9;
n.CHR_PENGPENG = 10;
n.CHR_QINGYISE = 11;
n.CHR_QUN_QIU_REN = 12;
n.CHR_MEN_QING = 13;
n.CHR_TIAN = 14;
n.CHR_DI = 15;
n.CHR_ZI_MO = 17;
i.globalSetting = n;
cc._RF.pop();
}, {} ],
Hunan_msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b73e4tKnS1DmZ5lJ/S/J6Ri", "Hunan_msgdefine");
var n = {};
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_poker_count = JSON.stringify({
gang_card_num: 0,
surplus_card_num: 0
});
n.SC_baiban_gang = JSON.stringify({
user_id: 0,
type: 0,
card: 0
});
n.SC_action_mask = JSON.stringify({
action_mask: 0
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.SC_pick_gang = JSON.stringify({
user_id: 0,
card: 0
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
n.SC_game_begin = JSON.stringify({
button: -1,
game_index: -1,
dice_num: 0
});
n.SC_holds = JSON.stringify({
holds: [],
items: [],
folds: []
});
n.SC_Wall = JSON.stringify({
dice_num: 0,
total: 0,
head: 0,
tail: 0
});
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user_id: 0,
out_seat_index: 0,
out_card: 0
});
n.SC_Operation = JSON.stringify({
seat_index: 0,
op_mask: 0,
op_right: 0,
provider: 0,
card: 0,
gang_card: []
});
n.CS_UserOperation = JSON.stringify({
op_code: -1,
op_card: -1
});
n.SC_UserOperation = JSON.stringify({
error_code: 0,
op_code: 0,
op_card: 0
});
n.SC_ProcessOp = JSON.stringify({
seat_index: -1,
op_code: -1,
op_card: -1,
op_right: -1,
provider: -1
});
n.SC_XiaoHu = JSON.stringify({
seat_index: -1,
user_id: -1,
holds: [],
rights: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_Pick = JSON.stringify({
seat_index: 0,
user_id: 0,
card: 0
});
n.SC_Magic = JSON.stringify({
magic: []
});
n.SC_Birds = JSON.stringify({
birds: [],
pick_num: 0
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
n.SC_Haidi = JSON.stringify({
who: 0
});
n.SC_SeaChose = JSON.stringify({
who: 0,
want: 0,
card: 0
});
n.CS_SeaChose = JSON.stringify({
want: 1
});
n.CS_noSeaChose = JSON.stringify({
want: 0
});
n.CS_piaoFen = JSON.stringify({
score: 0
});
n.SC_piaoFen = JSON.stringify({
user_id: 0,
score: 0
});
n.SC_Xing = JSON.stringify({
xing: [],
hit_num: {}
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
IPhoneX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e6e08TwAgtJ9J2lmdWc/Wec", "IPhoneX");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
if (cc.sys.isNative && cc.sys.platform == cc.sys.IPHONE) {
var e = cc.view.getFrameSize();
if (2436 == e.width && 1125 == e.height || 1125 == e.width && 2436 == e.height) {
var t = this.node.getComponent(cc.Widget);
t && (t.left += 56);
}
}
},
start: function() {}
});
cc._RF.pop();
}, {} ],
ImageLoader: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ed057Bgp8FHlJbGI+ljAN7d", "ImageLoader");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.userid = null;
this.setupSpriteFrame();
},
clear_setUserID: function() {
if (this._spriteFrame) {
var e = this.getComponent(cc.Sprite);
e && (e.spriteFrame = null);
}
},
setImgByUrl: function(e) {
if (e) {
var t, n, a, i = this;
t = e, n = 0, a = function(e, t) {
i._spriteFrame = t;
i.setupSpriteFrame();
}, cc.loader.load({
url: t,
type: "jpg"
}, function(e, t) {
var i = new cc.SpriteFrame(t, cc.Rect(0, 0, t.width, t.height));
a(n, i);
});
} else console.log("------------setImgByUrl:" + e);
},
setUserID: function(e) {
if (e) {
this.userid = e;
null == cc.vv.images && (cc.vv.images = {});
if (!cc.vv.userMgr.isHighDefend) {
var t = cc.vv.gameNetMgr.getSeatByID(e).headimg;
this.setImgByUrl(t);
}
}
},
setupSpriteFrame: function() {
if (this._spriteFrame) {
var e = this.getComponent(cc.Sprite);
e && (e.spriteFrame = this._spriteFrame);
}
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
InvitCode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d45eTWMONNGJwlWoi2B98o", "InvitCode");
cc.Class({
extends: cc.Component,
onLoad: function() {
var e = cc.vv.userMgr.invitation_code;
if (e) {
cc.find("Canvas/InvitCode/input_id").getComponent(cc.EditBox).string = e;
cc.find("Canvas/InvitCode/btn_ok").active = !1;
cc.find("Canvas/InvitCode/showLb").active = !0;
} else {
cc.find("Canvas/InvitCode/btn_ok").active = !0;
cc.find("Canvas/InvitCode/showLb").active = !1;
}
this.initMsgHandler();
},
start: function() {},
onBtnInvitCodeOK: function() {
cc.vv.audioMgr.playBtnClick();
this.input_id = cc.find("Canvas/InvitCode/input_id").getComponent(cc.EditBox);
this.invitation_code = this.input_id.string;
this.input_id.string = "";
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
invitation: this.invitation_code
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("invitation_code", e);
},
onBtnBackClick: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("invitation_code", this.onMsgInvitationCode.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("invitation_code");
},
onMsgInvitationCode: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.userMgr.invitation_code = this.invitation_code;
this.input_id.string = this.invitation_code;
cc.find("Canvas/InvitCode/btn_ok").active = !1;
cc.find("Canvas/InvitCode/showLb").active = !0;
cc.vv.alert.show("提示", "奖励已经通过邮件发送啦，记得查收哦~");
}
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
JoinGameInput: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "10a1c8jz95Ju4NnpkOWUfin", "JoinGameInput");
cc.Class({
extends: cc.Component,
properties: {
nums: {
default: [],
type: [ cc.Label ]
},
_inputIndex: 0
},
onLoad: function() {},
onEnable: function() {
this.onResetClicked();
},
onInputFinished: function(e) {
cc.vv.userMgr.enterRoom(e, function(e) {
if (0 == e.errcode) this.node.active = !1; else {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
this.onResetClicked();
}
}.bind(this));
},
onInput: function(e) {
cc.vv.audioMgr.playBtnClick();
if (!(this._inputIndex >= this.nums.length)) {
this.nums[this._inputIndex].string = e;
this._inputIndex += 1;
if (this._inputIndex == this.nums.length) {
var t = this.parseRoomID();
console.log("ok:" + t);
this.onInputFinished(t);
}
}
},
onN0Clicked: function() {
this.onInput(0);
},
onN1Clicked: function() {
this.onInput(1);
},
onN2Clicked: function() {
this.onInput(2);
},
onN3Clicked: function() {
this.onInput(3);
},
onN4Clicked: function() {
this.onInput(4);
},
onN5Clicked: function() {
this.onInput(5);
},
onN6Clicked: function() {
this.onInput(6);
},
onN7Clicked: function() {
this.onInput(7);
},
onN8Clicked: function() {
this.onInput(8);
},
onN9Clicked: function() {
this.onInput(9);
},
onResetClicked: function() {
for (var e = 0; e < this.nums.length; ++e) this.nums[e].string = "";
this._inputIndex = 0;
},
onDelClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (0 < this._inputIndex) {
this._inputIndex -= 1;
this.nums[this._inputIndex].string = "";
}
},
onCloseClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
parseRoomID: function() {
for (var e = "", t = 0; t < this.nums.length; ++t) e += this.nums[t].string;
return e;
}
});
cc._RF.pop();
}, {} ],
LoadingLogic: [ function(o, e, t) {
"use strict";
cc._RF.push(e, "350d3Ry9aVIqJR27fP2H/z1", "LoadingLogic");
cc.Class({
extends: cc.Component,
properties: {
tipLabel: cc.Label,
tipLabel2: cc.Label,
pb: cc.ProgressBar,
_stateStr: "",
_progress: 0,
_isLoading: !1
},
onLoad: function() {
console.log("................开始启动");
this.initMgr();
this.initParams();
this.tipLabel.string = this._stateStr;
this.text_wenti = cc.find("Canvas/alert/scrollView/view/content/text_wenti");
cc.find("Canvas/alert").active = !1;
cc.vv.utils.resetWindow();
if (cc.sys.isMobile && !cc.sys.isNative) {
var e = 1e3 * Math.random();
if (!cc.args.code) if (cc.args.web_args && cc.args.web_args.roomid) {
var t = cc.args.web_args.roomid;
location.href = "https://auth.totorotec.cn/get-weixin-code.html?appid=wx9a626fafe7e866cd&redirect_uri=http://assets-0.totorotec.com/web-mobile/index.html?web_args=channel$wechat_default$$roomid$" + t + "$$version$" + e + "&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect";
} else location.href = "https://auth.totorotec.cn/get-weixin-code.html?appid=wx9a626fafe7e866cd&redirect_uri=http://assets-0.totorotec.com/web-mobile/index.html?web_args=channel$wechat_default$$version$" + e + "&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect";
}
},
start: function() {
if (cc.sys.os == cc.sys.OS_ANDROID) {
var e = jsb.reflection.callStaticMethod(cc.vv.anysdkMgr.ANDROID_API, "getCodeVersion", "()I");
cc.error("安卓废版本直接强制更新", e);
if (!e) {
cc.find("Canvas/alert").active = !0;
return;
}
}
var i = this;
if (cc.sys.os == cc.sys.OS_IOS && cc.sys.isNative) this.checkVersion(); else {
var n = Date.now();
setTimeout(function e() {
var t = Date.now() - n;
t < 1e3 ? setTimeout(e, 33) : 255 * (1 - (t - 1e3) / 500) < 0 ? i.checkVersion() : setTimeout(e, 33);
}, 33);
}
},
initMgr: function() {
var e = o("NetMgr");
cc.vv.netMgr = new e();
cc.vv.netMgr.init();
cc.vv.UILoader = o("UILoader");
cc.vv.MemoryDetector = o("MemoryDetector");
var t = o("UserMgr");
cc.vv.userMgr = new t();
cc.vv.userMgr.init();
cc.vv.match = {};
cc.vv.userMgr.statistic_key = o("statistic_key").statistic_key;
cc.vv.userMgr.daily_value_key = o("statistic_key").daily_key;
var i = o("ReplayMgr");
cc.vv.replayMgr = new i();
cc.vv.http = o("HTTP");
cc.vv.dhrc4 = o("dhrc");
cc.vv.eventMgr = o("EventDispatcher");
cc.vv.event = o("EventType");
cc.game.on(cc.game.EVENT_SHOW, function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].resumePingPong();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].resumePingPong();
});
cc.game.on(cc.game.EVENT_HIDE, function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].pausePingPong();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].pausePingPong();
});
var n = o("sdkManager");
cc.vv.sdkManager = new n();
cc.vv.sdkManager.init();
var a = o("AnysdkMgr");
cc.vv.anysdkMgr = new a();
cc.vv.anysdkMgr.init();
var s = o("VoiceMgr");
cc.vv.voiceMgr = new s();
cc.vv.voiceMgr.init();
var c = o("AudioMgr");
cc.vv.audioMgr = new c();
cc.vv.audioMgr.init();
var r = o("Utils");
cc.vv.utils = new r();
cc.vv.sign = o("sign");
cc.vv.msgTemp = o("msgdefine").msg_templete;
cc.vv.error = o("ErrorCode");
cc.vv.gameType = o("GameType");
cc.args = this.urlParse();
},
urlParse: function() {
var e, t, i = {};
if (null == window.location) return i;
for (var n = window.location.href, a = n.indexOf("?"), s = (n = n.substr(a + 1)).split("&"), c = 0; c < s.length; c++) if (0 < (a = s[c].indexOf("="))) {
e = s[c].substring(0, a);
t = s[c].substr(a + 1);
i[e] = t;
"web_args" == e && (i[e] = cc.vv.utils.parseWebArgs(t));
}
return i;
},
checkVersion: function() {
this.startPreloading();
},
updateAlert: function(e) {
this.text_wenti.getComponent(cc.RichText).string = e;
cc.find("Canvas/alert").active = !0;
},
onBtnDownloadClicked: function() {
if (cc.sys.isNative) {
var e = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "yueyueqipai_asset";
jsb.fileUtils.removeDirectory(e);
}
cc.sys.openURL(cc.DOWNLOAD_URL);
},
startPreloading: function() {
this._stateStr = "正在加载资源，请稍候";
this._isLoading = !0;
this.onLoadComplete();
},
onLoadComplete: function() {
this._isLoading = !1;
this._stateStr = "准备登陆";
cc.director.loadScene("login");
cc.loader.onComplete = null;
},
initParams: function() {
new (o("params_init"))().init();
},
update: function(e) {
if (0 != this._stateStr.length) {
this.tipLabel.string = this._stateStr + " ";
if (this._isLoading) ; else for (var t = Math.floor(Date.now() / 1e3) % 4, i = 0; i < t; ++i) this.tipLabel.string += ".";
}
}
});
cc._RF.pop();
}, {
AnysdkMgr: "AnysdkMgr",
AudioMgr: "AudioMgr",
ErrorCode: "ErrorCode",
EventDispatcher: "EventDispatcher",
EventType: "EventType",
GameType: "GameType",
HTTP: "HTTP",
MemoryDetector: "MemoryDetector",
NetMgr: "NetMgr",
ReplayMgr: "ReplayMgr",
UILoader: "UILoader",
UserMgr: "UserMgr",
Utils: "Utils",
VoiceMgr: "VoiceMgr",
dhrc: "dhrc",
msgdefine: "msgdefine",
params_init: "params_init",
sdkManager: "sdkManager",
sign: "sign",
statistic_key: "statistic_key"
} ],
Login: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "572a7Qfh69N9ZLXkNthANfi", "Login");
var s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
String.prototype.format = function(e) {
if (0 < arguments.length) {
var t = this;
if (1 == arguments.length && "object" == ("undefined" == typeof e ? "undefined" : s(e))) for (var i in e) {
var n = new RegExp("({" + i + "})", "g");
t = t.replace(n, e[i]);
} else for (var a = 0; a < arguments.length; a++) {
if (null == arguments[a]) return "";
n = new RegExp("({[" + a + "]})", "g");
t = t.replace(n, arguments[a]);
}
return t;
}
return this;
};
cc.Class({
extends: cc.Component,
properties: {
_mima: null,
_mimaIndex: 0,
InputName: {
default: null,
type: cc.EditBox
},
btnWXlogin: {
default: null,
type: cc.Button
},
btnGuestlogin: {
default: null,
type: cc.Button
},
WaitingConnection: cc.Prefab
},
onLoad: function() {
this.node.addChild(cc.instantiate(this.WaitingConnection), 100);
if (cc.vv) {
cc.vv.http.url = cc.vv.http.master_url;
this._mima = [ "A", "A", "B", "B", "A", "B", "A", "B", "A", "A", "A", "B", "B", "B" ];
if (cc.sys.isMobile && !cc.sys.isNative) {
cc.find("Login/btn_yk").active = !1;
cc.find("Login/z_weixindenglu").active = !1;
}
if (cc.sys.isMobile) {
cc.find("Login/btn_yk").active = !1;
this.InputName.node.active = !1;
}
if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {
if (!jsb.reflection.callStaticMethod("AppController", "checkWXInstalled")) {
this.btnWXlogin.node.active = !1;
this.btnGuestlogin.node.active = !0;
this.btnGuestlogin.node.setPositionX(0);
}
}
} else cc.director.loadScene("loading");
},
showyk: function() {
cc.find("Login/btn_yk").active = !0;
this.InputName.node.active = !0;
},
start: function() {
var e = cc.sys.localStorage.getItem("wx_account"), t = cc.sys.localStorage.getItem("wx_sign");
if (cc.sys.isMobile && !cc.sys.isNative) this.onBtnWeichatClicked(); else if (null != e && null != t) cc.vv.userMgr.accountAuth(e); else if (cc.sys.os == cc.sys.OS_ANDROID && !cc.vv.userMgr.tmpLogin) {
cc.vv.userMgr.tmpLogin = 1;
this.schedule(function(e) {
cc.vv.userMgr.guestAuth("TEMP");
}, 1, 2);
cc.vv.wc.show("正在检测你的网络连接。。。");
this.scheduleOnce(function(e) {
cc.vv.wc.hide();
}, 10);
}
},
onBtnQuickStartClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.userMgr.guestAuth(this.InputName.string);
},
onBtnWeichatClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.login();
},
wechatLoginReturn: function(e) {
cc.vv.toast.showToast({
txt: "微信SDk返回code为",
code: e
});
},
onBtnMIMAClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
if (this._mima[this._mimaIndex] == e.target.name) {
this._mimaIndex++;
this._mimaIndex == this._mima.length && (cc.find("Login/btn_yk").active = !0);
} else {
console.log("oh ho~~~");
this._mimaIndex = 0;
}
}
});
cc._RF.pop();
}, {} ],
MJGame_13S: [ function(c, e, t) {
"use strict";
cc._RF.push(e, "42513hEWV9Byrldk4NlETxd", "MJGame_13S");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
aniNode: {
default: null,
type: cc.Node
},
qiang: {
default: null,
type: cc.Node
},
dongs: {
default: null,
type: cc.Node
},
dong: {
default: null,
type: cc.Prefab
},
_myMJArr: [],
_chuPaiTempArr: [],
_selectedMJ: null,
_chupaiSprite: [],
_holdsLabel: [],
_folds: [],
_holds: [],
_lb_count: null,
_gamecount: null,
_hupaiTips: [],
_hupaiLists: [],
_opts: [],
_BDanMcList: [],
_pdk_red_ten: -1,
_pdk_red_tenList: [],
_seatNodes: [],
_halfLen: 10,
_opNode: null,
_btnZhangNode: null,
_qiePaiNode: null,
_out_type_prefab: null,
_zhuang_out_type: 0,
_qiangZhuang: !1,
qieSlider: {
default: null,
type: cc.Slider
},
cover: {
default: null,
type: cc.Node
},
sss_qld_prefab: {
default: null,
type: cc.Prefab
},
_effNodeList: []
},
onLoad: function() {
if (cc.vv) {
if (1 != cc.vv.gameNetMgr.isReplay) {
for (var e = this.node.getChildByName("game"), t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; ++i) {
var n = t[i], a = e.getChildByName(n);
a.getChildByName("Bdan").active = !1;
a.getChildByName("ht10").active = !1;
a.getChildByName("Bshuan").active = !1;
}
cc.vv.poker_util = c("poker_utils_13S");
this.gameRoot = cc.find("Canvas/game");
this.replayGame = cc.find("Canvas/replayGame");
var s = cc.find("Canvas/game/opration_13S");
s.active = !0;
this._opNode = s.getChildByName("opNode");
this._opNode.active = !1;
this._btnZhangNode = s.getChildByName("btnZhangNode");
this._btnZhangNode.active = !1;
this._qiePaiNode = s.getChildByName("qiepai");
this._qiePaiNode.active = !1;
this.btnQiang = this._btnZhangNode.getChildByName("btn_qiang");
this.btnBuQiang = this._btnZhangNode.getChildByName("btn_bu");
cc.vv.utils.addClickEvent(this.btnQiang, this.node, "MJGame_13S", "onQiangClicked");
cc.vv.utils.addClickEvent(this.btnBuQiang, this.node, "MJGame_13S", "onBuQiangClicked");
cc.vv.utils.addSlideEvent(this.qieSlider, this.node, "MJGame_13S", "onQieSlide");
this._out_type_prefab = this._opNode.getComponent("op13").outType_prefab;
this.initView();
this.initEventHandlers();
this.gameRoot.active = !0;
2 <= cc.vv.gameNetMgr.gamestate && this.onGameBeign(!1, !1, !1);
this.updateGameState();
}
} else cc.director.loadScene("loading");
},
start: function() {
var t = this;
cc.vv.audioMgr.playBGM("resources/game/13S/sounds/bg13s.mp3");
if (1 != cc.vv.gameNetMgr.isReplay) ; else {
cc.vv.UILoader.loadRes("game/13S/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
updateGameState: function() {
var e = cc.vv.gameNetMgr.gamestate;
if (1 == e) this.showAllHoldsLabels(); else if (2 == e) ; else if (3 == e) this._btnZhangNode.active = !0; else if (4 == e) ; else if (5 == e) {
console.log("cut_id", this.cut_id);
var t = 1 < cc.vv.gameNetMgr.multiBanker.length ? 4 : 2;
this.cut_id && (t += 6);
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
i._opNode.active = !0;
i._opNode.getComponent("op13").initViews();
})));
}
},
initView: function() {
this.dongs.removeAllChildren();
var e = this.node.getChildByName("game"), t = e.getChildByName("myself");
this._myholds = t.getChildByName("holds");
var i = cc.director.getVisibleSize().width;
this._myholds.scaleX *= i / 1280;
this._myholds.scaleY *= i / 1280;
for (var n = [ "myself", "right", "up", "left" ], a = 0; a < n.length; ++a) {
var s = n[a], c = e.getChildByName(s);
c.active = !0;
this._chupaiSprite.push(c.getChildByName("ChuPai").getChildByName("lb_type"));
this._effNodeList.push(c.getChildByName("effNode"));
this._folds.push(c.getChildByName("folds"));
this._holds.push(c.getChildByName("holds"));
this._holdsLabel.push(c.getChildByName("holdsLabel"));
this._holdsLabel[a].getComponent(cc.Label).string = "";
var r = c.getChildByName("seat"), o = r.getChildByName("Sprite");
o && (o.active = !1);
this._seatNodes.push(r);
this._BDanMcList.push(c.getChildByName("Bdan"));
this._pdk_red_tenList.push(c.getChildByName("ht10"));
}
this.hideChupai();
this.hideBDanMc();
this.hideRedTenList();
},
hideBDanMc: function() {
for (var e = 0; e < this._BDanMcList.length; ++e) this._BDanMcList[e].active = !1;
},
hideRedTenList: function() {
this._pdk_red_ten = -1;
for (var e = 0; e < this._pdk_red_tenList.length; ++e) this._pdk_red_tenList[e].active = !1;
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
for (e = 0; e < this._effNodeList.length; ++e) this._effNodeList[e].active = !1;
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var c = this;
this.node.on("game_holds", function(e) {
e.detail.over || c.initMahjongs(e.detail.index, !1, !1);
console.log("game_holds");
});
this.node.on("game_state", function(e) {
console.log("game_state................");
c.updateGameState();
});
this.node.on("chose", function(e) {
console.log("chose.................");
e.detail.seat_index == cc.vv.gameNetMgr.seatIndex && (c._opNode.active = !1);
c.showAllHoldsLabels();
});
this.node.on("game_begin", function(e) {
c.onGameBeign(!0, !1, !0);
});
this.node.on("game_over", function(e) {
c.cut_id = 0;
cc.vv.gameNetMgr.dissoveData ? c.showGameOver() : c.onGameEnd();
});
this.node.on("game_over_show", function(e) {
c.showGameOver();
});
this.node.on("onShowGameResult", function(e) {
c.onShowGameResult();
});
this.node.on("mj_count", function(e) {
c._lb_count.getComponent(cc.Label).string = cc.vv.gameNetMgr.numOfMJ + "张";
});
this.node.on("call_banker", function(e) {
c.onCallBanker(e.detail);
});
this.node.on("reset", function(e) {
c.dongs.removeAllChildren();
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i], a = cc.vv.gameNetMgr.getLocalIndex(i), s = c._effNodeList[a].getChildByName("tx_sss");
s && s.removeFromParent();
c.initMahjongs(n.seatindex, !1, !1);
}
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = c.getLocalIndex(i);
c._seatNodes[s].getComponent("Seat").setScore(n, a);
}
});
this.node.on("cut", function(e) {
c.cut_id = e.detail.user_id;
});
this.node.on("cut_value", function(e) {
c.onCutValue(e.detail);
});
this.node.on("cut_end", function(e) {
console.log(e.detail);
c.fapai();
});
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/13S/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("GameOver_13S").onGameOver();
});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/13S/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("GameResult_13S").onGameEnd();
});
});
},
onGameBeign: function(e, t, i) {
for (var n = 0; n < this._hupaiLists.length; ++n) for (var a = 0; a < this._hupaiLists[n].childrenCount; ++a) this._hupaiLists[n].children[a].active = !1;
this.hideChupai();
this.hideBDanMc();
this.hideRedTenList();
this.gameRoot.active = !0;
var s = this;
this.needShowHoldsEFF = e;
this.needShowFoldsEFF = t;
if (i && this.cut_id) {
this.startQiePai();
this.scheduleOnce(function() {
s.fapai();
}, 5);
} else {
var c = cc.vv.gameNetMgr.seats;
for (var n in c) {
var r = c[n];
this.initMahjongs(r.seatindex, this.needShowHoldsEFF, this.needShowFoldsEFF);
}
}
},
onGameEnd: function() {
this.temp_dao_scores = [];
for (var e = 1, t = 0, i = 0; i < cc.vv.gameNetMgr.seats.length; i++) 1 < cc.vv.gameNetMgr.gameOverData.end_seats_data[i].score_info.out.type && t++;
for (i = 0; i < cc.vv.gameNetMgr.seats.length; i++) {
var n = cc.vv.gameNetMgr.seats[i];
if (!(1 < cc.vv.gameNetMgr.gameOverData.end_seats_data[i].score_info.out.type)) {
this.showFoldsCard(n.folds, i, !0, 1.2 * (e - 1), cc.vv.gameNetMgr.seats.length - (this._qiangZhuang ? 1 : 0) - t);
e++;
}
}
var a, s = 3.6 * (cc.vv.gameNetMgr.seats.length - t);
for (i = 0; i < cc.vv.gameNetMgr.seats.length; i++) {
n = cc.vv.gameNetMgr.seats[i];
var c = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].score_info.out;
1 < c.type && this.showFoldsCard(n.folds, i, !0, s + 2 * i, t, c.type);
}
var r = 0, o = !1;
console.log("准备打枪");
var h = [];
for (var i in cc.vv.gameNetMgr.gameOverData.end_seats_data) {
var l = cc.vv.gameNetMgr.gameOverData.end_seats_data[i], d = l.user_id, u = l.score_info.boom_index;
if (0 < u.length) {
a = !0;
if (u.length == cc.vv.gameNetMgr.gameOverData.end_seats_data.length - 1 && 2 < cc.vv.gameNetMgr.gameOverData.end_seats_data.length) {
o = !0;
this.userQuanleida = cc.vv.gameNetMgr.getSeatByID(d);
console.log("~~~~~~~~~~~~~~~~~" + cc.vv.gameNetMgr.getSeatByID(d));
}
r += 1.5 * u.length;
h.push({
from: i,
to: u
});
}
}
a && (r += 3);
if (o) {
r += 2;
this.isQuanLeiDa = o;
}
var v = this, g = s + 2 * t + 2;
a && this.scheduleOnce(function() {
v.daqiang(h);
}, g);
0 < r && (s += r);
g = s + 2 * t + 2;
this.scheduleOnce(function() {
v.node.emit("game_over_show");
}, g);
},
getMJIndex: function(e, t) {
return "right" == e || "up" == e ? 13 - t : t;
},
sortHolds: function(e) {
e.holds && e.holds.sort(function(e, t) {
return t - e;
});
return e.holds;
},
initMahjongs: function(e, t, i, n) {
var a = cc.vv.gameNetMgr.seats[e];
if (a) {
var s = a.holds;
if (null != s) {
var c = this.getLocalIndex(e), r = this._holds[c];
r.removeAllChildren();
for (var o = s.length / 2, h = 0, l = 0; l < s.length; l++) {
var d = s[l], u = cc.instantiate(this.pk_prefab);
u.parent = r;
var v = (0 == c ? -40 : 0) + 15 * l - 15 * o;
0 == l && (h = v);
var g = .1 * l, _ = 2 - g, f = cc.repeat(cc.sequence(cc.delayTime(g), cc.moveBy(.2, cc.p(0, 20)), cc.moveBy(.2, cc.p(0, -20)), cc.delayTime(_)), 999);
if (t) {
u.setPosition(h, 0);
u.runAction(cc.sequence(cc.moveTo(.5, cc.p(v, 0)), f));
} else {
u.setPosition(v, 0);
u.runAction(f);
}
u.poker_id = d;
u.getComponent("MyPoker").setValueAndColorByID(-1);
}
this.showFoldsCard(a.folds, e, i, 0, 1, n);
}
}
},
showFoldsCard: function(e, t, i, n, a, s) {
var c = this.getLocalIndex(t), r = this._folds[c], o = this._opNode.getComponent("op13");
r.removeAllChildren();
if (s && 1 < s) for (var h = 0; h < e.length; h++) for (var l = e[h], d = n, u = 0; u < l.length; u++) {
var v = l[u];
(S = cc.instantiate(this.pk_prefab)).parent = r;
var g = 0, _ = 0, f = 0, p = -15 * Math.floor(l.length / 2);
if (0 == h) {
g = 40 * u - 40;
_ = 80 + f;
}
if (1 == h) {
g = 40 * u - 80;
_ = 0 + f;
}
if (2 == h) {
g = 40 * u - 80;
_ = -80 + f;
}
5 == l.length && (0 != u && 4 != u || (_ -= 10));
S.setPosition(g, _);
S.setRotation(p + 15 * u);
S.ro = p + 15 * u;
S.poker_id = v;
var m = this.get_poker_display_value(v), C = Math.floor(v / 4), y = v % 4;
S.val = C;
S.col = y;
if (1 == (S.row = h) && 2 == u) {
(A = cc.instantiate(this._out_type_prefab)).scale = 1.5;
A.name = "row" + h;
A.setPosition(S.getPosition());
A.parent = S.parent;
A.active = !1;
A.zIndex = 1e3;
A.seatIndex = t;
A.row = h;
S.out_type = s;
}
this.turnOverPoker(S, d);
} else for (h = 0; h < e.length; h++) {
l = e[h];
var b = 0;
n && (b = n);
var M = 0;
a && (M = a);
d = b + h * (1.2 * M);
var N = [];
for (u = 0; u < l.length; u++) {
var S;
v = l[u];
(S = cc.instantiate(this.pk_prefab)).parent = r;
N.push(S);
g = 0, _ = 0, f = 0, p = -15 * Math.floor(l.length / 2);
0 == c && (f = -100);
1 != c && 3 != c || (f = -100);
if (0 == h) {
g = 40 * u - 40;
_ = 80 + f;
}
if (1 == h) {
g = 40 * u - 80;
_ = 0 + f;
}
if (2 == h) {
g = 40 * u - 80;
_ = -80 + f;
}
5 == l.length && (0 != u && 4 != u || (_ -= 10));
S.setPosition(g, _);
S.setRotation(p + 15 * u);
S.ro = p + 15 * u;
S.poker_id = v;
m = this.get_poker_display_value(v), C = Math.floor(v / 4), y = v % 4;
S.val = C;
S.col = y;
if (0 == (S.row = h) && 1 == u || 0 != h && 2 == u) {
var A;
(A = cc.instantiate(this._out_type_prefab)).scale = 1;
A.name = "row" + h;
A.setPosition(S.getPosition());
A.parent = S.parent;
A.active = !1;
A.zIndex = 1e3;
A.seatIndex = t;
A.row = h;
}
i ? this.turnOverPoker(S, d) : S.getComponent("MyPoker").setValueAndColor(m, y);
}
if (i) {
var I = o.check_dao_type(N);
0 == h ? N[1].dao_type = I : N[2].dao_type = I;
}
}
},
showHoldsLabel: function(e) {
var t = this.getLocalIndex(e), i = cc.vv.gameNetMgr.gamestate, n = "";
if (4 == i) n = e == cc.vv.gameNetMgr.button ? "冥思苦想中..." : "等待庄家出牌"; else if (5 == i) if (e == cc.vv.gameNetMgr.button) n = ""; else {
n = 0 < cc.vv.gameNetMgr.seats[e].holds.length ? "冥思苦想中..." : "完成";
} else n = "";
this._holdsLabel[t].getComponent(cc.Label).string = n;
},
showAllHoldsLabels: function() {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.showHoldsLabel(i.seatindex);
}
},
onMJtprefabEvent: function(e) {
this.selectNode = null;
this.isTouchMove = !1;
e.on("touchstart", function(e) {
this.selectNode = null;
}.bind(this));
e.on("touchmove", function(e) {
this.isTouchMove = !0;
console.log("------------touchmove:" + e.touch.getLocation());
var t = this._myholds.convertToNodeSpace(e.touch.getLocation()), i = !1;
if (this.selectNode) {
var n = this.selectNode.width * this.selectNode.scaleX, a = this.selectNode.height * this.selectNode.scaleX;
console.log("rightpoke?", e.target.isRightPoke);
var s = cc.rect(this.selectNode.x - n / 2, this.selectNode.y - a / 2, n * (this.selectNode.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (i = !0);
}
if (0 == i) for (var c = 0; c < this._myMJArr.length; c++) {
var r = this._myMJArr[c];
n = r.width * r.scaleX, a = r.height * r.scaleX, s = cc.rect(r.x - n / 2, r.y - a / 2, n * (r.isRightPoke ? 1 : .4), a);
if (cc.rectContainsPoint(s, t)) {
this.selectNode = r;
this.updateMJPrefabNode(r);
}
}
}.bind(this));
e.on("touchcancel", function(e) {
this.selectNode = null;
this.isTouchMove = !1;
console.log("------------touchcancel:");
}.bind(this));
e.on("touchend", function(e) {
console.log("------------touchend:");
this.selectNode = null;
this.isTouchMove = !1;
}.bind(this));
cc.vv.utils.addClickEvent(e, this.node, "MJGame_13S", "onMJClicked");
},
onMJClicked: function(e) {
console.log("------------touchclick:");
if (!this.isTouchMove) {
var t = e.target;
this.updateMJPrefabNode(t);
console.log("node.poker_id:" + t.poker_id);
}
},
updateMJPrefabNode: function(e) {
for (var t = e.getComponent("MyPoker"), i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e.poker_id == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
this._chuPaiTempArr.push(e.poker_id);
}
},
turnOverPoker: function(s, e) {
var n = s.getComponent("MyPoker");
n.setValueAndColorByID(-1);
var c = this, t = cc.sequence(cc.delayTime(e), cc.rotateTo(.2, 0, 90), cc.callFunc(function() {
s.rotationY = -90;
var e = s.poker_id, t = c.get_poker_display_value(e), i = e % 4;
n.setValueAndColor(t, i);
}), cc.rotateTo(.2, 0, 0), cc.callFunc(function() {
s.rotation = s.ro;
var e = s.dao_type;
if (e) {
var t = e.type, i = c.getAudioURLBy13s(t + 127, !1);
cc.vv.audioMgr.playSFX(i);
(a = s.parent.getChildByName("row" + s.row)).active = !0;
a.getChildByName("lb").getComponent(cc.Label).string = e.name;
if (5 != cc.vv.gameNetMgr.gamestate) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[a.seatIndex].score_info.stage[s.row].score;
a.score = n;
c.temp_dao_scores.push(a);
a.seatIndex == cc.vv.gameNetMgr.gameOverData.end_seats_data.length - 1 && c.showDaoScore();
}
}
if (s.out_type) {
var a;
i = c.getAudioURLBy13s(s.out_type + 74, !1);
cc.vv.audioMgr.playSFX(i);
(a = s.parent.getChildByName("row" + s.row)).active = !0;
a.getChildByName("lb").getComponent(cc.Label).string = c.getOutTypeName(s.out_type);
if (a.seatIndex != cc.vv.gameNetMgr.button) {
if ((n = cc.vv.gameNetMgr.gameOverData.end_seats_data[a.seatIndex].score_info.out.score) < 0) {
a.getChildByName("lb1").active = !0;
a.getChildByName("lb1").getComponent(cc.Label).string = n;
} else {
a.getChildByName("lb2").active = !0;
a.getChildByName("lb2").getComponent(cc.Label).string = "+" + n;
}
}
}
}));
s.runAction(t);
},
showDaoScore: function() {
for (var e = 0; e < this.temp_dao_scores.length; e++) {
var t = this.temp_dao_scores[e], i = t.score;
if (i < 0) {
t.getChildByName("lb1").active = !0;
t.getChildByName("lb1").getComponent(cc.Label).string = i;
} else {
t.getChildByName("lb2").active = !0;
t.getChildByName("lb2").getComponent(cc.Label).string = "+" + i;
}
}
},
getOutTypeName: function(e) {
var t = "无类型";
switch (e) {
case 2:
t = "三同花";
break;

case 3:
t = "三顺子";
break;

case 4:
t = "六对半";
break;

case 5:
t = "五对三条";
break;

case 6:
t = "四炸三条";
break;

case 7:
t = "双怪冲三";
break;

case 8:
t = "凑一色";
break;

case 9:
t = "全小";
break;

case 10:
t = "全大";
break;

case 11:
t = "三分天下";
break;

case 12:
t = "三同花顺";
break;

case 13:
t = "十二皇族";
break;

case 14:
t = "一条龙";
break;

case 15:
t = "至尊青龙";
}
return t;
},
onBuQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this._btnZhangNode.active = !1;
},
onQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this._btnZhangNode.active = !1;
},
getAudioURLBy13s: function(e, t) {
return t ? "resources/game/13S/sounds/man/" + e + ".mp3" : "resources/game/13S/sounds/women/" + e + ".mp3";
},
daqiang: function(e) {
this.aniNode.getComponent(cc.Animation).play("13s-qld");
cc.vv.audioMgr.playSFX("resources/game/13S/sounds/women/daqiang.mp3");
this.qiangData = [];
this.qiangCount = 0;
cc.vv.audioMgr.playSFX("resources/game/13S/sounds/women/daqiang.mp3");
for (var t in e) {
var i = e[t], n = i.from;
for (var a in i.to) {
var s = i.to[a];
this.qiangData.push({
from: n,
to: s
});
}
}
console.log("一共要打" + this.qiangData.length + "枪");
this.schedule(this.daqiagnUpdate, 1.5, this.qiangData.length - 1, 3);
if (this.isQuanLeiDa) {
this.scheduleOnce(this.playQuanleida, 3 + 1.5 * this.qiangData.length);
this.isQuanLeiDa = !1;
}
},
playQuanleida: function() {
var e = cc.vv.gameNetMgr.getLocalIndex(this.userQuanleida.seatindex), t = this._effNodeList[e], i = t.getChildByName("tx_sss");
if (!i) {
(i = cc.instantiate(this.sss_qld_prefab)).parent = t;
i.name = "tx_sss";
t.active = !0;
}
if (i) {
i.active = !0;
i.getComponent(cc.Animation).play("13s-qld2");
cc.vv.audioMgr.playSFX("resources/game/13S/sounds/women/quanleida.mp3");
}
},
daqiagnUpdate: function() {
var e = this.qiangData[this.qiangCount].from, t = this.qiangData[this.qiangCount].to, i = this.getLocalIndex(e), n = this.getLocalIndex(t), a = this._folds[i].convertToWorldSpace(cc.p(0, 0));
a = a.sub(cc.p(640, 320));
var s = this._folds[n].convertToWorldSpace(cc.p(0, 0));
s = s.sub(cc.p(640, 320));
this.qiang.setPosition(a);
var c = s.sub(a).signAngle(cc.p(1, 0)) / 3.14 * -180;
this.qiang.rotation = c;
this.qiang.getChildByName("13s-qiang").getComponent(cc.Animation).play("13s-qiang");
var r = cc.instantiate(this.dong);
r.parent = this.dongs;
r.setPosition(s.x - 20 + 40 * Math.random(), s.y - 50 * Math.random() - 50);
r.rotation = 60 * Math.random() - 30;
r.getChildByName("13s-dong").getComponent(cc.Animation).play("13s-dong");
cc.vv.audioMgr.playSFX("resources/game/13S/sounds/00.mp3");
this.qiangCount++;
},
onShowLabelPlay: function(e, t, i) {
var n = this.getLocalIndex(e);
if ("抢庄" == (this._chupaiSprite[n].getComponent(cc.Label).string = t)) var a = 14; else if ("不抢" == t) a = 15;
var s = this.getAudioURLBy13s(a, !1);
cc.vv.audioMgr.playSFX(s);
},
onCallBanker: function(e) {
var t = 0 == e.call ? "不抢" : "抢庄";
this.onShowLabelPlay(e.seat_index, t, 2);
},
get_poker_display_value: function(e) {
return -1 == e ? -1 : e < 4 ? 15 : Math.floor(e / 4) + 2;
},
getLocalIndex: function(e) {
if (8 & cc.vv.gameNetMgr.conf.rule_index) {
if (0 == cc.vv.gameNetMgr.seatIndex && 2 == e) return 3;
if (2 == cc.vv.gameNetMgr.seatIndex && 0 == e) return 1;
}
return (e - cc.vv.gameNetMgr.seatIndex + 4) % 4;
},
onQiePaiClick: function() {
console.log("切牌完毕");
var e = {
value: this.qieSlider.progress
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("cut_end", e);
},
onQiePaiEnd: function() {
console.log("切牌抬起");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("cut_value", this.qieSlider.progress);
},
startQiePai: function() {
this._qiePaiNode.active = !0;
if (cc.vv.userMgr.userId == this.cut_id) this._qiePaiNode.getComponent("qiepai").reset(); else {
var e = cc.vv.gameNetMgr.getSeatByID(this.cut_id);
this._qiePaiNode.getComponent("qiepai").reset(e.name);
}
for (var t in this._holds) this._holds[t].active = !1;
},
fapai: function() {
this.unscheduleAllCallbacks();
this._qiePaiNode.getComponent("qiepai").cutEnd();
this.cut_id = 0;
var e = this;
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
e.fapai2();
})));
},
fapai2: function() {
this._qiePaiNode.active = !1;
for (var e in this._holds) this._holds[e].active = !0;
var t = cc.vv.gameNetMgr.seats;
for (var e in t) {
var i = t[e];
this.initMahjongs(i.seatindex, this.needShowHoldsEFF, this.needShowFoldsEFF);
}
},
onQieSlide: function() {
this.cover.width = 60 + 700 * this.qieSlider.progress;
},
onCutValue: function(e) {
this.cover.width = 60 + 700 * e.value;
this.qieSlider.progress = e.value;
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_13S: "poker_utils_13S"
} ],
MJGame_21D: [ function(i, e, t) {
"use strict";
cc._RF.push(e, "4a7d5aLjpRK9rr+JXbgtjeR", "MJGame_21D");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
gameOver_pk_prefab: {
default: null,
type: cc.Prefab
},
couma_pk_prefab: {
default: null,
type: cc.Prefab
},
rsyd_type_prefab: {
default: null,
type: cc.Prefab
},
btnTX: {
default: null,
type: cc.Button
},
btnSB: {
default: null,
type: cc.Button
},
btnFP: {
default: null,
type: cc.Button
},
btnTP: {
default: null,
type: cc.Button
},
btnYP: {
default: null,
type: cc.Button
},
_chupaiSprite: [],
_seatNodes: [],
_seatsList: [],
_chipNodeList: [],
_d21NodeLiat: [],
_d21NodePK_List: [],
_baoxianNodeList: [],
_touxiangNodeList: [],
_btnFenList: [],
_buttonNodeList: [],
_isSelect_changeList: [],
_d21_status_data: null,
_StartingPosition: [],
_moveToList: []
},
onLoad: function() {
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.poker_util = i("poker_utils_21d");
cc.vv.msgTemp_21d = i("msgdefine_21d").msg_templete;
this.initView();
this.initEventHandlers();
var e = cc.vv.gameNetMgr.gamestate;
if (2 == e || 3 == e || 4 == e || 5 == e || 6 == e) {
this.isReconnecting = !1;
this.onGameBeign();
this.initGameSyncBeign();
this.isReconnecting = !1;
}
this.updateGameState();
cc.vv.audioMgr.playBGM("resources/game/21D/sounds/bg21d.mp3");
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/21D/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = e.getChildByName("players_node"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], n = 0; n < i.length; ++n) {
var a = i[n], s = t.getChildByName(a);
this._chupaiSprite.push(s.getChildByName("ChuPai"));
this._chipNodeList.push(s.getChildByName("chipNode"));
this._touxiangNodeList.push(s.getChildByName("chipNode").getChildByName("touxiang"));
this._baoxianNodeList.push(s.getChildByName("baoxianNode"));
var c = s.getChildByName("d21Node");
this._d21NodeLiat.push(c);
for (var r = [], o = 1; o < 3; o++) {
var h = {}, l = c.getChildByName("value_" + o);
h.value_Node = l;
h.holds = l.getChildByName("holds");
h.node_add = l.getChildByName("node_add");
h.effectNode = l.getChildByName("effectNode");
var d = l.getChildByName("point_bg");
h.point_bg = d;
h.jiadian_bg = d.getChildByName("jiadian_bg");
h.moren_bg = d.getChildByName("moren_bg");
h.baodian_bg = d.getChildByName("baodian_bg");
h.pinju_bg = d.getChildByName("pinju_bg");
h.win_bg = d.getChildByName("win_bg");
h.dianshu_blackjack = d.getChildByName("dianshu_blackjack");
r.push(h);
}
this._d21NodePK_List.push(r);
this._seatNodes.push(s.getChildByName("seat"));
this._isSelect_changeList.push(1);
this._seatsList.push(s.getChildByName("seat").getComponent("Seat"));
var u = s.getPosition();
this._StartingPosition.push(u);
this._moveToList.push(s.getChildByName("folds").parent.getPosition().add(s.getChildByName("folds").getPosition()));
}
this._operationNode = e.getChildByName("operationNode");
this._operationNode.active = !1;
this.baoxianNode = this._operationNode.getChildByName("baoxianNode");
this.baoxianNode.active = !1;
this._btn_buy = this.baoxianNode.getChildByName("btn_buy");
cc.vv.utils.addClickEvent(this._btn_buy, this.node, "MJGame_21D", "onBuyClick");
this._btn_nobuy = this.baoxianNode.getChildByName("btn_noBuy");
cc.vv.utils.addClickEvent(this._btn_nobuy, this.node, "MJGame_21D", "onBuyClick");
this.d21_btnZhangNode = this._operationNode.getChildByName("btnZhangNode");
this.d21_btnZhangNode.active = !1;
this.btn_bu = this.d21_btnZhangNode.getChildByName("btn_bu");
this.btn_qiang = this.d21_btnZhangNode.getChildByName("btn_qiang");
cc.vv.utils.addClickEvent(this.btn_bu, this.node, "MJGame_21D", "onBuQiangClicked");
cc.vv.utils.addClickEvent(this.btn_qiang, this.node, "MJGame_21D", "onQiangClicked");
this._btnFenNodeMC = this._operationNode.getChildByName("btnFenNode");
this._btnFenNode = this._btnFenNodeMC.getChildByName("fenNode");
this._btnFenNodeMC.active = !1;
this._btnFenNode.active = !1;
for (var v = [ 10, 20, 30, 50, 100, "完成" ], g = 0; g < this._btnFenNode.children.length; ++g) {
var _ = "btnFen" + (g + 1), f = this._btnFenNode.getChildByName(_), p = f.getChildByName("btn");
f.getChildByName("lb").getComponent(cc.Label).string = 5 == g ? "" : v[g];
p.nodeFen = v[g];
cc.vv.utils.addClickEvent(p, this.node, "MJGame_21D", "onBtnFenClicked");
this._btnFenList.push(p);
}
this._btnNode = this._operationNode.getChildByName("btnNode");
this._btnNode.active = !1;
for (var m = [ "btnTX", "btnSB", "btnFP", "btnTP", "btnYP" ], C = 0; C < m.length; ++C) {
var y = this._btnNode.getChildByName(m[C]);
cc.vv.utils.addClickEvent(y, this.node, "MJGame_21D", "onLoadBankerBaseClicked");
this._buttonNodeList.push(p);
}
this._effTprefab = e.getChildByName("effTprefab");
this._coumaStartPositionList = this._StartingPosition;
this.coumaMC = e.getChildByName("coumaMC");
this.coumaMC.removeAllChildren();
this.coumaMC.active = !0;
this.hideChupai();
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var h = this;
this.node.on("game_holds", function(e) {
var t = e.detail.index;
if (5 == cc.vv.gameNetMgr.gamestate) {
var i = cc.vv.gameNetMgr.seats[t];
if (!i) return;
var n = i.holds;
n[1] && 0 < n[1].length && h.initMahjongs(t);
} else h.initMahjongs(t, !0);
});
this.node.on("game_begin", function(e) {
h.onGameBeign();
});
this.node.on("game_button_push", function(e) {
h.onGameBeign();
});
this.node.on("game_state", function(e) {
h.updateGameState();
});
this.node.on("call_banker", function(e) {
h.onCallBanker(e.detail);
});
this.node.on("start_play_end_push", function(e) {
h.onStartPlayEndPush(e.detail);
});
this.node.on("betting_push", function(e) {
h.onBettingPush(e.detail);
});
this.node.on("game_over", function(e) {
var t = e.detail.button;
h.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
h.onShowCardType(t);
})));
});
this.node.on("fore_game_over", function(e) {
h.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
h.onShowGameResult();
});
this.node.on("fresh_all_score", function(e) {
for (var t = [], i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = cc.vv.gameNetMgr.gameOverData.end_seats_data[n];
if (a) {
var s = a.total_score, c = a.end_score, r = cc.vv.gameNetMgr.getLocalIndex(n), o = h._seatNodes[r];
o.getComponent("Seat").setScore(s);
0 < c && t.push(o);
}
}
});
this.node.on("point21_state", function(e) {
h.updatePoint21_state(e.detail);
});
this.node.on("turn", function(e) {
if (6 != cc.vv.gameNetMgr.gamestate || cc.vv.gameNetMgr.turn != cc.vv.gameNetMgr.seatIndex) {
if (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex) {
h._btnNode.active = !0;
if (h._d21_status_data) {
var t = h._d21_status_data.status_mask, i = h._d21_status_data.type;
h.refreshBtns(t, i);
}
} else h._btnNode.active = !1;
h.showHeadTime(cc.vv.gameNetMgr.turn);
h.updateRunActionTurn();
} else h.baoxianNode.active = !0;
});
this.node.on("user_action", function(e) {
h.updateuUerAction(e.detail);
});
this.node.on("user_buy", function(e) {
var t = e.detail.seat_index, i = cc.vv.gameNetMgr.getLocalIndex(t);
if (1 == e.detail.buy) {
var n = h._chipNodeList[i].getChildByName("lb_chip").getComponent(cc.Label).string / 2;
h.onShowBaoxian(i, n);
}
});
},
call_game_over: function() {
var e = cc.vv.gameNetMgr.gameOverData;
1 != e.force && 1 != e.all_give_up_call || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/21D/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/21D/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
finishCoumaMC: function(e) {
var t = [];
t = t.concat(this.coumaMC.getChildren());
for (var i = 0; i < e.length; i++) {
var n = e[i].parent.getPosition();
for (var a in t) {
t[a].active = !1;
var s = cc.instantiate(t[a]);
s.active = !0;
s.parent = this.coumaMC;
var c = cc.sequence(cc.delayTime(.1 * a), cc.moveTo(.3, n));
s.runAction(c);
0 == i && cc.vv.audioMgr.playSFX("resources/game/public/sounds/chipfly.mp3");
}
}
},
hideChupai: function() {
var e = 0;
for (e = 0; e < this._chupaiSprite.length; ++e) {
this._chupaiSprite[e].getChildByName("lb_type").getComponent(cc.Label).string = "";
this._chupaiSprite[e].getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}
for (e = 0; e < this._d21NodeLiat.length; ++e) this._d21NodeLiat[e].active = !1;
for (e = 0; e < this._chipNodeList.length; ++e) {
this._chipNodeList[e].getChildByName("lb_chip").getComponent(cc.Label).string = "0";
this._chipNodeList[e].active = !1;
this._chipNodeList[e].total_bet_score = 0;
}
for (e = 0; e < this._baoxianNodeList.length; ++e) this._baoxianNodeList[e].active = !1;
for (e = 0; e < this._touxiangNodeList.length; ++e) this._touxiangNodeList[e].active = !1;
for (e = 0; e < this._seatNodes.length; ++e) this._seatNodes[e] && this._seatNodes[e].getComponent("Seat").showName();
for (e = 0; e < 7; ++e) this._isSelect_changeList[e] = 1;
for (e = 0; e < this._d21NodePK_List.length; ++e) for (var t = this._d21NodePK_List[e], i = 0; i < t.length; ++i) {
var n = t[i];
n.value_Node.active = !1;
n.holds.removeAllChildren();
n.effectNode.removeAllChildren();
n.node_add.active = !1;
n.jiadian_bg.active = !1;
n.moren_bg.active = !1;
n.baodian_bg.active = !1;
n.pinju_bg.active = !1;
n.win_bg.active = !1;
n.dianshu_blackjack.active = !1;
n.isPlayEffect = !1;
n.point_bg.stopAllActions();
}
this.btnTX.getComponent(cc.Button).interactable = !0;
this.btnSB.getComponent(cc.Button).interactable = !0;
this.btnFP.getComponent(cc.Button).interactable = !0;
this.btnTP.getComponent(cc.Button).interactable = !0;
this.btnYP.getComponent(cc.Button).interactable = !0;
this._operationNode.active = !0;
this.baoxianNode.active = !1;
this.d21_btnZhangNode.active = !1;
this._btnFenNodeMC.active = !1;
this._btnFenNode.active = !1;
this._btnNode.active = !1;
this._effTprefab.removeAllChildren();
},
updateGameState: function() {
var e = cc.vv.gameNetMgr.gamestate;
if (1 != cc.vv.gameNetMgr.getIsWatch()) {
this._btnFenNodeMC.active = !1;
if (3 == e) this.d21_btnZhangNode.active = !0; else if (4 == e) {
this.playInitEffect();
var n = cc.vv.gameNetMgr.getSelfData(), t = n.status_mask;
if (null != t) {
if (0 != (2 & t)) return;
}
var a = this, i = 1 == 1 < cc.vv.gameNetMgr.multiBanker.length ? 3 : .2;
this.node.runAction(cc.sequence(cc.delayTime(i), cc.callFunc(function(e) {
a._btnFenNodeMC.active = !0;
for (var t = 0; t < a._chupaiSprite.length; ++t) {
a._chupaiSprite[t].getChildByName("lb_type").getComponent(cc.Label).string = "";
a._chupaiSprite[t].getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}
if (cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
a._btnFenNode.active = !0;
var i = a.getAudioURLBy21D(11, n.sex);
cc.vv.audioMgr.playSFX(i);
}
})));
} else for (var s = 0; s < this._chupaiSprite.length; ++s) {
this._chupaiSprite[s].getChildByName("lb_type").getComponent(cc.Label).string = "";
this._chupaiSprite[s].getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}
}
},
onGameBeign: function() {
this.hideChupai();
this.coumaMC.removeAllChildren();
this.gameRoot.active = !0;
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initGameSyncBeign: function() {
var e = cc.vv.gameNetMgr.gamestate, t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
if (n.d21_data) {
n.d21_data.holds;
var a = cc.vv.gameNetMgr.getLocalIndex(n.seatindex);
this.updateChipNode(a, n.d21_data.bet_coin);
if (5 == e || 6 == e) {
var s = {};
s.seat_index = n.seatindex;
s.type = n.d21_data.type;
s.value = n.d21_data.value;
s.status_mask = n.d21_data.status_mask;
this.updatePoint21_state(s);
}
}
}
this.updateGameState();
this.updateRunActionTurn();
5 == e && (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex ? this._btnNode.active = !0 : this._btnNode.active = !1);
6 == e && cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex ? this.baoxianNode.active = !0 : this.baoxianNode.active = !1;
},
updateChipNode: function(e, t) {
if (!(t < 1)) {
var i = this._chipNodeList[e];
i.active = !0;
var n = i.total_bet_score ? i.total_bet_score : 0;
i.total_bet_score = t;
i.getChildByName("lb_chip").getComponent(cc.Label).string = t;
var a = i.getChildByName("icon_chip"), s = 2 * Math.floor(t - n);
if (0 < s) {
cc.vv.audioMgr.playSFX("resources/game/public/sounds/chipfly.mp3");
a.getComponent("dropChip").dropBet(s);
this.updateThrowChouma(e, s / 2);
}
}
},
updateThrowChouma: function(e, t) {},
refreshBtns: function(e, t) {
if (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex) {
this._btnNode.active = !0;
if (cc.vv.gameNetMgr.turn != cc.vv.gameNetMgr.button) {
var i = cc.vv.gameNetMgr.seatIndex, n = cc.vv.gameNetMgr.seats[i].holds;
if (n) {
var a = !1, s = !1;
if (e <= 2 && 2 == n[0].length && 0 == n[1].length) {
a = !0;
cc.vv.poker_util.get_poker_value(n[0][0]) == cc.vv.poker_util.get_poker_value(n[0][1]) && 0 == n[1].length && (s = !0);
}
var c = this.isTouXiang(e, t);
this.btnSB.getComponent(cc.Button).interactable = a;
this.btnFP.getComponent(cc.Button).interactable = s;
this.btnTX.getComponent(cc.Button).interactable = c;
if (0 < n[1].length) {
var r = cc.vv.poker_util.get_value_total(n[0]), o = this.isChangeNext(e, t), h = 1;
h = r < 21 && 0 == o ? 1 : 2;
var l = cc.vv.gameNetMgr.getLocalIndex(i);
this._isSelect_changeList[l] = h;
}
}
} else {
this.btnTX.getComponent(cc.Button).interactable = !1;
this.btnSB.getComponent(cc.Button).interactable = !1;
this.btnFP.getComponent(cc.Button).interactable = !1;
}
}
},
updatePoint21_state: function(e) {
if (null != e) {
var t = e.seat_index, i = cc.vv.gameNetMgr.getLocalIndex(t);
cc.vv.gameNetMgr.seats[t].sex;
0 == i && (this._d21_status_data = e);
var n = e.type, a = (e.value, e.status_mask);
n[0];
n[1];
if (1 == this.has_rule(2, a)) {
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/check.mp3");
}
if (1 == this.has_rule(3, a)) {
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/check.mp3");
}
1 == this.has_rule(4, a) && this.onShowJiaBeiImg(i);
this.has_rule(4, a);
1 == this.has_rule(6, a) && this.onShowTouxiang(i);
if (1 == this.has_rule(7, a)) {
var s = this._chipNodeList[i].getChildByName("lb_chip").getComponent(cc.Label).string / 2;
this.onShowBaoxian(i, s);
}
cc.vv.gameNetMgr.turn == t && this.refreshBtns(a, n);
}
},
onShowBaoxian: function(e, t) {
var i = this._baoxianNodeList[e];
i.active = !0;
i.getChildByName("lb_chip").getComponent(cc.Label).string = t;
},
onShowJiaBeiImg: function(e) {
for (var t = this._d21NodePK_List[e], i = 0; i < t.length; i++) {
t[i].node_add.active = !0;
}
},
onShowTouxiang: function(e) {
this._touxiangNodeList[e].active = !0;
},
onclickLbl1: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.seatIndex);
this._isSelect_changeList[t] = 1;
this.updateRunActionTurn();
},
onclickLbl2: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.seatIndex);
this._isSelect_changeList[t] = 2;
this.updateRunActionTurn();
},
onBuQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this.d21_btnZhangNode.active = !1;
},
onQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this.d21_btnZhangNode.active = !1;
},
onBtnFenClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.nodeFen, i = this._chipNodeList[0].getChildByName("lb_chip").getComponent(cc.Label).string;
if ("完成" != t || "0" != i && "" != i) {
var n = 1 * cc.vv.gameNetMgr.conf.rule_index, a = 0;
32768 & n && (a = 100);
65536 & n && (a = 300);
1 << 17 & n && (a = 500);
if (a < (i *= 1) + t) cc.vv.alert.show("提示", "最大限注筹码为：" + a); else {
(e = JSON.parse(cc.vv.msgTemp_21d.CS_Betting)).betting_type = "完成" == t ? 1 : 0;
e.coin = "完成" == t ? 0 : t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", e);
if ("完成" == t) {
this._btnFenNode.active = !1;
this._btnFenNodeMC.active = !1;
}
}
} else cc.vv.alert.show("提示", "请先压筹码！");
},
onBuyClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = !1;
"btn_buy" == e.target.name ? t = !0 : "btn_noBuy" == e.target.name && (t = !1);
var i = JSON.parse(cc.vv.msgTemp_21d.CS_UserBuy);
i.seat_index = cc.vv.gameNetMgr.seatIndex;
i.buy = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("user_buy", i);
this.baoxianNode.active = !1;
},
onLoadBankerBaseClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.seatIndex), i = 1;
if ("btnSB" == e.target.name) {
i = 3;
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) return;
} else if ("btnFP" == e.target.name) {
i = 4;
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) return;
} else if ("btnTP" == e.target.name) i = 2; else if ("btnYP" == e.target.name) {
i = 1;
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
var n = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.button], a = 1 == this._isSelect_changeList[t] ? 0 : 1, s = n.holds[a];
if (17 <= cc.vv.poker_util.get_value_total_chatA(s)) {
cc.vv.alert.show("提示", "庄家大于或等于17点，不能再要牌");
return;
}
}
} else if ("btnTX" == e.target.name) {
i = 5;
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) return;
}
var c = JSON.parse(cc.vv.msgTemp_21d.CS_UserAction);
c.action_type = i;
c.action_target = this._isSelect_changeList[t];
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("user_action", c);
},
isCheckA: function() {
for (var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.button].holds[0], t = 0; t < e.length; t++) {
if (14 == cc.vv.poker_util.get_poker_value(e[t])) return !0;
}
return !1;
},
isTouXiang: function(e, t) {
return 1 != this.has_rule(6, e) && (1 != t[0] && 1 != t[1] && (1 != this.has_rule(2, e) && 1 != this.has_rule(3, e)));
},
isChangeNext: function(e, t) {
return 1 == t[0] || 1 == t[1] || (1 == this.has_rule(2, e) || 1 == this.has_rule(3, e));
},
has_rule: function(e, t) {
return 0 != (t & 1 << e);
},
updateuUerAction: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seat_index);
this._isSelect_changeList[t] = e.action_target;
this.getTypeName(e.action_type, e.seat_index, e.action_target);
this.updateRunActionTurn();
},
getTypeName: function(e, t, i) {
switch (e) {
case 1:
"拿牌";
this.playNPeffect(t, i - 1, -1);
break;

case 2:
"停牌";
break;

case 3:
"加倍";
this.playNPeffect(t, i - 1, -1);
break;

case 4:
"分牌";
break;

case 5:
"投降";
break;

case 6:
"保险";
}
},
playInitEffect: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 2 * e.length, i = 0, n = 0, a = 0, s = this, c = 0; c < t; c++) this.node.runAction(cc.sequence(cc.delayTime(.4 * c), cc.callFunc(function() {
n = Math.floor(i / e.length);
a = i % e.length;
s.playNPeffect(a, 0, n);
i++;
})));
},
getNotEmptyUsers: function() {
this._seatsTemp = [];
for (var e = 0; e < cc.vv.gameNetMgr.seats.length; e++) {
0 < cc.vv.gameNetMgr.seats[e].holds[0].length && this._seatsTemp.push(cc.vv.gameNetMgr.seats[e]);
}
},
playNPeffect: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._moveToList[n], s = cc.instantiate(this.pk_prefab);
s.parent = this._effTprefab;
s.setPosition(0, 0);
s.poker_id = -1;
this.setSpriteFrameByMJID(s, -1);
cc.vv.audioMgr.playSFX("resources/game/21D/sounds/turn_card.mp3");
s.active = !0;
var c = {};
c.tempNode = this._effTprefab;
c.tPrefab = s;
c._seatIndex = e;
c.dealTurn = i;
c.currIndex = t;
s.scale = .5;
var r = this;
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, a), cc.rotateBy(.2, 100)), cc.callFunc(function(e, t) {
r.addPlayPK(t._seatIndex, t.currIndex, t.dealTurn);
t.tPrefab.active = !1;
s.destroy();
}, null, c)));
},
addPlayPK: function(e, t, i) {
var n = this, a = cc.vv.gameNetMgr.seats, s = cc.vv.gameNetMgr.getLocalIndex(a[e].seatindex), c = -1;
if (-1 == i) {
i = a[e].holds[t].length - 1;
c = a[e].holds[t][i];
this.node.runAction(cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
n.initMahjongs(e);
})));
}
this._d21NodeLiat[s].active = !0;
var r = this._d21NodePK_List[s];
r[t].value_Node.active = !0;
var o = r[t].holds, h = 0, l = 5 - (2 - i), d = cc.instantiate(this.pk_prefab);
d.parent = o;
h = 6 == s || 7 == s ? 30 * l : 30 * i;
d.setPosition(h, 0);
-1 == (d.poker_id = c) ? this.setSpriteFrameByMJID(d, c) : this.setSpriteFrameByMJID2(d, c);
},
initMahjongs: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], i = cc.vv.gameNetMgr.getLocalIndex(e);
this._d21NodeLiat[i].active = !0;
var n = this._d21NodePK_List[i], a = cc.vv.gameNetMgr.seats[e];
if (a) {
var s = a.holds;
if (s) {
var c = s[0];
if (c) {
var r = s[1];
(5 == c.length && 0 == r.length || 5 == c.length && 5 == r.length) && cc.vv.gameNetMgr.turn == e && (this._btnNode.active = !1);
var o = !0;
0 < r.length && (o = !1);
for (var h = 0; h < s.length; h++) {
var l = s[h];
if (l && 0 < l.length) {
var d = n[h];
if (d) {
d.value_Node.active = !0;
this.updateMahjongs(i, l, d, h, o, e, t);
}
}
}
}
}
}
},
updateMahjongs: function(e, t, i, n, a, s, c) {
var r = i.holds;
r.removeAllChildren();
for (var o = !1, h = 0, l = 5 - t.length, d = 0; d < t.length; d++) {
var u = t[d], v = cc.vv.poker_util.get_poker_value(u);
0 == o && 14 == v && (o = !0);
var g = cc.instantiate(this.pk_prefab);
g.parent = r;
if (6 == e || 7 == e) {
h = 30 * l;
l++;
} else h = 30 * d;
g.setPosition(h, 0);
-1 == (g.poker_id = u) && (g.back = 1);
1 == c ? this.setSpriteFrameByMJID2(g, u) : this.setSpriteFrameByMJID(g, u);
}
this.updatePoint(e, t, i, o, a, n, s);
},
getZhuangPoint: function() {
var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.button];
if (!e) return 0;
var t = e.holds;
if (!t) return 0;
var i = t[0];
return i ? cc.vv.poker_util.get_value_total(i) : 0;
},
updatePoint: function(e, t, i, n, a, s, c) {
i.jiadian_bg.active = !1;
i.moren_bg.active = !1;
i.baodian_bg.active = !1;
i.pinju_bg.active = !1;
i.win_bg.active = !1;
i.dianshu_blackjack.active = !1;
if (1 != cc.vv.gameNetMgr.isGameOver || cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
var r = cc.vv.poker_util.get_value_total_chatA(t), o = 0 < r ? r : 0;
if (o < 21) {
var h = 22;
n && (h = cc.vv.poker_util.get_value_total_chatA(t, !0));
if (h < 22) if (21 == h && 2 == t.length) {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = h;
if (1 == a) {
i.dianshu_blackjack.active = !0;
if (0 == i.isPlayEffect && 0 == cc.vv.gameNetMgr.isSys) {
i.isPlayEffect = !0;
this.playHJK(s, c);
}
}
} else {
i.jiadian_bg.active = !0;
i.jiadian_bg.getChildByName("lb").getComponent(cc.Label).string = o + "/" + h;
if (5 == t.length && 0 == i.isPlayEffect && 0 == cc.vv.gameNetMgr.isSys) {
i.isPlayEffect = !0;
this.playWL(s, c);
}
} else {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = o;
if (5 == t.length && 0 == i.isPlayEffect && 0 == cc.vv.gameNetMgr.isSys) {
i.isPlayEffect = !0;
this.playWL(s, c);
}
}
} else if (21 == o) {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = o;
if (2 == t.length && 1 == a) {
i.dianshu_blackjack.active = !0;
if (0 == i.isPlayEffect && 0 == cc.vv.gameNetMgr.isSys) {
i.isPlayEffect = !0;
this.playHJK(s, c);
}
}
} else {
i.baodian_bg.active = !0;
i.baodian_bg.getChildByName("lb").getComponent(cc.Label).string = o;
if (0 == i.isPlayEffect && 0 == cc.vv.gameNetMgr.isSys) {
i.isPlayEffect = !0;
this.playBaoZha(s, c);
}
}
if (6 == e || 7 == e) ; else {
var l = 30 * t.length;
i.point_bg.setPosition(l, 33);
}
} else this.updatePoint_gameOver(e, t, i, n, a);
},
updatePoint_gameOver: function(e, t, i, n, a) {
i.jiadian_bg.active = !1;
i.moren_bg.active = !1;
i.baodian_bg.active = !1;
i.pinju_bg.active = !1;
i.win_bg.active = !1;
i.dianshu_blackjack.active = !1;
var s = this.getZhuangPoint(), c = cc.vv.poker_util.get_value_total_chatA(t), r = 0 < c ? c : 0;
if (21 < r) {
i.baodian_bg.active = !0;
i.baodian_bg.getChildByName("lb").getComponent(cc.Label).string = r;
} else if (21 == r) {
if (21 == s) {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = r;
} else {
i.win_bg.active = !0;
i.win_bg.getChildByName("lb").getComponent(cc.Label).string = r;
}
2 == t.length && 1 == a && (i.dianshu_blackjack.active = !0);
} else if (s == r) {
i.pinju_bg.active = !0;
i.pinju_bg.getChildByName("lb").getComponent(cc.Label).string = r;
} else if (r < s) {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = r;
} else {
i.win_bg.active = !0;
i.win_bg.getChildByName("lb").getComponent(cc.Label).string = r;
}
if (6 == e || 7 == e) ; else {
var o = 30 * t.length;
i.point_bg.setPosition(o, 33);
}
},
updateRunActionTurn: function() {
for (var e = 0; e < this._d21NodePK_List.length; ++e) for (var t = this._d21NodePK_List[e], i = 0; i < t.length; ++i) {
(n = t[i]).point_bg.stopAllActions();
n.point_bg.opacity = 255;
}
var n, a = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.turn);
(n = (t = this._d21NodePK_List[a])[this._isSelect_changeList[a] - 1]) && this.addTimeRunAction(n.point_bg);
},
addTimeRunAction: function(e) {
var t = cc.fadeIn(.5), i = cc.fadeOut(.5), n = cc.sequence(t, i), a = cc.repeatForever(n);
e.runAction(a);
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
setSpriteFrameByMJID2: function(e, t) {
var i = e.getComponent("MyPoker");
i.setValueAndColorByID(-1);
var n = cc.sequence(cc.rotateTo(.05, 0, 90), cc.callFunc(function() {
e.rotationY = -90;
i.setValueAndColorByID(t);
}), cc.rotateTo(.05, 0, 0));
e.runAction(n);
},
onShowCardType: function(e) {
for (var t = 0; t < this._d21NodePK_List.length; ++t) for (var i = this._d21NodePK_List[t], n = 0; n < i.length; ++n) {
var a = i[n];
a.point_bg.stopAllActions();
a.point_bg.opacity = 255;
}
this.showHeadTime(-1);
this._btnNode.active = !1;
var s = cc.vv.gameNetMgr.gameOverData, c = cc.vv.gameNetMgr.seats, r = s.end_seats_data.length, o = r - 1 < e + 1 ? 0 : e + 1;
for (t = o; t < r + o; t++) {
var h = r - 1 < t ? t - r : t, l = s.end_seats_data[h], d = c[h], u = l.holds;
if (u && 0 < u.length) {
d.holds = u;
this.initMahjongs(d.seatindex);
}
}
var v = this;
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
v.onGameOverChips();
})));
},
onGameOverChips: function() {
for (var e = [], t = null, i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = cc.vv.gameNetMgr.gameOverData.end_seats_data[n];
if (a) {
var s = a.total_score, c = a.end_score, r = cc.vv.gameNetMgr.getLocalIndex(n), o = this._seatNodes[r], h = {};
h.score = s;
h.seatindex = n;
h.addScore = c;
h.localIndex = r;
h.viewdata = o;
n == cc.vv.gameNetMgr.button ? t = h : e.push(h);
}
}
var l = "p" + t.localIndex, d = this.node.getChildByName("game").getChildByName("players_node").getChildByName(l), u = this._chipNodeList[t.localIndex], v = u.getChildByName("icon_chip");
u.active = !0;
var g = this;
for (n = 0; n < e.length; n++) {
var _ = e[n];
if (0 != (c = _.addScore)) if (0 < c) {
var f = function(e, t) {
var i = "p" + t.localIndex, n = g.node.getChildByName("game").getChildByName("players_node").getChildByName(i), a = (g._chipNodeList[t.localIndex].getChildByName("icon_chip"), 
{
x: 0,
y: 0
});
a.x = n.x - (d.x + u.x + v.x);
a.y = n.y - (d.y + u.y + v.y);
u.getChildByName("icon_chip").getComponent("dropChip").flyToPlayer(a, t.addScore);
};
this.node.runAction(cc.sequence(cc.delayTime(2 * n), cc.callFunc(f, null, _)));
} else {
f = function(e, t) {
var i = "p" + t.localIndex, n = g.node.getChildByName("game").getChildByName("players_node").getChildByName(i), a = g._chipNodeList[t.localIndex], s = a.getChildByName("icon_chip"), c = {
x: 0,
y: 0
};
c.x = d.x - (n.x + a.x + s.x);
c.y = d.y - (n.y + a.y + s.y);
g._chipNodeList[t.localIndex].getChildByName("icon_chip").getComponent("dropChip").flyToPlayer(c, -t.addScore);
};
this.node.runAction(cc.sequence(cc.delayTime(2 * n), cc.callFunc(f, null, _)));
}
}
this.node.runAction(cc.sequence(cc.delayTime(2 * e.length), cc.callFunc(function(e) {
g.hideChupai();
g.showGameOver();
})));
},
onShowAnim: function(e, t, i, n) {
var a = cc.vv.gameNetMgr.getLocalIndex(t), s = this._d21NodePK_List[a][e].effectNode;
s.active = !0;
var c = s.getChildByName("tx_21d");
if (!c) {
(c = cc.instantiate(this.rsyd_type_prefab)).parent = s;
c.name = "tx_21d";
}
i && c.runAction(cc.sequence(cc.hide(), cc.delayTime(n), cc.show(), cc.callFunc(function() {
var e = c.getComponent(cc.Animation);
if (1 == i) {
e.play("21d-baodian");
cc.vv.audioMgr.playSFX("resources/game/21D/sounds/baozha.mp3");
} else 3 == i ? e.play("21d-21d") : 4 == i ? e.play("21d-5xl") : 5 == i && e.play("21d-hjk");
})));
},
playBaoZha: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._d21NodePK_List[i][e].effectNode;
n.active = !0;
var a = n.getChildByName("tx_21d");
if (!a) {
(a = cc.instantiate(this.rsyd_type_prefab)).parent = n;
a.name = "tx_21d";
}
a.getComponent(cc.Animation).play("21d-baodian");
cc.vv.audioMgr.playSFX("resources/game/21D/sounds/baozha.mp3");
},
playHJK: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._d21NodePK_List[i][e].effectNode;
n.active = !0;
var a = n.getChildByName("tx_21d");
if (!a) {
(a = cc.instantiate(this.rsyd_type_prefab)).parent = n;
a.name = "tx_21d";
}
a.getComponent(cc.Animation).play("21d-hjk");
},
playWL: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._d21NodePK_List[i][e].effectNode;
n.active = !0;
var a = n.getChildByName("tx_21d");
if (!a) {
(a = cc.instantiate(this.rsyd_type_prefab)).parent = n;
a.name = "tx_21d";
}
a.getComponent(cc.Animation).play("21d-5xl");
},
getAudioURLBy21D: function(e, t) {
return 1 == t ? "resources/game/21D/sounds/man/" + e + ".mp3" : "resources/game/21D/sounds/women/" + e + ".mp3";
},
onCallBanker: function(e) {
var t = 0 == e.call ? "不抢" : "抢庄";
this.onShowLabelPlay(e.seat_index, t, -1);
},
onStartPlayEndPush: function(e) {
if (0 == e.success) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].name + "拒绝提前开始！";
cc.vv.alert.show("提示", t);
}
},
onBettingPush: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seat_index);
this.updateChipNode(t, e.total_coin);
if (1 == e.betting_type) {
var i = 1 == e.betting_type ? "完成" : e.coin + "分";
this.onShowLabelPlay(e.seat_index, i, 2);
}
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._chupaiSprite[n];
a.getChildByName("lb_type_replay").getComponent(cc.Label).string = t;
if (0 < i) {
a.stopAllActions();
var s = cc.sequence(cc.delayTime(i), cc.callFunc(function() {
a.getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}));
a.runAction(s);
}
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[i].showTimer(30);
}
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
},
onChoice: function() {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
}
});
cc._RF.pop();
}, {
msgdefine_21d: "msgdefine_21d",
poker_utils_21d: "poker_utils_21d"
} ],
MJGame_3DH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d04fesqUJpKjJP+obxJjt7u", "MJGame_3DH");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
_myMJArr: [],
_chuPaiTempArr: [],
_chupaiSprite: [],
_folds: [],
_seatNodes: [],
_gamecount: null,
_showColorList: [],
_btnFenList: [],
_decide_main_color: -1,
_colorMCList: [],
_showBigNum: -1,
_turncardType: -1,
_turncardColor: -1,
_BShuangMcList: [],
_showEff: !0,
_seatsList: [],
_lastIndex: -1,
_zhuang_sex: []
},
onLoad: function() {
if (!cc.sys.isNative && cc.sys.isMobile) {
var e = this.node.getComponent(cc.Canvas);
e.fitHeight = !0;
e.fitWidth = !0;
}
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.poker_util = e("poker_utils_3DH");
cc.vv.msgTemp_3dh = e("msgdefine_3DH").msg_templete;
this.initView();
this.initEventHandlers();
if (2 == cc.vv.gameNetMgr.gamestate || 3 == cc.vv.gameNetMgr.gamestate || 4 == cc.vv.gameNetMgr.gamestate || 5 == cc.vv.gameNetMgr.gamestate) {
this.onGameBeign();
this.updateCallTurn();
this.updateCallDecideMainColor();
this.updateBuryCard();
this.onDoingNode();
}
cc.vv.audioMgr.playBGM("resources/game/3DH/sounds/bg3dh.mp3");
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/3DH/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("myself");
this._myholds = t.getChildByName("holds");
var i = cc.director.getVisibleSize().width;
this._myholds.scaleX *= i / 1280;
this._myholds.scaleY *= i / 1280;
for (var n = [ "myself", "right", "up", "left" ], a = 0; a < n.length; ++a) {
var s = n[a], c = e.getChildByName(s);
c.active = !0;
this._chupaiSprite.push(c.getChildByName("ChuPai").getChildByName("lb_type"));
this._folds.push(c.getChildByName("folds"));
this._seatNodes.push(c.getChildByName("seat"));
this._seatsList.push(c.getChildByName("seat").getComponent("Seat"));
var r = c.getChildByName("Bshuan");
r.getChildByName("lb").getComponent(cc.Label).string = "报副";
this._BShuangMcList.push(r);
}
this.opration_3dh = cc.find("Canvas/game/opration_3dh");
this.opration_3dh.active = !0;
var o = this.opration_3dh.getChildByName("node_top");
this.lb_jiaofen = o.getChildByName("lb_jiaofen").getComponent(cc.Label);
this.lb_defen = o.getChildByName("lb_defen").getComponent(cc.Label);
this.lb_defen2 = o.getChildByName("lb_defen2").getComponent(cc.Label);
this.lb_defen2.node.scale = 2;
for (var h = o.getChildByName("color"), l = 0; l < h.children.length; l++) {
var d = "color_" + l, u = h.getChildByName(d);
u.active = !1;
this._showColorList.push(u);
}
this.colorMC = o.getChildByName("colorMC");
for (var v = 0; v < this.colorMC.children.length; v++) {
d = "color_" + v;
var g = this.colorMC.getChildByName(d);
this._colorMCList.push(g);
}
this.node_fen = this.opration_3dh.getChildByName("node_fen");
this.node_fen.active = !1;
this.lb_fen = this.node_fen.getChildByName("lb_fen").getComponent(cc.Label);
this.lb_fen.string = "";
this.fenBg = this.node_fen.getChildByName("fenbg");
this.fenBg.active = !1;
for (var _ = [ 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0 ], f = 0; f < _.length; ++f) {
var p = "btn" + (f + 1), m = this.fenBg.getChildByName(p);
m.nodeFen = _[f];
cc.vv.utils.addClickEvent(m, this.node, "MJGame_3DH", "onBtnFenClicked");
this._btnFenList.push(m);
}
this.btnChuPai = this.opration_3dh.getChildByName("btnChuPai");
this.btnChuPai.active = !1;
cc.vv.utils.addClickEvent(this.btnChuPai, this.node, "MJGame_3DH", "onBtnChuPaiClicked");
this.dingNode = this.opration_3dh.getChildByName("dingNode");
this.dingNode.active = !1;
this.showBg = this.dingNode.getChildByName("showBg");
this.showBg.active = !1;
this.fenPoker = this.dingNode.getChildByName("MyPoker_Small");
this.fenPoker.active = !1;
this.fenholds = this.dingNode.getChildByName("fenholds");
this.showBig = this.dingNode.getChildByName("showBig");
this.showBig.active = !1;
this.showBigMove = [ [ 0, -25 ], [ 291, 100 ], [ 0, 225 ], [ -270, 100 ] ];
this.nodeHolds = this.opration_3dh.getChildByName("nodeHolds");
this.nodeHolds.active = !1;
this.showHolds = this.nodeHolds.getChildByName("showHolds");
this.node_color = this.nodeHolds.getChildByName("node_color");
this.node_color.active = !1;
for (var C = 0; C < this.node_color.children.length; C++) {
d = "color_" + C;
(g = this.node_color.getChildByName(d)).mainColor = C;
cc.vv.utils.addClickEvent(g, this.node, "MJGame_3DH", "onBtncolorClicked");
}
this.nodeBtn = this.nodeHolds.getChildByName("nodeBtn");
this.nodeBtn.active = !1;
this.btnmaipai = this.nodeBtn.getChildByName("btnmaipai");
cc.vv.utils.addClickEvent(this.btnmaipai, this.node, "MJGame_3DH", "onBtnMaiPainClicked");
this.btnrenshu = this.nodeBtn.getChildByName("btnrenshu");
cc.vv.utils.addClickEvent(this.btnrenshu, this.node, "MJGame_3DH", "onBtnRenShuClicked");
this.buryCardNode = this.opration_3dh.getChildByName("buryCardNode");
this.buryCardNode.active = !1;
this.lb_buey = this.buryCardNode.getChildByName("lb_socre").getComponent(cc.Label);
this.buryHolds = this.buryCardNode.getChildByName("buryHolds");
this.hideChupai();
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[i].showTimer(30);
}
}
},
onBtnMaiPainClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
if (8 == this._chuPaiTempArr.length) {
(e = JSON.parse(cc.vv.msgTemp_3dh.CS_BuryCard)).cards = this._chuPaiTempArr;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("sdh_bury_card", e);
} else cc.vv.alert.show("错误码", "埋牌的数量不对，只能埋8张牌");
},
onBtnRenShuClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
e = JSON.parse(cc.vv.msgTemp_3dh.CS_GiveUp);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("sdh_give_up", e);
this.nodeBtn.active = !1;
},
onBtncolorClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.mainColor;
if (5 == t) {
e = JSON.parse(cc.vv.msgTemp_3dh.CS_GiveUp);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("sdh_give_up", e);
} else {
t = 4 == t ? -1 : t;
(e = JSON.parse(cc.vv.msgTemp_3dh.CS_DecideMainColor)).color = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("sdh_decide_main_color", e);
}
this.node_color.active = !1;
},
onBtnFenClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.nodeFen;
(e = JSON.parse(cc.vv.msgTemp_3dh.CS_CallBanker)).call = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("sdh_call_banker", e);
this.fenBg.active = !1;
},
onBtnChuPaiClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
(e = JSON.parse(cc.vv.msgTemp_3dh.CS_out_card)).cards_data = this._chuPaiTempArr;
e.card_type = cc.vv.poker_util.check_out_type(this._chuPaiTempArr, this._decide_main_color);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("out_card", e);
},
hideChupai: function() {
var e = 0;
for (e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
for (e = 0; e < this._showColorList.length; ++e) this._showColorList[e].active = !1;
for (e = 0; e < this._colorMCList.length; e++) this._colorMCList[e].active = !1;
for (e = 0; e < this._BShuangMcList.length; e++) this._BShuangMcList[e].active = !1;
this.lb_fen.string = "";
this.lb_defen.string = "0";
this.lb_defen2.node.active = !1;
this.lb_defen2.string = "";
this.lb_jiaofen.string = "80";
this.fenholds.removeAllChildren();
this.showHeadTime(-1);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var c = this;
this.node.on("game_holds", function(e) {
c.initMahjongs(e.detail.index);
});
this.node.on("game_state", function(e) {
c.updateGameState();
});
this.node.on("game_begin", function(e) {
c.onGameBeign();
var t = c.getAudioURLBy3dh(101, !1);
cc.vv.audioMgr.playSFX(t);
});
this.node.on("out_card", function(e) {
c.showOutCard(e.detail);
});
this.node.on("turn", function(e) {
cc.vv.gameNetMgr.turn != cc.vv.gameNetMgr.seatIndex && (c.btnChuPai.active = !1);
c._turncardType = e.detail.now_card_type;
c._turncardColor = e.detail.now_card_color;
c.node.runAction(cc.sequence(cc.delayTime(.2), cc.callFunc(function(e) {
cc.vv.gameNetMgr.gameDta_3dh.max_index == cc.vv.gameNetMgr.turn ? c.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
c.showOperation();
}))) : c.showOperation();
})));
});
this.node.on("sdh_call_turn_push", function(e) {
c.updateCallTurn();
});
this.node.on("sdh_call_banker_push", function(e) {
c.onCallBankerPush(e.detail);
});
this.node.on("sdh_call_end_push", function(e) {
c.onCallEndPush(e.detail);
});
this.node.on("bury_card_push", function(e) {
c.closeOpration();
c.dingNode.active = !0;
c.showBig.active = !1;
c.showBg.active = !0;
c.fenPoker.active = !1;
});
this.node.on("decide_main_color_push", function(e) {
c.decideMainColorPush();
});
this.node.on("sdh_dig_card_push", function(e) {
var t = e.detail.dig_card;
c.onShowQiangHold(t);
});
this.node.on("sdh_turn_result_push", function(e) {
c.onTurnResultPush(e.detail);
});
this.node.on("sdh_bury_card_over", function(e) {
var t = e.detail;
1 != t.give_up ? c.node.runAction(cc.sequence(cc.delayTime(4), cc.callFunc(function(e) {
c.onSdhBuryCardOver(t);
}))) : c.playGameOver(t);
});
this.node.on("sdh_game_over", function(e) {
c.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
c.onShowGameResult();
});
this.node.on("sdh_deputy_push", function(e) {
c.onSdhDeputyPush(e.detail);
});
this.node.on("reset", function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
c.initMahjongs(n.seatindex);
}
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) if (cc.vv.gameNetMgr.gameOverData.end_seats_data[i]) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getLocalIndex(i);
c._seatNodes[s].getComponent("Seat").setScore(n, a);
c._folds[s].removeAllChildren();
}
c._showEff = !0;
c.hideChupai();
});
},
onSdhDeputyPush: function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id);
if (1 == e.deputy) {
var i = cc.vv.gameNetMgr.getLocalIndex(t);
this._BShuangMcList[i].active = !0;
}
},
updateGameState: function() {
if (3 == cc.vv.gameNetMgr.gamestate) {
if (cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
this.closeOpration();
this.node_fen.active = !0;
this.fenBg.active = !1;
this.lb_fen.string = "";
this.lb_fen.string = "庄家正在指定主牌...";
if (this.lb_fen.string = "庄家正在指定主牌...") {
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
var t = i.getAudioURLBy3dh(102, !1);
cc.vv.audioMgr.playSFX(t);
})));
}
}
}
this.onDoingNode();
},
updateCallTurn: function() {
if (2 == cc.vv.gameNetMgr.gamestate) {
var e = cc.vv.gameNetMgr.turn;
this.node_fen.active = !0;
this.lb_fen.string = "";
if (e == cc.vv.gameNetMgr.seatIndex) {
this.fenBg.active = !0;
var t = cc.vv.gameNetMgr.gameDta_3dh.callTurn.current_min_value;
t = 0 == t ? 85 : t;
this.lb_jiaofen.string = 85 == t ? "" : t;
for (var i = 0; i < this._btnFenList.length; i++) {
var n = this._btnFenList[i];
0 != n.nodeFen && (n.nodeFen < t ? n.getComponent(cc.Button).interactable = !0 : n.getComponent(cc.Button).interactable = !1);
}
} else {
this.fenBg.active = !1;
this.lb_fen.string = "正在等待其他人叫分...";
}
}
},
onCallBankerPush: function(e) {
var t = -1;
if (e.call) {
var i = e.seat_index, n = (a = cc.vv.gameNetMgr.seats[i].sex, 0 == e.call ? "不叫" : e.call);
if (0 < e.call) {
t = e.call;
this.lb_jiaofen.string = e.call;
} else 0 == e.call && (t = 0);
if (5 == e.call) {
this._zhuang_sex.push(a);
console.log("sex2:~~~~~" + a);
}
s = this.getAudioURLBy3dh(t, a);
cc.vv.audioMgr.playSFX(s);
this.onShowLabelPlay(i, n, -1);
} else {
0 == e ? t = 95 : 1 == e ? t = 96 : 2 == e ? t = 97 : 3 == e ? t = 98 : 4 == e && (t = 99);
var a = this._zhuang_sex[0];
console.log("sex1:~~~~~" + a);
var s = this.getAudioURLBy3dh(t, a);
cc.vv.audioMgr.playSFX(s);
}
},
onCallEndPush: function(e) {
if (-1 != e.button) {
this.lb_jiaofen.string = e.call_score;
this.closeOpration();
}
},
updateCallDecideMainColor: function() {
if (3 == cc.vv.gameNetMgr.gamestate) {
this.closeOpration();
var e = cc.vv.gameNetMgr.button;
this.node_fen.active = !0;
this.fenBg.active = !1;
this.lb_fen.string = "";
if (e == cc.vv.gameNetMgr.seatIndex) {
this.nodeHolds.active = !0;
this.node_color.active = !0;
} else {
this.lb_fen.string = "庄家正在指定主牌...";
if (this.lb_fen.string = "庄家正在指定主牌...") {
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
var t = i.getAudioURLBy3dh(102, !1);
cc.vv.audioMgr.playSFX(t);
})));
}
}
}
},
updateBuryCard: function() {
if (4 == cc.vv.gameNetMgr.gamestate) {
this.closeOpration();
var e = cc.vv.gameNetMgr.button;
this.node_fen.active = !0;
this.fenBg.active = !1;
this.lb_fen.string = "";
if (e == cc.vv.gameNetMgr.seatIndex) {
this.nodeHolds.active = !0;
this.nodeBtn.active = !0;
} else {
var t = this.getAudioURLBy3dh(94, !0);
cc.vv.audioMgr.playSFX(t);
this.lb_fen.string = "庄家埋好底牌就开始...";
}
}
},
closeOpration: function() {
this.btnChuPai.active = !1;
this.node_fen.active = !1;
this.lb_fen.string = "";
this.fenBg.active = !1;
this.dingNode.active = !1;
this.fenPoker.active = !1;
this.showBg.active = !1;
this.nodeHolds.active = !1;
this.node_color.active = !1;
this.nodeBtn.active = !1;
this.showHolds.removeAllChildren();
this.buryCardNode.active = !1;
this.buryHolds.removeAllChildren();
var e = 0;
for (e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
onShowQiangHold: function(e) {
this.closeOpration();
var t = this.sortHolds(e);
this.nodeHolds.active = !0;
this.showHolds.scaleX = 1.6;
this.showHolds.scaleY = 1.6;
for (var i = 0; i < t.length; i++) {
var n = t[i], a = (n.cid, cc.instantiate(this.pk_prefab));
a.parent = this.showHolds;
var s = 30 * i - 120;
a.setPosition(s, 0);
this.setSpriteFrameByMJID(a, n.valueID, n.color);
}
var c = this;
this.showHolds.runAction(cc.sequence(cc.delayTime(2), cc.scaleTo(.5, .1), cc.callFunc(function(e) {
c.closeOpration();
var t = cc.vv.gameNetMgr.button;
c.node_fen.active = !0;
c.fenBg.active = !1;
c.lb_fen.string = "";
if (t == cc.vv.gameNetMgr.seatIndex) {
c.nodeHolds.active = !0;
c.node_color.active = !0;
}
})));
},
decideMainColorPush: function() {
var e = cc.vv.gameNetMgr.gameDta_3dh.mainColor, t = -1 == e ? 4 : e;
this._decide_main_color = t;
this._colorMCList[t].active = !0;
this.onCallBankerPush(t);
this._colorMCList[t].setPosition(410, -250);
this._colorMCList[t].scale = 1;
var i = this, n = 4 == this._decide_main_color ? 0 : this._decide_main_color + 1, a = i._colorMCList[n].getPosition(), s = cc.sequence(cc.delayTime(1), cc.scaleTo(.5, .1), cc.moveTo(.5, a), cc.callFunc(function(e) {
i._colorMCList[t].active = !1;
i._showColorList[t].active = !0;
i.initMahjongs(cc.vv.gameNetMgr.seatIndex);
i.updateBuryCard();
}));
this._colorMCList[t].runAction(s);
},
onDoingNode: function() {
if (5 == cc.vv.gameNetMgr.gamestate) {
this.dingNode.active = !0;
this.showBig.active = !1;
this.showBg.active = !0;
this.fenPoker.active = !1;
this.fenholds.removeAllChildren();
}
},
updateShowBigMove: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this._showBigNum = .8;
this.cur_arc = 0;
this.showBig.setPosition(this.showBigMove[t][0], this.showBigMove[t][1]);
this.showBig.active = !0;
},
onTurnResultPush: function(e) {
var t = e.max_index;
this.updateShowBigMove(t);
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e, t) {
t.max_index != cc.vv.gameNetMgr.button && i.onTurnResultPushShowFen(t);
}, null, e)));
},
onTurnResultPushShowFen: function(e) {
var t = e.score_card;
if (0 != t.length) {
console.log("------------score_card:" + t, "data.score：" + e.score);
e.score_value;
this.fenholds.removeAllChildren();
var i = this.sortHolds(t);
this.fenholds.scaleX = .8;
this.fenholds.scaleY = .8;
for (var n = i.length / 2, a = 0; a < i.length; a++) {
var s = i[a], c = (s.cid, cc.instantiate(this.pk_prefab));
c.parent = this.fenholds;
var r = 30 * a - 30 * n;
c.setPosition(r, 0);
this.setSpriteFrameByMJID(c, s.valueID, s.color);
}
var o = this, h = {};
h.holds = i;
h.data = e;
this.fenholds.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(.5, .1), cc.callFunc(function(e, t) {
o.fenholds.removeAllChildren();
var i = t.holds[0];
o.fenPoker.getComponent("MyPoker").setValueAndColor(i.valueID, i.color);
o.fenPoker.active = !0;
o.showBig.active = !1;
o.lb_defen2.string = t.data.score_value;
o.lb_defen2.node.active = !0;
o.lb_defen2.node.setPosition(274, -252);
var n = o.lb_defen.node.getPosition(), a = {};
a.score = t.data.score;
o.lb_defen2.node.runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(.5, n), cc.callFunc(function(e, t) {
o.lb_defen2.node.active = !1;
o.lb_defen.string = "";
o.lb_defen.string = t.score;
}, null, a)));
}, null, h)));
}
},
playGameOver: function(e) {
for (var t = .5, i = e.end_seats_data, n = 0; n < i.length; n++) {
if (i[n].end_score < 0) {
var a = i[n].user_id;
break;
}
}
var s = cc.vv.gameNetMgr.getSeatByID(a).sex;
if (1 == e.give_up) {
this.anim.play("3dh-zjtx");
var c = 93;
t = 1;
} else {
var r = [ "", "3dh-dg", "3dh-xg", "88", "", "", "89" ][e.win_lose_state];
if ("" != r) {
c = -1;
if ("3dh-dg" == r) {
c = 90;
this.anim.play(r);
} else if ("3dh-xg" == r) {
c = 91;
this.anim.play(r);
} else "88" == r ? c = 88 : "89" == r && (c = 89);
t = 1;
}
}
var o = this.getAudioURLBy3dh(c, s);
cc.vv.audioMgr.playSFX(o);
var h = this;
this.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function(e, t) {
h.showGameOver();
})));
},
call_game_over: function() {
var e = cc.vv.gameNetMgr.gameOverData;
1 != e.force && 1 != e.all_give_up_call || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/3DH/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/3DH/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
getAudioURLBy3dh: function(e, t) {
return t ? "resources/game/3DH/sounds/man/" + e + ".mp3" : "resources/game/3DH/sounds/women/" + e + ".mp3";
},
onSdhBuryCardOver: function(n) {
var e = 0 == n.has_dig ? .1 : 4, a = this;
this.node.runAction(cc.sequence(cc.delayTime(e), cc.callFunc(function(e) {
if (cc.vv.gameNetMgr.gameDta_3dh && cc.vv.gameNetMgr.gameDta_3dh.gameOverData) {
var t = cc.vv.gameNetMgr.gameDta_3dh.gameOverData;
a.playGameOver(t);
} else a.showGameOver();
})));
for (var t = 0; t < this._folds.length; ++t) this._folds[t].removeAllChildren();
this.showBig.active = !1;
this._myholds.removeAllChildren();
this.closeOpration();
if (0 != n.has_dig) {
this.buryHolds.removeAllChildren();
this.lb_buey.string = n.dig_score_value;
this.lb_defen2.string = "";
this.buryCardNode.active = !0;
var i = this.getAudioURLBy3dh(86, !0);
cc.vv.audioMgr.playSFX(i);
var s = n.bury_card, c = this.sortHolds(s);
this.buryHolds.scaleX = 1.6;
this.buryHolds.scaleY = 1.6;
this.buryCardNode.scale = 1;
var r = c.length / 2;
for (t = 0; t < c.length; t++) {
var o = c[t], h = o.cid, l = cc.vv.poker_util.get_poker_value(h), d = 0;
0 < n.dig_score_value && (5 == l || 10 == l || 13 == l) && (d = 20);
var u = cc.instantiate(this.pk_prefab);
u.parent = this.buryHolds;
var v = 30 * t - 30 * r;
u.setPosition(v, d);
this.setSpriteFrameByMJID(u, o.valueID, o.color);
}
a = this;
this.buryCardNode.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function(e) {
a.buryCardNode.runAction(cc.sequence(cc.scaleTo(1, .1), cc.callFunc(function(e) {
a.buryCardNode.active = !1;
a.buryHolds.removeAllChildren();
a.lb_defen2.string = n.dig_score_value;
a.lb_defen2.node.active = !0;
a.lb_defen2.node.setPosition(274, -252);
var t = a.lb_defen.node.getPosition(), i = cc.sequence(cc.delayTime(.5), cc.moveTo(.5, t), cc.callFunc(function(e) {
a.lb_defen2.node.active = !1;
a.lb_defen.string = n.game_score;
a.fenholds.removeAllChildren();
}));
a.lb_defen2.node.runAction(i);
})));
})));
}
},
onGameBeign: function() {
this.hideChupai();
this.closeOpration();
this.gameRoot.active = !0;
this.lb_defen.string = "0";
this.lb_defen2.node.active = !1;
this.lb_jiaofen.string = "80";
var e = cc.vv.gameNetMgr.gameDta_3dh;
if (e) {
this.lb_defen.string = e.sync_data.score;
this.lb_jiaofen.string = e.sync_data.call_score;
this._turncardType = e.now_card_type;
this._turncardColor = e.now_card_color;
if (3 < cc.vv.gameNetMgr.gamestate) {
var t = e.sync_data.main_color, i = -1 == t ? 4 : t;
this._decide_main_color = i;
this._showColorList[i].active = !0;
}
for (var n = e.sync_data.deputy, a = 0; a < n.length; a++) {
if (1 == n[a]) {
var s = cc.vv.gameNetMgr.getLocalIndex(a);
this._BShuangMcList[s].active = !0;
}
}
}
this.showBig.active = !1;
var c = cc.vv.gameNetMgr.seats;
for (var r in c) {
var o = c[r];
this.initMahjongs(o.seatindex);
}
for (r = 0; r < this._folds.length; ++r) this._folds[r].removeAllChildren();
if (e) {
i = e.sync_data.max_index;
for (var h = e.sync_data.turn_card, l = 0; l < h.length; l++) {
var d = h[l];
3 < i && (i -= 4);
s = cc.vv.gameNetMgr.getLocalIndex(i);
this.showFoldsCard(d, s);
i++;
}
}
this.showOperation();
this.addGameTeXiao();
},
addGameTeXiao: function() {
if (!this.anim) {
var t = this;
cc.vv.UILoader.loadRes("game/3DH/prefabs/3dhtexiao", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.gameRoot, function(e) {
t.anim = e.getComponent(cc.Animation);
});
});
}
},
sortHolds: function(e) {
var t = [];
0 < e.length && (t = cc.vv.poker_util.pokerSort(e, this._decide_main_color));
return t;
},
initMahjongs: function(e) {
var t = this, i = cc.vv.gameNetMgr.seats[e];
if (i) {
var n = this.sortHolds(i.holds);
if (null != n) {
this._halfLen = 21 < n.length ? 10 : n.length / 2;
var a = cc.vv.gameNetMgr.getLocalIndex(e), s = !1;
if (0 == a) {
this._myMJArr = [];
var c = this._myholds;
cc.vv.gameNetMgr.conf.rule_index;
c.scaleX = 1.9;
c.scaleY = 1.9;
if (1 == this._showEff) {
s = !0;
this._showEff = !1;
}
c.removeAllChildren();
for (var r = 0; r < n.length; r++) {
var o = n[r], h = o.cid, l = cc.instantiate(this.pk_prefab);
l.parent = c;
var d = 0 + 30 * r - 30 * this._halfLen, u = 0;
if (21 < n.length) if (r < 8) {
u = 70;
d = 0 + 30 * r + 90;
} else d = 0 + 30 * (r - 8) - 30 * this._halfLen;
l.setPosition(d, u);
l.poker_id = h;
l.valueID = o.valueID;
l.valueC = o.color;
l.isMain = o.isMain;
l.pokerIndex = r;
if (l.showEff = s) {
this.setSpriteFrameByMJID(l, -1);
var v = cc.sequence(cc.hide(), cc.delayTime(.05 * r), cc.show(), cc.delayTime(.1 * (n.length - r)), cc.callFunc(function(e) {
e.showEff = !1;
t.setSpriteFrameByMJID(e, e.valueID, e.valueC);
}, l));
l.runAction(v);
} else this.setSpriteFrameByMJID(l, o.valueID, o.color);
l.isRightPoke = r == n.length - 1;
this.onMJtprefabEvent(l);
this._myMJArr.push(l);
}
this._chuPaiTempArr = [];
} else {
var g = i.holds.length;
this._seatNodes[a].getComponent("Seat").setPaiCount(g);
}
0 < i.folds.length && 0 == s && this.showFoldsCard(i.folds[i.folds.length - 1], a);
}
}
},
onMJtprefabEvent: function(e) {
this.selectNode = null;
this.isTouchMove = !1;
e.on("touchstart", function(e) {
this.selectNode = null;
}.bind(this));
e.on("touchmove", function(e) {
this.isTouchMove = !0;
var t = this._myholds.convertToNodeSpace(e.touch.getLocation()), i = !1;
if (this.selectNode) {
var n = this.selectNode.width * this.selectNode.scaleX, a = this.selectNode.height * this.selectNode.scaleX, s = cc.rect(this.selectNode.x - n / 2, this.selectNode.y - a / 2, n * (this.selectNode.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (i = !0);
}
if (0 == i) for (var c = 0; c < this._myMJArr.length; c++) {
var r = this._myMJArr[c];
n = r.width * r.scaleX, a = r.height * r.scaleX, s = cc.rect(r.x - n / 2, r.y - a / 2, n * (r.isRightPoke ? 1 : .4), a);
if (cc.rectContainsPoint(s, t)) {
this.selectNode = r;
this.updateMJPrefabNode(r);
}
}
}.bind(this));
e.on("touchcancel", function(e) {
this.selectNode = null;
this.isTouchMove = !1;
}.bind(this));
e.on("touchend", function(e) {
this.selectNode = null;
this.isTouchMove = !1;
}.bind(this));
cc.vv.utils.addClickEvent(e, this.node, "MJGame_3DH", "onMJClicked");
},
onMJClicked: function(e) {
if (!this.isTouchMove) {
var t = e.target;
this.updateMJPrefabNode(t);
}
},
updateMJPrefabNode: function(e) {
if ((5 == cc.vv.gameNetMgr.gamestate || 4 == cc.vv.gameNetMgr.gamestate) && 1 != e.showEff) {
cc.vv.audioMgr.playBtnClick();
var t = e.getComponent("MyPoker");
if (1 != t.isBlack()) {
console.log(e.poker_id);
for (var i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e.poker_id == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
this._chuPaiTempArr.push(e.poker_id);
}
cc.vv.gameNetMgr.isSelfTurn();
}
}
},
showOperation: function() {
this.showHeadTime(cc.vv.gameNetMgr.turn);
if (cc.vv.gameNetMgr.gameDta_3dh && cc.vv.gameNetMgr.gameDta_3dh.max_index == cc.vv.gameNetMgr.turn) {
for (var e = 0; e < this._folds.length; ++e) this._folds[e].removeAllChildren();
this.showBig.active = !1;
}
if (5 == cc.vv.gameNetMgr.gamestate) if (cc.vv.gameNetMgr.isSelfTurn()) {
this.btnChuPai.active = !0;
this.updatePKCover();
} else this.btnChuPai.active = !1;
},
updatePKCover: function() {
var e = cc.vv.gameNetMgr.gameDta_3dh, t = e.now_card_data, i = e.now_card_color;
if (-1 != i) {
for (var n = [], a = 0; a < this._myMJArr.length; a++) {
var s = (r = this._myMJArr[a]).getComponent("MyPoker");
r.valueID;
s.setBlack(!1);
if (i == e.mainColor) {
if (1 == r.isMain) {
n.push(r);
continue;
}
} else if (r.valueC == i && 0 == r.isMain) {
n.push(r);
continue;
}
for (var c = 0; c < this._chuPaiTempArr.length; ++c) if (r.poker_id == this._chuPaiTempArr[c] && 1 == s.isShowUp) {
s.setDown();
this._chuPaiTempArr.splice(c, 1);
break;
}
s.setBlack(!0);
}
if (n.length < t.length) for (a = 0; a < this._myMJArr.length; a++) {
var r;
(s = (r = this._myMJArr[a]).getComponent("MyPoker")).setBlack(!1);
}
}
},
showOutCard: function(e) {
if (e.user_index == cc.vv.gameNetMgr.seatIndex) for (var t = 0; t < this._myMJArr.length; t++) {
this._myMJArr[t].getComponent("MyPoker").setBlack(!1);
}
this._chupaiSprite[e.user_index];
3 == e.out_card_type && this.anim.play("3dh-tlj");
},
showFoldsCard: function(e, t) {
if (1 == e.length) var i = 1; else if (3 < e.length) i = 3; else if (2 == e.length && e[0] == e[1]) i = 2;
var n = cc.vv.gameNetMgr.seats[t].sex, a = this._folds[t], s = this.sortHolds(e);
a.scaleX = 1.3;
a.scaleY = 1.3;
a.removeAllChildren();
for (var c = 0; c < s.length; c++) {
var r = s[c], o = r.cid, h = cc.instantiate(this.pk_prefab);
h.parent = a;
var l = 0 + 25 * c, d = 0;
if (1 == t || 3 == t) {
var u = 5 <= e.length ? 5 : e.length - 5;
l = 5 < c ? 25 * c - 25 * u / 2 - 150 : 25 * c - 25 * u / 2;
d = 5 < c ? -40 : 0;
} else {
d = 0;
l = 25 * c - 25 * e.length / 2;
}
h.setPosition(l, d);
this.setSpriteFrameByMJID(h, r.valueID, r.color, i, o, n);
}
},
setSpriteFrameByMJID: function(e, t, i, n, a, s) {
e.getComponent("MyPoker").setValueAndColor(t, i);
e.active = !0;
var c = this._decide_main_color;
if (cc.vv.gameNetMgr.gameDta_3dh && cc.vv.gameNetMgr.gameDta_3dh.max_index == cc.vv.gameNetMgr.turn && a) {
var r = -1;
n && 1 == n ? i == c || 35 < a ? r = 114 : 0 == i ? r = 110 : 1 == i ? r = 111 : 2 == i ? r = 112 : 3 == i && (r = 113) : n && 2 == n && (r = i == c || 35 < a ? 114 : 87);
var o = this.getAudioURLBy3dh(r, s);
cc.vv.audioMgr.playSFX(o);
}
},
getHoldsPokerByID: function(e) {
for (var t = null, i = 0; i < this._myMJArr.length; ++i) {
var n = this._myMJArr[i];
if (1 == n.active) {
var a = n.getComponent("MyPoker");
if (a.poker_id == e && 0 == a.isShowUp) {
t = a;
break;
}
}
}
return t;
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._chupaiSprite[n];
a.getComponent(cc.Label).string = t;
if (0 < i) {
a.stopAllActions();
var s = cc.sequence(cc.delayTime(i), cc.callFunc(function() {
a.getComponent(cc.Label).string = "";
}));
a.runAction(s);
}
},
StartRotation: function(e) {
this.showBig.setRotation(e);
},
update: function(e) {
if (0 < this._showBigNum) {
console.log("---------------------update");
this._showBigNum -= e;
this.cur_arc += 18;
this.StartRotation(this.cur_arc);
this._showBigNum < 0 && (this._showBigNum = -1);
}
},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
msgdefine_3DH: "msgdefine_3DH",
poker_utils_3DH: "poker_utils_3DH"
} ],
MJGame_3G: [ function(i, e, t) {
"use strict";
cc._RF.push(e, "507b2DXc4lFCaG+uXjxTBan", "MJGame_3G");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
gameOver_pk_prefab: {
default: null,
type: cc.Prefab
},
sg_type_prefab: {
default: null,
type: cc.Prefab
},
couma_pk_prefab: {
default: null,
type: cc.Prefab
},
_chupaiSprite: [],
_folds: [],
_effNodeList: [],
_mjcount: null,
_gamecount: null,
_hupaiTips: [],
_playEfxs: [],
_nodeZJH: [],
_seatNodes: [],
_seatsList: [],
_btnFenList: [],
_btnBankerScoreList: [],
bsList: [],
_lbBtnList: [],
_isGameOver: !1,
_turn_time: 0,
cuo_pk_prefab: {
default: null,
type: cc.Prefab
},
cuocard_atlas1: {
default: null,
type: cc.SpriteAtlas
},
cuocard_atlas2: {
default: null,
type: cc.SpriteAtlas
},
cuocard_bg: {
default: null,
type: cc.SpriteFrame
}
},
onLoad: function() {
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.poker_util = i("poker_util_3g");
cc.vv.msgTemp = i("msgdefine").msg_templete;
this.initView();
this.initEventHandlers();
var e = cc.vv.gameNetMgr.gamestate;
2 != e && 3 != e && 4 != e && 7 != e || this.onGameBeign(!0);
this.updateGameState();
cc.vv.audioMgr.playBGM("resources/game/3g/sounds/bg3g.mp3");
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/3g/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
updateGameState: function() {
var e = cc.vv.gameNetMgr.gamestate;
if (1 != cc.vv.gameNetMgr.getIsWatch()) {
this._btnFenNodeMC.active = !1;
if (1 == e) ; else if (2 == e) this.onGameBeign(); else if (3 == e) {
0 != (64 & 1 * cc.vv.gameNetMgr.conf.rule_index) ? this.onCuopaiEffectFun() : this._btnZhangNode.active = !0;
} else if (4 == e) {
var t = this;
console.log("下注状态:", cc.vv.gameNetMgr.button, "seatIndex:", cc.vv.gameNetMgr.seatIndex);
var i = 1 == 1 < cc.vv.gameNetMgr.multiBanker.length ? 4 : 1;
this.node.runAction(cc.sequence(cc.delayTime(i + .8), cc.callFunc(function() {
t._btnFenNodeMC.active = !0;
if (cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
t._btnFenNode.active = !0;
var e = t.getAudioURLBy3G(16);
cc.vv.audioMgr.playSFX(e);
}
})));
}
}
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("players58"), i = t.getChildByName("node3G");
i.active = !0;
this._btnCuoPai = i.getChildByName("btnCuoPai");
this._btnCuoPai.active = !1;
this._cuoPaiNode = e.getChildByName("cuoPaiNode");
this._btnZhangNode = i.getChildByName("btnZhangNode");
this._btnZhangNode.active = !1;
this.btn_bu = this._btnZhangNode.getChildByName("btn_bu");
this.btn_qiang = this._btnZhangNode.getChildByName("btn_qiang");
cc.vv.utils.addClickEvent(this.btn_bu, this.node, "MJGame_3G", "onBuQiangClicked");
cc.vv.utils.addClickEvent(this.btn_qiang, this.node, "MJGame_3G", "onQiangClicked");
this._btnFenNodeMC = i.getChildByName("btnFenNode");
this._btnFenNodeMC.active = !1;
this._btnFenNode = this._btnFenNodeMC.getChildByName("fenNode");
this._btnFenNode.active = !1;
this._btnNode = this._btnFenNode.getChildByName("node");
for (var n = 0; n < this._btnNode.children.length; ++n) {
var a = "btnFen" + (n + 1), s = this._btnNode.getChildByName(a), c = s.getChildByName("btn"), r = 0;
switch (n) {
case 0:
r = 10;
break;

case 1:
r = 20;
break;

case 2:
r = 40;
break;

case 3:
r = 60;
break;

case 4:
r = 80;
break;

case 5:
r = 100;
}
c.nodeFen = r;
s.getChildByName("lb").getComponent(cc.Label).string = r;
cc.vv.utils.addClickEvent(c, this.node, "MJGame_3G", "onBtnFenClicked");
0 == n && (s.active = !1);
this._btnFenList.push(c);
}
var o = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
t.active = !0;
this.coumaStartPositionList = [];
this.coumaEndPositionList = [];
this._moveToList = [];
for (var h = 0; h < o.length; ++h) {
var l = o[h], d = t.getChildByName(l);
this._chupaiSprite.push(d.getChildByName("ChuPai").getChildByName("lb_type"));
this._folds.push(d.getChildByName("folds"));
this._seatNodes.push(d.getChildByName("seat"));
this._seatsList.push(d.getChildByName("seat").getComponent("Seat"));
this._effNodeList.push(d.getChildByName("effNode"));
this.coumaStartPositionList.push(d.getPosition());
var u = d.getChildByName("coumaEff").getPosition();
this.coumaEndPositionList.push(u);
this._moveToList.push(d.getChildByName("folds").parent.getPosition().add(d.getChildByName("folds").getPosition()));
}
this.coumaMC = t.getChildByName("coumaMC");
this.coumaMC.active = !0;
this.cuopaiEffect = e.getChildByName("cuopaiEffect");
this.cuopaiEffect.active = !1;
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
this._isGameOver = !1;
this.coumaMC.removeAllChildren();
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var r = this;
this.node.on("game_begin", function(e) {
r.onGameBeign();
});
this.node.on("game_state", function(e) {
r.updateGameState();
});
this.node.on("call_banker", function(e) {
r.onCallBanker(e.detail);
});
this.node.on("start_play_end_push", function(e) {
r.onStartPlayEndPush(e.detail);
});
this.node.on("betting_push", function(e) {
r.onBettingPush(e.detail);
});
this.node.on("game_over", function(e) {
r._isGameOver = !0;
cc.vv.gameNetMgr.getIsWatch() ? r.onKaiPaiClick() : r._btnCuoPai.active = !0;
});
this.node.on("fore_game_over", function(e) {
r.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
r.onShowGameResult();
});
this.node.on("reset", function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = cc.vv.gameNetMgr.getLocalIndex(i), a = r._chupaiSprite[n].getChildByName("tx_3g");
a && a.removeFromParent();
}
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i];
if (n) {
var a = n.total_score, s = n.end_score, c = cc.vv.gameNetMgr.getLocalIndex(i);
r._seatNodes[c].getComponent("Seat").setScore(a, s);
}
}
});
},
call_game_over: function() {
var e = cc.vv.gameNetMgr.gameOverData;
1 != e.force && 1 != e.all_give_up_call || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/3g/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/3g/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowCardType: function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = t.length, n = i - 1 < e + 1 ? 0 : e + 1, a = 0, s = n; s < i + n; s++) {
var c = t[i - 1 < s ? s - i : s], r = c.holds;
if (r && 0 < r.length) {
this.initMahjongs(c.seatindex, a);
var o = cc.vv.poker_util.check3g_card_type(r), h = cc.vv.poker_util.sangongCardTypeSre(o.type, o.max_value);
this.onShowAnim(c.seatindex, c.sex, h, 1.5 + 1.5 * a);
}
a++;
}
},
onClearDnnDolds: function() {
this._btnFenNodeMC.active = !1;
this._btnFenNode.active = !1;
this._btnZhangNode.active = !1;
this._btnCuoPai.active = !1;
this._cuoPaiNode.removeAllChildren();
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t], n = cc.vv.gameNetMgr.getLocalIndex(i.seatindex);
this._folds[n].removeAllChildren();
}
},
onCuopaiEffectFun: function() {
var a = 0, o = cc.vv.gameNetMgr.seats;
for (var s in o) {
var e = o[s];
if (e && e.holds) {
a += e.holds.length;
var t = cc.vv.gameNetMgr.getLocalIndex(s);
this._folds[t].removeAllChildren();
}
}
this.cuopaiEffect.active = !0;
this.cuopaiEffect.removeAllChildren();
var h = this, c = cc.p(0, 0), l = [];
for (s = 0; s < a; s++) {
var i = {};
i.index = s;
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(.03 * s), cc.callFunc(function(e, t) {
var i = cc.instantiate(h.pk_prefab);
i.parent = h.cuopaiEffect;
var n = 0 + 30 * t.index - a / 2 * 30;
i.setPosition(n, 0);
i.poker_id = -1;
i.index = s;
h.setSpriteFrameByMJID(i, -1);
l.push(i);
i.runAction(cc.sequence(cc.delayTime(.03 * (a - t.index)), cc.callFunc(function(e) {
var t = e.index, i = a / 2 < t ? .02 * (t - a / 2) : .02 * t;
e.runAction(cc.sequence(cc.moveTo(i, c), cc.callFunc(function() {})));
}, i)));
}, null, i)));
}
var d = 0;
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(.06 * a), cc.callFunc(function() {
for (var e in o) {
var t = o[e];
if (t && t.holds) {
var i = t.holds, n = cc.vv.gameNetMgr.getLocalIndex(e), a = h._folds[n];
a.removeAllChildren();
for (var s = 0; s < i.length; s++) {
var c = {};
c.index = s;
c.node = a;
c.moveTo = h._moveToList[n];
c.tempNode = l[d];
d++;
var r = .1 * s + e * i.length * .1;
h.cuopaiEffect.runAction(cc.sequence(cc.delayTime(r), cc.callFunc(function(e, t) {
var i = cc.instantiate(h.pk_prefab);
i.parent = t.node;
var n = 30 * t.index;
i.setPosition(n, 0);
i.poker_id = -1;
h.setSpriteFrameByMJID(i, -1);
i.active = !1;
cc.vv.audioMgr.playSFX("resources/game/3g/sounds/fapai.mp3");
var a = {};
a.tempNode = t.tempNode;
t.tempNode.runAction(cc.sequence(cc.moveTo(.2, t.moveTo), cc.callFunc(function(e, t) {
t.tempNode.active = !1;
i.active = !0;
}, null, a)));
}, null, c)));
}
}
}
})));
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(.2 * a), cc.callFunc(function(e, t) {
h.cuopaiEffect.removeAllChildren();
h.cuopaiEffect.active = !1;
var i = cc.vv.gameNetMgr.seats;
for (var n in i) {
var a = i[n];
h.initMahjongs(a.seatindex);
}
0 != (64 & 1 * cc.vv.gameNetMgr.conf.rule_index) && (h._btnZhangNode.active = !0);
})));
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[i].showTimer(15);
}
}
},
onGameBeign: function() {
for (var e = 0 < arguments.length && void 0 !== arguments[0] && arguments[0], t = 0; t < this._playEfxs.length; ++t) this._playEfxs[t].node.active = !1;
this.hideChupai();
this.gameRoot.active = !0;
if (1 == e) {
var i = cc.vv.gameNetMgr.seats;
for (var t in i) {
var n = i[t];
this.initMahjongs(n.seatindex);
}
} else {
if (0 != (64 & 1 * cc.vv.gameNetMgr.conf.rule_index)) return;
if (3 == cc.vv.gameNetMgr.gamestate) return;
this.onCuopaiEffectFun();
}
},
initMahjongs: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, i = cc.vv.gameNetMgr.seats[e];
if (i) {
var n = i.holds;
if (null != n) {
for (var a = cc.vv.gameNetMgr.getLocalIndex(e), s = this._folds[a], c = 5, r = 0; r < s.children.length; ++r) {
if (s.children[r].back) {
c = r;
break;
}
}
s.removeAllChildren();
n.length;
for (var o = 0; o < n.length; o++) {
var h = n[o], l = cc.instantiate(this.pk_prefab);
l.parent = s;
var d = 0 + 30 * o;
l.setPosition(d, 0);
-1 == (l.poker_id = h) && (l.back = 1);
o < c ? this.setSpriteFrameByMJID(l, h) : -1 == h ? this.setSpriteFrameByMJID(l, h) : this.setSpriteFrameByMJID2(l, h, 1.5 * t);
}
}
}
},
getLocalIndexDec: function(e) {
return 1 == e || 2 == e ? -1 : 1;
},
sortHolds: function(e) {
e.holds && e.holds.sort(function(e, t) {
return t - e;
});
return e.holds;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
setSpriteFrameByMJID2: function(e, t, i) {
var n = e.getComponent("MyPoker");
n.setValueAndColorByID(-1);
var a = cc.sequence(cc.delayTime(i), cc.rotateTo(.5, 0, 90), cc.callFunc(function() {
e.rotationY = -90;
n.setValueAndColorByID(t);
}), cc.rotateTo(.5, 0, 0));
e.runAction(a);
},
setSpriteFrameByMJID3: function(e, t) {
var i = e.getComponent(cc.Sprite), n = null;
if (-1 != t) {
var a = cc.vv.poker_util.get_poker_value(t), s = cc.vv.poker_util.get_poker_color(t), c = "card_" + s + "_" + a;
n = s < 2 ? this.cuocard_atlas1.getSpriteFrame(c) : this.cuocard_atlas2.getSpriteFrame(c);
i.spriteFrame = n;
} else i.spriteFrame = this.cuocard_bg;
},
onBuQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this._btnZhangNode.active = !1;
},
onQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this._btnZhangNode.active = !1;
},
onCallBanker: function(e) {
var t = 0 == e.call ? "不抢" : "抢庄";
this.onShowLabelPlay(e.seat_index, t, 2);
},
onStartPlayEndPush: function(e) {
if (0 == e.success) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].name + "拒绝提前开始！";
cc.vv.alert.show("提示", t);
}
},
onBtnFenClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.nodeFen;
(e = JSON.parse(cc.vv.msgTemp.CS_Betting)).coin = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", e);
this._btnFenNode.active = !1;
this._btnFenNodeMC.active = !1;
},
onBettingPush: function(e) {
this.updateThrowChouma(e.seat_index, e.coin);
},
updateThrowChouma: function(e, t) {
var i = 1;
switch (t = t) {
case 5:
i = 1;
break;

case 20:
i = 5;
break;

case 40:
i = 4;
break;

case 60:
i = 3;
break;

case 80:
i = 2;
break;

case 100:
i = 6;
}
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this.coumaStartPositionList[n], s = cc.instantiate(this.couma_pk_prefab);
s.parent = this.coumaMC;
s.getComponent("ChoumaItem").setValue(i, t);
s.active = !0;
s.setScale(.1);
s.setPosition(a.x, a.y);
var c = a.x + this.coumaEndPositionList[n].x, r = a.y + this.coumaEndPositionList[n].y, o = cc.p(c, r);
s.runAction(cc.sequence(cc.show(), cc.moveTo(.3, o), cc.scaleTo(.3, .5)));
},
onShowAnim: function(e, t, n, i) {
var a = this, s = cc.vv.gameNetMgr.getLocalIndex(e);
(r = this._chupaiSprite[s]).getComponent(cc.Label).string = "";
var c = r.getChildByName("tx_3g");
if (!c) {
(c = cc.instantiate(this.sg_type_prefab)).parent = r;
c.name = "tx_3g";
}
if ("三公" == n || "三条" == n || "至尊九" == n) {
c.active = !0;
c.runAction(cc.sequence(cc.hide(), cc.delayTime(i), cc.show(), cc.callFunc(function() {
var e = c.getComponent(cc.Animation), t = 0;
if ("至尊九" == n) {
e.play("3g-zz9");
t = 12;
} else if ("三条" == n) {
e.play("3g-st");
t = 10;
} else if ("三公" == n) {
e.play("3g-sg");
t = 11;
}
var i = a.getAudioURLBy3G(t);
cc.vv.audioMgr.playSFX(i);
})));
} else {
var r;
(r = c.parent).runAction(cc.sequence(cc.hide(), cc.delayTime(i), cc.show(), cc.callFunc(function() {
var e = 0;
"0点" == (r.getComponent(cc.Label).string = n) ? e = 0 : "一点" == n ? e = 1 : "二点" == n ? e = 2 : "三点" == n ? e = 3 : "四点" == n ? e = 4 : "五点" == n ? e = 5 : "六点" == n ? e = 6 : "七点" == n ? e = 7 : "八点" == n ? e = 8 : "九点" == n && (e = 9);
var t = a.getAudioURLBy3G(e);
cc.vv.audioMgr.playSFX(t);
})));
}
},
getAudioURLBy3G: function(e) {
return "resources/game/3g/sounds/women/" + e + ".mp3";
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e);
this._chupaiSprite[n].getComponent(cc.Label).string = t;
console.log("·····························" + t);
var a = 0;
"抢庄" == t ? a = 14 : "不抢" == t && (a = 15);
var s = this.getAudioURLBy3G(a);
cc.vv.audioMgr.playSFX(s);
},
onCuoPaiClick: function() {
this._seatsList[0].showTimer(10);
var e = this;
this._btnCuoPai.active = !1;
this._cuoPaiNode.removeAllChildren();
var t = this._folds[0];
cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].holds;
t.active = !1;
for (var i in t.getChildren()) {
var n = t.getChildren()[i], a = cc.instantiate(this.pk_prefab);
a.setAnchorPoint(cc.p(0, 0));
a.setPosition(n.getPosition().sub(cc.p(40, 53)));
this.setSpriteFrameByMJID(a, n.poker_id);
a.parent = this._cuoPaiNode;
a.runAction(cc.sequence(cc.moveTo(.2, cc.p(-40, -53)), cc.moveBy(.3, cc.p(0, -200))));
}
this.scheduleOnce(function() {
e.cuoPai2();
}, .51);
this.scheduleOnce(function() {
e.onKaiPaiClick();
}, 10);
},
cuoPai2: function() {
this._cuoPaiNode.removeAllChildren();
var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].holds, t = this._folds[0];
for (var i in t.getChildren()) {
if (1 < i) break;
var n = cc.instantiate(this.cuo_pk_prefab);
n.setAnchorPoint(cc.p(0, 0));
n.setPosition(-100, -300);
n.pid = e[2 - i];
this.setSpriteFrameByMJID3(n, n.pid);
1 == i && this.setSpriteFrameByMJID3(n, -1);
n.parent = this._cuoPaiNode;
n.runAction(cc.moveBy(.2, cc.p(0, 100)));
this.addDragEventToNode(n);
if (1 == i) {
n.last = !0;
n.lastX = n.getPosition().x;
}
}
},
addDragEventToNode: function(i) {
var t = this;
i.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = e.touch.getDelta();
i.x += t.x / 2;
i.y += t.y / 2;
});
i.on(cc.Node.EventType.TOUCH_END, function(e) {
i.last && 30 < i.x - i.lastX && t.onKaiPaiClick();
});
},
onKaiPaiClick: function() {
if (0 < this._cuoPaiNode.getChildren().length) for (var e in this._cuoPaiNode.getChildren()) {
var t = this._cuoPaiNode.getChildren()[e], i = cc.sequence(cc.moveTo(.3, cc.p(-100, -300)), cc.delayTime(1), cc.moveTo(.3, cc.p(-80, -1e3)));
t.runAction(i);
}
this.unscheduleAllCallbacks();
var n = cc.vv.gameNetMgr.gameOverData.button, a = this;
this._btnCuoPai.active = !1;
this._folds[0].active = !0;
this.onShowCardType(n);
this.node.runAction(cc.sequence(cc.delayTime(2 + 2 * cc.vv.gameNetMgr.seats.length), cc.callFunc(function(e) {
a.onClearDnnDolds();
a.showGameOver();
})));
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
msgdefine: "msgdefine",
poker_util_3g: "poker_util_3g"
} ],
MJGame_DDZ: [ function(h, e, t) {
"use strict";
cc._RF.push(e, "5914arI4Y9Ppa2lgRoig9x/", "MJGame_DDZ");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
_myMJArr: [],
_chuPaiTempArr: [],
_chupaiSprite: [],
_folds: [],
_seatNodes: [],
_halfLen: 10,
_BDanMcList: [],
_BShuangMcList: [],
_showEff: !0,
_seatsList: [],
_lastIndex: -1,
bao1Map: null,
bao2Map: null
},
onLoad: function() {
if (cc.vv) {
this.bao1Map = {};
this.bao2Map = {};
} else cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initWanfaLabel();
this.initEventHandlers();
this.gameRoot.active = !0;
cc.vv.audioMgr.playBGM("resources/game/ddz/sounds/bgddz.mp3");
if (5 == cc.vv.gameNetMgr.gamestate) {
this.onGameBeign();
this.onCallTurnPush();
cc.vv.gameNetMgr.doDDZCallTurn();
} else 2 == cc.vv.gameNetMgr.gamestate && this.onGameBeign();
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/ddz/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
cc.vv.poker_util = h("poker_utils_DDZ");
var e = this.node.getChildByName("game"), t = e.getChildByName("myself");
this._myholds = t.getChildByName("holds");
var i = cc.director.getVisibleSize().width;
this._myholds.scaleX *= i / 1280;
this._myholds.scaleY *= i / 1280;
for (var n = [ "myself", "right", "up", "left" ], a = 0; a < n.length; ++a) {
var s = n[a], c = e.getChildByName(s);
c.active = !0;
this._chupaiSprite.push(c.getChildByName("ChuPai").getChildByName("lb_type"));
this._folds.push(c.getChildByName("folds"));
this._seatNodes.push(c.getChildByName("seat"));
this._seatsList.push(c.getChildByName("seat").getComponent("Seat"));
this._BDanMcList.push(c.getChildByName("Bdan"));
this._BShuangMcList.push(c.getChildByName("Bshuan"));
}
this.opration_DDZ = cc.find("Canvas/game/opration_DDZ");
this.opration_DDZ.active = !0;
this.ddz_fanpai_mc = cc.find("Canvas/game/DZholds");
this.ddz_prepare = this.opration_DDZ.getChildByName("ddz_prepare");
this.btn_pass = this.ddz_prepare.getChildByName("btn_pass");
this.nodeYaFen = this.ddz_prepare.getChildByName("nodeYaFen");
var r = this.nodeYaFen.getChildByName("yafen1");
this.yafen_1 = r.getChildByName("fen_1");
this.wuyong_fen_1 = r.getChildByName("wuyong_fen_1");
var o = this.nodeYaFen.getChildByName("yafen2");
this.yafen_2 = o.getChildByName("fen_2");
this.wuyong_fen_2 = o.getChildByName("wuyong_fen_2");
this.yafen_3 = this.nodeYaFen.getChildByName("fen_3");
this.yafen_1.active = !0;
this.yafen_2.active = !0;
this.wuyong_fen_1.active = !1;
this.wuyong_fen_2.active = !1;
cc.vv.utils.addClickEvent(this.yafen_1, this.node, "MJGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.yafen_2, this.node, "MJGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.yafen_3, this.node, "MJGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btn_pass, this.node, "MJGame_DDZ", "onOptionClicked");
this.ddz_doing = this.opration_DDZ.getChildByName("ddz_doing");
this.btnChuPai = this.ddz_doing.getChildByName("btn_chuPai");
this.btnGuo = this.ddz_doing.getChildByName("btn_guo");
this.btnTishi = this.ddz_doing.getChildByName("btn_tishi");
cc.vv.utils.addClickEvent(this.btnChuPai, this.node, "MJGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnGuo, this.node, "MJGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnTishi, this.node, "MJGame_DDZ", "onOptionClicked");
this.spring_1 = this.opration_DDZ.getChildByName("spring_1");
this.spring_2 = this.opration_DDZ.getChildByName("spring_2");
this.spring_1.active = !1;
this.spring_2.active = !1;
this.top_ddz = cc.find("Canvas/game/top_ddz");
this.hideClear();
},
showHeadTime: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 15;
if (this._lastIndex != e) {
this._lastIndex = e;
for (var i = 0; i < this._seatsList.length; ++i) this._seatsList[i].closeTimer();
if (-1 != e) {
var n = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[n].showTimer(t);
}
}
},
hideClear: function() {
this.hideChupai();
this.hideBDanMc();
this.closeAllOperation();
},
hideBDanMc: function() {
var e = 0;
for (e = 0; e < this._BDanMcList.length; ++e) this._BDanMcList[e].active = !1;
for (e = 0; e < this._BShuangMcList.length; ++e) this._BShuangMcList[e].active = !1;
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
closeAllOperation: function() {
this.ddz_doing.active = !1;
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
this.ddz_prepare.active = !1;
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var c = this;
this.node.on("game_holds", function(e) {
c.initMahjongs(e.detail.index);
});
this.node.on("game_begin", function(e) {
c.onGameBeign();
});
this.node.on("out_card", function(e) {
-1 != cc.vv.gameNetMgr.ddzRate && c.initWanfaLabel();
c.showOutCard(e.detail);
});
this.node.on("turn", function(e) {
for (var t = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.getLocalIndex(t), n = 0; n < c._folds.length; ++n) n == i && c._folds[n].removeAllChildren();
c.showHeadTime(t);
c.showOperation();
});
this.node.on("reset", function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
c.initMahjongs(n.seatindex);
}
});
this.node.on("game_over_show", function(e) {
c.showHeadTime(-1);
c.onGameOverShow(e);
c.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
c.onShowGameResult();
});
this.node.on("fresh_all_score", function(e) {
c.top_ddz.getComponent(cc.Label).string = "";
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getLocalIndex(i);
c._seatNodes[s].getComponent("Seat").setScore(n, a);
c._folds[s].removeAllChildren();
}
c.spring_1.active = !1;
c.spring_2.active = !1;
c._showEff = !0;
c.ddz_fanpai_mc.removeAllChildren();
});
this.node.on("call_turn_push", function(e) {
c.onCallTurnPush();
c.initWanfaLabel();
});
this.node.on("call_banker_push", function(e) {
e.detail;
c.onCallBankerPush(e.detail);
});
this.node.on("call_end_push", function(e) {
c.onCallEndPush(e.detail);
});
this.node.on("game_state", function(e) {
if (5 == cc.vv.gameNetMgr.gamestate) {
c.onCallTurnReadly();
c.onShowpaibei();
}
});
this.node.on("time_sync", function(e) {
c.on_time_sync(e.detail);
});
this.node.on("auto_push", function(e) {
c.on_auto_push(e.detail);
});
this.node.on("cancel_auto", function(e) {
c.on_cancel_auto(e.detail);
});
},
on_auto_push: function(e) {
var t = this;
e.user_id == cc.vv.userMgr.userId && 1 == e.is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
on_cancel_auto: function(e) {},
on_time_sync: function(e) {
var t = Math.floor((e.end - e.sys) / 1e3);
this._turn_time = t;
console.log("服务器倒计时", t);
var i = cc.vv.gameNetMgr.turn;
this.showHeadTime(i, t);
},
call_game_over: function() {
var t = this;
1 != cc.vv.gameNetMgr.gameOverData.force ? this.node && this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function(e) {
t.onGameOver();
}))) : this.onGameOver();
},
onGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/ddz/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/ddz/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowpaibei: function() {
this.ddz_fanpai_mc.removeAllChildren();
this.ddz_fanpai_mc.scaleX = .8;
this.ddz_fanpai_mc.scaleY = .8;
for (var e = 0; e < 3; e++) {
var t = cc.instantiate(this.pk_prefab);
t.parent = this.ddz_fanpai_mc;
var i = 0 + 95 * e;
t.setPosition(i, 10);
this.setSpriteFrameByMJID(t, -1);
console.log("牌值：-1");
}
},
onShowQiangHold: function() {
var e = cc.vv.gameNetMgr.ddz_qiangHolds;
this.ddz_fanpai_mc.removeAllChildren();
this.ddz_fanpai_mc.scaleX = .8;
this.ddz_fanpai_mc.scaleY = .8;
for (var t = 0; t < e.length; t++) {
var i = e[t], n = cc.instantiate(this.pk_prefab);
n.parent = this.ddz_fanpai_mc;
var a = 0 + 95 * t;
n.setPosition(a, 10);
this.setSpriteFrameByMJID(n, i);
console.log("牌值：" + i);
}
},
onCallEndPush: function(e) {
if (-1 != e.button) {
var t = e.cards;
cc.vv.gameNetMgr.ddz_qiangHolds = t;
this.onShowQiangHold();
this.initWanfaLabel();
var i = this;
this.ddz_fanpai_mc.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function(e) {
i.hideChupai();
})));
}
},
onCallTurnPush: function() {
this.initWanfaLabel();
this.closeAllOperation();
this.onShowpaibei();
cc.vv.gameNetMgr.isSelfTurn() ? this.ddz_prepare.active = !0 : this.ddz_prepare.active = !1;
var e = cc.vv.gameNetMgr.ddz_sync_data;
this.initWanfaLabel();
if (16384 & cc.vv.gameNetMgr.conf.rule_index) {
var t = cc.vv.gameNetMgr.getSelfData().holds;
if (1 == cc.vv.poker_util.ddz_isCall_three(t)) {
this.yafen_1.active = !1;
this.wuyong_fen_1.active = !0;
this.yafen_2.active = !1;
this.wuyong_fen_2.active = !0;
this.btn_pass.active = !1;
return;
}
}
this.btn_pass.active = !0;
if (0 == e.current_max_value) {
this.yafen_1.active = !0;
this.wuyong_fen_1.active = !1;
this.yafen_2.active = !0;
this.wuyong_fen_2.active = !1;
} else if (1 == e.current_max_value) {
this.yafen_1.active = !1;
this.wuyong_fen_1.active = !0;
this.yafen_2.active = !0;
this.wuyong_fen_2.active = !1;
} else if (2 == e.current_max_value) {
this.yafen_1.active = !1;
this.wuyong_fen_1.active = !0;
this.yafen_2.active = !1;
this.wuyong_fen_2.active = !0;
}
},
onCallBankerPush: function(e) {
var t = cc.vv.gameNetMgr.getSeatByID(e.user_id), i = -1;
1 == e.call ? i = 40 : 2 == e.call ? i = 41 : 3 == e.call ? i = 42 : 0 == e.call && (i = 43);
var n = this.getAudioURLByDDZ(i, t.sex);
cc.vv.audioMgr.playSFX(n);
var a = cc.vv.gameNetMgr.getLocalIndex(e.seat_index);
this._chupaiSprite[a].getComponent(cc.Label).string = 0 == e.call ? "不叫" : e.call + "分";
},
showOperation: function() {
if (2 == cc.vv.gameNetMgr.gamestate) if (cc.vv.gameNetMgr.isSelfTurn()) {
this.ddz_doing.active = !0;
this.btnChuPai.active = !0;
this.btnGuo.active = !0;
this.btnTishi.active = !1;
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.now_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
0 != t.length && null != t || (this.btnGuo.active = !1);
cc.vv.poker_util.ddz_check_must(i, e, t) ? this.btnTishi.active = !1 : this.btnTishi.active = !0;
} else this.closeAllOperation();
},
showOutCard: function(n) {
var a = cc.vv.gameNetMgr.getSeatByID(n.out_user), e = this._chupaiSprite[n.user_index], t = cc.vv.poker_util.ddz_check_out_type(n.out_cards_data), i = n.out_cards_data.length;
e.getComponent(cc.Label).string = cc.vv.poker_util.ddz_getCardTypeName(t);
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
e.runAction(s);
var c = this;
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
var e = cc.vv.gameNetMgr.seats[n.si].holds;
if (e && 2 == e.length && !c.bao2Map[n.user_index]) {
var t = 45, i = c.getAudioURLByDDZ(t, a.sex);
cc.vv.audioMgr.playSFX(i);
c.bao2Map[n.user_index] = !0;
}
if (e && 1 == e.length && !c.bao1Map[n.user_index]) {
t = 44, i = c.getAudioURLByDDZ(t, a.sex);
cc.vv.audioMgr.playSFX(i);
c.bao1Map[n.user_index] = !0;
}
})));
var r = -1, o = -1;
1 != t && 2 != t || (r = cc.vv.poker_util.get_poker_value(n.out_cards_data[0]));
switch (t) {
case 0:
o = Math.floor(3 * Math.random());
break;

case 1:
o = 52 == n.out_cards_data[0] ? 16 : 53 == n.out_cards_data[0] ? 17 : r;
break;

case 2:
o = r + 15;
break;

case 3:
this.anim.play("liandui");
o = 32;
break;

case 4:
this.anim.play("shunzi");
o = 33;
break;

case 5:
o = 34;
break;

case 6:
this.anim.play("feiji");
o = 35;
cc.vv.audioMgr.playSFX("resources/game/ddz/sounds/feiji.mp3");
break;

case 7:
if (2 == i) {
this.anim.play("wangzha");
o = 31;
break;
}
this.anim.play("zhadan");
o = 36;
cc.vv.audioMgr.playSFX("resources/game/ddz/sounds/boom.mp3");
break;

case 8:
o = 33;
break;

case 9:
o = 37;
break;

case 10:
o = 38;
break;

case 11:
o = 39;
}
var h = this.getAudioURLByDDZ(o, a.sex);
cc.vv.audioMgr.playSFX(h);
},
getAudioURLByDDZ: function(e, t) {
return 1 == t ? "resources/game/ddz/sounds/man/" + e + ".mp3" : "resources/game/ddz/sounds/women/" + e + ".mp3";
},
showFoldsCard: function(e, t) {
var i = this._folds[t];
i.removeAllChildren();
var n = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var a = 0; a < e.length; a++) {
var s = e[a], c = cc.instantiate(this.pk_prefab);
c.parent = i;
var r = 0 + 27 * a, o = 0, h = 0;
if (1 == t) {
h = 0;
var l = e.length >= n ? n : e.length;
r = n < a ? h + 27 * a - 27 * (n + 1) - 27 * l : 27 * a - 27 * l;
o = n < a ? -50 : 0;
} else if (3 == t) {
h = 0;
r = n < a ? h + 27 * a - 27 * (n + 1) : 27 * a;
o = n < a ? -50 : 0;
} else {
o = 0;
r = 27 * a - (h = e.length / 2 * 27);
}
c.setPosition(r, o);
this.setSpriteFrameByMJID(c, s);
}
},
initWanfaLabel: function() {
this.top_ddz.active = !0;
var e = null == cc.vv.gameNetMgr.ddzRate || cc.vv.gameNetMgr.ddzRate < 0 ? 1 : cc.vv.gameNetMgr.ddzRate;
console.log("--------ddzRate:" + e);
this.top_ddz.getComponent(cc.Label).string = e + "倍";
},
onCallTurnReadly: function() {
this.hideChupai();
this.gameRoot.active = !0;
},
onGameBeign: function() {
var t = this;
this.bao1Map = {};
this.bao2Map = {};
this.hideBDanMc();
this.onShowQiangHold();
this.closeAllOperation();
this.gameRoot.active = !0;
this.spring_1.active = !1;
this.spring_2.active = !1;
var e = cc.vv.gameNetMgr.seats;
for (var i in e) {
var n = e[i];
this.initMahjongs(n.seatindex);
n.userid == cc.vv.userMgr.userId && n.is_auto && 1 == n.is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
if (null != cc.vv.gameNetMgr.curaction) {
this.showAction(cc.vv.gameNetMgr.curaction);
cc.vv.gameNetMgr.curaction = null;
}
var a = cc.vv.gameNetMgr.turn, s = cc.vv.gameNetMgr.getLocalIndex(a);
if (0 == s) {
this._folds[s].removeAllChildren();
}
this.showOperation();
a = cc.vv.gameNetMgr.turn;
this.showHeadTime(a);
this.addGameTeXiao();
},
addGameTeXiao: function() {
if (!this.anim) {
var t = this;
cc.vv.UILoader.loadRes("game/ddz/prefabs/texiao1", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.gameRoot, function(e) {
t.anim = e.getComponent(cc.Animation);
});
});
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats, i = t[e];
if (i) {
var n = this.sortHolds(i);
if (null != n) {
this._halfLen = 4 == t.length ? 14 : 8;
var a = cc.vv.gameNetMgr.getLocalIndex(e);
this._BShuangMcList[a].active = !1;
if (2 == n.length) {
this._BShuangMcList[a].active = !0;
this._BShuangMcList[a].getChildByName("lb").getComponent(cc.Label).string = "报双";
}
this._BDanMcList[a].active = !1;
1 == n.length && (this._BDanMcList[a].active = !0);
if (0 == a) {
this._myMJArr = [];
var s = this._myholds, c = 35;
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
s.scaleX = 1.5;
s.scaleY = 1.5;
c = 25;
} else {
c = 17 < n.length ? 30 : 35;
s.scaleX = 2;
s.scaleY = 2;
}
s.removeAllChildren();
var r = n.length / 2;
n.sort(function(e, t) {
return t - e;
});
for (var o = 0; o < n.length; o++) {
var h = n[o], l = cc.instantiate(this.pk_prefab);
l.parent = s;
var d = 0 + o * c - r * c;
l.setPosition(d, 0);
l.poker_id = h;
l.showEff = !1;
this.setSpriteFrameByMJID(l, h);
l.isRightPoke = o == n.length - 1;
this.onMJtprefabEvent(l);
this._myMJArr.push(l);
}
this._chuPaiTempArr = [];
} else {
var u = i.holds.length;
this._seatNodes[a].getComponent("Seat").setPaiCount(u);
}
0 < i.folds.length && this.showFoldsCard(i.folds[i.folds.length - 1], a);
}
}
},
onMJtprefabEvent: function(o) {
this.selectNode = null;
this.isTouchMove = !1;
o.on("touchstart", function(e) {
o.parent == this._myholds && (this.selectNode = null);
}.bind(this));
o.on("touchmove", function(e) {
if (o.parent == this._myholds) {
this.isTouchMove = !0;
var t = this._myholds.convertToNodeSpace(e.touch.getLocation()), i = !1;
if (this.selectNode) {
var n = this.selectNode.width * this.selectNode.scaleX, a = this.selectNode.height * this.selectNode.scaleX;
console.log("rightpoke?", e.target.isRightPoke);
var s = cc.rect(this.selectNode.x - n / 2, this.selectNode.y - a / 2, n * (this.selectNode.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (i = !0);
}
if (0 == i) for (var c = 0; c < this._myholds.getChildren().length; c++) {
var r = this._myholds.getChildren()[c];
n = r.width * r.scaleX, a = r.height * r.scaleX, s = cc.rect(r.x - n / 2, r.y - a / 2, n * (r.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (this.selectNode = r).getComponent("MyPoker").setBlack(!0);
}
}
}.bind(this));
o.on("touchcancel", function(e) {
this.freshAllBlack();
this.selectNode = null;
this.isTouchMove = !1;
console.log("------------touchcancel:");
}.bind(this));
o.on("touchend", function(e) {
console.log("------------touchend:");
this.selectNode = null;
this.isTouchMove = !1;
this.freshAllBlack();
}.bind(this));
cc.vv.utils.addClickEvent(o, this.node, "MJGame_DDZ", "onMJClicked");
},
onMJClicked: function(e) {
if (!this.isTouchMove) {
var t = e.target;
this.updateMJPrefabNode(t);
}
},
updateMJPrefabNode: function(e) {
if (2 == cc.vv.gameNetMgr.gamestate) {
var t = e.getComponent("MyPoker");
if (1 != e.showEff) {
cc.vv.audioMgr.playBtnClick();
console.log(e.poker_id);
for (var i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e.poker_id == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
this._chuPaiTempArr.push(e.poker_id);
}
cc.vv.gameNetMgr.isSelfTurn();
}
}
},
freshAllBlack: function() {
for (var e in this._myholds.getChildren()) {
var t = this._myholds.getChildren()[e];
if (t.getComponent("MyPoker").isBlack()) {
this.updateMJPrefabNode(t);
t.getComponent("MyPoker").setBlack(!1);
}
}
},
onGameOverShow: function(e) {
this.hideBDanMc();
this.closeAllOperation();
for (var t = 0, i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = cc.vv.gameNetMgr.getLocalIndex(n), s = cc.vv.gameNetMgr.gameOverData.end_seats_data[n];
s && s.spring && (t = s.spring);
var c = i[n], r = this.sortHolds(c);
if (null != r) if (0 == a) {
(v = this._myholds).removeAllChildren();
var o = r.length / 2;
r.sort(function(e, t) {
return t - e;
});
for (var h = 0; h < r.length; h++) {
var l = r[h], d = cc.instantiate(this.pk_prefab);
d.parent = v;
var u = 0 + 25 * h - 25 * o;
d.setPosition(u, 50);
this.setSpriteFrameByMJID(d, l);
}
} else {
var v = this._folds[a];
0 < c.holds.length && this.showFoldsCard(c.holds, a);
}
}
this.spring_1.active = !1;
this.spring_2.active = !1;
var g = this;
if (1 == t) {
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
g.spring_1.active = !0;
v.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
g.anim.play("chuntian");
})));
}
} else if (2 == t && cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
g.spring_2.active = !0;
v.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
g.anim.play("fanchun");
})));
}
},
sortHolds: function(e) {
e.holds && e.holds.sort(function(e, t) {
return t - e;
});
return e.holds;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
getHoldsPokerByID: function(e) {
for (var t = null, i = 0; i < this._myMJArr.length; ++i) {
var n = this._myMJArr[i];
if (1 == n.active) {
var a = n.getComponent("MyPoker");
if (a.poker_id == e && 0 == a.isShowUp) {
t = a;
break;
}
}
}
return t;
},
onOptionClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
"btn_chuPai" == e.target.name ? this.chuPai() : "btn_guo" == e.target.name ? this.guo() : "btn_pass" == e.target.name ? this.isQiangdizhu(0) : "fen_1" == e.target.name ? this.isQiangdizhu(1) : "fen_2" == e.target.name ? this.isQiangdizhu(2) : "fen_3" == e.target.name ? this.isQiangdizhu(3) : "btn_tishi" == e.target.name && this.tishi();
},
isQiangdizhu: function(e) {
var t = JSON.parse(cc.vv.msgTemp.CS_CallLandLord);
t.call = e;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this.ddz_prepare.active = !1;
},
tishi: function() {
this._chuPaiTempArr = [];
for (var e = 0; e < this._myMJArr.length; ++e) {
var t = this._myMJArr[e];
if (1 == t.active) {
(n = t.getComponent("MyPoker")).setDown();
}
}
cc.vv.poker_util.ddz_check_out_tishi();
var i = cc.vv.gameNetMgr.tishi_card_data;
for (e = 0; e < i.length; ++e) {
var n;
(n = this.getHoldsPokerByID(i[e])).setUp();
this._chuPaiTempArr.push(n.poker_id);
}
},
guo: function() {
cc.vv.gameNetMgr.check_out_double_data = null;
var e = JSON.parse(cc.vv.msgTemp.CS_out_card);
e.card_type = 0;
e.cards_data = [];
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("out_card", e);
this.resetHandCard();
},
resetHandCard: function() {
for (var e = 0; e < this._myMJArr.length; e++) this._myMJArr[e].getComponent("MyPoker").setDown();
this._chuPaiTempArr = [];
},
chuPai: function() {
var e = JSON.parse(cc.vv.msgTemp.CS_out_card);
e.cards_data = this._chuPaiTempArr;
e.card_type = cc.vv.poker_util.ddz_check_out_type(this._chuPaiTempArr);
if (0 < e.card_type) {
cc.vv.gameNetMgr.check_out_double_data = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("out_card", e);
} else cc.vv.alert.show("提示", "出牌不符合规则！");
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_DDZ: "poker_utils_DDZ"
} ],
MJGame_DNN: [ function(i, e, t) {
"use strict";
cc._RF.push(e, "fb382Bq97BHXZQKU1nVv+1c", "MJGame_DNN");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
couma_pk_prefab: {
default: null,
type: cc.Prefab
},
nn_type_prefab: {
default: null,
type: cc.Prefab
},
gameOver_pk_prefab: {
default: null,
type: cc.Prefab
},
_options: null,
_chupaiSprite: [],
_effNodeList: [],
_folds: [],
_mjcount: null,
_gamecount: null,
_hupaiTips: [],
_playEfxs: [],
_seatNodes: [],
_btnFenList: [],
_btnBankerScoreList: [],
bsList: [],
_lbBtnList: [],
_seatsList: [],
_isGameOver: !1,
_turn_time: 0,
cuo_pk_prefab: {
default: null,
type: cc.Prefab
},
cuocard_atlas1: {
default: null,
type: cc.SpriteAtlas
},
cuocard_atlas2: {
default: null,
type: cc.SpriteAtlas
},
cuocard_bg: {
default: null,
type: cc.SpriteFrame
}
},
onLoad: function() {
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.msgTemp = i("msgdefine").msg_templete;
cc.vv.global_dnn = i("global_setting_DNN");
cc.vv.poker_util = i("poker_utils_DNN");
this.initView();
this.initEventHandlers();
var e = cc.vv.gameNetMgr.gamestate;
2 != e && 3 != e && 4 != e && 7 != e || this.onGameBeign(!0);
this.updateGameState();
this.initBankerStatus();
cc.vv.audioMgr.playBGM("resources/game/dnn/sounds/bgdnn.mp3");
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/dnn/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initBankerStatus: function() {
var e = cc.vv.gameNetMgr._banker_status_data;
if (null != e) {
if (this.isBaseDNN()) {
this._gongniu.active = !0;
this._banker_base.active = !1;
this._banker_status.active = !0;
this.updateBankerBase(cc.vv.gameNetMgr.button, e.current_score);
this.updateBaseScore("" + e.base_score);
}
}
},
isBaseDNN: function() {
var e = 1 * cc.vv.gameNetMgr.conf.type_index, t = !1;
0 == (8 & e) && 0 == (16 & e) || (t = !0);
return t;
},
updateGameState: function() {
this._btnFenNodeMC.active = !1;
this._bankerScore.active = !1;
var e = cc.vv.gameNetMgr.gamestate, t = cc.vv.gameNetMgr.isSys;
if (1 != cc.vv.gameNetMgr.getIsWatch()) if (1 == e) ; else if (2 == e) this.onGameBeign(); else if (3 == e) {
if (1 == t) {
this._btnZhangNode.active = !0;
return;
}
o = 64 & (r = 1 * cc.vv.gameNetMgr.conf.rule_index), h = 512 & r;
if (0 != (256 & r) || 0 != h) {
1 == cc.vv.gameNetMgr.numOfGames ? this.onCuopaiEffectFun() : this._btnZhangNode.active = !0;
return;
}
0 != o ? this.onCuopaiEffectFun() : this._btnZhangNode.active = !0;
} else if (4 == e) {
if (1 << 17 & cc.vv.gameNetMgr.conf.rule_index) return;
var i = cc.vv.gameNetMgr.seats;
for (var n in i) {
var a = i[n];
a && a.holds && a.holds.length;
}
var s = this, c = 1 == 1 < cc.vv.gameNetMgr.multiBanker.length ? 2 : .2;
this.node.runAction(cc.sequence(cc.delayTime(c), cc.callFunc(function(e) {
s.updateZhuangNext();
})));
} else 5 == e || 6 == e || (7 == e ? -1 != cc.vv.gameNetMgr._bankerChose_index && this.onBankerBaseStatus(cc.vv.gameNetMgr._bankerChose_index) : 8 == e && this.showLiangPai()); else {
7 == e && -1 != cc.vv.gameNetMgr._bankerChose_index && this.onBankerBaseStatus(cc.vv.gameNetMgr._bankerChose_index);
if (3 == e) {
if (1 == t) return;
var r, o = 64 & (r = 1 * cc.vv.gameNetMgr.conf.rule_index), h = 512 & r;
0 == (256 & r) && 0 == h || 1 == cc.vv.gameNetMgr.numOfGames && this.onCuopaiEffectFun();
0 != o && this.onCuopaiEffectFun();
}
}
},
showLiangPai: function() {
this._btnCuoPai.active = !0;
4096 & cc.vv.gameNetMgr.conf.rule_index && !cc.vv.gameNetMgr.getIsWatch() ? this._btnCuoPai.getChildByName("bt_cuopai").active = !0 : this._btnCuoPai.getChildByName("bt_cuopai").active = !1;
},
updateZhuangNext: function() {
if (this.isBaseDNN()) this._bankerScore.active = !0; else {
console.log("下注状态:", cc.vv.gameNetMgr.button, "seatIndex:", cc.vv.gameNetMgr.seatIndex);
this._btnFenNodeMC.active = !0;
if (cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].sex;
this._btnFenNode.active = !0;
var t = this.getAudioURLByDNN(16, e);
cc.vv.audioMgr.playSFX(t);
}
}
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("players58"), i = t.getChildByName("nodeNN");
i.active = !0;
this._btnCuoPai = i.getChildByName("btnCuoPai");
this._btnCuoPai.active = !1;
this._cuoPaiNode = e.getChildByName("cuoPaiNode");
this._btnZhangNode = i.getChildByName("btnZhangNode");
this._btnZhangNode.active = !1;
this.btn_bu = this._btnZhangNode.getChildByName("btn_bu");
this.btn_qiang = this._btnZhangNode.getChildByName("btn_qiang");
cc.vv.utils.addClickEvent(this.btn_bu, this.node, "MJGame_DNN", "onBuQiangClicked");
cc.vv.utils.addClickEvent(this.btn_qiang, this.node, "MJGame_DNN", "onQiangClicked");
this._btnFenNodeMC = i.getChildByName("btnFenNode");
this._btnFenNodeMC.active = !1;
this._btnFenNode = this._btnFenNodeMC.getChildByName("fenNode");
this._btnFenNode.active = !1;
this._btnNode = this._btnFenNode.getChildByName("node");
for (var n = [ 0, 2, 4, 6, 8, 10 ], a = 0; a < this._btnNode.children.length; ++a) {
var s = "btnFen" + (a + 1), c = (o = this._btnNode.getChildByName(s)).getChildByName("btn");
o.getChildByName("lb").getComponent(cc.Label).string = n[a];
c.nodeFen = n[a];
cc.vv.utils.addClickEvent(c, this.node, "MJGame_DNN", "onBtnFenClicked");
0 == a ? o.active = !1 : this._btnFenList.push(c);
}
this._gongniu = i.getChildByName("gongniu");
this._gongniu.active = !1;
this._banker_base = this._gongniu.getChildByName("banker_base");
this._banker_base.active = !1;
this._lb_show_1 = this._banker_base.getChildByName("lb_show_1");
this._lb_show_2 = this._banker_base.getChildByName("lb_show_2");
this._btn20 = this._banker_base.getChildByName("btn20");
this._btn40 = this._banker_base.getChildByName("btn40");
this._btn60 = this._banker_base.getChildByName("btn60");
cc.vv.utils.addClickEvent(this._btn20, this.node, "MJGame_DNN", "onLoadBankerBaseClicked");
cc.vv.utils.addClickEvent(this._btn40, this.node, "MJGame_DNN", "onLoadBankerBaseClicked");
cc.vv.utils.addClickEvent(this._btn60, this.node, "MJGame_DNN", "onLoadBankerBaseClicked");
this._bankerScore = this._gongniu.getChildByName("bankerScore");
this._bankerScore.active = !1;
this._bankerNodeScore = this._bankerScore.getChildByName("fenNode");
this._bankerNodeScore.active = !1;
this._bankerNode = this._bankerNodeScore.getChildByName("node");
for (var r = 0; r < this._bankerNode.children.length; ++r) {
s = "button" + (r + 1), c = (o = this._bankerNode.getChildByName(s)).getChildByName("btn");
var o, h = o.getChildByName("lb");
this._lbBtnList.push(h);
cc.vv.utils.addClickEvent(c, this.node, "MJGame_DNN", "onBankerScoreClicked");
this._btnBankerScoreList.push(c);
}
this.bsList[20] = [ 2, 4, 6, 8 ];
this.bsList[40] = [ 4, 8, 12, 16 ];
this.bsList[60] = [ 6, 12, 18, 24 ];
this._banker_status = cc.find("Canvas/game/players58/dnn_base");
this._banker_status.active = !1;
this.lb_gongpan = this._banker_status.getChildByName("lb_gongpan").getChildByName("lb_text");
this.lb_gongpan.getComponent(cc.Label).string = "20分";
this._lb_Name = this._banker_status.getChildByName("lb_Name").getChildByName("lb_text");
this._lb_score = this._banker_status.getChildByName("lb_score").getChildByName("lb_text");
this._lb_score.getComponent(cc.Label).string = "60分";
this._lb_game_num = this._banker_status.getChildByName("lb_gameNum").getChildByName("lb_text");
this._lb_game_num.getComponent(cc.Label).string = 1;
this._icon = this._banker_status.getChildByName("icon").getComponent("ImageLoader");
var l = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
t.active = !0;
this.coumaStartPositionList = [];
this.coumaEndPositionList = [];
this._moveToList = [];
for (var d = 0; d < l.length; ++d) {
var u = l[d], v = t.getChildByName(u);
this._chupaiSprite.push(v.getChildByName("ChuPai").getChildByName("lb_type"));
this._effNodeList.push(v.getChildByName("effNode"));
this._folds.push(v.getChildByName("folds"));
this._seatNodes.push(v.getChildByName("seat"));
this._seatsList.push(v.getChildByName("seat").getComponent("Seat"));
this.coumaStartPositionList.push(v.getPosition());
var g = v.getChildByName("coumaEff").getPosition();
this.coumaEndPositionList.push(g);
this._moveToList.push(v.getChildByName("folds").parent.getPosition().add(v.getChildByName("folds").getPosition()));
}
this.coumaMC = t.getChildByName("coumaMC");
this.coumaMC.active = !0;
this.cuopaiEffect = e.getChildByName("cuopaiEffect");
this.cuopaiEffect.active = !1;
var _ = e.getChildByName("ops");
this._options = _;
this.hideChupai();
},
showHeadTime: function(e) {
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].showTimer(e);
},
hideChupai: function() {
var e = 0;
for (e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
for (e = 0; e < this._effNodeList.length; ++e) this._effNodeList[e].active = !1;
this._isGameOver = !1;
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var d = this;
this.node.on("game_holds", function(e) {
1 == d._isGameOver && d.initMahjongs(e.detail.index);
});
this.node.on("game_begin", function(e) {
d.onGameBeign();
});
this.node.on("game_state", function(e) {
d.updateGameState();
});
this.node.on("call_banker", function(e) {
d.onCallBanker(e.detail);
});
this.node.on("start_play_end_push", function(e) {
d.onStartPlayEndPush(e.detail);
});
this.node.on("betting_push", function(e) {
d.onBettingPush(e.detail);
});
this.node.on("show_cards", function(e) {
d.onShowCardType(e.detail);
});
this.node.on("game_over", function(e) {
d._isGameOver = !0;
d._btnCuoPai.active = !1;
d.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function(e) {
d.onClearDnnDolds();
d.showGameOver();
})));
});
this.node.on("fore_game_over", function(e) {
d.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
d.onShowGameResult();
});
this.node.on("reset", function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = cc.vv.gameNetMgr.getLocalIndex(i), a = d._effNodeList[n].getChildByName("tx_nn");
a && a.removeFromParent();
}
});
this.node.on("fresh_all_score", function(e) {
if (cc.vv.gameNetMgr.gameOverData) {
for (var t = [], i = d.isBaseDNN(), n = cc.vv.gameNetMgr.seats, a = cc.vv.gameNetMgr.button, s = 0; s < n.length; ++s) {
var c = cc.vv.gameNetMgr.gameOverData.end_seats_data[s];
if (c) {
if (i && a == s) continue;
var r = c.total_score, o = c.end_score, h = cc.vv.gameNetMgr.getLocalIndex(s), l = d._seatNodes[h];
n[s].score = r;
l.getComponent("Seat").setScore(r, o);
0 < o && t.push(l);
}
}
cc.vv.gameNetMgr._banker_status_data && d.updateBankerBase(cc.vv.gameNetMgr.button, cc.vv.gameNetMgr._banker_status_data.current_score);
for (s = 1; s < d._seatsList.length; ++s) d._seatsList[s].showTimer(d._turn_time);
d.finishCoumaMC(t);
}
});
this.node.on("bankerBaseStatus", function(e) {
d.onBankerBaseStatus(e.detail.chose_index);
});
this.node.on("bankerBase", function(e) {
d._banker_base.active = !1;
d._banker_status.active = !0;
d._gongniu.active = !0;
d.updateButton(e.detail.banker_index, e.detail.base_score);
d.updateBankerBase(e.detail.banker_index, e.detail.base_score);
});
this.node.on("bankerStatus", function(e) {
d._gongniu.active = !0;
d._banker_status.active = !0;
d.updateBankerBase("无", e.detail.current_score);
d.updateBaseScore("" + e.detail.base_score);
});
this.node.on("updatebankerStatusScore", function(e) {});
this.node.on("off_banker_game_over", function(e) {
d.updateOffButton(e.detail.off_index, e.detail.base_score);
});
this.node.on("turn_time_push", function(e) {
d.updateTurnTime(e.detail);
});
this.node.on("turnTimerOver", function(e) {
d.onTurnTimerOver();
});
},
call_game_over: function() {
1 != cc.vv.gameNetMgr.gameOverData.force || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/dnn/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/dnn/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
updateButton: function(e, t) {
this._lb_score.getComponent(cc.Label).string;
var i = cc.vv.gameNetMgr.seats;
cc.vv.gameNetMgr.button = e;
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._seatNodes[n], s = i[e].score;
i[e].score = s - t;
a.getComponent("Seat").setScore(s - t);
},
updateOffButton: function(e, t) {
var i = cc.vv.gameNetMgr.seats, n = cc.vv.gameNetMgr.button, a = cc.vv.gameNetMgr.getLocalIndex(e), s = this._seatNodes[a], c = i[e].score;
i[n].score = c + Math.floor(t);
s.getComponent("Seat").setScore(c + Math.floor(t));
},
onCuopaiEffectFun: function() {
var n = 0, o = cc.vv.gameNetMgr.seats;
for (var a in o) {
var e = o[a];
if (e && e.holds) {
n += e.holds.length;
var t = cc.vv.gameNetMgr.getLocalIndex(a);
this._folds[t].removeAllChildren();
}
}
this.cuopaiEffect.active = !0;
this.cuopaiEffect.removeAllChildren();
var h = this, s = cc.p(0, 0), l = [];
for (a = 0; a < n; a++) {
var i = {};
i.index = a;
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(0), cc.callFunc(function(e, t) {
var i = cc.instantiate(h.pk_prefab);
i.parent = h.cuopaiEffect;
i.poker_id = -1;
i.index = a;
h.setSpriteFrameByMJID(i, -1);
l.push(i);
i.runAction(cc.sequence(cc.delayTime(.03 * (n - t.index)), cc.callFunc(function(e) {
var t = e.index, i = n / 2 < t ? .02 * (t - n / 2) : .02 * t;
e.runAction(cc.sequence(cc.moveTo(i, s), cc.callFunc(function() {})));
}, i)));
}, null, i)));
}
var d = 0;
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(.01 * n), cc.callFunc(function() {
for (var e in o) {
var t = o[e];
if (t && t.holds) {
var i = t.holds, n = cc.vv.gameNetMgr.getLocalIndex(e), a = h._folds[n];
a.removeAllChildren();
for (var s = 0; s < i.length; s++) {
var c = {};
c.index = s;
c.node = a;
c.moveTo = h._moveToList[n];
c.tempNode = l[d];
d++;
var r = .02 * s + e * i.length * .02;
h.cuopaiEffect.runAction(cc.sequence(cc.delayTime(r), cc.callFunc(function(e, t) {
var i = cc.instantiate(h.pk_prefab);
i.parent = t.node;
var n = 30 * t.index - 75;
i.setPosition(n, 0);
i.poker_id = -1;
h.setSpriteFrameByMJID(i, -1);
i.active = !1;
cc.vv.audioMgr.playSFX("resources/game/dnn/sounds/fapai.mp3");
var a = {};
a.tempNode = t.tempNode;
t.tempNode.runAction(cc.sequence(cc.moveTo(.05, t.moveTo), cc.callFunc(function(e, t) {
t.tempNode.active = !1;
i.active = !0;
}, null, a)));
}, null, c)));
}
}
}
})));
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(.05 * n), cc.callFunc(function(e, t) {
h.cuopaiEffect.removeAllChildren();
h.cuopaiEffect.active = !1;
var i = cc.vv.gameNetMgr.seats;
for (var n in i) {
var a = i[n];
h.initMahjongs(a.seatindex);
}
if (0 == cc.vv.gameNetMgr.getIsWatch()) {
var s = 1 * cc.vv.gameNetMgr.conf.rule_index, c = 64 & s, r = 256 & s, o = 512 & s;
1 == cc.vv.gameNetMgr.numOfGames && (0 == r && 0 == o || (h._btnZhangNode.active = !0));
0 != c && (h._btnZhangNode.active = !0);
}
})));
},
updateTurnTime: function(e) {
var t = Math.floor((e.end_time - e.system_time) / 1e3);
this._turn_time = t;
console.log("服务器倒计时", t);
this._isGameOver || this.showHeadTime(t);
},
onTurnTimerOver: function(e) {
console.log("----定时器结束");
this._btnZhangNode.active = !1;
this._btnFenNodeMC.active = !1;
this._btnFenNode.active = !1;
},
updateBaseScore: function(e) {
this.lb_gongpan.getComponent(cc.Label).string = e;
if (1 != cc.vv.gameNetMgr.getIsWatch()) {
var t = this.bsList[e];
if (cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
for (var i = 0; i < this._btnBankerScoreList.length; i++) {
this._btnBankerScoreList[i].score = t[i];
this._lbBtnList[i].getComponent(cc.Label).string = t[i];
}
console.log("-----显示公盘压分");
this._bankerNodeScore.active = !0;
}
}
},
onBankerBaseStatus: function(e) {
this._banker_base.active = !0;
this._banker_status.active = !1;
this._gongniu.active = !0;
this._btn20.active = !1;
this._btn40.active = !1;
this._btn60.active = !1;
this._lb_show_1.active = !1;
this._lb_show_2.active = !0;
if (cc.vv.gameNetMgr.seatIndex == e) {
this._lb_show_2.active = !1;
this._lb_show_1.active = !0;
this._btn20.active = !0;
this._btn40.active = !0;
this._btn60.active = !0;
}
},
updateBankerBase: function(e, t) {
"无" == e && (e = cc.vv.gameNetMgr.button);
var i = cc.vv.gameNetMgr.seats[e];
this._lb_Name.getComponent(cc.Label).string = "" + i.name;
this._icon.setUserID(i.userid);
this._lb_score.getComponent(cc.Label).string = "" + t;
this.updateBankerScore(t, e);
},
updateBankerScore: function(e, t) {
"无" == t && (t = cc.vv.gameNetMgr.button);
if (cc.vv.gameNetMgr.button != t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t);
this._seatNodes[i].getComponent("Seat").setScore(e);
}
},
onShowCardType: function(e) {
var t = cc.vv.gameNetMgr.getSeatByID(e.user_id);
if (t) {
t.seatindex == cc.vv.gameNetMgr.seatIndex && (this._btnCuoPai.active = !1);
var i = e.holds, n = e.card_type;
t.holds = i;
this.initMahjongs(t.seatindex);
cc.vv.poker_util.dnn_check_card_type(i);
var a = cc.vv.poker_util.dnnCardTypeSre(n.type, n.max_value);
console.log("----lblStr:" + a);
this.onShowAnim(t.seatindex, a);
}
},
onClearDnnDolds: function() {
this._btnFenNodeMC.active = !1;
this._btnFenNode.active = !1;
this._btnZhangNode.active = !1;
this._btnCuoPai.active = !1;
this._cuoPaiNode.removeAllChildren();
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t], n = cc.vv.gameNetMgr.getLocalIndex(i.seatindex);
this._folds[n].removeAllChildren();
}
for (t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
},
onGameBeign: function() {
0 < arguments.length && void 0 !== arguments[0] && arguments[0];
cc.vv.gameNetMgr.closeGameOver();
cc.vv.gameNetMgr.timeData && this.updateTurnTime(cc.vv.gameNetMgr.timeData);
for (var e = 0; e < this._playEfxs.length; ++e) this._playEfxs[e].node.active = !1;
this.hideChupai();
this.coumaMC.removeAllChildren();
this.gameRoot.active = !0;
var t = cc.vv.gameNetMgr.seats;
if (1 == cc.vv.gameNetMgr.isSys) for (var e in t) {
var i = t[e];
this.initMahjongs(i.seatindex);
} else {
if (1 == this.isBaseDNN()) {
if (7 == cc.vv.gameNetMgr.gamestate) return;
this.onCuopaiEffectFun();
return;
}
var n = 1 * cc.vv.gameNetMgr.conf.rule_index;
if (0 != (64 & n)) return;
if ((0 != (256 & n) || 0 != (512 & n)) && 1 == cc.vv.gameNetMgr.numOfGames) return;
if (3 == cc.vv.gameNetMgr.gamestate) return;
this.onCuopaiEffectFun();
}
},
initMahjongs: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, i = cc.vv.gameNetMgr.seats[e];
if (i) {
var n = i.holds;
if (null != n) {
for (var a = cc.vv.gameNetMgr.getLocalIndex(e), s = this._folds[a], c = 5, r = 0; r < s.children.length; ++r) {
if (s.children[r].back) {
c = r;
break;
}
}
s.removeAllChildren();
for (var o = n.length / 2, h = 0; h < n.length; h++) {
var l = n[h], d = cc.instantiate(this.pk_prefab);
d.parent = s;
var u = 0 + 30 * h - 30 * o;
d.setPosition(u, 0);
-1 == (d.poker_id = l) && (d.back = 1);
h < c ? this.setSpriteFrameByMJID(d, l) : -1 == l ? this.setSpriteFrameByMJID(d, l) : this.setSpriteFrameByMJID2(d, l, .5 * t);
}
}
}
},
getLocalIndexDec: function(e) {
return 1 == e || 2 == e ? -1 : 1;
},
sortHolds: function(e) {
e.holds && e.holds.sort(function(e, t) {
return t - e;
});
return e.holds;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
setSpriteFrameByMJID2: function(e, t, i) {
var n = e.getComponent("MyPoker");
n.setValueAndColorByID(-1);
var a = cc.sequence(cc.delayTime(i), cc.rotateTo(.1, 0, 90), cc.callFunc(function() {
e.rotationY = -90;
n.setValueAndColorByID(t);
}), cc.rotateTo(.5, 0, 0));
e.runAction(a);
},
setSpriteFrameByMJID3: function(e, t) {
var i = e.getComponent(cc.Sprite), n = null;
if (-1 != t) {
var a = cc.vv.poker_util.get_poker_value(t), s = cc.vv.poker_util.get_poker_color(t), c = "card_" + s + "_" + a;
n = s < 2 ? this.cuocard_atlas1.getSpriteFrame(c) : this.cuocard_atlas2.getSpriteFrame(c);
i.spriteFrame = n;
} else i.spriteFrame = this.cuocard_bg;
},
onLoadBankerBaseClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = 20;
"btn20" == e.target.name ? t = 20 : "btn40" == e.target.name ? t = 40 : "btn60" == e.target.name && (t = 60);
var i = JSON.parse(cc.vv.msgTemp.CS_BankerBase);
i.base_score = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("banker_base", i);
this._banker_base.active = !1;
},
onBuQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this._btnZhangNode.active = !1;
},
onQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this._btnZhangNode.active = !1;
},
onCallBanker: function(e) {
var t = 0 == e.call ? "不抢" : "抢庄";
this.onShowLabelPlay(e.seat_index, t, 2);
e.seat_index == cc.vv.gameNetMgr.seatIndex && (this._btnZhangNode.active = !1);
},
onStartPlayEndPush: function(e) {
if (0 == e.success) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].name + "拒绝提前开始！";
cc.vv.alert.show("提示", t);
}
},
onBtnFenClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.nodeFen;
(e = JSON.parse(cc.vv.msgTemp.CS_Betting)).coin = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", e);
this._btnFenNode.active = !1;
this._btnFenNodeMC.active = !1;
},
onBankerScoreClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.score, i = JSON.parse(cc.vv.msgTemp.CS_Betting);
i.coin = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", i);
this._bankerScore.active = !1;
this._bankerNodeScore.active = !1;
},
onBettingPush: function(e) {
this.updateThrowChouma(e.seat_index, e.coin);
},
updateThrowChouma: function(e, t) {
t = t;
var i = 1;
if (this.isBaseDNN()) {
var n = this.lb_gongpan.getComponent(cc.Label).string, a = this.bsList[n];
t == a[0] ? i = 1 : t == a[1] ? i = 2 : t == a[2] ? i = 5 : t == a[3] && (i = 6);
} else switch (t) {
case 5:
i = 1;
break;

case 20:
i = 5;
break;

case 40:
i = 4;
break;

case 60:
i = 3;
break;

case 80:
i = 2;
break;

case 100:
i = 6;
}
var s = cc.vv.gameNetMgr.getLocalIndex(e), c = this.coumaStartPositionList[s], r = cc.instantiate(this.couma_pk_prefab);
r.parent = this.coumaMC;
r.getComponent("ChoumaItem").setValue(i, t);
r.active = !0;
r.setScale(.1);
r.setPosition(c.x, c.y);
var o = c.x + this.coumaEndPositionList[s].x, h = c.y + this.coumaEndPositionList[s].y, l = cc.p(o, h);
r.runAction(cc.sequence(cc.show(), cc.moveTo(.3, l), cc.scaleTo(.3, .5)));
},
finishCoumaMC: function(e) {
var t = [];
t = t.concat(this.coumaMC.getChildren());
for (var i in e) {
var n = e[i].parent.getPosition();
for (var a in t) {
t[a].active = !1;
var s = cc.instantiate(t[a]);
s.active = !0;
s.parent = this.coumaMC;
var c = cc.sequence(cc.delayTime(.1 * a), cc.moveTo(.3, n));
s.runAction(c);
0 == i && cc.vv.audioMgr.playSFX("resources/game/dnn/sounds/couma.mp3");
}
}
},
onShowAnim: function(e, n, t) {
var a = this, i = cc.vv.gameNetMgr.getLocalIndex(e), s = cc.vv.gameNetMgr.seats[e].sex;
(r = this._effNodeList[i]).active = !0;
var c = r.getChildByName("tx_nn");
console.log("1205 种类：~~~~~~~~~~~~~~~~~~~~~" + n);
if (!c) {
(c = cc.instantiate(this.nn_type_prefab)).parent = r;
c.name = "tx_nn";
}
if ("金花牛" != n) {
c.getComponent(cc.Animation);
c.active = !0;
c.runAction(cc.sequence(cc.hide(), cc.delayTime(t), cc.show(), cc.callFunc(function() {
var e = c.getComponent(cc.Animation), t = 0;
if ("炸弹牛" == n) {
e.play("dnn-zd");
t = 11;
} else if ("五小牛" == n) {
e.play("dnn-wxn");
t = 13;
} else if ("牛牛" == n) {
e.play("dnn-nn");
t = 10;
} else if ("牛九" == n) {
e.play("dnn-n9");
t = 9;
} else if ("牛八" == n) {
e.play("dnn-n8");
t = 8;
} else if ("牛七" == n) {
e.play("dnn-n7");
t = 7;
} else if ("牛六" == n) {
e.play("dnn-n6");
t = 6;
} else if ("牛五" == n) {
e.play("dnn-n5");
t = 5;
} else if ("牛四" == n) {
e.play("dnn-n4");
t = 4;
} else if ("牛三" == n) {
e.play("dnn-n3");
t = 3;
} else if ("牛二" == n) {
e.play("dnn-n2");
t = 2;
} else if ("牛一" == n) {
e.play("dnn-n1");
t = 1;
} else if ("无牛" == n) {
e.play("dnn-meiniu");
t = 0;
}
var i = a.getAudioURLByDNN(t, s);
cc.vv.audioMgr.playSFX(i);
})));
} else {
var r;
(r = c.parent).runAction(cc.sequence(cc.hide(), cc.delayTime(t), cc.show(), cc.callFunc(function() {
if ("金花牛" == (r.getComponent(cc.Label).string = n)) var e = 12;
var t = a.getAudioURLByDNN(e, s);
cc.vv.audioMgr.playSFX(t);
})));
}
},
getAudioURLByDNN: function(e, t) {
return 1 == t ? "resources/game/dnn/sounds/man/" + e + ".mp3" : "resources/game/dnn/sounds/women/" + e + ".mp3";
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = cc.vv.gameNetMgr.seats[e].sex, s = 0;
"抢庄" == (this._chupaiSprite[n].getComponent(cc.Label).string = t) ? s = 14 : "不抢" == t && (s = 15);
var c = this.getAudioURLByDNN(s, a);
cc.vv.audioMgr.playSFX(c);
},
onCuoPaiClick: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("twine_cards");
var e = this;
this._btnCuoPai.getChildByName("bt_cuopai").active = !1;
this._cuoPaiNode.removeAllChildren();
var t = this._folds[0];
cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].holds;
t.active = !1;
for (var i in t.getChildren()) {
var n = t.getChildren()[i], a = cc.instantiate(this.pk_prefab);
a.setAnchorPoint(cc.p(0, 0));
a.setPosition(n.getPosition().sub(cc.p(40, 53)));
this.setSpriteFrameByMJID(a, n.poker_id);
a.parent = this._cuoPaiNode;
a.runAction(cc.sequence(cc.moveTo(.2, cc.p(-40, -53)), cc.moveBy(.3, cc.p(0, -200))));
}
this.scheduleOnce(function() {
e.cuoPai2();
}, .51);
this.scheduleOnce(function() {
e.cuoPaiOver();
}, 10);
},
cuoPai2: function() {
this._cuoPaiNode.removeAllChildren();
var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].holds, t = this._folds[0];
if (16384 & cc.vv.gameNetMgr.conf.rule_index) for (var i in t.getChildren()) {
if (1 < i) break;
(n = cc.instantiate(this.cuo_pk_prefab)).setAnchorPoint(cc.p(0, 0));
n.setPosition(-100, -300);
n.pid = e[4 - i];
this.setSpriteFrameByMJID3(n, n.pid);
1 == i && this.setSpriteFrameByMJID3(n, -1);
n.parent = this._cuoPaiNode;
n.runAction(cc.moveBy(.2, cc.p(0, 100)));
this.addDragEventToNode(n);
if (1 == i) {
n.last = !0;
n.lastX = n.getPosition().x;
n.lastY = n.getPosition().y;
}
} else for (var i in t.getChildren()) {
var n;
(n = cc.instantiate(this.cuo_pk_prefab)).setAnchorPoint(cc.p(0, 0));
n.setPosition(-100, -300);
n.pid = e[4 - i];
this.setSpriteFrameByMJID3(n, n.pid);
n.parent = this._cuoPaiNode;
var a = cc.sequence(cc.moveBy(.2, cc.p(0, 100)), cc.moveBy(.2, cc.p(4 * i, 0)));
n.runAction(a);
this.addDragEventToNode(n);
if (1 == i) {
n.last = !0;
n.lastX = n.getPosition().x;
n.lastY = n.getPosition().y;
}
}
},
addDragEventToNode: function(i) {
var t = this;
i.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = e.touch.getDelta();
i.x += t.x / 2;
i.y += t.y / 2;
});
i.on(cc.Node.EventType.TOUCH_END, function(e) {
console.log(i.y, i.lastY);
i.last && (30 < i.x - i.lastX || i.y < -250) && t.cuoPaiOver();
});
},
cuoPaiOver: function() {
if (0 < this._cuoPaiNode.childrenCount) if (16384 & cc.vv.gameNetMgr.conf.rule_index) for (var e in this._cuoPaiNode.getChildren()) {
var t = this._cuoPaiNode.getChildren()[e], i = cc.sequence(cc.moveTo(.3, cc.p(-40, -300)), cc.delayTime(1), cc.moveTo(.3, cc.p(-40, -1e3)));
t.runAction(i);
} else for (var e in this._cuoPaiNode.getChildren()) {
t = this._cuoPaiNode.getChildren()[e];
var n = cc.spawn(cc.moveTo(.3, cc.p(-40, -300)), cc.rotateTo(.3, -this._cuoPaiNode.childrenCount / 2 * 10 + 10 * e));
i = cc.sequence(n, cc.delayTime(1), cc.moveTo(.3, cc.p(-40, -1e3)));
t.runAction(i);
}
this.unscheduleAllCallbacks();
for (e = 0; e < this._seatsList.length; ++e) this._seatsList[e].closeTimer();
this.initMahjongs(cc.vv.gameNetMgr.seatIndex);
this._folds[0].active = !0;
},
onKaiPai: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("show_cards");
this._btnCuoPai.active = !1;
this._folds[0].active = !0;
},
update: function(e) {
this._turn_time -= e;
if (this._turn_time < 0) {
this._turn_time = 0;
cc.vv.gameNetMgr.updateGameOverTime("");
} else {
var t = Math.ceil(this._turn_time);
cc.vv.gameNetMgr.updateGameOverTime(t);
}
},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
global_setting_DNN: "global_setting_DNN",
msgdefine: "msgdefine",
poker_utils_DNN: "poker_utils_DNN"
} ],
MJGame_DZPK: [ function(require, module, exports) {
"use strict";
cc._RF.push(module, "8e074XAmPJOabjOhti9hJzQ", "MJGame_DZPK");
cc.Class({
extends: cc.Component,
properties: {
pk_prefab: {
default: null,
type: cc.Prefab
},
gameOver_pk_prefab: {
default: null,
type: cc.Prefab
},
turnCardPrefab: {
default: null,
type: cc.Prefab
},
winnerIconPrefab: {
default: null,
type: cc.Prefab
},
_chupaiSprite: [],
_folds: [],
_gamecount: null,
_hupaiTips: [],
_playEfxs: [],
_seatNodes: [],
_nodeXiazhuList: [],
_publicChipNodeList: [],
_xiazhu_lbList: [],
_isGameOver: !1,
_hadAllIn: !1,
_allInList: [],
_seatsList: [],
_opBtnList: [],
_poolsList: [],
_lastIndex: -1,
_maxPlayerNum: 8,
_pickScoreCount: 0,
_scaleRate: 0
},
onLoad: function() {
var t = this;
if (!cc.sys.isNative && cc.sys.isMobile) {
var e = this.node.getComponent(cc.Canvas);
e.fitHeight = !0;
e.fitWidth = !0;
}
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.poker_util = require("poker_utils_dzpk");
cc.vv.msgTemp_dzpk = require("msgdefine_dzpk").msg_templete;
this.initNode();
this.initView();
this.initWinnerAni();
this.initEventHandlers();
this.initBtnSureAddBetListener();
this.adaptScreen();
cc.vv.audioMgr.playBGM("resources/game/dzpk/sounds/bgdzpk.mp3");
} else cc.vv.UILoader.loadRes("game/dzpk/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
}); else cc.director.loadScene("loading");
},
start: function() {
var e = cc.vv.gameNetMgr.gamestate;
if (2 == e || 4 == e) {
this.isReconnecting = !0;
this.node.emit("isReconnecting");
this.onGameBeign();
this.dealActionOver = !0;
this.ontaxasState();
this.isReconnecting = !1;
}
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720;
this._scaleRate = e.width / t;
},
initNode: function() {
var e = this.node.getChildByName("game");
e.getChildByName("players58").getChildByName("nodeDZPK").active = !1;
e.getChildByName("players58").getChildByName("coumaMC").active = !1;
for (var t = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], i = 0; i < t.length; ++i) {
var n = t[i], a = e.getChildByName("players58").getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
a.getChildByName("nodeXiazhu").active = !1;
}
this.gameRoot = cc.find("Canvas/game");
this.gameRoot.active = !0;
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("players58");
this.nodeDZPK = t.getChildByName("nodeDZPK");
this.nodeDZPK.active = !0;
this.nodeMc = t.getChildByName("nodeMC");
this.nodeMc.active = !1;
this.pub_holds = this.nodeMc.getChildByName("holds");
this.initPublicChipNode();
this.btn_showCard = this.nodeDZPK.getChildByName("btn_showCard");
cc.vv.utils.addClickEvent(this.btn_showCard, this.node, "MJGame_DZPK", "onShowCard");
this.showCrd = this.nodeDZPK.getChildByName("showCrd");
cc.vv.utils.addClickEvent(this.showCrd, this.node, "MJGame_DZPK", "onShowCard");
this.showCrd.active = !1;
this.show_paixin = this.nodeDZPK.getChildByName("show_paixin").getComponent(cc.Label);
this.show_paixin.string = "";
this.nodeButton = this.nodeDZPK.getChildByName("nodeButton");
this.nodeButton.active = !1;
this.nodex = this.nodeButton.getChildByName("nodex");
this.btn_genzhu = this.nodex.getChildByName("btn_genzhu");
this.btn_genzhu.CType = "gen";
this.btn_qipai = this.nodex.getChildByName("btn_qipai");
this.btn_rangpai = this.nodex.getChildByName("btn_rangpai");
this.btn_jiazhu = this.nodex.getChildByName("btn_jiazhu");
this.btn_quang = this.nodex.getChildByName("btn_quang");
this._opBtnList.push(this.btn_genzhu);
this._opBtnList.push(this.btn_qipai);
this._opBtnList.push(this.btn_rangpai);
this._opBtnList.push(this.btn_jiazhu);
this._opBtnList.push(this.btn_quang);
this.node_JZ = this.nodeDZPK.getChildByName("node_JZ");
this.node_JZ.active = !1;
this.progress = this.node_JZ.getChildByName("dzpk_Slider");
this.btn_showJia = this.progress.getChildByName("Handle").getChildByName("btn_showJia");
this.btn_sureAddBet = this.progress.getChildByName("Handle");
this.icon_allIn = this.progress.getChildByName("icon_allIn");
this.btn_sureAddBetPos = this.btn_sureAddBet.getPosition();
this.icon_allInPos = this.icon_allIn.getPosition();
var i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
t.active = !0;
for (var n = 0; n < i.length; ++n) {
var a = i[n], s = t.getChildByName(a);
this._chupaiSprite.push(s.getChildByName("ChuPai").getChildByName("lb_type"));
var c = s.getChildByName("nodeXiazhu");
c.active = !1;
this._nodeXiazhuList.push(c);
this._xiazhu_lbList.push(c.getChildByName("lb_num"));
this._folds.push(s.getChildByName("folds"));
this._seatNodes.push(s.getChildByName("seat"));
this._seatsList.push(s.getChildByName("seat").getComponent("Seat"));
}
cc.vv.utils.addClickEvent(e, this.node, "MJGame_DZPK", "onCloseClicked");
this.hideChupai();
},
initPublicChipNode: function() {
for (var e = 0; e < this._maxPlayerNum; e++) {
var t = "nodeXiazhu" + (e + 1), i = this.node.getChildByName("game").getChildByName("players58").getChildByName(t);
this._publicChipNodeList.push(i);
i.active = !1;
}
},
initWinnerAni: function() {
this.winnerIconNode = cc.instantiate(this.winnerIconPrefab);
this.winnerIconNode.parent = this.gameRoot;
this.winnerIconNode.active = !1;
this.winnerIconNode.setScale(.75, .87);
var e = this.winnerIconNode.getChildByName("icon");
this.winnerAni = e.getComponent(cc.Animation);
},
onCloseClicked: function(e) {
if (this.isOpSlidering) this.isOpSlidering = !1; else if (this.node_JZ.active) {
this.showCrd.active = !1;
this.node_JZ.active = !1;
this.nodeButton.active = !0;
}
},
onShowCard: function() {
cc.vv.audioMgr.playBtnClick();
1 == this.showCrd.active ? this.showCrd.active = !1 : this.showCrd.active = !0;
},
hideChupai: function() {
for (var e = 0; e < this._maxPlayerNum; e++) {
this._chupaiSprite[e].getComponent(cc.Label).string = "";
this._nodeXiazhuList[e].active = !1;
this._publicChipNodeList[e].active = !1;
this._publicChipNodeList[e].getChildByName("lb_num").getComponent(cc.Label).string = -1;
}
this.show_paixin.string = "";
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[i].showTimer(15);
}
}
},
initEventHandlers: function() {
var c = this;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.node.on("game_begin", function(e) {
c.onGameBeign();
});
this.node.on("start_play_end_push", function(e) {
c.onStartPlayEndPush(e.detail);
});
this.node.on("betting_push", function(e) {
c.onBettingPush(e.detail);
});
this.node.on("clear_dnn_holds", function(e) {
if (!e.detail.force) {
c._isGameOver = !0;
c.nodeButton.active = !1;
c.setIsLookerByTotalScore(e);
c.showGamePools();
c.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function(e) {
c.onShowCardType(0);
})));
c.delayTimeShowPlayersName();
}
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i];
if (n) {
var a = n.total_score, s = (n.end_score, cc.vv.gameNetMgr.getLocalIndex(i));
c._seatNodes[s].getComponent("Seat").setDZPKScore(a);
}
}
});
this.node.on("taxas_state", function(e) {
c.ontaxasState();
});
this.node.on("giveup", function(e) {
c.onShowLabelPlay(e.detail, "弃牌", -1);
var t = cc.vv.gameNetMgr.seats[e.detail].sex, i = c.getAudioURLBydzpk("giveUp", t);
cc.vv.audioMgr.playSFX(i);
});
this.node.on("update_siler", function(e) {
c.onUpdateDZPK_siler(e);
});
this.node.on("allocation_score", function(e) {
var t = e.detail;
c.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
c.onMsgAllocationScore(t);
})));
});
this.node.on("game_over_show", function(e) {
var t = this;
cc.vv.UILoader.loadRes("game/dzpk/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}.bind(this));
this.node.on("onShowGameResult", function(e) {
var t = this;
cc.vv.UILoader.loadRes("game/dzpk/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}.bind(this));
},
onUpdateDZPK_siler: function(e) {
var t = this.btn_jiazhu.addCoin, i = this._seatNodes[0].getComponent("Seat").getScore() - t, n = 10 * Math.floor(Math.floor(t + i * e) / 10);
this.btn_showJia.getChildByName("lab").getComponent(cc.Label).string = n;
this.btn_showJia.addCoin = n;
this.btn_jiazhu.type = "comp";
1 == e && (this.btn_showJia.getChildByName("lab").getComponent(cc.Label).string = "ALL IN");
},
ontaxasState: function() {
var e = cc.vv.gameNetMgr._dzpk_taxas_state_data;
if (e) {
var t = [];
if (cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex]) for (var i = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].holds, n = 0; n < i.length; n++) t.push(i[n]);
if (-1 != cc.vv.gameNetMgr.seatIndex) {
var a = cc.vv.poker_util.dzpk_checkCard(t).type;
this.show_paixin.string = cc.vv.poker_util.dzpkCardTypeSre(a);
}
this._gameTotalBet = 0;
var s = e.current_turn;
this.showHeadTime(s);
this.nodeButton.active = !1;
this.isShowBtnsNode = !1;
if (s == cc.vv.gameNetMgr.seatIndex) {
this.isShowBtnsNode = !0;
if (this.dealActionOver) {
this.nodeButton.active = !0;
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/my_turn.mp3");
for (var c in this._opBtnList) this._opBtnList[c].getComponent("TimeButton").showTimer(15);
}
this.max_coin = e.max_coin;
this.min_coin = e.min_coin;
this.btn_rangpai.active = !1;
this.btn_quang.active = !0;
this.btn_jiazhu.active = !0;
var r = this.max_coin - e.user_state[s].total_bet_score;
this.btn_genzhu.getChildByName("btn_lable").getComponent(cc.Label).string = r;
this.btn_genzhu.CType = "gen";
0 == r && (this.btn_genzhu.active = !1);
var o = 0 == this.max_coin ? 2 * this.min_coin : 2 * this.max_coin - e.user_state[s].total_bet_score;
0 == e.user_state[s].current_bet_score && (this.lastTurnBetScore = e.user_state[s].total_bet_score);
0 < this.lastTurnBetScore && (o = this.max_coin == this.lastTurnBetScore ? 20 : 2 * (this.max_coin - this.lastTurnBetScore) - e.user_state[s].current_bet_score);
var h = cc.vv.gameNetMgr.seats[s].score - e.user_state[s].total_bet_score;
console.log("log-------------------jia_coin   max_coin  lastTurnBetScore  current_bet_score=:", o, this.max_coin, this.lastTurnBetScore, e.user_state[s].current_bet_score);
console.log("log-------------------seatTotalS  score  total_bet_score=:", h, cc.vv.gameNetMgr.seats[s].score, e.user_state[s].total_bet_score);
if (h < o) {
o = h;
this.btn_jiazhu.active = !1;
this.btn_quang.active = !0;
} else {
this.btn_jiazhu.active = !0;
this.btn_quang.active = !1;
}
this.btn_showJia.getChildByName("lab").getComponent(cc.Label).string = o;
this.btn_showJia.addCoin = o;
this.btn_showJia.addCoin = o;
this.btn_jiazhu.addCoin = o;
this.btn_jiazhu.type = "show";
}
var l = e.user_state;
this.user_state = l;
this.showPublicCards(e.public_card);
this.showGamePools(e.current_bet_turn);
this.current_bet_turn = e.current_bet_turn;
for (var d = 0; d < l.length; d++) {
var u = l[d], v = u.total_bet_score, g = u.seat_index;
this.updatePlayerBet(u);
1 == u.empty && this.onShowLabelPlay(g, "旁观中", -1);
if (1 != u.all_in) if (1 != u.die) {
if (cc.vv.gameNetMgr.seatIndex == g) {
if (v >= this.max_coin) {
this.btn_rangpai.active = !0;
this.btn_genzhu.active = !1;
} else {
this.btn_rangpai.active = !1;
this.btn_genzhu.active = !0;
}
1 == u.empty && (this.nodeButton.active = !1);
if (cc.vv.gameNetMgr.seats[g].score - e.user_state[g].total_bet_score <= this.max_coin - v) {
this.btn_quang.active = !1;
this.btn_jiazhu.active = !1;
this.btn_genzhu.getChildByName("btn_lable").getComponent(cc.Label).string = "ALL IN";
this.btn_genzhu.CType = "allin";
this.btn_genzhu.active = !0;
}
}
} else {
this.onShowLabelPlay(g, "弃牌", -1);
cc.vv.gameNetMgr.seatIndex == g && (this.nodeButton.active = !1);
this.showGiveUP(g);
} else {
this.onShowLabelPlay(g, "ALL IN", -1);
cc.vv.gameNetMgr.seatIndex == g && (this.nodeButton.active = !1);
}
}
}
},
showPublicCards: function(e) {
if (this.pub_holds.getChildren().length <= 0) this.initPubilcCards(e); else for (var t = this.getNeedTurnCardList(e), i = 0, n = this, a = 0; a < t.length; a++) this.pub_holds.runAction(cc.sequence(cc.delayTime(.5 * a), cc.callFunc(function() {
n.pubilcCarsList[t[i]].getChildByName("poker").getComponent("turnCard").turn(e[t[i]]);
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/deal_card1.mp3");
i++;
})));
},
getNeedTurnCardList: function(e) {
for (var t = [], i = 0; i < this.pubilcCarsList.length; i++) {
var n = this.pubilcCarsList[i].getChildByName("poker");
if (n.poker_id < 0 && 0 <= e[i]) {
t.push(i);
n.poker_id = e[i];
}
}
return t;
},
initPubilcCards: function(e) {
this.pubilcCarsList = [];
this.pub_holds.removeAllChildren();
for (var t = e.length / 2, i = 0; i < e.length; i++) {
var n = e[i], a = cc.instantiate(this.turnCardPrefab), s = a.getChildByName("poker");
s.getComponent("turnCard").setValue(n);
s.poker_id = n;
a.parent = this.pub_holds;
var c = 85 * i - 85 * t + 10;
a.setPosition(c, 0);
this.pubilcCarsList.push(a);
}
},
showGiveUP: function(e) {
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/fold.mp3");
var t = cc.vv.gameNetMgr.getLocalIndex(e);
if (this.isReconnecting) this._folds[t].removeAllChildren(); else {
var i = this._folds[t].getChildren();
if (!(i.length < 2)) {
for (var n = {
x: (i[0].x + i[1].x) / 2,
y: i[0].y
}, a = "p" + t, s = this.node.getChildByName("game").getChildByName("players58").getChildByName(a), c = {
x: -(s.x + .8 * this._folds[t].x) * this._scaleRate,
y: -(s.y + .8 * this._folds[t].y) * this._scaleRate
}, r = 0; r < 2; r++) i[r].runAction(cc.sequence(cc.moveTo(.2, cc.p(n.x, n.y)), cc.spawn(cc.rotateTo(.3, 45), cc.scaleBy(.3, .25), cc.moveTo(.3, cc.p(c.x, c.y)))));
this._folds[t].runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
i[0].destroy();
i[1].destroy();
})));
}
}
},
onShowCardType: function(e) {
this.showHeadTime(-1);
for (var t = cc.vv.gameNetMgr.gameOverData, i = cc.vv.gameNetMgr.seats, n = -1, a = t.end_seats_data.length, s = a - 1 < e + 1 ? 0 : e + 1, c = s; c < a + s; c++) {
var r = a - 1 < c ? c - a : c, o = t.end_seats_data[r], h = i[r];
if (1 != o.give_up) {
o.card_type && o.card_type.type && (n = o.card_type.type);
var l = this.judgeOnlyOne(), d = h.holds;
if (d && 0 < d.length && !l) {
if (0 < cc.vv.gameNetMgr.getLocalIndex(h.seatindex)) {
this.initPlayerCards(d, h.seatindex, !0);
var u = n;
this.onShowCardTypeLabel(h.seatindex, u, 1.5);
}
}
0;
}
}
this.node.runAction(cc.sequence(cc.delayTime(6 + 2 * this._pickScoreCount), cc.callFunc(function(e) {
cc.vv.turnTimer && cc.vv.turnTimer.closeTimer();
this.onClearDZPKDolds();
this.hideWinnerAni();
}.bind(this))));
},
onClearDZPKDolds: function() {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t], n = cc.vv.gameNetMgr.getLocalIndex(i.seatindex);
this._folds[n].removeAllChildren();
}
this.hideChupai();
this.pub_holds.removeAllChildren();
this.nodeMc.active = !1;
},
onGameBeign: function() {
for (var e = 0; e < this._playEfxs.length; ++e) this._playEfxs[e].node.active = !1;
this.hideChupai();
this.dealActionOver = !1;
this.isShowBtnsNode = !1;
this._hadAllIn = !1;
this.nodeMc.active = !0;
this.gameRoot.active = !0;
this._isGameOver = !1;
this._allInList = [];
this._pickScoreCount = 0;
this.lastTurnBetScore = 0;
this.isReconnecting ? this.showPlayersCards() : this.dealCards();
},
dealCards: function() {
this.getNotEmptyUsers();
for (var e = this._seatsTemp, t = 2 * e.length, i = 0, n = 0, a = 0, s = 0; s < t; s++) this.node.runAction(cc.sequence(cc.delayTime(.2 * s), cc.callFunc(function() {
n = Math.floor(i / e.length);
a = i % e.length;
this.dealOneCard(n, a);
i++;
}.bind(this))));
this.node.runAction(cc.sequence(cc.delayTime(.2 * t + .5), cc.callFunc(function() {
this.showSelfCards();
if (this.isShowBtnsNode) {
this.nodeButton.active = !0;
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/my_turn.mp3");
for (var e in this._opBtnList) this._opBtnList[e].getComponent("TimeButton").showTimer(15);
}
this.dealActionOver = !0;
}.bind(this))));
},
getNotEmptyUsers: function() {
this._seatsTemp = [];
for (var e = 0; e < cc.vv.gameNetMgr.seats.length; e++) 0 < cc.vv.gameNetMgr.seats[e].holds.length && this._seatsTemp.push(cc.vv.gameNetMgr.seats[e]);
},
dealOneCard: function(e, t) {
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/turn_card.mp3");
var i = this._seatsTemp, n = cc.vv.gameNetMgr.getLocalIndex(i[t].seatindex), a = i[t].holds.length / 2, s = i[t].holds[e], c = cc.instantiate(this.turnCardPrefab), r = c.getChildByName("poker");
r.getComponent("turnCard").setValue(-1);
r.poker_id = s;
this._folds[n].addChild(c);
var o = 30 * e - 30 * a + 10;
c.setPosition(o, 0);
c.setRotation(-90);
var h = 0 < e ? 100 : 80, l = "p" + n, d = this.node.getChildByName("game").getChildByName("players58").getChildByName(l), u = {
x: -(d.x + .8 * this._folds[n].x) * this._scaleRate,
y: -(d.y + .8 * this._folds[n].y) * this._scaleRate
};
if (!this.isReconnecting) {
c.setPosition(u.x, u.y);
c.runAction(cc.spawn(cc.moveTo(.2, cc.p(o, 0)), cc.rotateBy(.2, h)));
}
},
showSelfCards: function() {
var e = this._folds[0].getChildren();
if (!(e.length < 2)) {
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/light_card2.mp3");
for (var t in e) {
var i = e[t].getChildByName("poker");
i.getComponent("turnCard").setValue(i.poker_id);
}
e[1].x += 25;
e[0].setRotation(-10);
e[1].setRotation(10);
}
},
showPlayersCards: function() {
cc.vv.gameNetMgr.seats;
for (var e = 0; e < cc.vv.gameNetMgr.seats.length; e++) {
var t = cc.vv.gameNetMgr.seats[e];
this.initPlayerCards(t.holds, t.seatindex, !1);
}
this.showSelfCards();
},
initPlayerCards: function(e, t) {
for (var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = cc.vv.gameNetMgr.getLocalIndex(t), a = this._folds[n], s = e.length / 2, c = 0; c < e.length; c++) {
var r = cc.instantiate(this.turnCardPrefab), o = r.getChildByName("poker");
o.poker_id = e[c];
a.addChild(r);
var h = 30 * c - 30 * s + 10, l = 0 < c ? 10 : -10;
r.setPosition(h, 0);
r.setRotation(l);
if (i) {
o.getComponent("turnCard").setValue(-1);
o.getComponent("turnCard").turn(e[c]);
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/light_card2.mp3");
} else o.getComponent("turnCard").setValue(e[c]);
}
},
showPlayersName: function() {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this._seatNodes[i].getComponent("Seat").showName();
this._chupaiSprite[i].getComponent(cc.Label).string = "";
}
},
delayTimeShowPlayersName: function() {
this.isReconnecting && this._folds[localIndex];
this.node.runAction(cc.sequence(cc.delayTime(6.5), cc.callFunc(function() {
this.showPlayersName();
}.bind(this))));
},
judgeOnlyOne: function() {
for (var e = cc.vv.gameNetMgr.gameOverData.end_seats_data, t = 0, i = 0; i < e.length; i++) !e[i].give_up && 0 < this.user_state[i].total_bet_score && t++;
return !(1 < t);
},
showGamePools: function(e) {
if (!this.isReconnecting && 0 != e && e != this.current_bet_turn) {
this.hidePlayersChipsNode();
this.minScore = 0;
this._poolsList = [];
this.getPools();
for (var t = 0; t < this._poolsList.length; t++) this.showPool(t, this._poolsList[t]);
}
},
showPool: function showPool(publicChipIndex, score) {
this._publicChipNodeList[publicChipIndex].active = !0;
var currentScore = eval(this._publicChipNodeList[publicChipIndex].getChildByName("lb_num").getComponent(cc.Label).string);
if (currentScore != score) {
this._publicChipNodeList[publicChipIndex].getChildByName("lb_num").getComponent(cc.Label).string = score;
var chip = this._publicChipNodeList[publicChipIndex].getChildByName("chip");
chip.getComponent("dropChip").dropBet(score, !this.isReconnecting);
this.isReconnecting || cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/bet_allin.mp3");
}
},
getAllPlayerAllInBet: function() {
for (var e = 0, t = 0; t < this._allInList.length; t++) e += this._allInList[t].score;
return e;
},
updatePlayerBet: function updatePlayerBet(useData) {
var sIndex = useData.seat_index, localIndex = cc.vv.gameNetMgr.getLocalIndex(sIndex), current_bet_score = useData.current_bet_score;
if (!(current_bet_score <= 0)) {
var total_bet_score = useData.total_bet_score;
this._gameTotalBet = this._gameTotalBet + total_bet_score;
var lastScore = eval(this._xiazhu_lbList[localIndex].getComponent(cc.Label).string);
this._xiazhu_lbList[localIndex].getComponent(cc.Label).string = current_bet_score;
if (lastScore != current_bet_score) {
this._nodeXiazhuList[localIndex].getChildByName("chipFrame").getChildByName("chip").getComponent("dropChip").dropBet(current_bet_score, !this.isReconnecting);
this._nodeXiazhuList[localIndex].active = !0;
}
}
},
hidePlayersChipsNode: function() {
for (var e = 0; e < this._nodeXiazhuList.length; e++) this._nodeXiazhuList[e].active = !1;
},
getPools: function() {
this._poolsList = [];
var e = this.getUsersCanWinScoreList();
this.judgeHadSmallPools() ? this.calculatePools(e) : this._poolsList.push(e[0]);
},
judgeHadSmallPools: function() {
for (var e = this.getUsersCanWinScoreList(), t = e[0], i = 1; i < e.length; i++) if (t != e[i]) return !0;
return !1;
},
calculatePools: function(e) {
for (var t = 0; t < e.length - 1; t++) for (var i = t; i < e.length; i++) if (e[t] > e[i]) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
this._poolsList = [];
this._poolsList.push(e[0]);
for (t = 0; t < e.length - 1; t++) {
var a = e[t + 1] - e[t];
0 < a && this._poolsList.push(a);
}
},
getUsersCanWinScoreList: function() {
for (var e = [], t = 0; t < this.user_state.length; t++) !this.user_state[t].die && 0 < this.user_state[t].total_bet_score && e.push(this.user_state[t].can_win_score);
return e;
},
getPlayersCurrentScore: function() {
this.currentScoreList = [];
for (var e = this.giveUpScore = 0; e < this.user_state.length; e++) if (this.user_state[e].die) this.giveUpScore += this.user_state[e].current_bet_score; else {
this.user_state[e].current_bet_score -= this.minScore;
this.currentScoreList.push(this.user_state[e].current_bet_score);
}
},
getMinScoreData: function() {
for (var e = {
minScore: -1,
minIndex: -1
}, t = 0; t < this.currentScoreList.length; t++) if (0 < this.currentScoreList[t]) {
e.minScore = this.currentScoreList[t];
e.minIndex = t;
break;
}
for (t = e.minIndex + 1; t < this.currentScoreList.length; t++) if (e.minScore > this.currentScoreList[t] && 0 < this.currentScoreList[t]) {
e.minScore = this.currentScoreList[t];
e.minIndex = t;
}
return e;
},
getBetPlayersCount: function() {
for (var e = 0, t = 0; t < this.currentScoreList.length; t++) 0 < this.currentScoreList[t] && e++;
return e;
},
chipflyToPlayer: function(e, t, i) {
var n = "p" + t, a = this.node.getChildByName("game").getChildByName("players58").getChildByName(n), s = this._publicChipNodeList[e].getChildByName("chip"), c = {
x: 0,
y: 0
}, r = 0;
c.x = a.x - (this._publicChipNodeList[e].x + s.x);
c.y = a.y - (this._publicChipNodeList[e].y + s.y);
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
this._publicChipNodeList[e].getChildByName("chip").getComponent("dropChip").flyToPlayer(c, i);
r = this._publicChipNodeList[e].getChildByName("chip").getComponent("dropChip").getFlyChipsCount();
}.bind(this)), cc.delayTime(1.5 + .03 * r), cc.callFunc(function() {
var e = a.getChildByName("seat").getComponent("Seat").getScore();
this._seatsList[t].setDZPKScore(e + i);
}.bind(this))));
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onStartPlayEndPush: function(e) {
if (0 == e.success) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].name + "拒绝提前开始！";
cc.vv.alert.show("提示", t);
}
},
onShowCardTypeLabel: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = (cc.vv.gameNetMgr.seats[e].sex, this._chupaiSprite[n]);
a.getComponent(cc.Label).string = "";
t && a.runAction(cc.sequence(cc.hide(), cc.delayTime(i), cc.show(), cc.callFunc(function() {
10 == t ? this.onShowLabelPlay(e, "皇家同花顺", 2) : 9 == t ? this.onShowLabelPlay(e, "同花顺", 2) : 8 == t ? this.onShowLabelPlay(e, "铁支", 2) : 7 == t ? this.onShowLabelPlay(e, "葫芦", 2) : 6 == t ? this.onShowLabelPlay(e, "同花", 2) : 5 == t ? this.onShowLabelPlay(e, "顺子", 2) : 4 == t ? this.onShowLabelPlay(e, "三条", 2) : 3 == t ? this.onShowLabelPlay(e, "两对", 2) : 2 == t ? this.onShowLabelPlay(e, "对子", 2) : 1 == t && this.onShowLabelPlay(e, "高牌", 2);
}.bind(this))));
},
getAudioURLBydzpk: function(e, t) {
return 1 == t ? "resources/game/dzpk/sounds/man/" + e + ".mp3" : "resources/game/dzpk/sounds/women/" + e + ".mp3";
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e);
this._chupaiSprite[n].getComponent(cc.Label).string = t;
this._seatNodes[n].getComponent("Seat").hideName();
},
onBettingPush: function(e) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].sex, i = this.getOpTypeStr(e.type), n = 5 == e.type ? -1 : 2;
this.onShowLabelPlay(e.seat_index, i, n);
this.playOpSound(e.type, t);
var a = cc.vv.gameNetMgr.getLocalIndex(e.seat_index);
this._seatNodes[a].getComponent("Seat").setDelScore(e.coin);
},
onMsgAllocationScore: function(e) {
this._pickScoreCount = 0;
var t = e.end_seats_data, i = this.getCanWinScoreList(t), n = this.getPickScoreList(i);
this._pickScoreCount = n.length;
cc.vv.gameNetMgr.setPickScoreCount(this._pickScoreCount);
if (0 != n.length) {
for (var a = 0, s = 0; s < n.length; s++) this.node.runAction(cc.sequence(cc.delayTime(2 * s + .5), cc.callFunc(function() {
var e = cc.vv.gameNetMgr.getSeatByID(n[a]._id), t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex);
this.chipflyToPlayer(n[a]._poolsIndex, t, n[a]._pickScore);
a++;
}.bind(this))));
this.node.runAction(cc.sequence(cc.delayTime(4), cc.callFunc(function() {
this.showWinnerAniByID(n[0]._id);
}.bind(this))));
}
},
getCanWinScoreList: function(e) {
for (var t = [], i = 0; i < e.length; i++) if (0 < e[i].end_score) {
var n = {
id: e[i].user_id,
endScore: e[i].end_score
};
t.push(n);
}
for (i = 0; i < t.length - 1; i++) for (var a = i; a < t.length; a++) if (t[i].endScore < t[a].endScore) {
var s = t[i];
t[i] = t[a];
t[a] = s;
}
return t;
},
getPickScoreList: function(e) {
for (var t = [], i = 0; i < e.length; i++) for (var n = 0; ;) {
var a = 0;
if (e[i].endScore >= this._poolsList[n]) {
a = this._poolsList[n];
e[i].endScore -= this._poolsList[n];
this._poolsList[n] = 0;
} else {
a = e[i].endScore;
e[i].endScore = 0;
this._poolsList[n] -= a;
}
if (0 < a) {
var s = {
_id: e[i].id,
_pickScore: a,
_poolsIndex: n
};
t.push(s);
}
n++;
if (e[i].endScore <= 0) break;
}
return t;
},
showWinnerAniByID: function(e) {
var t = cc.vv.gameNetMgr.getSeatByID(e), i = "p" + cc.vv.gameNetMgr.getLocalIndex(t.seatindex), n = this.node.getChildByName("game").getChildByName("players58").getChildByName(i).getPosition();
n.y += 33;
this.winnerIconNode.setPosition(n);
this.winnerIconNode.active = !0;
this.winnerAni.play("add-point");
},
hideWinnerAni: function() {
this.winnerIconNode.active = !1;
this.winnerAni.stop("add-point");
},
getOpTypeStr: function(e) {
var t = "";
switch (e) {
case 1:
t = "小盲注";
break;

case 2:
t = "大盲注";
break;

case 3:
t = "跟注";
break;

case 4:
t = "加注";
break;

case 5:
t = "全压";
break;

case 6:
t = "让牌";
}
return t;
},
playOpSound: function(e, t) {
switch (e) {
case 3:
var i = this.getAudioURLBydzpk("genZhu", t);
cc.vv.audioMgr.playSFX(i);
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/bet_no_allin.mp3");
break;

case 4:
i = this.getAudioURLBydzpk("jiaZhu", t);
cc.vv.audioMgr.playSFX(i);
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/bet_no_allin.mp3");
break;

case 5:
i = this.getAudioURLBydzpk("allIn", t);
cc.vv.audioMgr.playSFX(i);
cc.vv.audioMgr.playSFX("resources/game/dzpk/sounds/bet_no_allin.mp3");
break;

case 6:
i = this.getAudioURLBydzpk("pass", t);
cc.vv.audioMgr.playSFX(i);
}
},
onBtnClicked: function(e, t) {
cc.vv.audioMgr.playBtnClick();
var i = -1, n = 0;
if ("btn_qipai" != t) {
if ("btn_rangpai" == t) {
i = 6;
n = 0;
} else if ("btn_genzhu" == t) {
if ("gen" == this.btn_genzhu.CType) {
i = 3;
n = this.min_coin;
} else if ("allin" == this.btn_genzhu.CType) {
i = 5;
n = 0;
this._hadAllIn = !0;
}
} else if ("btn_quang" == t) {
i = 5;
n = 0;
} else if ("btn_jiazhu" == t) {
this.node_JZ.active = !0;
this.nodeButton.active = !1;
this.btn_sureAddBet.y = this.btn_sureAddBetPos.y;
this.onUpdateDZPK_siler(0);
return;
}
(t = JSON.parse(cc.vv.msgTemp_dzpk.CS_Betting)).type = i;
t.coin = n;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", t);
this.nodeButton.active = !1;
this.node_JZ.active = !1;
} else {
(t = JSON.parse(cc.vv.msgTemp.CS_GiveUp)).giveup_index = cc.vv.gameNetMgr.seatIndex;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("giveup", t);
this.nodeButton.active = !1;
this.node_JZ.active = !1;
}
},
onSendAddBet: function() {
cc.vv.audioMgr.playBtnClick();
var e = this.btn_showJia.addCoin, t = JSON.parse(cc.vv.msgTemp_dzpk.CS_Betting);
t.type = 4;
t.coin = e;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", t);
this.nodeButton.active = !1;
this.node_JZ.active = !1;
},
onSendAllIn: function() {
cc.vv.audioMgr.playBtnClick();
var e = JSON.parse(cc.vv.msgTemp_dzpk.CS_Betting);
e.type = 5;
e.coin = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", e);
this.nodeButton.active = !1;
this.node_JZ.active = !1;
this._hadAllIn = !0;
},
setIsLookerByTotalScore: function(e) {
for (var t = e.detail.end_seats_data, i = 0; i < t.length; i++) {
cc.vv.gameNetMgr.getSeatByID(t[i].user_id).seatindex == cc.vv.gameNetMgr.seatIndex && (0 == t[i].total_score ? cc.vv.gameNetMgr.setIsLooker(!0) : cc.vv.gameNetMgr.setIsLooker(!1));
}
},
initBtnSureAddBetListener: function() {
var s = this;
this.isMoved = !1;
this.posy = -1;
this.btn_sureAddBetPos = this.btn_sureAddBet.getPosition();
this.icon_allInPos = this.icon_allIn.getPosition();
this.btn_sureAddBetPosY = -1;
this.listener = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !1,
onTouchBegan: function(e, t) {
var i = s.btn_sureAddBet.convertToNodeSpace(e.getLocation()), n = s.btn_sureAddBet.getContentSize();
s.isMoved = !1;
s.posy = s.btn_sureAddBet.y;
var a = cc.rect(0, 0, n.width, n.height);
return !!cc.rectContainsPoint(a, i) && (s.isOpSlidering = !0);
},
onTouchMoved: function(e, t) {
var i = e.getDelta();
if (s.btn_sureAddBet.y >= s.btn_sureAddBetPos.y && s.btn_sureAddBet.y <= s.icon_allInPos.y) {
s.btn_sureAddBet.y += i.y;
s.btn_sureAddBet.y = s.btn_sureAddBet.y < s.btn_sureAddBetPos.y ? s.btn_sureAddBetPos.y : s.btn_sureAddBet.y;
s.btn_sureAddBet.y = s.btn_sureAddBet.y > s.icon_allInPos.y ? s.icon_allInPos.y : s.btn_sureAddBet.y;
s.onUpdateDZPK_siler((s.btn_sureAddBet.y - s.btn_sureAddBetPos.y) / (s.icon_allInPos.y - s.btn_sureAddBetPos.y));
}
15 < Math.abs(s.btn_sureAddBet.y - s.posy) && (s.isMoved = !0);
},
onTouchEnded: function(e, t) {
if (!s.isMoved) {
(s.btn_sureAddBet.y - s.btn_sureAddBetPos.y) / (s.icon_allInPos.y - s.btn_sureAddBetPos.y) < 1 ? s.onSendAddBet() : s.onSendAllIn();
}
}
});
cc.eventManager.addListener(this.listener, this.btn_sureAddBet);
},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
msgdefine_dzpk: "msgdefine_dzpk",
poker_utils_dzpk: "poker_utils_dzpk"
} ],
MJGame_FLY: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "266609AlA1PVJd8pg7ZozqL", "MJGame_FLY");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
atlas: {
default: null,
type: cc.SpriteAtlas
},
plantform: {
default: null,
type: cc.Node
},
backgroud: {
default: null,
type: cc.Node
},
touzi: {
default: null,
type: cc.Node
},
touziAni: {
default: null,
type: cc.Node
},
btnTouzi: {
default: null,
type: cc.Node
},
touTip: {
default: null,
type: cc.Node
},
more: {
default: null,
type: cc.Node
},
_startNodes: [],
_seatNodes: [],
flyDownData: [],
bombEff: {
default: null,
type: cc.Node
}
},
onLoad: function() {
this.addComponent("TimePointer_FLY");
cc.vv.poker_util = e("poker_utils_FLY");
this.gameRoot = cc.find("Canvas/game");
this.initView();
this.initEventHandlers();
this.gameRoot.active = !0;
this.updateGameState();
},
start: function() {
this.touTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, cc.p(0, 10)), cc.moveBy(.5, cc.p(0, -10)))));
},
updateGameState: function() {
var e = cc.vv.gameNetMgr.gamestate;
1 == e || (2 == e ? this.onGameBeign() : 3 == e && this.onSelectColor());
},
initView: function() {
for (var e = cc.find("Canvas/bg/plantform"), t = 0; t < e.getChildren().length; t++) {
var i = e.getChildren()[t];
i.initPos = cc.p(i.getPosition().clone());
}
var n = this.node.getChildByName("game"), a = [ "left", "up", "right", "myself" ];
for (t = 0; t < a.length; ++t) {
var s = a[t], c = n.getChildByName(s);
c.active = !0;
var r = c.getChildByName("seat");
this._seatNodes.push(r);
t == this.getLocalIndex(cc.vv.gameNetMgr.seatIndex) && (c.getChildByName("self").active = !0);
this.ops = cc.find("Canvas/game/ops");
this.ops.active = !1;
}
this._startNodes.push(this.backgroud.getChildByName("3-0"));
this._startNodes.push(this.backgroud.getChildByName("0-11"));
this._startNodes.push(this.backgroud.getChildByName("11-14"));
this._startNodes.push(this.backgroud.getChildByName("14-3"));
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var c = this;
this.node.on("game_holds", function(e) {});
this.node.on("game_state", function(e) {
console.log("game_state................");
c.updateGameState();
});
this.node.on("game_begin", function(e) {});
this.node.on("game_over", function(e) {
if (1 != e.detail.force) {
c.node && c.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function(e) {
c.onGameOver();
})));
} else c.onGameOver();
});
this.node.on("onShowGameResult", function(e) {
c.onShowGameResult();
});
this.node.on("mj_count", function(e) {
c._lb_count.getComponent(cc.Label).string = cc.vv.gameNetMgr.numOfMJ + "张";
});
this.node.on("game_num", function(e) {});
this.node.on("turn", function(e) {
c.onTurn(e.detail);
c.hasMove = !0;
});
this.node.on("dice_push", function(e) {
c.onDice(e.detail);
});
this.node.on("move_push", function(e) {
c.onMove(e.detail);
c.hasMove = !0;
c.stopMyPlane();
});
this.node.on("flight_event", function(e) {
c.onFlightEvent(e.detail);
});
this.node.on("reset", function(e) {
c.reset();
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = i;
c._seatNodes[s].getComponent("Seat").setScore(n, a);
}
});
},
onGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/fly/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("GameOver_FLY").onGameOver();
});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/fly/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("GameResult_FLY").onGameEnd();
});
});
},
onFlyClick: function(e) {
if (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex) {
var t = e.target.parent;
if (!t.isMoving) {
var i = t.name, n = i.split("-")[0], a = i.split("-")[1];
console.log(n, a);
this.getLocalIndex(cc.vv.gameNetMgr.seatIndex) == n && this.num && cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("move", {
target: a
});
}
}
},
onMove: function(e) {
console.log(e);
this.touzi.getComponent(cc.Sprite).spriteFrame = null;
var t = this.getLocalIndex(e.seat_index);
for (var i in e.target) {
var n = e.target[i], a = this.plantform.getChildByName(t + "-" + n), s = a.getChildByName("p").getChildByName("fly");
s.active = !0;
s.runAction(cc.repeatForever(cc.sequence(cc.fadeIn(.2), cc.fadeOut(.2))));
var c = this.getAudioURLByFLY(1);
cc.vv.audioMgr.playSFX(c);
var r = [];
for (var o in e.move_pos) {
var h = e.move_pos[o], l = h[0] + "-" + h[1];
if ("10-10" != l && "4-4" != l && "4-10" != l && "10-4" != l) {
var d = this.backgroud.getChildByName(l);
r.push(cc.callFunc(this.fixDirection, this, [ d.getPosition() ]));
r.push(cc.moveTo(.3, d.getPosition()));
}
}
console.log(r.length + "要走这么多步");
r.push(cc.callFunc(this.checkPlaneFinish, this, [ t, n ]));
a.isMoving = !0;
if (1 < r.length) {
var u = cc.sequence(r);
a.runAction(u);
} else 1 == r.length && a.runAction(r[0]);
}
},
onFlightEvent: function(e) {
switch (e.event_type) {
case 1:
this.flyDownData.push(e);
}
},
flyDown: function(e) {
for (;0 < e.length; ) {
var t = e.pop(), i = this.getLocalIndex(t.target_index), n = null;
for (var a in t.target) {
var s = t.target[a];
(n = this.plantform.getChildByName(i + "-" + s)).getChildByName("multi").active = !1;
n.getChildByName("p").rotation = 0;
n.runAction(cc.moveTo(.5, cc.p(n.initPos)));
}
this.bombEff.setPosition(n.getPosition());
this.bombEff.getChildByName("fly-Bomb").getComponent(cc.Animation).play("fly-Bomb");
var c = this.getAudioURLByFLY(0);
cc.vv.audioMgr.playSFX(c);
}
this.flyDownData = [];
},
onSelectColor: function() {
var e = {
color: this.getLocalIndex(cc.vv.gameNetMgr.seatIndex)
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("chose_color", e);
},
onTurn: function(e) {
console.log(e);
cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex ? this.btnTouzi.active = !0 : this.btnTouzi.active = !1;
},
onDice: function(e) {
console.log(e);
this.seat_index = e.seat_index;
this.num = e.dice_value;
var t = "dice-" + e.dice_value;
this.touzi.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(t);
this.btnTouzi.active = !1;
this.touziAni.getComponent(cc.Animation).play("fly-touzi2");
var i = this.getAudioURLByFLY(4);
cc.vv.audioMgr.playSFX(i);
6 == e.dice_value && this.more.runAction(cc.sequence(cc.delayTime(1.5), cc.fadeIn(.1), cc.delayTime(1), cc.fadeOut(1)));
var n = this;
if (e.seat_index == cc.vv.gameNetMgr.seatIndex) {
this.hasMove = !1;
this.scheduleOnce(function() {
n.playMyPlane(e.dice_value);
}, 2);
}
},
playMyPlane: function(e) {
if (!this.hasMove) for (var t = this.getLocalIndex(cc.vv.gameNetMgr.seatIndex), i = 0; i < 4; i++) {
var n = this.plantform.getChildByName(t + "-" + i);
if (n && !n.getChildByName("finish").active) {
var a = n.getChildByName("p");
6 != e && n.getPosition().equals(n.initPos) || a.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.2), cc.scaleTo(.5, 1))));
}
}
},
stopMyPlane: function() {
for (var e = this.getLocalIndex(cc.vv.gameNetMgr.seatIndex), t = 0; t < 4; t++) {
var i = this.plantform.getChildByName(e + "-" + t);
if (i && !i.getChildByName("finish").active) {
var n = i.getChildByName("p");
n.stopAllActions();
n.scale = 1;
}
}
},
fixDirection: function(e, t) {
var i = e.getPosition(), n = t[0].sub(i).signAngle(cc.p(1, 0)) / Math.PI * 180;
e.getChildByName("p").rotation = -n - 90;
},
checkPlaneFinish: function(e, t) {
console.log("check finish......................................", c, t);
e.isMoving = !1;
var i = e.getChildByName("p").getChildByName("fly");
i.stopAllActions();
i.active = !1;
if (0 < this.flyDownData.length) {
this.flyDown(this.flyDownData);
var n = 0, a = this.getAudioURLByFLY(n);
cc.vv.audioMgr.playSFX(a);
}
this.checkMultiPlane(e);
var s = t[0], c = t[1], r = this.getSeatIndexByColor(s), o = cc.vv.gameNetMgr.seats[r];
if (o.fly_data) {
if (o.fly_data.flight_pos[c][3]) {
this.fixDirection(e, [ e.initPos ]);
e.runAction(cc.sequence(cc.moveTo(1, e.initPos), cc.callFunc(function(e) {
e.getChildByName("p").rotation = 0;
e.getChildByName("multi").active = !1;
e.getChildByName("finish").active = !0;
})));
n = 5, a = this.getAudioURLByFLY(n);
cc.vv.audioMgr.playSFX(a);
var h = 0;
for (var l in o.fly_data.flight_pos) {
o.fly_data.flight_pos[l][3] && h++;
}
this.freshFlyCount(s, h);
}
}
},
freshFlyCount: function(e, t) {
var i = this._seatNodes[e].getChildByName("finish");
if (t) {
i.active = !0;
i.getChildByName("count").getComponent(cc.Label).string = "X" + t;
} else i.active = !1;
},
onBtnTouziClick: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dice", {});
},
onGameBeign: function() {
this.gameRoot.active = !0;
var e = !(this.ops.active = !0), t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
console.log(n.fly_data);
if (n.fly_data) {
this.initFly(n.fly_data);
if (0 < n.fly_data.steps) {
this.seat_index = n.fly_data.seat_index;
this.num = n.fly_data.steps;
this.touzi.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("dice-" + this.num);
e = !(this.btnTouzi.active = !1);
i == cc.vv.gameNetMgr.seatIndex && this.playMyPlane(this.num);
}
if (i == cc.vv.gameNetMgr.seatIndex) if (n.fly_data.agent) {
cc.find("Canvas/game/btnTG").active = !1;
cc.find("Canvas/game/btnQXTG").active = !0;
} else {
cc.find("Canvas/game/btnTG").active = !0;
cc.find("Canvas/game/btnTG").active = !1;
}
}
}
e || this.onTurn(null);
},
initFly: function(e) {
var t = e.color, i = 0;
for (var n in e.flight_pos) {
var a = e.flight_pos[n][0], s = e.flight_pos[n][1], c = e.flight_pos[n][3], r = n, o = this.plantform.getChildByName(t + "-" + r);
if (0 != a || 0 != s) {
var h = this.backgroud.getChildByName(a + "-" + s);
o.setPosition(h.getPosition());
this.checkMultiPlane(o);
}
if (c) {
o.setPosition(o.initPos);
o.getChildByName("finish").active = !0;
i++;
}
}
i && this.freshFlyCount(t, i);
this.node.dispatchEvent(new cc.Event.EventCustom("game_begin", !0));
},
checkMultiPlane: function(e) {
for (var t in this._startNodes) {
var i = this._startNodes[t];
if (e.getPosition().sub(i.getPosition()).mag() < 4) return;
}
for (var n = e.name, a = n.split("-")[0], s = (n.split("-")[1], 0), c = [], r = 0; r < 4; r++) {
var o = this.plantform.getChildByName(a + "-" + r);
if (e.getPosition().sub(o.getPosition()).mag() < 4) {
s++;
c.push(o);
}
}
if (1 < s) {
c.push(e);
var h = this.getSmallNumber(c), l = this.plantform.getChildByName(a + "-" + h).getChildByName("multi");
l.active = !0;
l.getChildByName("label").getComponent(cc.Label).string = s;
} else this.closeLabel(e);
},
getSmallNumber: function(e) {
var t;
t = e[0].name.split("-")[1];
for (var i = 1; i < e.length; i++) {
var n = e[i].name.split("-")[1];
n < t ? t = n : this.closeLabel(e[i]);
}
return t;
},
getAudioURLByFLY: function(e) {
return "resources/game/fly/sounds/" + e + ".mp3";
},
closeLabel: function(e) {
e.getChildByName("multi").active = !1;
},
onGameEnd: function() {},
reset: function() {
var e = this.plantform.getChildren();
for (var t in e) {
var i = e[t];
i.setPosition(i.initPos);
i.getChildByName("p").rotation = 0;
i.getChildByName("multi").active = !1;
i.getChildByName("finish").active = !1;
}
this.freshFlyCount(0, 0);
this.freshFlyCount(1, 0);
this.freshFlyCount(2, 0);
this.freshFlyCount(3, 0);
this.ops.active = !1;
},
update: function(e) {},
getLocalIndex: function(e) {
return 4 & cc.vv.gameNetMgr.conf.rule_index && 1 == e ? 2 : e;
},
getSeatIndexByColor: function(e) {
return 4 & cc.vv.gameNetMgr.conf.rule_index && 2 == e ? 1 : e;
},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_FLY: "poker_utils_FLY"
} ],
MJGame_PAGUO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "efddaef6XdL36wnJGY/irLD", "MJGame_PAGUO");
cc.Class({
extends: cc.Component,
properties: {
pk_prefab: {
default: null,
type: cc.Prefab
},
gameRoot: {
default: null,
type: cc.Node
},
_myMJArr: [],
_chuPaiTempArr: [],
_chupaiSprite: [],
_folds: [],
_seatNodes: [],
_gamecount: null,
_showColorList: [],
_btnFenList: [],
_colorMCList: [],
_showBigNum: -1,
_turncardType: -1,
_turncardColor: -1,
_BShuangMcList: [],
_showEff: !0,
_seatsList: [],
_lastIndex: -1,
_changedColorList: [],
_shuang7ColorList: [],
_changeCard_seatNode: [],
_changeCards_nodeList: [],
_callMainDelayTime: .2,
_seatNodeColoeList: []
},
onLoad: function() {
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.msgTemp_paguo = e("msgdefine_PAGUO").msg_templete;
cc.vv.poker_util = e("poker_utils_PAGUO");
this.initView();
this.initEventHandlers();
this.updateGameSync();
cc.vv.audioMgr.playBGM("resources/game/paguo/sounds/bgpaguo.mp3");
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/paguo/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("myself");
this._myholds = t.getChildByName("holds");
var i = cc.director.getVisibleSize().width;
this._myholds.scaleX *= i / 1280;
this._myholds.scaleY *= i / 1280;
for (var n = [ "myself", "right", "up", "left" ], a = 0; a < n.length; ++a) {
var s = n[a], c = e.getChildByName(s);
c.active = !0;
this._chupaiSprite.push(c.getChildByName("ChuPai").getChildByName("lb_type"));
this._folds.push(c.getChildByName("folds"));
this._seatNodes.push(c.getChildByName("seat"));
this._seatsList.push(c.getChildByName("seat").getComponent("Seat"));
var r = c.getChildByName("Bshuan");
r.getChildByName("lb").getComponent(cc.Label).string = "报副";
this._BShuangMcList.push(r);
}
this._effectNode = e.getChildByName("effectNode");
this._effectNode.active = !0;
var o = this._effectNode.getChildByName("showBg"), h = cc.vv.userMgr.poker_color;
for (a = 0; a < o.children.length; a++) {
o.children[a].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_bg" + h);
}
this._effTprefab = this._effectNode.getChildByName("effTprefab");
this.opration_paguo = cc.find("Canvas/game/opration_paguo");
this.opration_paguo.active = !0;
for (var l = this.opration_paguo.getChildByName("seatNodeColoe"), d = 0; d < l.children.length; d++) {
var u = "color_" + d;
(y = l.getChildByName(u)).active = !1;
var v = {};
v.color_mc = y;
for (var g = [], _ = 0; _ < y.children.length; _++) {
var f = "color_" + _, p = y.getChildByName(f);
p.active = !1;
g.push(p);
}
v.color_gg_list = g;
this._seatNodeColoeList.push(v);
}
var m = this.opration_paguo.getChildByName("node_top");
this._lb_zhuang = m.getChildByName("lb_zhuang").getComponent(cc.Label);
this.lb_defen = m.getChildByName("lb_defen").getComponent(cc.Label);
this.lb_defen2 = m.getChildByName("lb_defen2").getComponent(cc.Label);
this.lb_defen2.node.scale = 2;
var C = m.getChildByName("color");
for (d = 0; d < C.children.length; d++) {
var y;
u = "color_" + d;
(y = C.getChildByName(u)).active = !1;
this._showColorList.push(y);
}
this.colorMC = m.getChildByName("colorMC");
for (var b = 0; b < this.colorMC.children.length; b++) {
u = "color_" + b;
var M = this.colorMC.getChildByName(u);
this._colorMCList.push(M);
}
this.node_callZhuang = this.opration_paguo.getChildByName("node_callZhuang");
this.node_callZhuang.active = !1;
this.callzhuang_lb = this.node_callZhuang.getChildByName("callzhuang_lb").getComponent(cc.Label);
this.node_callZhuang_color = this.node_callZhuang.getChildByName("node_callZhuang_color");
for (var N = 0; N < this.node_callZhuang_color.children.length; N++) {
u = "color_" + N;
(M = this.node_callZhuang_color.getChildByName(u)).mainColor = N;
cc.vv.utils.addClickEvent(M, this.node, "MJGame_PAGUO", "onBtncolorClicked");
this._changedColorList.push(M);
}
this.node_shuang7 = this.opration_paguo.getChildByName("node_shuang7");
this.node_shuang7.active = !1;
this.shuang7_lb = this.node_shuang7.getChildByName("shuang7_lb").getComponent(cc.Label);
this.node_shuang7_color = this.node_shuang7.getChildByName("node_shuang7_color");
for (N = 0; N < this.node_shuang7_color.children.length; N++) {
u = "color_" + N;
(M = this.node_shuang7_color.getChildByName(u)).mainColor = N;
cc.vv.utils.addClickEvent(M, this.node, "MJGame_PAGUO", "onBtnShuang7Clicked");
this._shuang7ColorList.push(M);
}
this.node_changCard = this.opration_paguo.getChildByName("node_changCard");
this.node_changCard.active = !1;
this.changcard_lb = this.node_changCard.getChildByName("changcard_lb").getComponent(cc.Label);
this.node_card = this.node_changCard.getChildByName("node_card");
for (var S = 0; S < 4; S++) {
var A = "seardNode_" + S, I = this.node_card.getChildByName(A), E = {};
E.seatNode = I;
for (var B = [], w = 0; w < I.children.length; w++) {
var k = I.children[w], T = {};
T.selectBg = k.getChildByName("selectbg");
T.poker = k.getChildByName("MyPoker2");
cc.vv.utils.addClickEvent(T.poker, this.node, "MJGame_PAGUO", "onChangePKClicked");
B.push(T);
}
E.p_list = B;
this._changeCard_seatNode.push(E);
}
this.btnchangcardOK = this.node_card.getChildByName("btnchangcardOK");
this.btnchangcardOK.active = !1;
cc.vv.utils.addClickEvent(this.btnchangcardOK, this.node, "MJGame_PAGUO", "onChangeCardOkClicked");
this.ChangeCardEff = this.opration_paguo.getChildByName("ChangeCardEff");
this.ChangeCardEff.active = !1;
this.node_BuryCard = this.opration_paguo.getChildByName("node_BuryCard");
this.node_BuryCard.active = !1;
this.burycard_lb = this.node_BuryCard.getChildByName("burycard_lb").getComponent(cc.Label);
this.showHolds = this.node_BuryCard.getChildByName("showHolds");
this.nodeBtn = this.node_BuryCard.getChildByName("nodeBtn");
this.nodeBtn.active = !1;
this.btnmaipai = this.nodeBtn.getChildByName("btnmaipai");
cc.vv.utils.addClickEvent(this.btnmaipai, this.node, "MJGame_PAGUO", "onBtnMaiPainClicked");
this.btnrenshu = this.nodeBtn.getChildByName("btnrenshu");
cc.vv.utils.addClickEvent(this.btnrenshu, this.node, "MJGame_PAGUO", "onBtnRenShuClicked");
this.btnChuPai = this.opration_paguo.getChildByName("btnChuPai");
this.btnChuPai.active = !1;
cc.vv.utils.addClickEvent(this.btnChuPai, this.node, "MJGame_PAGUO", "onBtnChuPaiClicked");
this.dingNode = this.opration_paguo.getChildByName("dingNode");
this.dingNode.active = !1;
this.showBg = this.dingNode.getChildByName("showBg");
this.showBg.active = !1;
this.fenPoker = this.dingNode.getChildByName("MyPoker_Small");
this.fenPoker.active = !1;
this.fenholds = this.dingNode.getChildByName("fenholds");
this.showBig = this.dingNode.getChildByName("showBig");
this.showBig.active = !1;
this.showBigMove = [ [ 0, -25 ], [ 291, 100 ], [ 0, 225 ], [ -270, 100 ] ];
this.buryCardNode = this.opration_paguo.getChildByName("buryCardNode");
this.buryCardNode.active = !1;
this.lb_buey = this.buryCardNode.getChildByName("lb_socre").getComponent(cc.Label);
this.buryHolds = this.buryCardNode.getChildByName("buryHolds");
this.hideChupai();
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[i].showTimer(30);
}
}
},
hideChupai: function() {
var e = 0;
for (e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
for (e = 0; e < this._showColorList.length; ++e) this._showColorList[e].active = !1;
for (e = 0; e < this._colorMCList.length; e++) this._colorMCList[e].active = !1;
for (e = 0; e < this._BShuangMcList.length; e++) this._BShuangMcList[e].active = !1;
for (e = 0; e < this._changedColorList.length; e++) this._changedColorList[e].active = !1;
for (var t = 0; t < this._seatNodeColoeList.length; t++) {
var i = this._seatNodeColoeList[t];
i.color_mc.active = !1;
for (var n = i.color_gg_list, a = 0; a < n.length; a++) n[a].active = !1;
}
this.closeOpration();
this.ChangeCardEff.active = !1;
this._effectNode.active = !0;
this._effTprefab.removeAllChildren();
this._callMainDelayTime = .2;
this.btnChuPai.active = !1;
this.lb_defen.string = "0";
this._lb_zhuang.string = "";
this.lb_defen2.node.active = !1;
this.lb_defen2.string = "";
this.fenholds.removeAllChildren();
this.showHeadTime(-1);
},
closeOpration: function() {
this.node_callZhuang.active = !1;
this.node_shuang7.active = !1;
this.node_changCard.active = !1;
this.node_BuryCard.active = !1;
this.dingNode.active = !1;
this.buryCardNode.active = !1;
},
closePlayEffect: function() {
this._effectNode.active = !1;
this._effTprefab.removeAllChildren();
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var c = this;
this.node.on("game_holds", function(e) {
var t = cc.vv.gameNetMgr.gamestate;
if (2 == t || 3 == t) {
c._effectNode.active = !0;
c.onCuopaiEffectFun(e.detail.index);
} else 5 == t && e.detail.index != cc.vv.gameNetMgr.button && e.detail.index == cc.vv.gameNetMgr.seatIndex || c.initMahjongs(e.detail.index);
});
this.node.on("game_state", function(e) {
c.updateGameState();
});
this.node.on("game_begin", function(e) {
c.onGameBeign();
});
this.node.on("call_turn_push", function(e) {
c.show_can_call_banker_push();
c.showHeadTime(cc.vv.gameNetMgr.turn);
});
this.node.on("can_call_banker_push", function(e) {
c.show_can_call_banker_push();
});
this.node.on("call_banker_push", function(e) {
c.onCallBankerPush(e.detail);
});
this.node.on("buy_double7_turn_push", function(e) {
c.node.runAction(cc.sequence(cc.delayTime(c._callMainDelayTime), cc.callFunc(function(e) {
c.updaye_buy_double7_turn_push();
})));
});
this.node.on("buy_double7_push", function(e) {
c.update_buy_double7_push(e.detail);
});
this.node.on("change_card_push", function(e) {
c.node.runAction(cc.sequence(cc.delayTime(c._callMainDelayTime), cc.callFunc(function(e) {
c.update_init_change_card_push();
})));
});
this.node.on("dig_card_push", function(e) {
c.updateBuryCard();
});
this.node.on("change_cards_data_push", function(e) {
c.addChangeCardEff(e.detail.cards);
});
this.node.on("bury_card_push", function(e) {
c.updateBuryCardPush();
});
this.node.on("turn", function(e) {
cc.vv.gameNetMgr.turn != cc.vv.gameNetMgr.seatIndex && (c.btnChuPai.active = !1);
c._turncardType = e.detail.now_card_type;
c._turncardColor = e.detail.now_card_color;
c.node.runAction(cc.sequence(cc.delayTime(.2), cc.callFunc(function(e) {
cc.vv.gameNetMgr.gameDta_paguo.now_max_index == cc.vv.gameNetMgr.turn ? c.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
c.showOperation();
}))) : c.showOperation();
})));
});
this.node.on("out_card", function(e) {
c.showOutCard(e.detail);
});
this.node.on("turn_result_push", function(e) {
c.onTurnResultPush(e.detail);
});
this.node.on("bury_card_over", function(e) {
var t = e.detail;
c.btnChuPai.active = !1;
1 != t.give_up ? c.node.runAction(cc.sequence(cc.delayTime(4), cc.callFunc(function(e) {
c.onSdhBuryCardOver(t);
}))) : c.playGameOver(t);
});
this.node.on("game_over", function(e) {
c.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
c.onShowGameResult();
});
this.node.on("deputy_push", function(e) {
c.onSdhDeputyPush(e.detail);
});
this.node.on("button_fu_cards_push", function(e) {
c.onzhuang_Deputy_count(e.detail);
});
this.node.on("change_button", function(e) {
c.update_change_button();
});
this.node.on("reset", function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
c.initMahjongs(n.seatindex);
}
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) if (cc.vv.gameNetMgr.gameOverData.end_seats_data[i]) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getLocalIndex(i);
c._seatNodes[s].getComponent("Seat").setScore(n, a);
c._folds[s].removeAllChildren();
}
c._showEff = !0;
c.hideChupai();
});
},
update_change_button: function() {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
for (var n = 0; n < this._seatNodeColoeList.length; n++) {
var a = this._seatNodeColoeList[n];
a.color_mc.active = !1;
for (var s = a.color_gg_list, c = 0; c < s.length; c++) s[c].active = !1;
}
if (cc.vv.gameNetMgr.gamestate < 6) {
var r = cc.vv.gameNetMgr.button, o = cc.vv.gameNetMgr.pk_mainColor.pk_color;
if (-1 == o) return;
var h = cc.vv.gameNetMgr.getLocalIndex(r), l = this._seatNodeColoeList[h];
l.color_mc.active = !0;
l.color_gg_list[o].active = !0;
}
},
onSdhDeputyPush: function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t);
this._BShuangMcList[i].active = !0;
this._BShuangMcList[i].getChildByName("lb").getComponent(cc.Label).string = "报副";
},
onzhuang_Deputy_count: function(e) {
var t = cc.vv.gameNetMgr.gameDta_paguo;
if (t && -1 != t.button_fu_card_counts) {
var i = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
this._BShuangMcList[i].active = !0;
this._BShuangMcList[i].getChildByName("lb").getComponent(cc.Label).string = "副牌：" + t.button_fu_card_counts;
}
},
updateGameState: function() {
var e = cc.vv.gameNetMgr.gamestate;
6 == e && this.updateBuryCard();
if (7 == e) {
this.closePlayEffect();
this.updateDoingNode();
}
},
onGameBeign: function() {
this.hideChupai();
this.gameRoot.active = !0;
var e = cc.vv.gameNetMgr.gameDta_paguo;
if (e) {
this.lb_defen.string = e.score;
this._lb_zhuang.string = cc.vv.gameNetMgr.gameDta_paguo.xiazhuang_score;
this._turncardType = e.now_card_type;
this._turncardColor = e.now_card_color;
if (3 < cc.vv.gameNetMgr.gamestate) {
var t = e.main_color;
-1 != t && (this._showColorList[t].active = !0);
}
for (var i = e.deputy, n = 0; n < i.length; n++) {
if (1 == i[n]) {
var a = cc.vv.gameNetMgr.getLocalIndex(n);
this._BShuangMcList[a].active = !0;
this._BShuangMcList[a].getChildByName("lb").getComponent(cc.Label).string = "报副";
}
}
if (-1 != e.button_fu_card_counts) {
var s = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
this._BShuangMcList[s].active = !0;
this._BShuangMcList[s].getChildByName("lb").getComponent(cc.Label).string = "副牌：" + e.button_fu_card_counts;
}
}
this.update_change_button();
this.showBig.active = !1;
for (var c = 0; c < this._folds.length; ++c) this._folds[c].removeAllChildren();
if (e) for (var r = e.now_max_index, o = e.turn_card, h = 0; h < o.length; h++) {
var l = o[h];
3 < r && (r -= 4);
a = cc.vv.gameNetMgr.getLocalIndex(r);
this.showFoldsCard(l, a);
r++;
}
this.showOperation();
this.addGameTeXiao();
},
addGameTeXiao: function() {
if (!this.anim) {
var t = this;
cc.vv.UILoader.loadRes("game/paguo/prefabs/paguotexiao", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.gameRoot, function(e) {
t.anim = e.getComponent(cc.Animation);
});
});
}
},
updateGameSync: function() {
var e = cc.vv.gameNetMgr.gamestate;
if (!(e < 2)) {
this.onGameBeign();
2 == e ? this.show_can_call_banker_push() : 3 == e ? this.show_can_call_banker_push() : 4 == e ? this.updaye_buy_double7_turn_push() : 5 == e ? this.update_init_change_card_push() : 6 == e ? this.updateBuryCard() : 7 == e && this.updateDoingNode();
}
},
onCuopaiEffectFun: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e), i = [ cc.p(0, -277), cc.p(499, 51), cc.p(282, 207), cc.p(-505, 61) ][t], n = cc.instantiate(this.pk_prefab);
n.parent = this._effTprefab;
n.setPosition(0, 0);
n.poker_id = -1;
this.setSpriteFrameByMJID(n, -1);
cc.vv.audioMgr.playSFX("resources/game/dnn/sounds/fapai.mp3");
n.active = !0;
var a = {};
a.tempNode = this._effTprefab;
a.tPrefab = n;
a._seatIndex = e;
var s = this;
n.runAction(cc.sequence(cc.moveTo(.2, i), cc.callFunc(function(e, t) {
s.initMahjongs(t._seatIndex);
t.tPrefab.active = !1;
n.destroy();
}, null, a)));
},
show_can_call_banker_push: function() {
this.closeOpration();
for (var e = 0; e < this._changedColorList.length; e++) this._changedColorList[e].active = !1;
this.node_callZhuang.active = !0;
var t = cc.vv.gameNetMgr.gamestate;
this.callzhuang_lb.string = 2 == t ? "" : "等待他人叫庄...";
if (3 != t || cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex) {
if (3 == t) {
this._changedColorList[4].active = !0;
this.callzhuang_lb.string = "你不能抢庄哦~";
}
var i = cc.vv.gameNetMgr.getSelfData().can_call_banker;
console.log("can_call_banker:" + i.length);
if (0 < i.length) {
for (var n = 0; n < i.length; n++) {
var a = i[n];
console.log("花色:" + a);
this._changedColorList[a].active = !0;
}
this.callzhuang_lb.string = "赶快点击花色抢庄哦~";
}
}
},
onBtncolorClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.mainColor;
4 == t && (t = -1);
if (2 == cc.vv.gameNetMgr.gamestate) {
(e = JSON.parse(cc.vv.msgTemp_paguo.CS_CallBankerAtDispatch)).call = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker_at_dispatch", e);
} else {
(e = JSON.parse(cc.vv.msgTemp_paguo.CS_CallBanker)).call = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", e);
}
this.node_callZhuang.active = !1;
},
onCallBankerPush: function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), i = -1 == e.call ? "不叫" : this.showHhuaStr(e.call);
if (-1 != e.call) {
this.node_callZhuang.active = !1;
cc.vv.gameNetMgr.gameDta_paguo.xiazhuang_score = cc.vv.poker_util.get_call_score();
this._lb_zhuang.string = cc.vv.gameNetMgr.gameDta_paguo.xiazhuang_score;
this.decideMainColorPush();
}
this.onShowLabelPlay(t, i, 1);
},
decideMainColorPush: function() {
this._callMainDelayTime = 2;
var i = cc.vv.gameNetMgr.pk_mainColor.pk_color;
this._colorMCList[i].active = !0;
this._colorMCList[i].setPosition(410, -250);
this._colorMCList[i].scale = 1;
var n = this, e = cc.vv.gameNetMgr.pk_mainColor.pk_color, t = n._colorMCList[e].getPosition(), a = cc.sequence(cc.delayTime(1), cc.scaleTo(.5, .1), cc.moveTo(.5, t), cc.callFunc(function(e) {
n._colorMCList[i].active = !1;
for (var t = 0; t < n._showColorList.length; ++t) n._showColorList[t].active = !1;
n._showColorList[i].active = !0;
n._callMainDelayTime = .2;
}));
this._colorMCList[i].runAction(a);
},
onBtnShuang7Clicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.mainColor;
4 == t && (t = -1);
(e = JSON.parse(cc.vv.msgTemp_paguo.CS_buy_double7)).buy = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("buy_double7", e);
this.node_shuang7.active = !1;
},
updaye_buy_double7_turn_push: function() {
this.closeOpration();
for (var e = 0; e < this._shuang7ColorList.length; e++) this._shuang7ColorList[e].active = !1;
this.node_shuang7_color.active = !1;
this.shuang7_lb.string = "等待其他玩家买双7...";
if (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex) {
this.node_shuang7_color.active = !0;
this.shuang7_lb.string = "是否要买双7...";
var t = -1;
cc.vv.gameNetMgr.gameDta_paguo && (t = cc.vv.gameNetMgr.gameDta_paguo.main_color);
if (t && -1 != t && cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
this._shuang7ColorList[t].active = !0;
this._shuang7ColorList[4].active = !0;
} else for (e = 0; e < this._shuang7ColorList.length; e++) this._shuang7ColorList[e].active = !0;
}
this.node_shuang7.active = !0;
},
update_buy_double7_push: function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), i = -1 == e.buy ? "不买" : this.showHhuaStr(e.buy);
if (-1 != e.buy) {
cc.vv.gameNetMgr.gameDta_paguo.xiazhuang_score = cc.vv.poker_util.get_shuang7_score();
this._lb_zhuang.string = cc.vv.gameNetMgr.gameDta_paguo.xiazhuang_score;
this.decideMainColorPush();
this.node_shuang7.active = !1;
}
this.onShowLabelPlay(t, i, 1);
},
update_init_change_card_push: function() {
this.closeOpration();
for (var e = 0; e < this._changeCard_seatNode.length; e++) {
(h = this._changeCard_seatNode[e]).seatNode.active = !1;
for (var t = 0; t < h.p_list.length; t++) {
h.p_list[t].selectBg.active = !1;
h.p_list[t].poker.active = !1;
}
}
this._changeCards_nodeList = [];
this.node_changCard.active = !0;
this.btnchangcardOK.active = !1;
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
this.btnchangcardOK.active = !0;
this.changcard_lb.string = "请选择您要替换的牌...";
} else this.changcard_lb.string = "等待庄家换牌...";
var i = cc.vv.gameNetMgr.gameDta_paguo;
if (i) {
var n = i.change_list;
if (!n) return;
for (var a = 0; a < n.length; a++) {
var s = n[a];
if (s) {
var c = s.counts, r = cc.vv.gameNetMgr.getSeatIndexByID(s.user_id), o = cc.vv.gameNetMgr.getLocalIndex(r), h = this._changeCard_seatNode[o];
for (t = 0; t < c; t++) {
var l = {};
l.user_id = s.user_id;
l.card = this.getMainColor7();
var d = h.p_list[t].poker;
d.sendData = l;
d.poker_id = this.getMainColor7();
var u = d.getComponent("MyPoker"), v = i.main_color;
d.active = !0;
if (cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
u.setValueAndColor(7, v);
h.p_list[t].selectBg.active = !1;
} else {
h.p_list[t].selectBg.active = !0;
u.setValueAndColor(-1, v);
this._changeCards_nodeList.push(d);
}
h.p_list[t].active = !0;
}
h.seatNode.active = !0;
}
}
}
},
getMainColor7: function() {
var e = cc.vv.gameNetMgr.gameDta_paguo.main_color;
return 0 == e ? 40 : 1 == e ? 41 : 2 == e ? 42 : 43;
},
onChangePKClicked: function(e) {
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
var t = e.target, i = (t.getComponent("MyPoker"), t.poker_id), n = cc.vv.poker_util.get_poker_value(i), a = (v = cc.vv.gameNetMgr.gameDta_paguo).main_color, s = -1, c = cc.vv.gameNetMgr.seats, r = cc.vv.gameNetMgr.seatIndex, o = c[r].holds;
if (7 != n) {
t.poker_id = this.getMainColor7();
t.sendData.card = this.getMainColor7();
a = v.main_color;
s = -1;
o.push(i);
} else {
if (0 == this._chuPaiTempArr.length) {
cc.vv.alert.show("提示", "请先在手牌中选择一张您要替换的牌！");
return;
}
var h = this._chuPaiTempArr[0].poker_id;
t.sendData.card = h;
t.poker_id = h;
a = cc.vv.poker_util.get_poker_color(h);
s = cc.vv.poker_util.get_poker_value(h);
for (var l = 0; l < this._chuPaiTempArr.length; l++) {
this._chuPaiTempArr[l].getComponent("MyPoker").setDown();
this._chuPaiTempArr.splice(l, 1);
}
for (var d = 0; d < o.length; d++) if (o[d] == h) {
o.splice(d, 1);
break;
}
}
var u = t.getComponent("MyPoker"), v = cc.vv.gameNetMgr.gameDta_paguo;
u.setValueAndColor(s, a);
t.active = !0;
this.initMahjongs(r);
}
},
onMJClicked_changeCard: function(e) {
if (5 == cc.vv.gameNetMgr.gamestate) {
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
cc.vv.audioMgr.playBtnClick();
var t = e.getComponent("MyPoker");
console.log(e.poker_id);
for (var i = e.poker_id, n = !1, a = 0; a < this._chuPaiTempArr.length; a++) {
if (i == this._chuPaiTempArr[a].getComponent("MyPoker").poker_id && 1 == t.isShowUp) {
n = !0;
break;
}
}
for (var s = 0; s < this._chuPaiTempArr.length; s++) {
this._chuPaiTempArr[s].getComponent("MyPoker").setDown();
this._chuPaiTempArr.splice(s, 1);
}
if (0 == n) {
t.setUp();
this._chuPaiTempArr.push(e);
} else {
t.setDown();
this._chuPaiTempArr = [];
}
}
}
},
onChangeCardOkClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
for (var t = [], i = 0; i < this._changeCards_nodeList.length; i++) {
var n = this._changeCards_nodeList[i].sendData;
if (n.card == this.getMainColor7()) {
cc.vv.alert.show("提示", "您还有牌没有替换！");
return;
}
if (0 == t.length) {
var a = {};
a.user_id = n.user_id;
a.cards = [];
a.cards.push(n.card);
t.push(a);
} else {
var s = t[0];
if (s.user_id == n.user_id) s.cards.push(n.card); else {
var c = {};
c.user_id = n.user_id;
c.cards = [];
c.cards.push(n.card);
t.push(c);
}
}
}
this._chuPaiTempArr = [];
(e = JSON.parse(cc.vv.msgTemp_paguo.CS_change_card)).change_list = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("change_card", e);
this.node_changCard.active = !1;
},
addChangeCardEff: function(e) {
this.ChangeCardEff.active = !0;
this.ChangeCardEff.removeAllChildren();
for (var t = e.length, i = 0; i < t; i++) {
var n = e[i], a = cc.vv.poker_util.get_poker_color(n), s = cc.vv.poker_util.get_poker_value(n), c = cc.instantiate(this.pk_prefab);
c.parent = this.ChangeCardEff;
this.ChangeCardEff.scaleX = 1.6;
this.ChangeCardEff.scaleY = 1.6;
var r = 30 * i - t / 2 * 30;
c.setPosition(r, 0);
c.getComponent("MyPoker").setValueAndColor(s, a);
c.active = !0;
}
var o = this;
this.ChangeCardEff.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(.5, .1), cc.callFunc(function(e) {
o.initMahjongs(cc.vv.gameNetMgr.seatIndex);
o.ChangeCardEff.removeAllChildren();
o.ChangeCardEff.active = !1;
})));
},
updateBuryCard: function() {
this.closeOpration();
for (var e = 0; e < this._seatNodeColoeList.length; e++) {
var t = this._seatNodeColoeList[e];
t.color_mc.active = !1;
for (var i = t.color_gg_list, n = 0; n < i.length; n++) i[n].active = !1;
}
this.node_BuryCard.active = !0;
this.showHolds.removeAllChildren();
this.nodeBtn.active = !1;
this.burycard_lb.string = "";
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
var a = cc.vv.gameNetMgr.gameDta_paguo.dig_card, s = a ? this.sortHolds(a) : [];
this.showHolds.scaleX = 1.6;
this.showHolds.scaleY = 1.6;
for (var c = 0; c < s.length; c++) {
var r = s[c], o = (r.cid, cc.instantiate(this.pk_prefab));
o.parent = this.showHolds;
var h = 30 * c - 120;
o.setPosition(h, 0);
this.setSpriteFrameByMJID(o, r.valueID, r.color);
}
var l = this;
this.showHolds.runAction(cc.sequence(cc.delayTime(2), cc.scaleTo(.5, .1), cc.callFunc(function(e) {
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
l.showHolds.removeAllChildren();
l.nodeBtn.active = !0;
}
})));
} else this.burycard_lb.string = "等待庄家埋牌...";
},
onBtnMaiPainClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
if (8 == this._chuPaiTempArr.length) {
(e = JSON.parse(cc.vv.msgTemp_paguo.CS_BuryCard)).cards = this._chuPaiTempArr;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("bury_card", e);
this.node_BuryCard.active = !1;
} else cc.vv.alert.show("错误码", "埋牌的数量不对，只能埋8张牌");
},
onBtnRenShuClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
e = JSON.parse(cc.vv.msgTemp_paguo.CS_GiveUp);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("give_up", e);
this.node_BuryCard.active = !1;
},
updateBuryCardPush: function() {
this.showHolds.removeAllChildren();
this.node_BuryCard.active = !1;
},
updateDoingNode: function() {
this.closeOpration();
this.dingNode.active = !0;
this.showBig.active = !1;
this.showBg.active = !0;
this.fenPoker.active = !1;
this.fenholds.removeAllChildren();
},
showOperation: function() {
this.showHeadTime(cc.vv.gameNetMgr.turn);
var e = !1;
if (cc.vv.gameNetMgr.gameDta_paguo && cc.vv.gameNetMgr.gameDta_paguo.now_max_index == cc.vv.gameNetMgr.turn) {
for (var t = 0; t < this._folds.length; ++t) this._folds[t].removeAllChildren();
e = !(this.showBig.active = !1);
}
if (7 == cc.vv.gameNetMgr.gamestate) if (cc.vv.gameNetMgr.isSelfTurn()) {
this.btnChuPai.active = !0;
0 == e && this.updatePKCover();
} else this.btnChuPai.active = !1;
},
updatePKCover: function() {
var e = cc.vv.gameNetMgr.gameDta_paguo, t = e.now_card_data, i = e.now_card_color;
if (-1 != i) {
for (var n = [], a = 0; a < this._myMJArr.length; a++) {
var s = (r = this._myMJArr[a]).getComponent("MyPoker");
r.valueID;
s.setBlack(!1);
if (i == e.main_color) {
if (1 == r.isMain) {
n.push(r);
continue;
}
} else if (r.valueC == i && 0 == r.isMain) {
n.push(r);
continue;
}
for (var c = 0; c < this._chuPaiTempArr.length; ++c) if (r.poker_id == this._chuPaiTempArr[c] && 1 == s.isShowUp) {
s.setDown();
this._chuPaiTempArr.splice(c, 1);
break;
}
s.setBlack(!0);
}
if (n.length < t.length) for (a = 0; a < this._myMJArr.length; a++) {
var r;
(s = (r = this._myMJArr[a]).getComponent("MyPoker")).setBlack(!1);
}
}
},
onBtnChuPaiClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
(e = JSON.parse(cc.vv.msgTemp_paguo.CS_out_card)).cards_data = this._chuPaiTempArr;
e.card_type = cc.vv.poker_util.check_out_type(this._chuPaiTempArr, cc.vv.gameNetMgr.pk_mainColor.pk_color);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("out_card", e);
},
showOutCard: function(e) {
if (e.user_index == cc.vv.gameNetMgr.seatIndex) for (var t = 0; t < this._myMJArr.length; t++) {
this._myMJArr[t].getComponent("MyPoker").setBlack(!1);
}
this._chupaiSprite[e.user_index];
var i = e.out_card_type, n = cc.vv.gameNetMgr.seats[e.user_index].sex, a = -1;
if (3 == i) {
this.anim.play("paguo-tlj");
a = 92;
}
if (0 < a) {
var s = this.getAudioURLBy3dh(a, n);
cc.vv.audioMgr.playSFX(s);
}
},
onTurnResultPush: function(e) {
var t = e.max_index;
this.updateShowBigMove(t);
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e, t) {
t.max_index != cc.vv.gameNetMgr.button && i.onTurnResultPushShowFen(t);
}, null, e)));
},
updateShowBigMove: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this._showBigNum = .8;
this.cur_arc = 0;
this.showBig.setPosition(this.showBigMove[t][0], this.showBigMove[t][1]);
this.showBig.active = !0;
},
onTurnResultPushShowFen: function(e) {
var t = e.score_card;
if (0 != t.length) {
console.log("------------score_card:" + t, "data.score：" + e.score);
e.score_value;
this.fenholds.removeAllChildren();
var i = this.sortHolds(t);
this.fenholds.scaleX = .8;
this.fenholds.scaleY = .8;
for (var n = i.length / 2, a = 0; a < i.length; a++) {
var s = i[a], c = (s.cid, cc.instantiate(this.pk_prefab));
c.parent = this.fenholds;
var r = 30 * a - 30 * n;
c.setPosition(r, 0);
this.setSpriteFrameByMJID(c, s.valueID, s.color);
}
var o = this, h = {};
h.holds = i;
h.data = e;
this.fenholds.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(.5, .1), cc.callFunc(function(e, t) {
o.fenholds.removeAllChildren();
var i = t.holds[0];
o.fenPoker.getComponent("MyPoker").setValueAndColor(i.valueID, i.color);
o.fenPoker.active = !0;
o.showBig.active = !1;
o.lb_defen2.string = t.data.score_value;
o.lb_defen2.node.active = !0;
o.lb_defen2.node.setPosition(274, -252);
var n = o.lb_defen.node.getPosition(), a = {};
a.score = t.data.score;
o.lb_defen2.node.runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(.5, n), cc.callFunc(function(e, t) {
o.lb_defen2.node.active = !1;
o.lb_defen.string = "";
o.lb_defen.string = t.score;
}, null, a)));
}, null, h)));
}
},
playGameOver: function(e) {
for (var t = .5, i = e.end_seats_data, n = 0; n < i.length; n++) {
if (i[n].end_score < 0) {
var a = i[n].user_id;
break;
}
}
var s = cc.vv.gameNetMgr.getSeatByID(a).sex;
if (1 == e.give_up) {
this.anim.play("paguo-zjtx");
var c = 93;
t = 1;
} else {
var r = [ "", "paguo-dg", "paguo-xg", "88", "", "", "89" ][e.win_lose_state];
if ("" != r) {
c = -1;
if ("paguo-dg" == r) {
c = 90;
this.anim.play(r);
} else if ("paguo-xg" == r) {
c = 91;
this.anim.play(r);
} else "88" == r ? c = 88 : "89" == r && (c = 89);
t = 1;
}
}
if (0 < c) {
var o = this.getAudioURLBy3dh(c, s);
cc.vv.audioMgr.playSFX(o);
}
var h = this;
this.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function(e, t) {
h.showGameOver();
})));
},
getAudioURLBy3dh: function(e, t) {
return t ? "resources/game/paguo/sounds/man/" + e + ".mp3" : "resources/game/paguo/sounds/women/" + e + ".mp3";
},
onSdhBuryCardOver: function(n) {
var e = 0 == n.has_dig ? .1 : 4, a = this;
this.node.runAction(cc.sequence(cc.delayTime(e), cc.callFunc(function(e) {
if (cc.vv.gameNetMgr.gameDta_paguo && cc.vv.gameNetMgr.gameDta_paguo.gameOverData) {
var t = cc.vv.gameNetMgr.gameDta_paguo.gameOverData;
a.playGameOver(t);
} else a.showGameOver();
})));
for (var t = 0; t < this._folds.length; ++t) this._folds[t].removeAllChildren();
this.showBig.active = !1;
this._myholds.removeAllChildren();
this.closeOpration();
if (0 != n.has_dig) {
this.buryHolds.removeAllChildren();
this.lb_buey.string = n.dig_score_value;
this.lb_defen2.string = "";
this.buryCardNode.active = !0;
var i = n.bury_card, s = this.sortHolds(i);
this.buryHolds.scaleX = 1.6;
this.buryHolds.scaleY = 1.6;
this.buryCardNode.scale = 1;
var c = s.length / 2;
for (t = 0; t < s.length; t++) {
var r = s[t], o = r.cid, h = cc.vv.poker_util.get_poker_value(o), l = 0;
0 < n.dig_score_value && (5 == h || 10 == h || 13 == h) && (l = 20);
var d = cc.instantiate(this.pk_prefab);
d.parent = this.buryHolds;
var u = 30 * t - 30 * c;
d.setPosition(u, l);
this.setSpriteFrameByMJID(d, r.valueID, r.color);
}
a = this;
this.buryCardNode.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function(e) {
a.buryCardNode.runAction(cc.sequence(cc.scaleTo(1, .1), cc.callFunc(function(e) {
a.buryCardNode.active = !1;
a.buryHolds.removeAllChildren();
a.lb_defen2.string = n.dig_score_value;
a.lb_defen2.node.active = !0;
a.lb_defen2.node.setPosition(274, -252);
var t = a.lb_defen.node.getPosition(), i = cc.sequence(cc.delayTime(.5), cc.moveTo(.5, t), cc.callFunc(function(e) {
a.lb_defen2.node.active = !1;
a.lb_defen.string = n.game_score;
a.fenholds.removeAllChildren();
}));
a.lb_defen2.node.runAction(i);
})));
})));
}
},
call_game_over: function() {
var e = cc.vv.gameNetMgr.gameOverData;
1 != e.force && 1 != e.all_give_up_call || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/paguo/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/paguo/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
sortHolds: function(e) {
var t = [];
0 < e.length && (t = cc.vv.poker_util.pokerSort(e, cc.vv.gameNetMgr.pk_mainColor.pk_color));
return t;
},
initMahjongs: function(e) {
var t = this, i = cc.vv.gameNetMgr.seats[e];
if (i && i.holds) {
var n = this.sortHolds(i.holds);
this._halfLen = 21 < n.length ? 10 : n.length / 2;
var a = cc.vv.gameNetMgr.getLocalIndex(e), s = !1;
if (0 == a) {
this._myMJArr = [];
var c = this._myholds;
cc.vv.gameNetMgr.conf.rule_index;
c.scaleX = 1.9;
c.scaleY = 1.9;
if (1 == this._showEff) {
s = !0;
this._showEff = !1;
}
c.removeAllChildren();
for (var r = 0; r < n.length; r++) {
var o = n[r], h = o.cid, l = cc.instantiate(this.pk_prefab);
l.parent = c;
var d = 0 + 30 * r - 30 * this._halfLen, u = 0;
if (21 < n.length) if (r < 8) {
u = 70;
d = 0 + 30 * r + 90;
} else d = 0 + 30 * (r - 8) - 30 * this._halfLen;
l.setPosition(d, u);
l.poker_id = h;
l.valueID = o.valueID;
l.valueC = o.color;
l.isMain = o.isMain;
l.pokerIndex = r;
if (l.showEff = s) {
this.setSpriteFrameByMJID(l, -1);
var v = cc.sequence(cc.hide(), cc.delayTime(.05 * r), cc.show(), cc.delayTime(.1 * (n.length - r)), cc.callFunc(function(e) {
e.showEff = !1;
t.setSpriteFrameByMJID(e, e.valueID, e.valueC);
}, l));
l.runAction(v);
} else this.setSpriteFrameByMJID(l, o.valueID, o.color);
l.isRightPoke = r == n.length - 1;
this.onMJtprefabEvent(l);
this._myMJArr.push(l);
}
this._chuPaiTempArr = [];
} else {
var g = i.holds.length;
this._seatNodes[a].getComponent("Seat").setPaiCount(g);
}
0 < i.folds.length && 0 == s && this.showFoldsCard(i.folds[i.folds.length - 1], a);
}
},
onMJtprefabEvent: function(e) {
this.selectNode = null;
this.isTouchMove = !1;
e.on("touchstart", function(e) {
this.selectNode = null;
}.bind(this));
e.on("touchmove", function(e) {
this.isTouchMove = !0;
var t = this._myholds.convertToNodeSpace(e.touch.getLocation()), i = !1;
if (this.selectNode) {
var n = this.selectNode.width * this.selectNode.scaleX, a = this.selectNode.height * this.selectNode.scaleX, s = cc.rect(this.selectNode.x - n / 2, this.selectNode.y - a / 2, n * (this.selectNode.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (i = !0);
}
if (0 == i) for (var c = 0; c < this._myMJArr.length; c++) {
var r = this._myMJArr[c];
n = r.width * r.scaleX, a = r.height * r.scaleX, s = cc.rect(r.x - n / 2, r.y - a / 2, n * (r.isRightPoke ? 1 : .4), a);
if (cc.rectContainsPoint(s, t)) {
this.selectNode = r;
this.updateMJPrefabNode(r);
this.onMJClicked_changeCard(r);
}
}
}.bind(this));
e.on("touchcancel", function(e) {
this.selectNode = null;
this.isTouchMove = !1;
}.bind(this));
e.on("touchend", function(e) {
this.selectNode = null;
this.isTouchMove = !1;
}.bind(this));
cc.vv.utils.addClickEvent(e, this.node, "MJGame_PAGUO", "onMJClicked");
},
onMJClicked: function(e) {
if (!this.isTouchMove) {
var t = e.target;
this.updateMJPrefabNode(t);
this.onMJClicked_changeCard(t);
}
},
updateMJPrefabNode: function(e) {
if ((6 == cc.vv.gameNetMgr.gamestate || 7 == cc.vv.gameNetMgr.gamestate) && 1 != e.showEff) {
cc.vv.audioMgr.playBtnClick();
var t = e.getComponent("MyPoker");
if (1 != t.isBlack()) {
console.log(e.poker_id);
for (var i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e.poker_id == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
this._chuPaiTempArr.push(e.poker_id);
}
cc.vv.gameNetMgr.isSelfTurn();
}
}
},
showFoldsCard: function(e, t) {
if (1 == e.length) var i = 1; else if (3 < e.length) i = 3; else if (2 == e.length && e[0] == e[1]) i = 2;
var n = cc.vv.gameNetMgr.seats[t].sex, a = this._folds[t], s = this.sortHolds(e);
a.scaleX = 1.3;
a.scaleY = 1.3;
a.removeAllChildren();
for (var c = 0; c < s.length; c++) {
var r = s[c], o = r.cid, h = cc.instantiate(this.pk_prefab);
h.parent = a;
var l = 0 + 25 * c, d = 0;
if (1 == t || 3 == t) {
var u = 5 <= e.length ? 5 : e.length - 5;
l = 5 < c ? 25 * c - 25 * u / 2 - 150 : 25 * c - 25 * u / 2;
d = 5 < c ? -40 : 0;
} else {
d = 0;
l = 25 * c - 25 * e.length / 2;
}
h.setPosition(l, d);
this.setSpriteFrameByMJID(h, r.valueID, r.color, i, o, n);
}
},
setSpriteFrameByMJID: function(e, t, i, n, a, s) {
e.getComponent("MyPoker").setValueAndColor(t, i);
e.active = !0;
var c = cc.vv.gameNetMgr.pk_mainColor.pk_color;
if (cc.vv.gameNetMgr.gameDta_paguo && cc.vv.gameNetMgr.gameDta_paguo.now_max_index == cc.vv.gameNetMgr.turn && a) {
var r = -1;
n && 1 == n ? i == c || 35 < a ? r = 114 : 0 == i ? r = 110 : 1 == i ? r = 111 : 2 == i ? r = 112 : 3 == i && (r = 113) : n && 2 == n && (r = i == c || 35 < a ? 114 : 87);
if (0 < r) {
var o = this.getAudioURLBy3dh(r, s);
cc.vv.audioMgr.playSFX(o);
}
}
},
getHoldsPokerByID: function(e) {
for (var t = null, i = 0; i < this._myMJArr.length; ++i) {
var n = this._myMJArr[i];
if (1 == n.active) {
var a = n.getComponent("MyPoker");
if (a.poker_id == e && 0 == a.isShowUp) {
t = a;
break;
}
}
}
return t;
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = cc.vv.gameNetMgr.seats[e].sex, s = this._chupaiSprite[n], c = -1;
if (0 < (c = "方块" == (s.getComponent(cc.Label).string = t) ? 95 : "梅花" == t ? 96 : "红桃" == t ? 97 : "黑桃" == t ? 98 : 0)) {
var r = this.getAudioURLBy3dh(c, a);
cc.vv.audioMgr.playSFX(r);
}
if (0 < i) {
s.stopAllActions();
var o = cc.sequence(cc.delayTime(i), cc.callFunc(function() {
s.getComponent(cc.Label).string = "";
}));
s.runAction(o);
}
},
showHhuaStr: function(e) {
return 0 == e ? "方块" : 1 == e ? "梅花" : 2 == e ? "红桃" : 3 == e ? "黑桃" : "";
},
StartRotation: function(e) {
this.showBig.setRotation(e);
},
update: function(e) {
if (0 < this._showBigNum) {
console.log("---------------------update");
this._showBigNum -= e;
this.cur_arc += 18;
this.StartRotation(this.cur_arc);
this._showBigNum < 0 && (this._showBigNum = -1);
}
},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
msgdefine_PAGUO: "msgdefine_PAGUO",
poker_utils_PAGUO: "poker_utils_PAGUO"
} ],
MJGame_PDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c1c5fpP+gZI9qXszEJWQgid", "MJGame_PDK");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
_myMJArr: [],
_chuPaiTempArr: [],
_chupaiSprite: [],
_folds: [],
_showEff: !0,
_BDanMcList: [],
_pdk_red_ten: -1,
_pdk_red_tenList: [],
_seatNodes: [],
_halfLen: 10,
_seatsList: [],
_lastIndex: -1,
_bao1Map: null,
_bao2Map: null
},
onLoad: function() {
if (cc.vv) {
this._bao1Map = {};
this._bao2Map = {};
} else cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.audioMgr.playBGM("resources/game/pdk/sounds/bgpdk.mp3");
cc.vv.poker_util = e("poker_utils_PDK");
this.initView();
this.initEventHandlers();
this.gameRoot.active = !0;
2 == cc.vv.gameNetMgr.gamestate && this.onGameBeign();
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/pdk/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("myself");
this._myholds = t.getChildByName("holds");
var i = cc.director.getVisibleSize().width;
this._myholds.scaleX *= i / 1280;
this._myholds.scaleY *= i / 1280;
for (var n = [ "myself", "right", "up", "left" ], a = 0; a < n.length; ++a) {
var s = n[a], c = e.getChildByName(s);
c.active = !0;
this._chupaiSprite.push(c.getChildByName("ChuPai").getChildByName("lb_type"));
this._folds.push(c.getChildByName("folds"));
this._seatNodes.push(c.getChildByName("seat"));
this._seatsList.push(c.getChildByName("seat").getComponent("Seat"));
this._BDanMcList.push(c.getChildByName("Bdan"));
this._pdk_red_tenList.push(c.getChildByName("ht10"));
}
this.opration_PDK = cc.find("Canvas/game/opration_PDK");
this.opration_PDK.active = !1;
this.btnChuPai = this.opration_PDK.getChildByName("btn_chuPai");
this.btnGuo = this.opration_PDK.getChildByName("btn_guo");
this.btnTishi = this.opration_PDK.getChildByName("btn_tishi");
cc.vv.utils.addClickEvent(this.btnChuPai, this.node, "MJGame_PDK", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnGuo, this.node, "MJGame_PDK", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnTishi, this.node, "MJGame_PDK", "onOptionClicked");
this.hideClear();
},
hideClear: function() {
this.hideChupai();
this.hideBDanMc();
this.hideRedTenList();
this.opration_PDK.active = !0;
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
},
hideBDanMc: function() {
for (var e = 0; e < this._BDanMcList.length; ++e) this._BDanMcList[e].active = !1;
},
hideRedTenList: function() {
this._pdk_red_ten = -1;
for (var e = 0; e < this._pdk_red_tenList.length; ++e) this._pdk_red_tenList[e].active = !1;
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
showHeadTime: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 15;
if (this._lastIndex != e) {
this._lastIndex = e;
for (var i = 0; i < this._seatsList.length; ++i) this._seatsList[i].closeTimer();
if (-1 != e) {
var n = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[n].showTimer(t);
}
}
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var c = this;
this.node.on("game_holds", function(e) {
c.initMahjongs(e.detail.index);
});
this.node.on("game_begin", function(e) {
c.onGameBeign();
});
this.node.on("out_card", function(e) {
c.showOutCard(e.detail);
});
this.node.on("turn", function(e) {
for (var t = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.getLocalIndex(t), n = 0; n < c._folds.length; ++n) n == i && c._folds[n].removeAllChildren();
if (cc.vv.gameNetMgr.pdk_red_ten != c._pdk_red_ten) {
c.hideRedTenList();
c._pdk_red_ten = cc.vv.gameNetMgr.pdk_red_ten;
var a = cc.vv.gameNetMgr.getLocalIndex(c._pdk_red_ten);
c._pdk_red_tenList[a].active = !0;
c._pdk_red_tenList[a].getChildByName("donghua").getComponent(cc.Animation).play("hongtaoshizhaniao");
}
c.showHeadTime(t);
c.showOperation();
});
this.node.on("reset", function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
c.initMahjongs(n.seatindex);
}
});
this.node.on("game_over_show", function(e) {
c.showHeadTime(-1);
c.onGameOverShow(e);
c.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
c.onShowGameResult();
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getLocalIndex(i);
c._seatNodes[s].getComponent("Seat").setScore(n, a);
c._folds[s].removeAllChildren();
}
c._showEff = !0;
});
this.node.on("time_sync", function(e) {
c.on_time_sync(e.detail);
});
this.node.on("auto_push", function(e) {
c.on_auto_push(e.detail);
});
this.node.on("cancel_auto", function(e) {
c.on_cancel_auto(e.detail);
});
},
on_auto_push: function(e) {
var t = this;
e.user_id == cc.vv.userMgr.userId && 1 == e.is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
on_cancel_auto: function(e) {},
on_time_sync: function(e) {
var t = Math.floor((e.end - e.sys) / 1e3);
this._turn_time = t;
console.log("服务器倒计时", t);
var i = cc.vv.gameNetMgr.turn;
this.showHeadTime(i, t);
},
onGameBeign: function() {
var t = this;
this._bao1Map = {};
this._bao2Map = {};
this.hideClear();
this.gameRoot.active = !0;
var e = cc.vv.gameNetMgr.seats;
for (var i in e) {
var n = e[i];
this.initMahjongs(n.seatindex);
n.userid == cc.vv.userMgr.userId && n.is_auto && 1 == n.is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
var a = cc.vv.gameNetMgr.turn, s = cc.vv.gameNetMgr.getLocalIndex(a);
if (0 == s) {
this._folds[s].removeAllChildren();
}
this.showOperation();
this.addGameTeXiao();
},
addGameTeXiao: function() {
if (!this.anim) {
var t = this;
cc.vv.UILoader.loadRes("game/pdk/prefabs/pdktexiao", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.gameRoot, function(e) {
t.anim = e.getComponent(cc.Animation);
});
});
}
},
showOperation: function() {
if (cc.vv.gameNetMgr.isSelfTurn()) {
this.btnChuPai.active = !0;
this.btnGuo.active = !0;
this.btnTishi.active = !1;
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.now_card_data, i = cc.vv.gameNetMgr.getSelfData();
if (!i) return;
var n = i.holds;
if (cc.vv.poker_util.check_must(n, e, t)) {
this.btnGuo.active = !0;
this.btnTishi.active = !1;
} else {
this.btnGuo.active = !1;
this.btnTishi.active = !0;
}
var a = !1;
if (0 == this.btnGuo.active) {
var s = 256 & cc.vv.gameNetMgr.conf.rule_index;
this.btnGuo.active = 0 == s;
a = this.btnGuo.active;
0 == e && (this.btnGuo.active = !1);
}
if (1 == this.btnGuo.active && 0 == a) {
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
var c = this;
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function(e) {
c.guo();
})));
}
if (1 == this.btnTishi.active && 1 == n.length) {
this.btnTishi.active = !1;
this.btnChuPai.active = !1;
c = this;
this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
console.log("------c:" + n);
c._chuPaiTempArr = n;
c.chuPai();
})));
}
if (0 == e) {
if (0 != cc.vv.poker_util.check_out_type(n)) {
var r = !1;
4 < n.length && (r = cc.vv.poker_util.pdk_check_has_boom(n));
if (0 == r) {
this.btnTishi.active = !1;
this.btnChuPai.active = !1;
c = this;
this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
c._chuPaiTempArr = n;
c.chuPai();
})));
}
}
}
} else {
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
}
},
showOutCard: function(i) {
var n = cc.vv.gameNetMgr.getSeatByID(i.out_user), e = this._chupaiSprite[i.user_index], t = cc.vv.poker_util.check_out_type(i.out_cards_data), a = cc.vv.poker_util.getCardTypeName(t);
5 == t && (3 == i.out_cards_data.length ? a = "三个头" : 4 == i.out_cards_data.length && (a = "三带一"));
e.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
e.runAction(s);
var c = this;
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
if (0 != cc.vv.gameNetMgr.seats.length) {
var e = cc.vv.gameNetMgr.seats[i.si].holds;
if (e && 1 == e.length && !c._bao1Map[i.user_index]) {
var t = c.getAudioURLByPDK(44, n.sex);
cc.vv.audioMgr.playSFX(t);
c._bao1Map[i.user_index] = !0;
}
}
})));
if (1 == t || 2 == t) var r = cc.vv.poker_util.get_poker_value(i.out_cards_data[0]);
r = 0;
var o = -1;
1 != t && 2 != t || (r = cc.vv.poker_util.get_poker_value(i.out_cards_data[0]));
switch (t) {
case 0:
o = Math.floor(3 * Math.random());
break;

case 1:
o = 52 == i.out_cards_data[0] ? 16 : 53 == i.out_cards_data[0] ? 17 : r;
break;

case 2:
o = r + 15;
break;

case 3:
this.anim.play("pdk-liandui");
o = 32;
break;

case 4:
this.anim.play("pdk-shunzi");
o = 33;
break;

case 5:
o = 34;
break;

case 6:
this.anim.play("pdk-feiji");
o = 35;
break;

case 7:
this.anim.play("pdk-zhadan");
o = 36;
cc.vv.audioMgr.playSFX("resources/game/pdk/sounds/boom.mp3");
break;

case 8:
o = 33;
}
var h = this.getAudioURLByPDK(o, n.sex);
cc.vv.audioMgr.playSFX(h);
},
getAudioURLByPDK: function(e, t) {
return 1 == t ? "resources/game/pdk/sounds/man/" + e + ".mp3" : "resources/game/pdk/sounds/women/" + e + ".mp3";
},
showFoldsCard: function(e, t) {
var i = this._folds[t];
i.removeAllChildren();
var n = this._halfLen;
console.log("halfLen---", this.halfLen);
!0 === cc.vv.match.nowMatch && (e = e[1]);
e.sort(function(e, t) {
return t - e;
});
for (var a = 0; a < e.length; a++) {
var s = e[a], c = cc.instantiate(this.pk_prefab);
c.parent = i;
var r = 0 + 27 * a, o = 0, h = 0;
if (1 == t) {
h = 0;
var l = e.length >= n ? n : e.length;
r = n < a ? h + 27 * a - 27 * (n + 1) - 27 * l : 27 * a - 27 * l;
o = n < a ? -50 : 0;
} else if (3 == t) {
h = 0;
r = n < a ? h + 27 * a - 27 * (n + 1) : 27 * a;
o = n < a ? -50 : 0;
} else {
o = 0;
r = 27 * a - (h = e.length / 2 * 27);
}
c.setPosition(r, o);
this.setSpriteFrameByMJID(c, s);
}
},
sortHolds: function(e) {
e.holds && e.holds.sort(function(e, t) {
return t - e;
});
return e.holds;
},
initMahjongs: function(e) {
var t = this, i = cc.vv.gameNetMgr.seats, n = i[e];
if (n) {
var a = this.sortHolds(n);
if (null != a) {
console.log("initMahjongs", e, h);
this._halfLen = 4 == i.length ? 14 : 8;
var s = cc.vv.gameNetMgr.getLocalIndex(e);
1 == a.length && (this._BDanMcList[s].active = !0);
if (cc.vv.gameNetMgr.pdk_red_ten != this._pdk_red_ten) {
this.hideRedTenList();
this._pdk_red_ten = cc.vv.gameNetMgr.pdk_red_ten;
var c = cc.vv.gameNetMgr.getLocalIndex(this._pdk_red_ten);
this._pdk_red_tenList[c].active = !0;
t._pdk_red_tenList[c].getChildByName("donghua").getComponent(cc.Animation).play("hongtaoshizhaniao");
}
if (0 == s) {
this._myMJArr = [];
var r = this._myholds;
if (!1 === cc.vv.match.nowMatch) {
var o = 25;
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
r.scaleX = 1.5;
r.scaleY = 1.5;
o = 25;
} else {
r.scaleX = 2.1;
r.scaleY = 2.1;
o = 35;
}
} else {
r.scaleX = 2.1;
r.scaleY = 2.1;
o = 35;
}
var h = !1;
if (1 == this._showEff) {
h = !0;
this._showEff = !1;
}
r.removeAllChildren();
var l = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var d = 0; d < a.length; d++) {
var u = a[d], v = cc.instantiate(this.pk_prefab);
v.parent = r;
var g = 0 + d * o - l * o;
v.setPosition(g, 0);
v.poker_id = u;
v.pokerIndex = d;
if (v.showEff = h) {
this.setSpriteFrameByMJID(v, -1);
var _ = cc.sequence(cc.hide(), cc.delayTime(.05 * d), cc.show(), cc.delayTime(.1 * (a.length - d)), cc.callFunc(function(e) {
e.showEff = !1;
t.setSpriteFrameByMJID(e, e.poker_id);
}, v));
v.runAction(_);
this.setSpriteFrameByMJID(v, u);
} else this.setSpriteFrameByMJID(v, u);
v.isRightPoke = d == a.length - 1;
this.onMJtprefabEvent(v);
this._myMJArr.push(v);
}
this._chuPaiTempArr = [];
} else if (!0 === cc.vv.match.nowMatch) {
var f = n.holds.length;
this._seatNodes[s].getComponent("Seat").setPaiCount(f);
} else if (64 & cc.vv.gameNetMgr.conf.rule_index) {
f = n.holds.length;
this._seatNodes[s].getComponent("Seat").setPaiCount(f);
} else this._seatNodes[s].getComponent("Seat").setPaiCount(-1);
0 < n.folds.length && this.showFoldsCard(n.folds[n.folds.length - 1], s);
}
}
},
updateMJPrefabNode: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.getComponent("MyPoker");
console.log("node.poker_id:" + e.poker_id);
if (1 != e.showEff) {
for (var i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e.poker_id == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
console.log("---_chuPaiTempArr---add:" + e.poker_id);
this._chuPaiTempArr.push(e.poker_id);
}
}
},
onMJtprefabEvent: function(o) {
this.selectNode = null;
this.isTouchMove = !1;
o.on("touchstart", function(e) {
o.parent == this._myholds && (this.selectNode = null);
}.bind(this));
o.on("touchmove", function(e) {
if (o.parent == this._myholds) {
this.isTouchMove = !0;
var t = this._myholds.convertToNodeSpace(e.touch.getLocation()), i = !1;
if (this.selectNode) {
var n = this.selectNode.width * this.selectNode.scaleX, a = this.selectNode.height * this.selectNode.scaleX;
console.log("rightpoke?", e.target.isRightPoke);
var s = cc.rect(this.selectNode.x - n / 2, this.selectNode.y - a / 2, n * (this.selectNode.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (i = !0);
}
if (0 == i) for (var c = 0; c < this._myholds.getChildren().length; c++) {
var r = this._myholds.getChildren()[c];
n = r.width * r.scaleX, a = r.height * r.scaleX, s = cc.rect(r.x - n / 2, r.y - a / 2, n * (r.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (this.selectNode = r).getComponent("MyPoker").setBlack(!0);
}
}
}.bind(this));
o.on("touchcancel", function(e) {
this.freshAllBlack();
this.selectNode = null;
this.isTouchMove = !1;
console.log("------------touchcancel:");
}.bind(this));
o.on("touchend", function(e) {
console.log("------------touchend:");
this.selectNode = null;
this.isTouchMove = !1;
this.freshAllBlack();
}.bind(this));
cc.vv.utils.addClickEvent(o, this.node, "MJGame_PDK", "onMJClicked");
},
onMJClicked: function(e) {
console.log("------------touchclick:");
cc.vv.audioMgr.playBtnClick();
if (!this.isTouchMove) {
var t = e.target;
this.updateMJPrefabNode(t);
console.log("node.poker_id:" + t.poker_id);
}
},
freshAllBlack: function() {
for (var e in this._myholds.getChildren()) {
var t = this._myholds.getChildren()[e];
if (t.getComponent("MyPoker").isBlack()) {
this.updateMJPrefabNode(t);
t.getComponent("MyPoker").setBlack(!1);
}
}
},
onGameOverShow: function(e) {
this.hideClear();
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = t[i], a = this.sortHolds(n);
if (null != a) {
var s = cc.vv.gameNetMgr.getLocalIndex(i);
if (0 == s) {
(d = this._myholds).removeAllChildren();
var c = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var r = 0; r < a.length; r++) {
var o = a[r], h = cc.instantiate(this.pk_prefab);
h.parent = d;
var l = 0 + 25 * r - 25 * c;
h.setPosition(l, 50);
this.setSpriteFrameByMJID(h, o);
}
} else {
var d = this._folds[s];
0 < n.holds.length && this.showFoldsCard(n.holds, s);
}
var u = e.detail.end_seats_data[i];
if (u) {
var v = cc.vv.gameNetMgr.getSeatByID(u.user_id).holds, g = cc.vv.gameNetMgr.getPDK_paiNum();
v.length || console.log("-------------log");
if (v.length == g) {
var _ = this;
d.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
_.anim.play("quanguan");
})));
}
}
}
}
},
call_game_over: function() {
var t = this;
1 != cc.vv.gameNetMgr.gameOverData.force ? this.node && this.node.runAction(cc.sequence(cc.delayTime(2.5), cc.callFunc(function(e) {
t.onGameOver();
}))) : this.onGameOver();
},
onGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/pdk/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/pdk/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onOptionClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
console.log(e.target.pai);
"btn_chuPai" == e.target.name ? this.chuPai() : "btn_guo" == e.target.name ? this.guo() : "btn_chuPai_test" == e.target.name ? this.chuPai() : "btn_guo_test" == e.target.name ? this.guo() : "btn_tishi" == e.target.name && this.tishi();
},
getHoldsPokerByID: function(e) {
for (var t = null, i = 0; i < this._myMJArr.length; ++i) {
var n = this._myMJArr[i];
if (1 == n.active) {
var a = n.getComponent("MyPoker");
if (a.poker_id == e && 0 == a.isShowUp) {
t = a;
break;
}
}
}
return t;
},
tishi: function() {
this._chuPaiTempArr = [];
for (var e = 0; e < this._myMJArr.length; ++e) {
var t = this._myMJArr[e];
if (1 == t.active) {
(n = t.getComponent("MyPoker")).setDown();
}
}
cc.vv.poker_util.check_out_tishi();
var i = cc.vv.gameNetMgr.tishi_card_data;
for (e = 0; e < i.length; ++e) {
var n;
(n = this.getHoldsPokerByID(i[e])).setUp();
this._chuPaiTempArr.push(n.poker_id);
}
},
guo: function() {
if (1 != cc.vv.gameNetMgr.isAuto()) {
cc.vv.gameNetMgr.check_out_double_data = null;
var e = JSON.parse(cc.vv.msgTemp.CS_out_card);
e.card_type = 0;
e.cards_data = [];
var t = [];
t[0] = 0;
t[1] = [];
!0 === cc.vv.match.nowMatch ? cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("match_out_card", t) : cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("out_card", e);
}
},
chuPai: function() {
if (1 != cc.vv.gameNetMgr.isAuto()) {
if (1 == cc.vv.gameNetMgr.black_three) {
for (var e = !1, t = 0; t < this._chuPaiTempArr.length; t++) if (3 == this._chuPaiTempArr[t]) {
e = !0;
break;
}
if (0 == e) {
cc.vv.alert.show("提示", "第一手牌必须出黑桃3");
return;
}
}
var i = JSON.parse(cc.vv.msgTemp.CS_out_card);
i.cards_data = this._chuPaiTempArr;
i.card_type = cc.vv.poker_util.check_out_type(this._chuPaiTempArr);
var n = [];
n[0] = cc.vv.poker_util.check_out_type(this._chuPaiTempArr);
n[1] = this._chuPaiTempArr;
console.log(n);
0 < i.card_type ? !(cc.vv.gameNetMgr.check_out_double_data = null) === cc.vv.match.nowMatch ? cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("match_out_card", n) : cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("out_card", i) : cc.vv.alert.show("提示", "出牌不符合规则！");
}
},
timer: function(e) {
this.count = e;
this.callback = function() {
if (0 == this.count) {
this.unschedule(this.callback);
this.node.removeChild(this.ThisItem, !0);
}
this.count--;
};
this.schedule(this.callback, 1);
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_PDK: "poker_utils_PDK"
} ],
MJGame_PPL: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "79742tKMHhFH6WwT2BjkP0F", "MJGame_PPL");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
texiao_ppl: {
default: null,
type: cc.Prefab
},
show_lb: cc.Node,
_seatsList: [],
_seatNodes: [],
_chuPaiTempArr: [],
_public_node_list: [],
_my_node_list: [],
_Rival_node_list: [],
_my_Operation_node_list: [],
_lb_node_list: [],
_eff_lb_list: [],
result_lb_node_list: [],
result_over_node_list: [],
_showBackList: []
},
onLoad: function() {
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.poker_util = e("poker_utils_pinpinle");
cc.vv.msg_templete = e("msgdefine_pinpinle").msg_templete;
this.initView();
this.initEventHandlers();
this.gameRoot.active = !0;
if (2 == cc.vv.gameNetMgr.gamestate) {
this.onGameBeign();
this.updateSyncData();
}
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/pinpinle/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("players_node");
t.active = !0;
var i = [ "p0", "p1" ], n = 0;
for (n = 0; n < i.length; ++n) {
var a = i[n], s = t.getChildByName(a);
this._seatNodes.push(s.getChildByName("seat"));
this._seatsList.push(s.getChildByName("seat").getComponent("Seat"));
}
this.operation_node = e.getChildByName("operation_node");
this.operation_node.active = !1;
var c = this.operation_node.getChildByName("public_node");
for (n = 0; n < c.children.length; n++) {
(h = (o = c.children[n]).getChildByName("ppl_item")).index = n;
this._public_node_list.push(h);
}
this.my_node = this.operation_node.getChildByName("my_node");
this.my_node.active = !0;
for (n = 0; n < this.my_node.children.length; n++) {
(o = this.my_node.children[n]).index = n;
cc.vv.utils.addClickEvent(o, this.node, "MJGame_PPL", "onMJClicked_changeCard");
this._my_node_list.push(o);
}
var r = this.operation_node.getChildByName("Rival_node");
r.active = !0;
for (n = 0; n < r.children.length; n++) {
(h = (o = r.children[n]).getChildByName("ppl_item")).index = n;
this._Rival_node_list.push(h);
}
this.my_Operation_node = this.operation_node.getChildByName("my_Operation_node");
this.my_Operation_node.active = !0;
for (n = 0; n < this.my_Operation_node.children.length; n++) {
var o, h;
(h = (o = this.my_Operation_node.children[n]).getChildByName("ppl_item")).index = n;
this.touchEvent(h);
cc.vv.utils.addClickEvent(h, this.node, "MJGame_PPL", "onMyOperationClick");
this._my_Operation_node_list.push(h);
}
(v = this.operation_node.getChildByName("lb_node")).active = !0;
for (n = 0; n < v.children.length; n++) {
var l = v.children[n], d = {};
d.lb_decs = l.getChildByName("lb_decs").getComponent(cc.Label);
d.lb_win = l.getChildByName("lb_win").getComponent(cc.Label);
this._lb_node_list.push(d);
}
this._tip_decs = this.operation_node.getChildByName("tip_decs");
this._lb_finish = e.getChildByName("lb_finish");
this._lb_finish.active = !1;
this._chupaidrag = this.operation_node.getChildByName("chupaidrag");
this._chupaidrag.active = !1;
this.effect_node = this.operation_node.getChildByName("effect_node");
this.effect_node.active = !1;
var u = this.effect_node.getChildByName("bg_Node");
for (n = 0; n < u.children.length; n++) this._showBackList.push(u.children[n]);
this._sp_node = this.effect_node.getChildByName("sp_node");
this.sp_win = this._sp_node.getChildByName("sp_win");
this.sp_win.active = !1;
this.eff_lb_node = this.effect_node.getChildByName("eff_lb_node");
this.eff_lb_node.active = !1;
for (n = 0; n < this.eff_lb_node.children.length; n++) {
var v = this.eff_lb_node.children[n];
(g = {}).lb_decs_win = v.getChildByName("lb_decs_win").getComponent(cc.Label);
g.lb_decs_lost = v.getChildByName("lb_decs_lost").getComponent(cc.Label);
g.lb_decs_score = v.getChildByName("lb_decs_score").getComponent(cc.Label);
this._eff_lb_list.push(g);
}
this.result_lb_node = this.effect_node.getChildByName("result_lb_node");
this.result_lb_node.active = !1;
for (n = 0; n < this.result_lb_node.children.length; n++) {
v = this.result_lb_node.children[n];
(g = {}).lb_node = v;
g.lb_decs_win = v.getChildByName("lb_decs_win").getComponent(cc.Label);
g.lb_decs_score = v.getChildByName("lb_decs_score").getComponent(cc.Label);
this.result_lb_node_list.push(g);
}
this.result_over_node = this.effect_node.getChildByName("result_over_node");
this.result_over_node.active = !1;
var g, _ = this.result_over_node.getChildByName("lb_node");
(g = {}).lb_decs_win = _.getChildByName("lb_decs_win").getComponent(cc.Label);
g.lb_decs_lost = _.getChildByName("lb_decs_lost").getComponent(cc.Label);
this.result_over_node_list.push(g);
this.clearAll();
},
onMJClicked_changeCard: function(e) {
var t = e.target;
if (-1 == t.getComponent("ppl_Item").getID()) {
var i = this._chuPaiTempArr[0];
if (null != i) {
var n = i.index, a = t.index, s = JSON.parse(cc.vv.msg_templete.CS_card_pose);
s.from_index = n;
s.to_index = a;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("card_pose", s);
for (var c = 0; c < this._chuPaiTempArr.length; c++) {
this._chuPaiTempArr[c].getComponent("ppl_Item").setDown();
this._chuPaiTempArr.splice(c, 1);
}
}
}
},
onMyOperationClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target, i = t.getComponent("ppl_Item");
console.log(i.getID());
for (var n = i.getID(), a = !1, s = 0; s < this._chuPaiTempArr.length; s++) {
var c = this._chuPaiTempArr[s].getComponent("ppl_Item").getID();
if (-1 != c && n == c && 1 == i.isShowUp) {
a = !0;
break;
}
}
for (var r = 0; r < this._chuPaiTempArr.length; r++) {
this._chuPaiTempArr[r].getComponent("ppl_Item").setDown();
this._chuPaiTempArr.splice(r, 1);
}
if (0 == a) {
i.setUp();
this._chuPaiTempArr.push(t);
} else {
i.setDown();
this._chuPaiTempArr = [];
}
},
touchEvent: function(r) {
r.y;
var e = this, o = function() {
return 0 == e.my_Operation_node.active || (-1 == r.getComponent("ppl_Item").getID() || void 0);
};
r.on(cc.Node.EventType.TOUCH_START, function(e) {
if (1 != o()) {
r.interactable = r.getComponent(cc.Button).interactable;
o();
r.opacity = 255;
this._chupaidrag.active = !1;
var t = r.getComponent("ppl_Item");
this._chupaidrag.getChildByName("card").getComponent(cc.Sprite).spriteFrame = t.pk_img.getComponent(cc.Sprite).spriteFrame;
this._chupaidrag.x = e.getLocationX() - cc.director.getVisibleSize().width / 2;
this._chupaidrag.y = e.getLocationY() - cc.director.getVisibleSize().height / 2;
}
}.bind(this));
r.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
if (1 != o() && !(Math.abs(e.getDeltaX()) + Math.abs(e.getDeltaY()) < .5)) {
this._chupaidrag.active = !0;
r.opacity = 150;
this._chupaidrag.opacity = 255;
this._chupaidrag.x = e.getLocationX() - cc.director.getVisibleSize().width / 2;
this._chupaidrag.y = e.getLocationY() - cc.director.getVisibleSize().height / 2;
}
}.bind(this));
r.on(cc.Node.EventType.TOUCH_END, function(e) {
if (1 != o()) {
this._chupaidrag.active = !1;
r.opacity = 255;
for (var t = this.my_node.convertToNodeSpace(e.touch.getLocation()), i = 0; i < this._my_node_list.length; i++) {
var n = this._my_node_list[i], a = n.width * n.scaleX, s = n.height * n.scaleX, c = cc.rect(n.x - a / 2, n.y - s / 2, a, s);
cc.rectContainsPoint(c, t) && this.pushOut(r, n);
}
}
}.bind(this));
r.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
if (1 != o()) {
this._chupaidrag.active = !1;
r.opacity = 255;
for (var t = this.my_node.convertToNodeSpace(e.touch.getLocation()), i = 0; i < this._my_node_list.length; i++) {
var n = this._my_node_list[i], a = n.width * n.scaleX, s = n.height * n.scaleX, c = cc.rect(n.x - a / 2, n.y - s / 2, a, s);
cc.rectContainsPoint(c, t) && this.pushOut(r, n);
}
}
}.bind(this));
},
pushOut: function(e, t) {
if (null != e && null != t) {
var i = e.index, n = t.index, a = JSON.parse(cc.vv.msg_templete.CS_card_pose);
a.from_index = i;
a.to_index = n;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("card_pose", a);
for (var s = 0; s < this._chuPaiTempArr.length; s++) {
this._chuPaiTempArr[s].getComponent("ppl_Item").setDown();
this._chuPaiTempArr.splice(s, 1);
}
}
},
clearAll: function() {
this._tip_decs.active = !1;
this._chupaidrag.active = !1;
this._lb_finish.active = !1;
this.effect_node.active = !1;
var e = 0;
for (e = 0; e < this._public_node_list.length; e++) {
this._public_node_list[e].getComponent("ppl_Item").clearNode();
}
for (e = 0; e < this._my_node_list.length; e++) {
this._my_node_list[e].getComponent("ppl_Item").clearNode();
}
for (e = 0; e < this._Rival_node_list.length; e++) {
this._Rival_node_list[e].getComponent("ppl_Item").clearNode();
}
for (e = 0; e < this._my_Operation_node_list.length; e++) {
this._my_Operation_node_list[e].getComponent("ppl_Item").clearNode();
}
for (e = 0; e < this._lb_node_list.length; e++) {
var t = this._lb_node_list[e];
t.lb_decs.string = "";
t.lb_win.string = "";
}
for (e = 0; e < this._showBackList.length; e++) this._showBackList[e].active = !1;
this.sp_win.active = !1;
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("game_begin_push", function(e) {
o.onGameBeign();
});
this.node.on("game_state_push", function(e) {});
this.node.on("game_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.updateSeatHolds(t.seatindex, t.holds);
});
this.node.on("pub_cards_push", function(e) {
o.on_pub_cards_push(e.detail.public_cards);
});
this.node.on("ran_cards_push", function(e) {
o.on_ran_cards_push(e.detail.random_cards);
});
this.node.on("card_pose_push", function(e) {
o.update_Card_pose_push(e.detail);
});
this.node.on("pose_result_push", function(e) {
o.updatePoseResult(e.detail);
});
this.node.on("pose_finish_push", function(e) {
o.updatePoseFinish(e.detail);
});
this.node.on("game_over", function(e) {
1 != e.detail.force && o.showGamefinish(e.detail);
});
this.node.on("fore_game_over", function(e) {
o.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
o.onShowGameResult();
});
this.node.on("new_turn_push", function(e) {
o._lb_finish.active = !1;
o.updateTurnTime(e.detail.count_down);
cc.vv.audioMgr.playSFX("resources/game/pinpinle/sounds/deal_card1.mp3");
});
this.node.on("turnTimerOver", function(e) {
o.onTurnTimerOver();
});
this.node.on("fresh_all_score", function(e) {
if (cc.vv.gameNetMgr.gameOverData) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i];
if (n) {
var a = n.total_score, s = n.end_score, c = cc.vv.gameNetMgr.getLocalIndex(i), r = o._seatNodes[c];
t[i].score = a;
r.getComponent("Seat").setScore(a, s);
}
}
o.beginNextGame();
}
});
},
call_game_over: function() {
var e = cc.vv.gameNetMgr.gameOverData;
1 != e.force && 1 != e.all_give_up_call || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/pinpinle/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/pinpinle/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
showHeadTime: function(e) {
this._seatsList[0].showTimer(e);
},
updateTurnTime: function(e) {
var t = e;
console.log("服务器倒计时", t);
this.showHeadTime(t);
},
onTurnTimerOver: function(e) {},
onGameBeign: function() {
this.clearAll();
this.gameRoot.active = !0;
this.show_lb.active = !1;
this.operation_node.active = !0;
},
beginNextGame: function() {
this.clearAll();
this.show_lb.active = !0;
},
updateSyncData: function() {
var e = cc.vv.gameNetMgr.SyncData;
if (e) {
this.on_pub_cards_push(e.public_cards);
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; i++) {
var n = t[i];
n.seatindex == cc.vv.gameNetMgr.seatIndex ? this.on_ran_cards_push(n.random_cards) : 1 == n.finished && (this._lb_finish.active = !0);
if (n.pose_data) for (var a = n.pose_data, s = 0; s < a.length; s++) {
var c = a[s], r = c[0], o = c[1];
n.holds[r] = o;
}
this.updateSeatHolds(n.seatindex, n.holds);
var h = n.pose_result;
for (var l in h) this.updatePoseResult(h[l]);
}
var d = e.count_down;
this.showHeadTime(d);
}
},
updateSeatHolds: function(e, t) {
this._chupaidrag.active = !1;
var i = [];
i = 0 == cc.vv.gameNetMgr.getLocalIndex(e) ? this._my_node_list : this._Rival_node_list;
for (var n = 0; n < t.length; n++) {
var a = t[n], s = i[n].getComponent("ppl_Item");
s.clearNode();
-1 != a && s.setValueAndColor(a);
}
},
on_pub_cards_push: function(e) {
for (var t = 0; t < e.length; t++) {
var i = e[t], n = this._public_node_list[t].getComponent("ppl_Item");
n.clearNode();
n.setValueAndColor(i);
}
},
on_ran_cards_push: function(e) {
for (var t = 0; t < this._chuPaiTempArr.length; t++) {
this._chuPaiTempArr[t].getComponent("ppl_Item").setDown();
this._chuPaiTempArr.splice(t, 1);
}
for (var i = 0, n = 0; n < e.length; n++) -1 != e[n] && i++;
var a = i - 2;
if (0 == a) {
this._tip_decs.getChildByName("tip_decs").getComponent(cc.Label).string = "等待对手完成放牌...";
this._tip_decs.getChildByName("tip_decs").getChildByName("New Label").getComponent(cc.Label).string = "";
} else {
this._tip_decs.getChildByName("tip_decs").getComponent(cc.Label).string = "请选择    张手牌放入我方牌区";
this._tip_decs.getChildByName("tip_decs").getChildByName("New Label").getComponent(cc.Label).string = a;
}
this._tip_decs.active = !0;
for (n = 0; n < this._my_Operation_node_list.length; n++) {
var s = e[n], c = this._my_Operation_node_list[n].getComponent("ppl_Item");
c.clearNode();
-1 != s && c.setValueAndColor(s);
}
},
update_Card_pose_push: function(e) {
var t = e.to_index, i = e.card, n = this._my_node_list[t], a = n.getComponent("ppl_Item");
a.clearNode();
null != i && a.setValueAndColor(i);
var s = n.getChildByName("tx_nn");
if (!s) {
(s = cc.instantiate(this.texiao_ppl)).parent = n;
s.name = "tx_nn";
}
s.getComponent(cc.Animation).play("texiao_ppl");
cc.vv.audioMgr.playSFX("resources/game/pinpinle/sounds/dfw_finger_screenresult.mp3");
},
updatePoseResult: function(e) {
cc.vv.gameNetMgr.seats[e.index];
var t = e.index, i = Math.floor(e.row), n = e.card_type, a = e.card_value, s = e.win;
i = t == cc.vv.gameNetMgr.seatIndex ? i + 3 : i;
var c = this._lb_node_list[i];
if (c) {
c.lb_decs.string = cc.vv.poker_util.poker_row_decs(n, a);
c.lb_win.string = "";
null != s && (c.lb_win.string = 1 == s ? "赢" : "");
}
},
updatePoseFinish: function(e) {
cc.vv.gameNetMgr.getSeatIndexByID(e.user_id) != cc.vv.gameNetMgr.seatIndex && (this._lb_finish.active = !0);
},
showGamefinish: function(e) {
this._lb_finish.active = !1;
this.effect_node.active = !0;
this.eff_lb_node.active = !0;
this.result_lb_node.active = !1;
this.result_over_node.active = !1;
for (var t = 0; t < this._lb_node_list.length; t++) {
var i = this._lb_node_list[t];
i.lb_decs.string = "";
i.lb_win.string = "";
}
for (t = 0; t < this._eff_lb_list.length; t++) {
var n = this._eff_lb_list[t];
n.lb_decs_win.string = "";
n.lb_decs_win.node.getChildByName("lb").getComponent(cc.Label).string = "";
n.lb_decs_lost.string = "";
n.lb_decs_lost.node.getChildByName("lb").getComponent(cc.Label).string = "";
n.lb_decs_score.string = "";
console.log("-------------this._eff_lb_list:" + t);
}
for (var a = cc.vv.gameNetMgr.seats, s = [], c = [], r = 0; r < a.length; r++) r == cc.vv.gameNetMgr.seatIndex ? s = a[r].pose_result : c = a[r].pose_result;
var o = this, h = .2, l = 0, d = 0, u = 0;
for (t = 0; t < 3; t++) {
var v = {};
v.myData = s[t];
if (1 == s[t].win) {
u++;
l += cc.vv.poker_util.poker_row_score_win(s[t].card_type, s[t].card_value);
} else l += cc.vv.poker_util.poker_row_score(s[t].card_type, s[t].card_value);
v.otherData = c[t];
1 == c[t].win ? d += cc.vv.poker_util.poker_row_score_win(c[t].card_type, c[t].card_value) : d += cc.vv.poker_util.poker_row_score(c[t].card_type, c[t].card_value);
v.index = t;
this.node.runAction(cc.sequence(cc.delayTime(h), cc.callFunc(function(e, t) {
o.playGameEffect(t);
}, null, v)));
h += 2;
}
var g = {};
g.mytotol_score = l;
g.othertotal_score = d;
g.isMyWin_count = u;
this.node.runAction(cc.sequence(cc.delayTime(h), cc.callFunc(function(e, t) {
o.showResult(t);
}, null, g)));
this.node.runAction(cc.sequence(cc.delayTime(h + 2), cc.callFunc(function(e, t) {
o.showResult_over();
})));
this.node.runAction(cc.sequence(cc.delayTime(h + 3), cc.callFunc(function(e, t) {
o.showGameOver();
})));
},
playGameEffect: function(e) {
for (var t = 0; t < this._showBackList.length; t++) this._showBackList[t].active = !1;
var i = e.index;
this.sp_win.active = !1;
if (0 == i) {
this._sp_node.setPosition(-400, 155);
this._showBackList[0].active = !0;
} else if (1 == i) {
this._sp_node.setPosition(-400, 30);
this._showBackList[1].active = !0;
} else {
this._sp_node.setPosition(-400, -95);
this._showBackList[2].active = !0;
}
cc.vv.audioMgr.playSFX("resources/game/pinpinle/sounds/ppl_score_1.mp3");
var n = null, a = null, s = "", c = e.myData, r = c.win, o = i + 3, h = cc.vv.poker_util.poker_row_decs(c.card_type, c.card_value), l = cc.vv.poker_util.poker_row_score(c.card_type, c.card_value), d = e.otherData, u = i, v = cc.vv.poker_util.poker_row_decs(d.card_type, d.card_value), g = cc.vv.poker_util.poker_row_score(d.card_type, d.card_value);
if (1 == r) {
this.sp_win.setPosition(290, 0);
this.sp_win.active = !0;
this._eff_lb_list[o].lb_decs_win.string = h;
this._eff_lb_list[o].lb_decs_win.node.getChildByName("lb").getComponent(cc.Label).string = "+" + l;
this._eff_lb_list[o].lb_decs_lost.string = "";
this._eff_lb_list[o].lb_decs_lost.node.getChildByName("lb").getComponent(cc.Label).string = "";
this._eff_lb_list[o].lb_decs_score.string = "单行胜+10";
n = this._eff_lb_list[o].lb_decs_score.node;
a = this._eff_lb_list[o].lb_decs_win.node.getChildByName("lb").getComponent(cc.Label);
s = cc.vv.poker_util.poker_row_score_win(c.card_type, c.card_value);
n.setPosition(0, -150);
this._eff_lb_list[u].lb_decs_win.string = "";
this._eff_lb_list[u].lb_decs_win.node.getChildByName("lb").getComponent(cc.Label).string = "";
this._eff_lb_list[u].lb_decs_lost.string = v;
this._eff_lb_list[u].lb_decs_lost.node.getChildByName("lb").getComponent(cc.Label).string = "+" + g;
this._eff_lb_list[u].lb_decs_score.string = "";
} else {
this.sp_win.setPosition(0, 0);
this.sp_win.active = !0;
this._eff_lb_list[o].lb_decs_win.string = "";
this._eff_lb_list[o].lb_decs_win.node.getChildByName("lb").getComponent(cc.Label).string = "";
this._eff_lb_list[o].lb_decs_lost.string = h;
this._eff_lb_list[o].lb_decs_lost.node.getChildByName("lb").getComponent(cc.Label).string = "+" + l;
this._eff_lb_list[o].lb_decs_score.string = "";
this._eff_lb_list[u].lb_decs_win.string = v;
this._eff_lb_list[u].lb_decs_win.node.getChildByName("lb").getComponent(cc.Label).string = "+" + g;
this._eff_lb_list[u].lb_decs_lost.string = "";
this._eff_lb_list[u].lb_decs_lost.node.getChildByName("lb").getComponent(cc.Label).string = "";
this._eff_lb_list[u].lb_decs_score.string = "单行胜+10";
n = this._eff_lb_list[u].lb_decs_score.node;
a = this._eff_lb_list[u].lb_decs_win.node.getChildByName("lb").getComponent(cc.Label);
s = cc.vv.poker_util.poker_row_score_win(d.card_type, d.card_value);
n.setPosition(0, 100);
}
n.active = !0;
var _ = cc.p(0, -30), f = {};
f.eff_lb_node_sc = n;
f.win_lb_node = a;
f.win_total_score = s;
n.runAction(cc.sequence(cc.delayTime(.2), cc.moveTo(.7, _), cc.callFunc(function(e, t) {
t.eff_lb_node_sc.active = !1;
t.win_lb_node.string = "+" + t.win_total_score;
}, null, f)));
},
showResult: function(e) {
this.result_lb_node.active = !0;
this.eff_lb_node.active = !1;
var t = e.mytotol_score, i = e.othertotal_score, n = e.isMyWin_count;
this.result_lb_node_list[1].lb_decs_win.string = "三行+" + t;
this.result_lb_node_list[0].lb_decs_win.string = "三行+" + i;
this.result_lb_node_list[1].lb_decs_score.string = "";
this.result_lb_node_list[0].lb_decs_score.string = "";
var a = null, s = null, c = "0";
if (0 == n) {
this.result_lb_node_list[0].lb_decs_score.string = "三行胜+20";
a = this.result_lb_node_list[0].lb_decs_score.node;
s = this.result_lb_node_list[0].lb_decs_win;
c = "三行+" + (i + 20);
} else if (3 == n) {
this.result_lb_node_list[1].lb_decs_score.string = "三行胜+20";
a = this.result_lb_node_list[1].lb_decs_score.node;
s = this.result_lb_node_list[1].lb_decs_win;
c = "三行+" + (t + 20);
}
if (a) {
a.active = !0;
a.setPosition(0, 30);
var r = cc.p(0, -9);
a.runAction(cc.sequence(cc.delayTime(.5), cc.moveTo(.7, r), cc.callFunc(function() {
a.active = !1;
s.string = c;
cc.vv.audioMgr.playSFX("resources/game/pinpinle/sounds/ppl_score_2.mp3");
})));
}
},
showResult_over: function() {
this.result_lb_node_list[0].lb_node.setPosition(100, 215);
this.result_lb_node_list[1].lb_node.setPosition(100, -176);
var e = cc.p(100, -176);
this.result_lb_node_list[0].lb_node.runAction(cc.sequence(cc.moveTo(.5, e), cc.callFunc(function() {})));
var c = this;
this.result_lb_node_list[1].lb_node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
c.result_lb_node.active = !1;
c.result_lb_node_list[0].lb_node.setPosition(100, 215);
c.result_over_node.active = !0;
for (var e = cc.vv.gameNetMgr.gameOverData, t = cc.vv.gameNetMgr.seats, i = 0, n = 0; n < t.length; ++n) {
var a = e.end_seats_data[n];
if (a) {
var s = a.end_score;
if (n == cc.vv.gameNetMgr.seatIndex) {
i = s;
break;
}
}
}
c.result_over_node_list[0].lb_decs_win.string = "";
c.result_over_node_list[0].lb_decs_lost.string = "";
0 < i ? c.result_over_node_list[0].lb_decs_win.string = i : c.result_over_node_list[0].lb_decs_lost.string = i;
cc.vv.audioMgr.playSFX("resources/game/pinpinle/sounds/ppl_score_3.mp3");
})));
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
msgdefine_pinpinle: "msgdefine_pinpinle",
poker_utils_pinpinle: "poker_utils_pinpinle"
} ],
MJGame_SDB: [ function(i, e, t) {
"use strict";
cc._RF.push(e, "a07d3IU0y5LEIl9KZoK8ThV", "MJGame_SDB");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
gameOver_pk_prefab: {
default: null,
type: cc.Prefab
},
rsyd_type_prefab: {
default: null,
type: cc.Prefab
},
couma_pk_prefab: {
default: null,
type: cc.Prefab
},
btnSB: {
default: null,
type: cc.Button
},
btnTP: {
default: null,
type: cc.Button
},
btnYP: {
default: null,
type: cc.Button
},
_chupaiSprite: [],
_seatNodes: [],
_seatsList: [],
_chipNodeList: [],
_effectNode: [],
_d21NodeLiat: [],
_d21NodePK_List: [],
_btnFenList: [],
_buttonNodeList: [],
_d21_status_data: null,
_coumaStartPositionList: [],
_moveToList: []
},
onLoad: function() {
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.poker_util = i("poker_utils_SDB");
cc.vv.msgTemp_21d = i("msgdefine_10DB").msg_templete;
this.initView();
this.initEventHandlers();
var e = cc.vv.gameNetMgr.gamestate;
if (2 == e || 3 == e || 4 == e || 5 == e || 6 == e) {
this.onGameBeign();
this.initGameSyncBeign();
}
cc.vv.audioMgr.playBGM("resources/game/sdb/sounds/bg10db.mp3");
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/10DB/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = e.getChildByName("players_node"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], n = 0; n < i.length; ++n) {
var a = i[n], s = t.getChildByName(a);
this._chupaiSprite.push(s.getChildByName("ChuPai"));
this._chipNodeList.push(s.getChildByName("chipNode"));
this._effectNode.push(s.getChildByName("effectNode"));
var c = s.getChildByName("d21Node");
this._d21NodeLiat.push(c);
var r = {}, o = c.getChildByName("value_1");
r.value_Node = o;
r.holds = o.getChildByName("holds");
r.node_add = o.getChildByName("node_add");
var h = o.getChildByName("point_bg");
r.point_bg = h;
r.jiadian_bg = h.getChildByName("jiadian_bg");
r.moren_bg = h.getChildByName("moren_bg");
r.baodian_bg = h.getChildByName("baodian_bg");
r.pinju_bg = h.getChildByName("pinju_bg");
r.win_bg = h.getChildByName("win_bg");
this._d21NodePK_List.push(r);
this._seatNodes.push(s.getChildByName("seat"));
this._seatsList.push(s.getChildByName("seat").getComponent("Seat"));
this._coumaStartPositionList.push(s.getPosition());
this._moveToList.push(s.getChildByName("folds").parent.getPosition().add(s.getChildByName("folds").getPosition()));
}
this._operationNode = e.getChildByName("operationNode");
this._operationNode.active = !1;
this.d21_btnZhangNode = this._operationNode.getChildByName("btnZhangNode");
this.d21_btnZhangNode.active = !1;
this.btn_bu = this.d21_btnZhangNode.getChildByName("btn_bu");
this.btn_qiang = this.d21_btnZhangNode.getChildByName("btn_qiang");
cc.vv.utils.addClickEvent(this.btn_bu, this.node, "MJGame_SDB", "onBuQiangClicked");
cc.vv.utils.addClickEvent(this.btn_qiang, this.node, "MJGame_SDB", "onQiangClicked");
this._btnFenNodeMC = this._operationNode.getChildByName("btnFenNode");
this._btnFenNode = this._btnFenNodeMC.getChildByName("fenNode");
this._btnFenNodeMC.active = !1;
this._btnFenNode.active = !1;
for (var l = [ 5, 10, 20, 30, 50, 100, "完成" ], d = 0; d < this._btnFenNode.children.length; ++d) {
var u = "btnFen" + (d + 1), v = this._btnFenNode.getChildByName(u), g = v.getChildByName("btn");
v.getChildByName("lb").getComponent(cc.Label).string = 6 == d ? "" : l[d];
g.nodeFen = l[d];
cc.vv.utils.addClickEvent(g, this.node, "MJGame_SDB", "onBtnFenClicked");
this._btnFenList.push(g);
}
this._btnNode = this._operationNode.getChildByName("btnNode");
this._btnNode.active = !1;
for (var _ = [ "btnSB", "btnTP", "btnYP" ], f = 0; f < _.length; ++f) {
var p = this._btnNode.getChildByName(_[f]);
cc.vv.utils.addClickEvent(p, this.node, "MJGame_SDB", "onLoadBankerBaseClicked");
this._buttonNodeList.push(g);
}
this._effTprefab = e.getChildByName("effTprefab");
this.coumaMC = e.getChildByName("coumaMC");
this.coumaMC.removeAllChildren();
this.coumaMC.active = !0;
this.hideChupai();
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var h = this;
this.node.on("game_holds", function(e) {
var t = e.detail.index;
5 != cc.vv.gameNetMgr.gamestate && h.initMahjongs(t, !0);
});
this.node.on("game_begin", function(e) {
h.onGameBeign();
});
this.node.on("game_button_push", function(e) {
h.onGameBeign();
});
this.node.on("game_state", function(e) {
h.updateGameState();
});
this.node.on("call_banker", function(e) {
h.onCallBanker(e.detail);
});
this.node.on("start_play_end_push", function(e) {
h.onStartPlayEndPush(e.detail);
});
this.node.on("betting_push", function(e) {
h.onBettingPush(e.detail);
});
this.node.on("game_over", function(e) {
var t = e.detail.button;
h.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
h.onShowCardType(t);
})));
});
this.node.on("fore_game_over", function(e) {
h.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
h.onShowGameResult();
});
this.node.on("fresh_all_score", function(e) {
for (var t = [], i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = cc.vv.gameNetMgr.gameOverData.end_seats_data[n];
if (a) {
var s = a.total_score, c = a.end_score, r = cc.vv.gameNetMgr.getLocalIndex(n), o = h._seatNodes[r];
o.getComponent("Seat").setScore(s);
0 < c && t.push(o);
}
}
});
this.node.on("point21_state", function(e) {
h.updatePoint21_state(e.detail);
});
this.node.on("turn", function(e) {
cc.vv.gameNetMgr.gamestate;
if (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex) {
h._btnNode.active = !0;
if (h._d21_status_data) {
var t = h._d21_status_data.status_mask, i = h._d21_status_data.type;
h.refreshBtns(t, i);
}
} else h._btnNode.active = !1;
h.showHeadTime(cc.vv.gameNetMgr.turn);
h.updateRunActionTurn();
});
this.node.on("user_action", function(e) {
h.updateuUerAction(e.detail);
});
},
call_game_over: function() {
var e = cc.vv.gameNetMgr.gameOverData;
1 != e.force && 1 != e.all_give_up_call || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/10DB/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/10DB/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
finishCoumaMC: function(e) {
var t = [];
t = t.concat(this.coumaMC.getChildren());
for (var i = 0; i < e.length; i++) {
var n = e[i].parent.getPosition();
for (var a in t) {
t[a].active = !1;
var s = cc.instantiate(t[a]);
s.active = !0;
s.parent = this.coumaMC;
var c = cc.sequence(cc.delayTime(.1 * a), cc.moveTo(.3, n));
s.runAction(c);
0 == i && cc.vv.audioMgr.playSFX("resources/game/soundsPublic/chipfly.mp3");
}
}
},
hideChupai: function() {
var e = 0;
for (e = 0; e < this._chupaiSprite.length; ++e) {
this._chupaiSprite[e].getChildByName("lb_type").getComponent(cc.Label).string = "";
this._chupaiSprite[e].getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}
for (e = 0; e < this._d21NodeLiat.length; ++e) this._d21NodeLiat[e].active = !1;
for (e = 0; e < this._chipNodeList.length; ++e) {
this._chipNodeList[e].getChildByName("lb_chip").getComponent(cc.Label).string = "0";
this._chipNodeList[e].active = !1;
this._chipNodeList[e].total_bet_score = 0;
}
for (e = 0; e < this._effectNode.length; ++e) this._effectNode[e].active = !1;
for (e = 0; e < this._seatNodes.length; ++e) this._seatNodes[e] && this._seatNodes[e].getComponent("Seat").showName();
for (e = 0; e < this._d21NodePK_List.length; ++e) {
var t = this._d21NodePK_List[e];
t.holds.removeAllChildren();
t.point_bg.active = !1;
t.node_add.active = !1;
t.jiadian_bg.active = !1;
t.moren_bg.active = !1;
t.baodian_bg.active = !1;
t.pinju_bg.active = !1;
t.win_bg.active = !1;
t.point_bg.stopAllActions();
}
this.btnSB.getComponent(cc.Button).interactable = !0;
this.btnTP.getComponent(cc.Button).interactable = !0;
this.btnYP.getComponent(cc.Button).interactable = !0;
this._operationNode.active = !0;
this.d21_btnZhangNode.active = !1;
this._btnFenNodeMC.active = !1;
this._btnFenNode.active = !1;
this._btnNode.active = !1;
this._effTprefab.removeAllChildren();
},
updateGameState: function() {
var e = cc.vv.gameNetMgr.gamestate;
if (1 != cc.vv.gameNetMgr.getIsWatch()) {
this._btnFenNodeMC.active = !1;
if (3 == e) this.d21_btnZhangNode.active = !0; else if (4 == e) {
this.playInitEffect();
var n = cc.vv.gameNetMgr.getSelfData(), t = n.status_mask;
if (null != t) {
if (0 != (2 & t)) return;
}
var a = this, i = 1 == 1 < cc.vv.gameNetMgr.multiBanker.length ? 3 : .2;
this.node.runAction(cc.sequence(cc.delayTime(i), cc.callFunc(function(e) {
a._btnFenNodeMC.active = !0;
for (var t = 0; t < a._chupaiSprite.length; ++t) {
a._chupaiSprite[t].getChildByName("lb_type").getComponent(cc.Label).string = "";
a._chupaiSprite[t].getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}
if (cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
a._btnFenNode.active = !0;
var i = a.getAudioURLBySDB(12, n.sex);
cc.vv.audioMgr.playSFX(i);
}
})));
} else for (var s = 0; s < this._chupaiSprite.length; ++s) {
this._chupaiSprite[s].getChildByName("lb_type").getComponent(cc.Label).string = "";
this._chupaiSprite[s].getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}
}
},
onGameBeign: function() {
this.hideChupai();
this.coumaMC.removeAllChildren();
this.gameRoot.active = !0;
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initGameSyncBeign: function() {
var e = cc.vv.gameNetMgr.gamestate, t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
if (n.d21_data) {
n.d21_data.holds;
var a = cc.vv.gameNetMgr.getLocalIndex(n.seatindex);
this.updateChipNode(a, n.d21_data.bet_coin);
if (5 == e || 6 == e) {
var s = {};
s.seat_index = n.seatindex;
s.type = n.d21_data.type;
s.value = n.d21_data.value;
s.status_mask = n.d21_data.status_mask;
this.updatePoint21_state(s);
}
}
}
this.updateGameState();
this.updateRunActionTurn();
5 == e && (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex ? this._btnNode.active = !0 : this._btnNode.active = !1);
},
updateChipNode: function(e, t) {
if (!(t < 1)) {
var i = this._chipNodeList[e];
i.active = !0;
var n = i.total_bet_score ? i.total_bet_score : 0;
i.total_bet_score = t;
i.getChildByName("lb_chip").getComponent(cc.Label).string = t;
var a = i.getChildByName("icon_chip"), s = 2 * Math.floor(t - n);
if (0 < s) {
cc.vv.audioMgr.playSFX("resources/game/soundsPublic/chipfly.mp3");
a.getComponent("dropChip").dropBet(s);
}
}
},
updateThrowChouma: function(e, t) {
t = t;
var i = 4;
i = 1 == Math.floor(2 * Math.random()) ? 4 : 2;
var n = this._coumaStartPositionList[e], a = cc.instantiate(this.couma_pk_prefab);
a.parent = this.coumaMC;
a.getComponent("ChoumaItem").setValueByCionBySDB(i, t);
a.active = !0;
a.setScale(.75);
a.setPosition(n.x, n.y);
var s = Math.floor(100 * Math.random()), c = Math.floor(70 * Math.random());
1 == Math.floor(2 * Math.random()) ? s = 0 - s : c = 0 - c;
var r = cc.p(s, c);
a.runAction(cc.sequence(cc.show(), cc.moveTo(.3, r)));
},
refreshBtns: function(e, t) {
if (cc.vv.gameNetMgr.turn == cc.vv.gameNetMgr.seatIndex) {
this._btnNode.active = !0;
if (cc.vv.gameNetMgr.turn != cc.vv.gameNetMgr.button) {
var i = cc.vv.gameNetMgr.seatIndex;
if (cc.vv.gameNetMgr.seats[i].holds) {
var n = !1;
e <= 2 && (n = !0);
this.btnSB.getComponent(cc.Button).interactable = n;
}
} else this.btnSB.getComponent(cc.Button).interactable = !1;
}
},
updatePoint21_state: function(e) {
if (null != e) {
var t = e.seat_index, i = cc.vv.gameNetMgr.getLocalIndex(t);
cc.vv.gameNetMgr.seats[t].sex;
0 == i && (this._d21_status_data = e);
var n = e.type, a = (e.value, e.status_mask);
if (1 == this.has_rule(2, a)) {
cc.vv.audioMgr.playSFX("resources/game/sdb/sounds/check.mp3");
}
1 == this.has_rule(4, a) && this.onShowJiaBeiImg(i);
cc.vv.gameNetMgr.turn == t && this.refreshBtns(a, n);
}
},
onShowJiaBeiImg: function(e) {
this._d21NodePK_List[e].node_add.active = !0;
},
onBuQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this.d21_btnZhangNode.active = !1;
},
onQiangClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_CallBanker);
t.call = 1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("call_banker", t);
this.d21_btnZhangNode.active = !1;
},
onBtnFenClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.nodeFen, i = this._chipNodeList[0].getChildByName("lb_chip").getComponent(cc.Label).string;
if ("完成" != t || "0" != i && "" != i) {
var n = 1 * cc.vv.gameNetMgr.conf.rule_index, a = 0;
32768 & n && (a = 100);
65536 & n && (a = 300);
1 << 17 & n && (a = 500);
if (a < (i *= 1) + t) cc.vv.alert.show("提示", "最大限注筹码为：" + a); else {
(e = JSON.parse(cc.vv.msgTemp_21d.CS_Betting)).betting_type = "完成" == t ? 1 : 0;
e.coin = "完成" == t ? 0 : t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", e);
if ("完成" == t) {
this._btnFenNode.active = !1;
this._btnFenNodeMC.active = !1;
}
}
} else cc.vv.alert.show("提示", "请先压筹码！");
},
onLoadBankerBaseClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = 1;
"btnSB" == e.target.name ? t = 3 : "btnTP" == e.target.name ? t = 2 : "btnYP" == e.target.name && (t = 1);
var i = JSON.parse(cc.vv.msgTemp_21d.CS_UserAction);
i.action_type = t;
i.action_target = 1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("user_action", i);
},
isCheckA: function() {
for (var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.button].holds[0], t = 0; t < e.length; t++) {
if (14 == cc.vv.poker_util.get_poker_value(e[t])) return !0;
}
return !1;
},
has_rule: function(e, t) {
return 0 != (t & 1 << e);
},
updateuUerAction: function(e) {
cc.vv.gameNetMgr.getLocalIndex(e.seat_index);
this.getTypeName(e.action_type, e.seat_index);
this.updateRunActionTurn();
},
getTypeName: function(e, t) {
switch (e) {
case 1:
"拿牌";
this.playNPeffect(t, -1);
break;

case 2:
"停牌";
break;

case 3:
"加倍";
this.playNPeffect(t, -1);
}
},
playInitEffect: function() {
for (var e = cc.vv.gameNetMgr.seats, t = e.length, i = 0, n = 0, a = 0, s = this, c = 0; c < t; c++) this.node.runAction(cc.sequence(cc.delayTime(.4 * c), cc.callFunc(function() {
n = Math.floor(i / e.length);
a = i % e.length;
s.playNPeffect(a, n);
i++;
})));
},
playNPeffect: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._moveToList[i], a = cc.instantiate(this.pk_prefab);
a.parent = this._effTprefab;
a.setPosition(0, 0);
a.poker_id = -1;
this.setSpriteFrameByMJID(a, -1);
cc.vv.audioMgr.playSFX("resources/game/21D/sounds/turn_card.mp3");
a.active = !0;
var s = {};
s.tempNode = this._effTprefab;
s.tPrefab = a;
s._seatIndex = e;
s.dealTurn = t;
a.scale = .5;
var c = this;
a.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, n), cc.rotateBy(.2, 100)), cc.callFunc(function(e, t) {
c.addPlayPK(t._seatIndex, t.dealTurn);
t.tPrefab.active = !1;
a.destroy();
}, null, s)));
},
addPlayPK: function(e, t) {
var i = this, n = cc.vv.gameNetMgr.seats, a = cc.vv.gameNetMgr.getLocalIndex(n[e].seatindex), s = -1;
if (-1 == t) {
t = n[e].holds.length - 1;
s = n[e].holds[t];
this.node.runAction(cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
i.initMahjongs(e);
})));
}
this._d21NodeLiat[a].active = !0;
var c = this._d21NodePK_List[a].holds, r = 0, o = 5 - (2 - t), h = cc.instantiate(this.pk_prefab);
h.parent = c;
r = 6 == a || 7 == a ? 30 * o : 30 * t;
h.setPosition(r, 0);
-1 == (h.poker_id = s) ? this.setSpriteFrameByMJID(h, s) : this.setSpriteFrameByMJID2(h, s);
},
initMahjongs: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], i = cc.vv.gameNetMgr.getLocalIndex(e);
this._d21NodeLiat[i].active = !0;
var n = this._d21NodePK_List[i], a = cc.vv.gameNetMgr.seats[e];
if (a) {
var s = a.holds;
if (s && 0 != s.length) {
n.point_bg.active = !0;
this.updateMahjongs(i, s, n, e, t);
5 == s.length && cc.vv.gameNetMgr.turn == e && (this._btnNode.active = !1);
}
}
},
updateMahjongs: function(e, t, i, n, a) {
var s = i.holds;
s.removeAllChildren();
for (var c = !1, r = 0, o = 5 - t.length, h = 0; h < t.length; h++) {
var l = t[h], d = cc.vv.poker_util.get_poker_value(l);
0 == c && 14 == d && (c = !0);
var u = cc.instantiate(this.pk_prefab);
u.parent = s;
if (6 == e || 7 == e) {
r = 30 * o;
o++;
} else r = 30 * h;
u.setPosition(r, 0);
-1 == (u.poker_id = l) && (u.back = 1);
1 == a && -1 != l ? this.setSpriteFrameByMJID2(u, l) : this.setSpriteFrameByMJID(u, l);
}
this.updatePoint(e, t, i, n);
},
getZhuangPoint: function() {
var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.button];
if (!e) return 0;
var t = e.holds;
return t ? cc.vv.poker_util.get_value_total_10(t) : 0;
},
updatePoint: function(e, t, i, n) {
i.jiadian_bg.active = !1;
i.moren_bg.active = !1;
i.baodian_bg.active = !1;
i.pinju_bg.active = !1;
i.win_bg.active = !1;
if (1 != cc.vv.gameNetMgr.isGameOver) {
if (0 == e) {
var a = cc.vv.poker_util.get_value_total_10(t), s = 0 < a ? a : 0;
if (s < 11) {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = s;
} else {
i.baodian_bg.active = !0;
i.baodian_bg.getChildByName("lb").getComponent(cc.Label).string = s;
this.playBaoZha(n);
}
if (6 == e || 7 == e) ; else {
var c = 30 * t.length;
i.point_bg.setPosition(c, 33);
}
}
} else this.updatePoint_gameOver(e, t, i);
},
updatePoint_gameOver: function(e, t, i) {
var n = this.getZhuangPoint(), a = cc.vv.poker_util.get_value_total_10(t), s = 0 < a ? a : 0;
if (10.5 < s) {
i.baodian_bg.active = !0;
i.baodian_bg.getChildByName("lb").getComponent(cc.Label).string = s;
} else if (10.5 == s) if (10.5 == n) {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = s;
} else {
i.win_bg.active = !0;
i.win_bg.getChildByName("lb").getComponent(cc.Label).string = s;
} else if (n == s) {
i.pinju_bg.active = !0;
i.pinju_bg.getChildByName("lb").getComponent(cc.Label).string = s;
} else if (s < n) {
i.moren_bg.active = !0;
i.moren_bg.getChildByName("lb").getComponent(cc.Label).string = s;
} else {
i.win_bg.active = !0;
i.win_bg.getChildByName("lb").getComponent(cc.Label).string = s;
}
if (6 == e || 7 == e) ; else {
var c = 30 * t.length;
i.point_bg.setPosition(c, 33);
}
},
updateRunActionTurn: function() {
for (var e = 0; e < this._d21NodePK_List.length; ++e) {
(t = this._d21NodePK_List[e]).point_bg.stopAllActions();
t.point_bg.opacity = 255;
}
var t, i = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.turn);
(t = this._d21NodePK_List[i]) && this.addTimeRunAction(t.point_bg);
},
addTimeRunAction: function(e) {
var t = cc.fadeIn(.5), i = cc.fadeTo(.5, 0), n = cc.sequence(t, i), a = cc.repeatForever(n);
e.runAction(a);
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
setSpriteFrameByMJID2: function(e, t) {
var i = e.getComponent("MyPoker");
i.setValueAndColorByID(-1);
var n = cc.sequence(cc.rotateTo(.5, 0, 90), cc.callFunc(function() {
e.rotationY = -90;
i.setValueAndColorByID(t);
}), cc.rotateTo(.5, 0, 0));
e.runAction(n);
},
onShowCardType: function(e) {
for (var t = 0; t < this._d21NodePK_List.length; ++t) {
var i = this._d21NodePK_List[t];
i.point_bg.stopAllActions();
i.point_bg.opacity = 255;
}
this.showHeadTime(-1);
this._btnNode.active = !1;
var n = cc.vv.gameNetMgr.gameOverData, a = cc.vv.gameNetMgr.seats, s = -1, c = n.end_seats_data.length, r = c - 1 < e + 1 ? 0 : e + 1, o = 0;
for (t = r; t < c + r; t++) {
var h = c - 1 < t ? t - c : t, l = n.end_seats_data[h], d = a[h];
l.card_type.type && (s = l.card_type.type);
var u = l.holds;
if (u && 0 < u.length) {
d.holds = u;
this.initMahjongs(d.seatindex, o, !0);
var v = s;
this.onShowAnim(d.seatindex, d.sex, v, 1 + 1 * o);
}
o++;
}
var g = this, _ = 1 + 1 * o;
this.node.runAction(cc.sequence(cc.delayTime(_), cc.callFunc(function(e) {
g.onGameOverChips();
})));
},
onGameOverChips: function() {
for (var e = [], t = null, i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = cc.vv.gameNetMgr.gameOverData.end_seats_data[n];
if (a) {
var s = a.total_score, c = a.end_score, r = cc.vv.gameNetMgr.getLocalIndex(n), o = this._seatNodes[r], h = {};
h.score = s;
h.seatindex = n;
h.addScore = c;
h.localIndex = r;
h.viewdata = o;
n == cc.vv.gameNetMgr.button ? t = h : e.push(h);
}
}
var l = "p" + t.localIndex, d = this.node.getChildByName("game").getChildByName("players_node").getChildByName(l), u = this._chipNodeList[t.localIndex], v = u.getChildByName("icon_chip");
u.active = !0;
var g = this;
for (n = 0; n < e.length; n++) {
var _ = e[n];
if (0 != (c = _.addScore)) if (0 < c) {
var f = function(e, t) {
var i = "p" + t.localIndex, n = g.node.getChildByName("game").getChildByName("players_node").getChildByName(i), a = (g._chipNodeList[t.localIndex].getChildByName("icon_chip"), 
{
x: 0,
y: 0
});
a.x = n.x - (d.x + u.x + v.x);
a.y = n.y - (d.y + u.y + v.y);
u.getChildByName("icon_chip").getComponent("dropChip").flyToPlayer(a, t.addScore);
};
this.node.runAction(cc.sequence(cc.delayTime(2 * n), cc.callFunc(f, null, _)));
} else {
f = function(e, t) {
var i = "p" + t.localIndex, n = g.node.getChildByName("game").getChildByName("players_node").getChildByName(i), a = g._chipNodeList[t.localIndex], s = a.getChildByName("icon_chip"), c = {
x: 0,
y: 0
};
c.x = d.x - (n.x + a.x + s.x);
c.y = d.y - (n.y + a.y + s.y);
g._chipNodeList[t.localIndex].getChildByName("icon_chip").getComponent("dropChip").flyToPlayer(c, -t.addScore);
};
this.node.runAction(cc.sequence(cc.delayTime(2 * n), cc.callFunc(f, null, _)));
}
}
this.node.runAction(cc.sequence(cc.delayTime(2 * e.length), cc.callFunc(function(e) {
g.hideChupai();
g.showGameOver();
})));
},
onShowAnim: function(e, n, a, t) {
var s = this, i = cc.vv.gameNetMgr.getLocalIndex(e), c = this._effectNode[i];
c.active = !0;
var r = c.getChildByName("tx_sdb");
if (!r) {
(r = cc.instantiate(this.rsyd_type_prefab)).parent = c;
r.name = "tx_sdb";
}
a && r.runAction(cc.sequence(cc.hide(), cc.delayTime(t), cc.show(), cc.callFunc(function() {
var e = r.getComponent(cc.Animation), t = 0;
if (3 == a) {
e.play("sdb-sdb");
t = 3;
} else if (4 == a) {
e.play("sdb-wx");
t = 4;
} else if (5 == a) {
e.play("sdb-rw");
t = 5;
} else if (6 == a) {
e.play("sdb-tw");
t = 6;
} else if (1 == a) {
e.play("baodian");
t = 1;
}
if (0 < t) {
var i = s.getAudioURLBySDB(t, n);
cc.vv.audioMgr.playSFX(i);
}
})));
},
playBaoZha: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e), i = this._effectNode[t];
i.active = !0;
var n = i.getChildByName("tx_sdb");
if (!n) {
(n = cc.instantiate(this.rsyd_type_prefab)).parent = i;
n.name = "tx_sdb";
}
var a = cc.vv.gameNetMgr.seats[e];
n.getComponent(cc.Animation).play("baodian");
var s = this.getAudioURLBySDB(1, a.sex);
cc.vv.audioMgr.playSFX(s);
},
getAudioURLBySDB: function(e) {
return 1 == (1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1) ? "resources/game/sdb/sounds/man/" + e + ".mp3" : "resources/game/sdb/sounds/women/" + e + ".mp3";
},
onCallBanker: function(e) {
var t = 0 == e.call ? "不抢" : "抢庄";
this.onShowLabelPlay(e.seat_index, t, -1);
},
onStartPlayEndPush: function(e) {
if (0 == e.success) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].name + "拒绝提前开始！";
cc.vv.alert.show("提示", t);
}
},
onBettingPush: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seat_index);
this.updateChipNode(t, e.total_coin);
if (1 == e.betting_type) {
var i = 1 == e.betting_type ? "完成" : e.coin + "分";
this.onShowLabelPlay(e.seat_index, i, 2);
}
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._chupaiSprite[n];
a.getChildByName("lb_type_replay").getComponent(cc.Label).string = t;
if (0 < i) {
a.stopAllActions();
var s = cc.sequence(cc.delayTime(i), cc.callFunc(function() {
a.getChildByName("lb_type_replay").getComponent(cc.Label).string = "";
}));
a.runAction(s);
}
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[i].showTimer(30);
}
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
},
onChoice: function() {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
}
});
cc._RF.pop();
}, {
msgdefine_10DB: "msgdefine_10DB",
poker_utils_SDB: "poker_utils_SDB"
} ],
MJGame_ZJH: [ function(i, e, t) {
"use strict";
cc._RF.push(e, "6a2a52oYpJHN4Ve1T/wV0t2", "MJGame_ZJH");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
gameOver_pk_prefab: {
default: null,
type: cc.Prefab
},
couma_pk_prefab: {
default: null,
type: cc.Prefab
},
zjh_type_prefab: {
default: null,
type: cc.Prefab
},
_chupaiSprite: [],
_lookNodeList: [],
_chipNodeList: [],
_effectNode: [],
_folds: [],
_seatNodes: [],
_seatsList: [],
_timeButtonList: [],
_compareNodeList: [],
_selfLunNum: 0,
_lastIndex: -1,
_isDoingCompare: !1,
_eff_qiu_localSize: [],
_compare_zjh_delay: 5.5,
_goldflowerState_delay: 4,
_isGiveUp: !1,
_zhongxin: [],
_qipaiMap: null,
_zhongxinScoreList: [],
_coumaStartPositionList: [],
_moveToList: []
},
onLoad: function() {
cc.vv || cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
cc.vv.poker_util = i("poker_utils_ZJH");
cc.vv.msgTemp = i("msgdefine").msg_templete;
this.initView();
this.initEventHandlers();
this.initBtnSureAddBetListener();
var e = cc.vv.gameNetMgr.gamestate;
if (2 == e || 4 == e) {
this.onGameBeign();
this.onGoldflowerState();
}
cc.vv.audioMgr.playBGM("resources/game/zjh/sounds/bgzjh.mp3");
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/zjh/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = e.getChildByName("players_node"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], n = 0; n < i.length; ++n) {
var a = i[n], s = t.getChildByName(a);
this._chupaiSprite.push(s.getChildByName("ChuPai").getChildByName("lb_type"));
this._lookNodeList.push(s.getChildByName("lookNode"));
this._chipNodeList.push(s.getChildByName("chipNode"));
this._effectNode.push(s.getChildByName("effectNode"));
this._folds.push(s.getChildByName("folds"));
this._seatNodes.push(s.getChildByName("seat"));
this._seatsList.push(s.getChildByName("seat").getComponent("Seat"));
this._coumaStartPositionList.push(s.getPosition());
this._zhongxin.push(s);
this._eff_qiu_localSize.push(s.getChildByName("lookNode"));
this._zhongxinScoreList.push(s.getChildByName("chipNode"));
0 == n ? this._moveToList.push(t.getChildByName("p0_folds").getPosition()) : this._moveToList.push(s.getChildByName("folds").parent.getPosition().add(s.getChildByName("folds").getPosition()));
}
this._operationNode = e.getChildByName("operationNode");
this._operationNode.active = !1;
this.coumaMC = this._operationNode.getChildByName("coumaMC");
this.coumaMC.removeAllChildren();
this.coumaMC.active = !0;
this.btn_node = this._operationNode.getChildByName("btn_node");
var c = [ "btn_bipai", "btn_jiazhu", "btn_qipai", "btn_genzhu" ];
for (n = 0; n < c.length; n++) {
var r = this.btn_node.getChildByName(c[n]);
this._timeButtonList.push(r);
}
this.node_JZ = this._operationNode.getChildByName("node_JZ");
this.progress = this.node_JZ.getChildByName("dzpk_Slider");
this.btn_showJia = this.progress.getChildByName("Handle").getChildByName("btn_showJia");
cc.vv.utils.addClickEvent(this.node_JZ, this.node, "MJGame_ZJH", "onCloseClicked");
this.btn_sureAddBet = this.progress.getChildByName("Handle");
this.icon_allIn = this.progress.getChildByName("icon_allIn");
this.btn_sureAddBetPos = this.btn_sureAddBet.getPosition();
this.icon_allInPos = this.icon_allIn.getPosition();
this._myNode = this._operationNode.getChildByName("myNode");
this.btn_chapai = this._myNode.getChildByName("brn_kanpai");
cc.vv.utils.addClickEvent(this.btn_chapai, this.node, "MJGame_ZJH", "onChaPaiClicked");
this._my_lb_chip = this._myNode.getChildByName("comp_Node");
this._total_zhu = this._operationNode.getChildByName("total_zhu");
this._lb_chi = this._total_zhu.getChildByName("lb_chi").getChildByName("lb_chip").getComponent(cc.Label);
this._lb_dizhu = this._total_zhu.getChildByName("lb_dizhu").getComponent(cc.Label);
this._lb_lun = this._total_zhu.getChildByName("lb_lun").getComponent(cc.Label);
this.cuopaiEffect = e.getChildByName("fapaiEffect");
this.cuopaiEffect.active = !1;
this.compareNode = e.getChildByName("compareNode");
this.compareNode.active = !1;
for (n = 1; n < 8; n++) {
var o = this.compareNode.getChildByName("effectNode_" + n);
this._compareNodeList[n] = o;
this.addTimeRunAction(o.getChildByName("jiantou"));
cc.vv.utils.addClickEvent(o, this.node, "MJGame_ZJH", "onCompareItemClicked");
}
var h = this.compareNode.getChildByName("maskNode");
cc.vv.utils.addClickEvent(h, this.node, "MJGame_ZJH", "onCloseCompareNodeClicked");
this.compare = e.getChildByName("compareOver");
this.compare.active = !1;
this.win_node = this.compare.getChildByName("win_node");
this.watch_card_mc = this.compare.getChildByName("watch_card");
this.watch_icon = this.watch_card_mc.getChildByName("icon").getComponent("ImageLoader");
this.watch_name = this.watch_card_mc.getChildByName("name");
this.compare_card_mc = this.compare.getChildByName("compare_card");
this.compare_icon = this.compare_card_mc.getChildByName("icon").getComponent("ImageLoader");
this.compare_name = this.compare_card_mc.getChildByName("name");
this.compareEffect = e.getChildByName("compareEffect");
this.compareEffect.active = !1;
this.compare_bg = this.compareEffect.getChildByName("compare_bg");
this.compare_bg.active = !1;
this.eff_qiu_1 = this.compareEffect.getChildByName("eff_qiu_1");
this.eff_qiu_2 = this.compareEffect.getChildByName("eff_qiu_2");
this.eff_shangdian = this.compareEffect.getChildByName("eff_shangdian");
this.eff_bg = this.compareEffect.getChildByName("eff_bg");
this.hideChupai();
},
addTimeRunAction: function(e) {
var t = cc.fadeIn(.25), i = cc.fadeOut(.25), n = cc.sequence(t, i), a = cc.repeatForever(n);
e.runAction(a);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var d = this;
this.node.on("kan_pai", function(e) {
d.initMahjongs(e.detail.index);
});
this.node.on("zjh_game_holds", function(e) {
d.initMahjongs(e.detail.index);
});
this.node.on("game_begin", function(e) {
d.onGameBeign();
});
this.node.on("game_state", function(e) {});
this.node.on("start_play_end_push", function(e) {
d.onStartPlayEndPush(e.detail);
});
this.node.on("betting_push", function(e) {
d.onBettingPush(e.detail);
});
this.node.on("game_over", function(e) {
d.btn_node.active = !1;
var t = 1;
1 == d._isDoingCompare && (t = d._compare_zjh_delay + t);
d.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function(e) {
d.onShowCardType(0);
})));
});
this.node.on("fore_game_over", function(e) {
d.call_game_over();
});
this.node.on("onShowGameResult", function(e) {
d.onShowGameResult();
});
this.node.on("fresh_all_score", function(e) {
for (var t = [], i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = cc.vv.gameNetMgr.gameOverData.end_seats_data[n];
if (a) {
var s = a.total_score, c = a.end_score, r = cc.vv.gameNetMgr.getLocalIndex(n), o = d._seatNodes[r], h = d._zhongxinScoreList[r], l = h.parent.getPosition().sub(h.getPosition());
o.getComponent("Seat").setScore(s, c, l);
0 < c && t.push(o);
}
}
d.finishCoumaMC(t);
});
this.node.on("giveup", function(e) {
d.onGiveUp(e.detail);
});
this.node.on("goldflowerState", function(e) {
if (1 == d._isDoingCompare) {
d.node.runAction(cc.sequence(cc.delayTime(d._goldflowerState_delay), cc.callFunc(function(e) {
d.onGoldflowerState();
})));
d._goldflowerState_delay = d._goldflowerState_delay + 4;
} else {
d._goldflowerState_delay = 4;
d.onGoldflowerState();
}
});
this.node.on("compare_zjh", function(e) {
if (1 == d._isDoingCompare) {
var t = e.detail;
d.node.runAction(cc.sequence(cc.delayTime(d._compare_zjh_delay), cc.callFunc(function(e, t) {
d.onCompareEffect(t);
}, null, t)));
d._compare_zjh_delay = d._compare_zjh_delay + 5.5;
} else {
d._compare_zjh_delay = 5.5;
d.onCompareEffect(e.detail);
}
});
},
call_game_over: function() {
var e = cc.vv.gameNetMgr.gameOverData;
1 != e.force && 1 != e.all_give_up_call || this.showGameOver();
},
showGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("game/zjh/prefabs/game_over", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onShowGameResult: function() {
var t = this;
cc.vv.UILoader.loadRes("game/zjh/prefabs/game_result", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
initBtnSureAddBetListener: function() {
var s = this;
this.isMoved = !1;
this.touchBeginTime = 0;
this.touchMoveTime = 0;
this.posy = -1;
this.btn_sureAddBetPos = this.btn_sureAddBet.getPosition();
this.icon_allInPos = this.icon_allIn.getPosition();
this.btn_sureAddBetPosY = -1;
this.listener = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !1,
onTouchBegan: function(e, t) {
var i = s.btn_sureAddBet.convertToNodeSpace(e.getLocation()), n = s.btn_sureAddBet.getContentSize();
s.isMoved = !1;
s.posy = s.btn_sureAddBet.y;
s.touchBeginTime = Date.parse(new Date());
var a = cc.rect(0, 0, n.width, n.height);
return !!cc.rectContainsPoint(a, i) && (s.isOpSlidering = !0);
},
onTouchMoved: function(e, t) {
var i = e.getDelta();
s.touchMoveTime = Date.parse(new Date());
if (s.btn_sureAddBet.y >= s.btn_sureAddBetPos.y && s.btn_sureAddBet.y <= s.icon_allInPos.y) {
s.btn_sureAddBet.y += i.y;
s.btn_sureAddBet.y = s.btn_sureAddBet.y < s.btn_sureAddBetPos.y ? s.btn_sureAddBetPos.y : s.btn_sureAddBet.y;
s.btn_sureAddBet.y = s.btn_sureAddBet.y > s.icon_allInPos.y ? s.icon_allInPos.y : s.btn_sureAddBet.y;
s.silderCallback((s.btn_sureAddBet.y - s.btn_sureAddBetPos.y) / (s.icon_allInPos.y - s.btn_sureAddBetPos.y));
}
if (15 < Math.abs(s.btn_sureAddBet.y - s.posy)) {
console.log("----------------self.isMoved=true");
s.isMoved = !0;
}
},
onTouchEnded: function(e, t) {
s.isMoved ? console.log("----------------self.isMoved=true ----- return") : s.onSendAddBet();
}
});
cc.eventManager.addListener(this.listener, this.btn_sureAddBet);
},
hideChupai: function() {
var e = 0;
for (e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
for (e = 0; e < this._lookNodeList.length; ++e) this._lookNodeList[e].active = !1;
for (e = 0; e < this._chipNodeList.length; ++e) this._chipNodeList[e].active = !1;
for (e = 0; e < this._effectNode.length; ++e) this._effectNode[e].removeAllChildren();
for (e = 0; e < this._compareNodeList.length; ++e) this._compareNodeList[e] && (this._compareNodeList[e].active = !1);
for (e = 0; e < this._seatNodes.length; ++e) this._seatNodes[e] && this._seatNodes[e].getComponent("Seat").showName();
this._compare_zjh_delay = 5.5;
this._goldflowerState_delay = 4;
this._isGiveUp = !1;
this._qipaiMap = {};
this._operationNode.active = !0;
this.compareNode.active = !1;
this.btn_node.active = !1;
this._my_lb_chip.active = !1;
this.btn_chapai.active = !1;
this.node_JZ.active = !1;
this.cuopaiEffect.active = !1;
this.clearDiChi();
},
clearDiChi: function() {
this._total_zhu.active = !0;
this._lb_chi.string = 0;
this._lb_dizhu.string = "底注：" + cc.vv.gameNetMgr.getZJHdifen();
this._lb_lun.string = "";
},
onGameOverClean: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t], n = cc.vv.gameNetMgr.getLocalIndex(i.seatindex), a = this._folds[n];
this._seatsList[t].closeTimer();
a.removeAllChildren();
var s = this._chipNodeList[n];
if (s) {
s.getChildByName("lb_chip").getComponent(cc.Label).string = "";
s.getChildByName("icon_chip").getComponent("dropChip").dropBet(10);
}
}
},
onGameBeign: function() {
this.hideChupai();
this.coumaMC.removeAllChildren();
this.clearCompare();
this.gameRoot.active = !0;
if (1 == cc.vv.gameNetMgr.isSys) {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
} else this.onCuopaiEffectFun();
},
onCuopaiEffectFun: function() {
var e = 0, o = cc.vv.gameNetMgr.seats;
for (var t in o) {
var i = o[t];
if (i && i.holds) {
e += i.holds.length;
var n = cc.vv.gameNetMgr.getLocalIndex(t);
this._folds[n].removeAllChildren();
}
}
this.cuopaiEffect.active = !0;
this.cuopaiEffect.removeAllChildren();
var h = this, l = (cc.p(0, 0), []);
for (t = 0; t < e; t++) {
var a = cc.instantiate(h.pk_prefab);
a.parent = h.cuopaiEffect;
a.setPosition(0, 0);
a.poker_id = -1;
a.index = t;
h.setSpriteFrameByMJID(a, -1);
l.push(a);
}
var d = 0;
h = this;
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(.01), cc.callFunc(function() {
for (var e in o) {
var t = o[e];
if (t && t.holds) {
var i = t.holds, n = cc.vv.gameNetMgr.getLocalIndex(e), a = h._folds[n];
a.removeAllChildren();
for (var s = 0; s < i.length; s++) {
var c = {};
c.index = s;
c.node = a;
c.moveTo = h._moveToList[n];
c.tempNode = l[d];
d++;
var r = .02 * s + e * i.length * .02;
h.cuopaiEffect.runAction(cc.sequence(cc.delayTime(r), cc.callFunc(function(e, t) {
var i = cc.instantiate(h.pk_prefab);
i.parent = t.node;
var n = 40 * t.index - 60 + 20;
i.setPosition(n, 0);
i.poker_id = -1;
h.setSpriteFrameByMJID(i, -1);
i.active = !1;
cc.vv.audioMgr.playSFX("resources/game/public/sounds/fapai.mp3");
var a = {};
a.tempNode = t.tempNode;
t.tempNode.runAction(cc.sequence(cc.moveTo(.05, t.moveTo), cc.callFunc(function(e, t) {
t.tempNode.active = !1;
i.active = !0;
}, null, a)));
}, null, c)));
}
}
}
})));
this.cuopaiEffect.runAction(cc.sequence(cc.delayTime(.05 * e), cc.callFunc(function(e, t) {
h.cuopaiEffect.removeAllChildren();
h.cuopaiEffect.active = !1;
var i = cc.vv.gameNetMgr.seats;
for (var n in i) {
var a = i[n];
h.initMahjongs(a.seatindex);
}
})));
},
initMahjongs: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, i = cc.vv.gameNetMgr.seats[e];
if (i) {
var n = i.holds;
if (n) {
var a = cc.vv.gameNetMgr.getLocalIndex(e);
-1 != n[0] ? this._lookNodeList[a].active = !0 : this._lookNodeList[a].active = !1;
if (0 == a) {
this.updateShowLookPai();
if (1 == this._isGiveUp) {
this.updateGiveUpHold();
return;
}
}
var s = this._folds[a];
s.active = !0;
for (var c = 5, r = 0; r < s.children.length; ++r) {
if (s.children[r].back) {
c = r;
break;
}
}
s.removeAllChildren();
for (var o = n.length / 2, h = 0; h < n.length; h++) {
var l = n[h], d = cc.instantiate(this.pk_prefab);
d.parent = s;
var u = 40 * h - 40 * o + 20;
d.setPosition(u, 0);
-1 == (d.poker_id = l) && (d.back = 1);
h < c ? this.setSpriteFrameByMJID(d, l) : -1 == l ? this.setSpriteFrameByMJID(d, l) : this.setSpriteFrameByMJID2(d, l, 1 * t);
}
}
}
},
updateShowLookPai: function() {
var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex];
if (e) {
var t = e.holds;
if (t) {
for (var i = !1, n = 0; n < t.length; n++) if (-1 == t[n]) {
i = !0;
break;
}
var a = cc.vv.gameNetMgr.getMenPaiNum(), s = Math.floor(this._selfLunNum);
0 < a && s < a && (i = !1);
this.btn_chapai.active = i;
}
}
},
onGoldflowerState: function() {
var e = cc.vv.gameNetMgr.zjh_goldflowerStateData;
if (null != e && 1 != cc.vv.gameNetMgr.getIsWatch()) {
var t = e.current_turn, i = 0, n = 0, a = e.user_state;
this._selfLunNum = a[cc.vv.gameNetMgr.seatIndex].bet_times;
for (var s = a[cc.vv.gameNetMgr.seatIndex].see_card, c = 0; c < a.length; c++) {
var r = a[c], o = r.seat_index;
i < r.bet_times && (i = r.bet_times);
var h = cc.vv.gameNetMgr.getLocalIndex(o);
this.updateChipNode(h, r.total_bet_score);
n += r.total_bet_score;
if (1 == r.die) {
this.onShowLabelPlay(o, "弃牌", -1);
if (0 != h) {
if (0 == cc.vv.gameNetMgr.isOver) {
this._folds[h].active = !1;
this.btn_node.active = !1;
this.giveupPK(o);
}
} else if (0 == this._isGiveUp) {
this._isGiveUp = !0;
this.updateGiveUpHold();
this.giveupPKByMySelf(o);
}
} else 0 != h && 1 == r.see_card && (this._lookNodeList[h].active = !0);
}
this.btn_node.active = !1;
if (t == cc.vv.gameNetMgr.seatIndex) {
this.updateMyNode("思考中...");
var l = [];
if (1 == s) {
l.push(e.see_min_coin);
l.push(e.see_max_coin);
} else {
l.push(e.unsee_min_coin);
l.push(e.unsee_max_coin);
}
l[1], l[0];
var d = cc.vv.gameNetMgr.getBiPaiNum(), u = !0;
0 < d && this._selfLunNum < d && (u = !1);
this._timeButtonList[0].active = u;
this.updateButton(l[0], l[1]);
this.updateShowLookPai();
} else this.onShowLabelPlay(t, "思考中...", -1);
this.updateDiChi(n, i);
this.showHeadTime(t);
}
},
updateDiChi: function(e, t) {
this._lb_chi.string = e;
this._lb_dizhu.string = "底注：" + cc.vv.gameNetMgr.getZJHdifen();
this._lb_lun.string = "第 " + t + " 轮";
},
updateChipNode: function(e, t) {
var i = this._chipNodeList[e];
i.active = !0;
var n = i.total_bet_score ? i.total_bet_score : 0;
i.total_bet_score = t;
i.getChildByName("lb_chip").getComponent(cc.Label).string = t;
var a = i.getChildByName("icon_chip"), s = 2 * Math.floor(t - n);
if (0 < s) {
cc.vv.audioMgr.playSFX("resources/game/public/sounds/chipfly.mp3");
a.getComponent("dropChip").dropBet(s);
}
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
0 != i && this._seatsList[i].showTimer(15);
}
}
},
updateButton: function(e, t) {
if (1 != cc.vv.gameNetMgr.isOver) {
this.btn_node.active = !0;
this.node_JZ.active = !1;
for (var i = 0; i < this._timeButtonList.length; i++) {
var n = this._timeButtonList[i], a = n.getComponent("TimeButton");
a.closeTimer();
0 == i && a.setBtnLable(e);
if (3 == i) {
a.setBtnLable(e);
n.coin = e;
}
if (1 == i) {
n.coin = e;
n.maxCoin = t;
}
a.showTimer(15);
}
}
},
updateMyNode: function(e) {
this._my_lb_chip.active = !0;
this._my_lb_chip.getChildByName("lb_chip").getComponent(cc.Label).string = e;
},
onBipaiClick: function(e) {
this.compareNode.active = !0;
this.btn_node.active = !1;
this.updateShowCompareNode();
this.updateMyNode("比牌");
},
updateShowCompareNode: function() {
for (var e = 0; e < this._compareNodeList.length; ++e) this._compareNodeList[e] && (this._compareNodeList[e].active = !1);
var t = cc.vv.gameNetMgr.zjh_goldflowerStateData;
if (null != t) for (var i = t.user_state, n = 0; n < i.length; n++) {
var a = i[n];
if (0 == a.die) {
var s = a.seat_index, c = cc.vv.gameNetMgr.getLocalIndex(s);
if (0 == c) continue;
this._compareNodeList[c].sIndex = s;
this._compareNodeList[c].active = !0;
}
}
},
onCloseCompareNodeClicked: function(e) {
this.compareNode.active = !1;
this.btn_node.active = !0;
this.node_JZ.active = !1;
for (var t = 0; t < this._compareNodeList.length; ++t) this._compareNodeList[t] && (this._compareNodeList[t].active = !1);
},
onCompareItemClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.sIndex, i = JSON.parse(cc.vv.msgTemp.CS_Compare);
i.watch_index = cc.vv.gameNetMgr.seatIndex;
i.compare_index = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("compare", i);
this.compareNode.active = !1;
for (var n = 0; n < this._compareNodeList.length; ++n) this._compareNodeList[n] && (this._compareNodeList[n].active = !1);
},
onCloseClicked: function(e) {
if (this.isOpSlidering) this.isOpSlidering = !1; else if (this.node_JZ.active) {
this.node_JZ.active = !1;
this.btn_node.active = !0;
}
},
onJiaZhunClick: function(e) {
var t = this._timeButtonList[1].coin;
this.btn_showJia.getChildByName("lab").getComponent(cc.Label).string = t;
this.btn_showJia.addCoin = t;
this.btn_sureAddBet.y = this.btn_sureAddBetPos.y;
this.silderCallback(0);
this.node_JZ.active = !0;
this.btn_node.active = !1;
},
silderCallback: function(e) {
var t = this._timeButtonList[1].coin, i = (this._timeButtonList[1].maxCoin - t) * e, n = i % 5, a = Math.floor(t + i - n);
a = 205 < a ? 200 : a;
this.btn_showJia.getChildByName("lab").getComponent(cc.Label).string = a;
this.btn_showJia.addCoin = a;
},
onSendAddBet: function() {
cc.vv.audioMgr.playBtnClick();
var e = this.btn_showJia.addCoin, t = JSON.parse(cc.vv.msgTemp.CS_Betting);
t.coin = e;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", t);
this.btn_node.active = !1;
this.node_JZ.active = !1;
this.updateMyNode("加注");
},
onGenZhuClick: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = this._timeButtonList[3].coin, i = JSON.parse(cc.vv.msgTemp.CS_Betting);
i.coin = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("betting", i);
this.btn_node.active = !1;
this.node_JZ.active = !1;
this.updateMyNode("跟注");
},
onChaPaiClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_OpenCard);
t.open_index = cc.vv.gameNetMgr.seatIndex;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("open_card", t);
this.btn_chapai.active = !1;
this.updateMyNode("看牌");
var i = cc.vv.gameNetMgr.seats[t.open_index].sex, n = this.getAudioURLByZJH(12, i);
cc.vv.audioMgr.playSFX(n);
},
onQiPaiClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = JSON.parse(cc.vv.msgTemp.CS_GiveUp);
t.giveup_index = cc.vv.gameNetMgr.seatIndex;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("giveup", t);
this.node_JZ.active = !1;
this.updateMyNode("弃牌");
},
onBettingPush: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seat_index), i = this._chipNodeList[t].total_bet_score, n = Math.floor(i) + e.coin;
this.updateChipNode(t, n);
this.updateThrowChouma(e.seat_index, e.coin);
var a = cc.vv.gameNetMgr.seats[e.seat_index].sex;
if (1 == e.bet_type) {
var s = 8;
this.onShowLabelPlay(e.seat_index, "跟注", 2);
} else if (2 == e.bet_type) {
s = 9;
this.onShowLabelPlay(e.seat_index, "加注", 2);
}
var c = this.getAudioURLByZJH(s, a);
cc.vv.audioMgr.playSFX(c);
},
updateThrowChouma: function(e, t) {
t = t;
var i = 4;
i = 1 == Math.floor(2 * Math.random()) ? 4 : 2;
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._coumaStartPositionList[n], s = cc.instantiate(this.couma_pk_prefab);
s.parent = this.coumaMC;
s.getComponent("ChoumaItem").setValueByCion(i, t);
s.active = !0;
s.setScale(.5);
s.setPosition(a.x, a.y);
var c = Math.floor(100 * Math.random()), r = Math.floor(70 * Math.random());
1 == Math.floor(2 * Math.random()) ? c = 0 - c : r = 0 - r;
var o = cc.p(c, r);
s.runAction(cc.sequence(cc.show(), cc.moveTo(.2, o)));
},
finishCoumaMC: function(e) {
var t = [];
t = t.concat(this.coumaMC.getChildren());
for (var i = 0; i < e.length; i++) {
var n = e[i].parent.getPosition();
for (var a in t) {
t[a].active = !1;
var s = cc.instantiate(t[a]);
s.active = !0;
s.parent = this.coumaMC;
var c = cc.sequence(cc.delayTime(.1 * a), cc.moveTo(.3, n));
s.runAction(c);
0 == i && cc.vv.audioMgr.playSFX("resources/game/public/sounds/chipfly.mp3");
}
}
},
onGiveUp: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.onShowLabelPlay(e, "弃牌", -1);
if (0 == t) {
this.btn_node.active = !1;
this.giveupPKByMySelf(e);
} else this.giveupPK(e);
},
onShowCardType: function(e) {
this.showHeadTime(-1);
for (var t = cc.vv.gameNetMgr.gameOverData, i = -1, n = cc.vv.gameNetMgr.seats, a = n.length, s = a - 1 < e + 1 ? 0 : e + 1, c = 0, r = s; r < a + s; r++) {
var o = a - 1 < r ? r - a : r, h = t.end_seats_data[o];
if (h) {
h.card_type.type && (i = h.card_type.type);
if (1 == h.give_up) continue;
}
var l = n[o], d = l.holds;
if (d && 0 < d.length) {
this.initMahjongs(l.seatindex, c);
this.onShowAnim(l.seatindex, i, .5 + 1 * c);
c++;
}
}
var u = this, v = 1 * c + .5;
this.node.runAction(cc.sequence(cc.delayTime(v), cc.callFunc(function(e) {
u.onGameOverClean();
u.showGameOver();
})));
},
onShowAnim: function(t, i, e) {
var n = this, a = cc.vv.gameNetMgr.getLocalIndex(t), s = (cc.vv.gameNetMgr.seats[t].sex, 
this._effectNode[a]);
s.active = !0;
var c = s.getChildByName("tx_zjh");
if (!c) {
(c = cc.instantiate(this.node.getComponent("MJGame_ZJH").zjh_type_prefab)).parent = s;
c.name = "tx_zjh";
}
i && c.runAction(cc.sequence(cc.hide(), cc.delayTime(e), cc.show(), cc.callFunc(function() {
var e = c.getComponent(cc.Animation);
if (1 == i) {
1;
n.onShowLabelPlay(t, "散牌", -1);
} else if (2 == i) {
2;
n.onShowLabelPlay(t, "对子", -1);
} else if (3 == i) {
e.play("zjh-sz");
3;
n.onShowLabelPlay(t, "顺子", -1);
} else if (4 == i) {
e.play("zjh-jh");
4;
n.onShowLabelPlay(t, "金花", -1);
} else if (5 == i) {
e.play("zjh-ths");
5;
n.onShowLabelPlay(t, "同花顺", -1);
} else if (6 == i) {
e.play("zjh-bz");
6;
n.onShowLabelPlay(t, "豹子", -1);
}
})));
},
getAudioURLByZJH: function(e, t) {
return 1 == t ? "resources/game/zjh/sounds/man/" + e + ".mp3" : "resources/game/zjh/sounds/women/" + e + ".mp3";
},
onCompareEffect: function(i) {
this.clearCompare();
this.compareEffect.active = !0;
this._isDoingCompare = !0;
var e = i.compare_index, t = i.watch_index, n = cc.vv.gameNetMgr.getLocalIndex(e);
this._folds[n].active = !0;
var a = cc.vv.gameNetMgr.getLocalIndex(t), s = this._eff_qiu_localSize[n], c = s.parent.getPosition().add(s.getPosition());
this.eff_qiu_1.setPosition(c.x, c.y);
this.eff_qiu_1.getChildByName("zjh-bp-q").getComponent(cc.Animation).play("zjh-bp-q");
var r = this._eff_qiu_localSize[a], o = r.parent.getPosition().add(r.getPosition());
this.eff_qiu_2.setPosition(o.x, o.y);
this.eff_qiu_2.getChildByName("zjh-bp-q").getComponent(cc.Animation).play("zjh-bp-q");
var h = cc.p(c.x, c.y), l = cc.p(o.x, o.y), d = h.add(l).div(2), u = h.sub(l).mag(), v = h.sub(l).signAngle(cc.p(1, 0)) / Math.PI * 180;
this.eff_shangdian.setPosition(d);
this.eff_shangdian.rotation = -v;
this.eff_shangdian.scale = u / 1190;
this.eff_shangdian.getChildByName("zjh-shandian").getComponent(cc.Animation).play("zjh-shandian");
cc.vv.audioMgr.playSFX("resources/game/zjh/sounds/shandian.mp3");
var g = this;
this.node.runAction(cc.sequence(cc.delayTime(.8), cc.callFunc(function(e) {
g.compare_bg.active = !0;
g.eff_bg.active = !0;
var t = g.eff_bg.getChildByName("zjh-bp");
t.active = !0;
t.getComponent(cc.Animation).play("zjh-bp");
})));
this.node.runAction(cc.sequence(cc.delayTime(1.2), cc.callFunc(function(e) {
var t = g.eff_bg.getChildByName("zjh-vs");
t.active = !0;
t.getComponent(cc.Animation).play("zjh-vs");
})));
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function(e) {
var t = g.eff_bg.getChildByName("zjh-bp-dt");
t.active = !0;
t.getComponent(cc.Animation).play("zjh-bp-dt");
g.onCompare(i);
})));
},
clearCompare: function() {
this._isDoingCompare = !1;
this.compareEffect.active = !1;
this.compare.active = !1;
this.compare_bg.active = !1;
this.win_node.active = !1;
this.watch_name.getComponent(cc.Label).string = "";
this.compare_name.getComponent(cc.Label).string = "";
this.compare_icon.clear_setUserID();
this.watch_icon.clear_setUserID();
var e = this.eff_bg.getChildByName("zjh-bp");
e.getComponent(cc.Animation).stop();
e.active = !1;
var t = this.eff_bg.getChildByName("zjh-vs");
t.getComponent(cc.Animation).stop();
t.active = !1;
var i = this.eff_bg.getChildByName("zjh-bp-dt");
i.getComponent(cc.Animation).stop();
i.active = !1;
this.eff_bg.active = !1;
},
onCompare: function(n) {
console.log("-----------比牌动画");
n.result;
this.compare.active = !0;
this.compare_card_mc.scale = .8;
this.compare_card_mc.setPosition(533, 0);
this.watch_card_mc.scale = .8;
this.watch_card_mc.setPosition(-533, 20);
var e = cc.p(-205, 20), t = cc.p(205, 0);
this.compare_card_mc.runAction(cc.sequence(cc.moveTo(.5, t), cc.delayTime(.2)));
this.watch_card_mc.runAction(cc.sequence(cc.moveTo(.5, e), cc.delayTime(.2)));
var i = n.watch_index, a = cc.vv.gameNetMgr.seats[i];
if (a) {
this.watch_name.getComponent(cc.Label).string = a.name;
this.watch_icon.setUserID(a.userid, a.name);
}
var s = n.compare_index, c = cc.vv.gameNetMgr.seats[s];
if (c) {
this.compare_name.getComponent(cc.Label).string = c.name;
this.compare_icon.setUserID(c.userid);
}
var r = this;
this.compare.runAction(cc.sequence(cc.delayTime(.8), cc.callFunc(function(e) {
r.watch_card_mc.active = !0;
var t = n.watch_index;
n.watch_card;
r.initMahjongs(t);
r.compare_card_mc.active = !0;
var i = n.compare_index;
n.compare_card;
r.initMahjongs(i);
})));
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function(e) {
var t = cc.p(205, -30);
t = 1 == n.result ? cc.p(-205, -20) : cc.p(205, -30);
r.win_node.active = !0;
r.win_node.setPosition(t);
var i = r.win_node.getChildByName("zjh-win");
i.active = !0;
i.getComponent(cc.Animation).play("zjh-win");
cc.vv.audioMgr.playSFX("resources/game/public/sounds/win.mp3");
})));
this.compare.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function(e) {
r.clearCompare();
r._isDoingCompare = !1;
r._goldflowerState_delay = 4;
r._compare_zjh_delay = 5.5;
cc.vv.gameNetMgr.zjh_compare = !1;
})));
},
giveupPKByMySelf: function(e) {
if (!this._qipaiMap[e]) {
var t = cc.vv.gameNetMgr.getLocalIndex(e), i = this._zhongxin[t], n = i.parent.getPosition().sub(i.getPosition());
this._folds_qipai = this._folds[t];
this.updateGiveUpHold();
var a = cc.instantiate(this._folds_qipai);
if (!a.children[0]) return;
a.parent = this._folds_qipai.parent;
a.getPosition = this._folds_qipai.getPosition;
a.active = !0;
var s = a.children[0], c = a.children[1], r = a.children[2];
s.runAction(cc.moveTo(.2, c.getPosition()));
r.runAction(cc.moveTo(.2, c.getPosition()));
a.runAction(cc.sequence(cc.delayTime(.3), cc.spawn(cc.moveTo(.3, cc.p(n.x, n.y)), cc.rotateBy(.3, 45)), cc.callFunc(function() {
a.active = !1;
a.destroy();
})));
this._qipaiMap[e] = !0;
}
},
giveupPK: function(e) {
if (!this._qipaiMap[e]) {
var t = cc.vv.gameNetMgr.getLocalIndex(e), i = this._zhongxin[t], n = i.parent.getPosition().sub(i.getPosition());
this._folds_qipai = this._folds[t];
this._folds_qipai.active = !1;
var a = cc.instantiate(this._folds_qipai);
if (!a.children[0]) return;
a.parent = this._folds_qipai.parent;
a.getPosition = this._folds_qipai.getPosition;
a.active = !0;
var s = a.children[0], c = a.children[1], r = a.children[2];
s.runAction(cc.moveTo(.2, c.getPosition()));
r.runAction(cc.moveTo(.2, c.getPosition()));
a.runAction(cc.sequence(cc.delayTime(.3), cc.spawn(cc.moveTo(.3, cc.p(n.x, n.y)), cc.rotateBy(.3, 45)), cc.callFunc(function() {
a.active = !1;
a.destroy();
})));
this._qipaiMap[e] = !0;
}
},
updateGiveUpHold: function() {
var e = cc.vv.gameNetMgr.getSelfData();
if (e) {
var t = e.holds;
if (t) {
var i = this._folds[0];
i.active = !0;
for (var n = 5, a = 0; a < i.children.length; ++a) {
if (i.children[a].back) {
n = a;
break;
}
}
i.removeAllChildren();
for (var s = t.length / 2, c = 0; c < t.length; c++) {
var r = t[c], o = cc.instantiate(this.pk_prefab);
o.parent = i;
var h = 40 * c - 40 * s + 20;
o.setPosition(h, 0);
o.poker_id = r;
o.getComponent("MyPoker").setBlack(!0);
-1 == r && (o.back = 1);
c < n ? this.setSpriteFrameByMJID(o, r) : -1 == r ? this.setSpriteFrameByMJID(o, r) : this.setSpriteFrameByMJID2(o, r, 1);
}
}
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
setSpriteFrameByMJID2: function(e, t, i) {
var n = e.getComponent("MyPoker");
n.setValueAndColorByID(-1);
var a = cc.sequence(cc.delayTime(i), cc.rotateTo(.5, 0, 90), cc.callFunc(function() {
e.rotationY = -90;
n.setValueAndColorByID(t);
}), cc.rotateTo(.5, 0, 0));
e.runAction(a);
},
setSpriteFrameByMJID3: function(e, t) {
var i = e.getComponent(cc.Sprite), n = null, a = cc.vv.poker_util.get_poker_value(t), s = cc.vv.poker_util.get_poker_color(t), c = "card_" + s + "_" + a;
n = s < 2 ? this.cuocard_atlas1.getSpriteFrame(c) : this.cuocard_atlas2.getSpriteFrame(c);
i.spriteFrame = n;
},
onShowLabelPlay: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e);
this._chupaiSprite[n].getComponent(cc.Label).string = t;
this._seatNodes[n].getComponent("Seat").hideName();
0 == n && this.updateMyNode(t);
},
onCuoPaiClick: function() {},
cuoPai2: function() {
this._cuoPaiNode.removeAllChildren();
var e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].holds, t = this._folds[0];
for (var i in t.getChildren()) {
var n = cc.instantiate(this.cuo_pk_prefab);
n.setAnchorPoint(cc.p(0, 0));
n.setPosition(10 * i - 80, -300);
n.pid = e[2 - i];
this.setSpriteFrameByMJID3(n, n.pid);
n.parent = this._cuoPaiNode;
n.runAction(cc.moveBy(.3, cc.p(0, 100)));
this.addDragEventToNode(n);
}
},
addDragEventToNode: function(i) {
i.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var t = e.touch.getDelta();
i.x += t.x;
i.y += t.y;
});
},
onKaiPaiClick: function() {
if (0 < this._cuoPaiNode.getChildren().length) for (var e in this._cuoPaiNode.getChildren()) {
var t = this._cuoPaiNode.getChildren()[e], i = cc.spawn(cc.moveTo(.3, cc.p(-80, -200)), cc.rotateTo(.3, 15 * e - 30)), n = cc.sequence(i, cc.delayTime(.1), cc.moveTo(.5, cc.p(-80, -1e3)));
t.runAction(n);
}
this.unscheduleAllCallbacks();
for (e = 0; e < this._seatsList.length; ++e) this._seatsList[e].closeTimer();
this._folds[0].active = !0;
this.initMahjongs(this.kanPaiData.index);
},
onStartPlayEndPush: function(e) {
if (0 == e.success) {
var t = cc.vv.gameNetMgr.seats[e.seat_index].name + "拒绝提前开始！";
cc.vv.alert.show("提示", t);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
},
onChoice: function() {
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
}
});
cc._RF.pop();
}, {
msgdefine: "msgdefine",
poker_utils_ZJH: "poker_utils_ZJH"
} ],
MJGame_replay_10DB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b6ef9IyN3dPmr3DXk+jAk2E", "MJGame_replay_10DB");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_SDB");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
this.adaptScreen();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this.node.setScale(1 * i);
},
initView: function() {
for (var e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], t = this.node.getChildByName("players58"), i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
var a = t.holds, s = cc.vv.poker_util.d10_CardTypeSre(a);
this._chupaiSprite[i].getComponent(cc.Label).string = s;
this._halfLen = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var c = 0; c < a.length; c++) {
var r = a[c], o = cc.instantiate(cc.find("Canvas").getComponent("MJGame_SDB").pk_prefab);
o.parent = n;
var h = 25 * c - 25 * this._halfLen, l = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
l = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
o.setPosition(h, l);
this.setSpriteFrameByMJID(o, r);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_SDB").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_SDB: "poker_utils_SDB"
} ],
MJGame_replay_13S: [ function(i, e, t) {
"use strict";
cc._RF.push(e, "2c6bd7ER+RO6pbJFeL5soXS", "MJGame_replay_13S");
cc.Class({
extends: cc.Component,
properties: {
pk_prefab: {
default: null,
type: cc.Prefab
},
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10,
_out_type_prefab: null
},
onLoad: function() {
if (!cc.sys.isNative && cc.sys.isMobile) {
var e = this.node.getComponent(cc.Canvas);
e.fitHeight = !0;
e.fitWidth = !0;
}
if (cc.vv) {
cc.vv.poker_util = i("poker_utils_13S");
this.gameRoot = cc.find("Canvas/game");
this.replayGame = cc.find("Canvas/replayGame");
this.initView();
this.initSeats();
this.gameRoot.active = !1;
this.replayGame.active = !0;
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
} else cc.director.loadScene("loading");
},
initView: function() {
for (var e = [ "myself", "right", "up", "left" ], t = this.node, i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this._out_type_prefab = cc.find("Canvas/game/opration_13S/opNode").getComponent("op13").outType_prefab;
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e];
if (t) {
var i = t.holds;
if (null != i) {
var n = [ [ i[0], i[1], i[2] ], [ i[3], i[4], i[5], i[6], i[7] ], [ i[8], i[9], i[10], i[11], i[12] ] ];
this.showFoldsCard_13S(n, e);
}
}
},
showFoldsCard_13S: function(e, t) {
var i = (t - cc.vv.gameNetMgr.seatIndex + 4) % 4, n = this._folds[i];
n.removeAllChildren();
var a = cc.vv.gameNetMgr.group_list[t].out_type;
if (a && 1 < a) for (var s = 0; s < e.length; s++) for (var c = e[s], r = 0; r < c.length; r++) {
var o = c[r];
(p = cc.instantiate(this.pk_prefab)).parent = n;
var h = 0, l = 0, d = 0, u = -15 * Math.floor(c.length / 2);
0 != i && 1 != i && 3 != i || (d = -100);
if (0 == s) {
h = 40 * r - 40;
l = 80 + d;
}
if (1 == s) {
h = 40 * r - 80;
l = 0 + d;
}
if (2 == s) {
h = 40 * r - 80;
l = -80 + d;
}
5 == c.length && (0 != r && 4 != r || (l -= 10));
p.setPosition(h, l);
p.setRotation(u + 15 * r);
p.ro = u + 15 * r;
p.poker_id = o;
var v = cc.vv.poker_util.get_poker_display_value(o), g = Math.floor(o / 4), _ = o % 4;
p.val = g;
p.col = _;
if (1 == (p.row = s) && 2 == r) {
(m = cc.instantiate(this._out_type_prefab)).scale = 1;
m.name = "row" + s;
m.setPosition(p.getPosition());
m.parent = p.parent;
m.zIndex = 1e3;
m.seatIndex = t;
m.row = s;
p.type = type;
m.getChildByName("lb").getComponent(cc.Label).string = cc.vv.poker_util.getOutTypeName(cc.vv.gameNetMgr.group_list[t].out_type);
}
p.getComponent("MyPoker").setValueAndColor(v, _);
} else for (s = 0; s < e.length; s++) {
c = e[s];
var f = [];
for (r = 0; r < c.length; r++) {
var p;
o = c[r];
(p = cc.instantiate(this.pk_prefab)).parent = n;
f.push(p);
h = 0, l = 0, d = 0, u = -15 * Math.floor(c.length / 2);
0 != i && 1 != i && 3 != i || (d = -100);
if (0 == s) {
h = 40 * r - 40;
l = 80 + d;
}
if (1 == s) {
h = 40 * r - 80;
l = 0 + d;
}
if (2 == s) {
h = 40 * r - 80;
l = -80 + d;
}
5 == c.length && (0 != r && 4 != r || (l -= 10));
p.setPosition(h, l);
p.setRotation(u + 15 * r);
p.ro = u + 15 * r;
p.poker_id = o;
v = cc.vv.poker_util.get_poker_display_value(o), g = Math.floor(o / 4), _ = o % 4;
p.val = g;
p.col = _;
if (0 == (p.row = s) && 1 == r || 0 != s && 2 == r) {
var m;
(m = cc.instantiate(this._out_type_prefab)).scale = .6;
m.name = "row" + s;
m.setPosition(p.getPosition());
m.parent = p.parent;
m.zIndex = 1e3;
m.seatIndex = t;
m.row = s;
m.getChildByName("lb").getComponent(cc.Label).string = cc.vv.poker_util.getDaoTypeName(cc.vv.gameNetMgr.group_list[t].stage[s]);
}
p.getComponent("MyPoker").setValueAndColor(v, _);
}
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_13S: "poker_utils_13S"
} ],
MJGame_replay_21D: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a0914rsFChIPalISfgKdagG", "MJGame_replay_21D");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_21d");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
this.adaptScreen();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this.node.setScale(1 * i);
},
initView: function() {
for (var e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], t = this.node.getChildByName("players58"), i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
var a = t.holds, s = a[0], c = a[1], r = cc.vv.poker_util.d21_CardType(s);
this._chupaiSprite[i].getComponent(cc.Label).string = r;
var o = 0;
if (0 < c.length) {
o = -100;
var h = cc.vv.poker_util.d21_CardType(c);
this._chupaiSprite[i].getComponent(cc.Label).string = r + "    " + h;
}
this._halfLen = s.length / 2;
s.sort(function(e, t) {
return t - e;
});
for (var l = 0; l < s.length; l++) {
var d = s[l];
(g = cc.instantiate(cc.find("Canvas").getComponent("MJGame_21D").pk_prefab)).parent = n;
var u = o - 25 * this._halfLen + 25 * l, v = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
v = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
g.setPosition(u, v);
this.setSpriteFrameByMJID(g, d);
}
for (l = 0; l < c.length; l++) {
var g;
d = c[l];
(g = cc.instantiate(cc.find("Canvas").getComponent("MJGame_21D").pk_prefab)).parent = n;
u = 200 - 25 * this._halfLen + 25 * l, v = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
v = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
g.setPosition(u, v);
this.setSpriteFrameByMJID(g, d);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_21D").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_21d: "poker_utils_21d"
} ],
MJGame_replay_3DH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9b77bvj3m1Ntp7GwOnuf7ou", "MJGame_replay_3DH");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_3DH");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
initView: function() {
for (var e = [ "myself", "right", "up", "left" ], t = this.node, i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs_3dh(i.seatindex);
}
},
setSpriteFrameByMJID_3dh: function(e, t, i) {
e.getComponent("MyPoker").setValueAndColor(t, i);
e.active = !0;
},
sortHolds_3dh: function(e, t) {
var i = [];
0 < e.length && (i = cc.vv.poker_util.pokerSort(e, t));
return i;
},
initMahjongs_3dh: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = this.sortHolds_3dh(t.holds, t.mainColor);
if (null != i) {
t = cc.vv.gameNetMgr.seats[e];
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._holds[n];
a.removeAllChildren();
this._halfLen = 21 < i.length ? 10 : i.length / 2;
for (var s = 0; s < i.length; s++) {
var c = i[s], r = c.cid, o = cc.instantiate(cc.find("Canvas").getComponent("MJGame_3DH").pk_prefab);
o.parent = a;
var h = 0 + 25 * s - 25 * this._halfLen, l = 0;
a.rotation = 1 == n ? 270 : 2 == n ? 0 : 3 == n ? 90 : 0;
if (21 < i.length) if (s < 8) {
l = 70;
h = 0 + 25 * s + 75;
} else h = 0 + 25 * (s - 8) - 25 * this._halfLen;
o.setPosition(h, l);
o.poker_id = r;
o.valueID = c.valueID;
o.valueC = c.color;
o.pokerIndex = s;
this.setSpriteFrameByMJID_3dh(o, c.valueID, c.color);
}
}
},
showFoldsCard_3dh: function(e, t) {
var i = cc.vv.gameNetMgr.seats[t], n = cc.vv.gameNetMgr.getLocalIndex(t);
console.log("------------localIndex:" + n);
var a = this._folds[n], s = this.sortHolds_3dh(e, i.mainColor);
a.scaleX = 1.3;
a.scaleY = 1.3;
a.removeAllChildren();
for (var c = 0; c < s.length; c++) {
var r = s[c], o = (r.cid, cc.instantiate(cc.find("Canvas").getComponent("MJGame_3DH").pk_prefab));
o.parent = a;
var h = 0 + 20 * c, l = 0, d = 0;
if (1 == t) {
d = 0;
var u = e.length >= this._halfLen ? this._halfLen : e.length;
h = c > this._halfLen ? d + 20 * c - 20 * (this._halfLen + 1) - 20 * u : 20 * c - 20 * u;
l = c > this._halfLen ? -50 : 0;
} else if (3 == t) {
d = 0;
h = c > this._halfLen ? d + 20 * c - 20 * (this._halfLen + 1) : 20 * c;
l = c > this._halfLen ? -50 : 0;
} else {
l = 0;
h = 20 * c - (d = e.length / 2 * 20);
}
o.setPosition(h, l);
this.setSpriteFrameByMJID_3dh(o, r.valueID, r.color);
}
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard_3dh(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs_3dh(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t];
e.type;
console.log("显示出牌:", "", "type:", e.type);
i.getComponent(cc.Label).string = "";
var n = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(n);
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_3DH: "poker_utils_3DH"
} ],
MJGame_replay_3G: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "45bf0C/w2pKS4pqAuZ3yarc", "MJGame_replay_3G");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_util_3g");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
this.adaptScreen();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this.node.setScale(1 * i);
},
initView: function() {
for (var e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], t = this.node.getChildByName("players58"), i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
var a = t.holds, s = cc.vv.poker_util.check3g_card_type(a), c = cc.vv.poker_util.sangongCardTypeSre(s.type, s.max_value);
this._chupaiSprite[i].getComponent(cc.Label).string = c;
this._halfLen = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var r = 0; r < a.length; r++) {
var o = a[r], h = cc.instantiate(cc.find("Canvas").getComponent("MJGame_3G").pk_prefab);
h.parent = n;
var l = 25 * r - 25 * this._halfLen, d = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
d = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
h.setPosition(l, d);
this.setSpriteFrameByMJID(h, o);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_3G").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_util_3g: "poker_util_3g"
} ],
MJGame_replay_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "527667PkIBPAayy973csQXE", "MJGame_replay_DDZ");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_DDZ");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
initView: function() {
for (var e = [ "myself", "right", "up", "left" ], t = this.node, i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
var a = t.holds;
this._halfLen = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < a.length; s++) {
var c = a[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DDZ").pk_prefab);
r.parent = n;
var o = 25 * s - 25 * this._halfLen, h = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
h = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.ddz_getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DDZ").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_DDZ: "poker_utils_DDZ"
} ],
MJGame_replay_DNN: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b9d53ktq6hNoLvarObknxku", "MJGame_replay_DNN");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.global_dnn = e("global_setting_DNN");
cc.vv.poker_util = e("poker_utils_DNN");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
initView: function() {
for (var e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], t = this.node.getChildByName("players58"), i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
var a = t.holds;
if (0 < a.length) {
var s = cc.vv.poker_util.dnn_check_card_type(a), c = cc.vv.poker_util.dnnCardTypeSre(s.type, s.max_value);
this._chupaiSprite[i].getComponent(cc.Label).string = c;
} else this._chupaiSprite[i].getComponent(cc.Label).string = "观众";
this._halfLen = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var r = 0; r < a.length; r++) {
var o = a[r], h = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DNN").pk_prefab);
h.parent = n;
var l = 25 * r - 25 * this._halfLen, d = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
d = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
h.setPosition(l, d);
this.setSpriteFrameByMJID(h, o);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_DNN").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
global_setting_DNN: "global_setting_DNN",
poker_utils_DNN: "poker_utils_DNN"
} ],
MJGame_replay_DZPK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a039a7n45hJcYHk3dx1aHrI", "MJGame_replay_DZPK");
cc.Class({
extends: cc.Component,
properties: {
pk_prefab: {
default: null,
type: cc.Prefab
},
lb_cardsTypes: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
this.gameRoot = cc.find("Canvas");
cc.vv.poker_util = e("poker_utils_dzpk");
this.gameRoot.getChildByName("game").getChildByName("players58").getChildByName("nodeDZPK").getChildByName("nodeButton").active = !1;
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.gameRoot;
var t = this;
this.gameRoot.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.gameRoot.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
initView: function() {
for (var e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], t = this.gameRoot.getChildByName("game").getChildByName("players58"), i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this.lb_cardsTypes.push(a.getChildByName("ChuPai").getChildByName("lb_type_replay"));
this._seatNodes.push(a.getChildByName("seat"));
var s = a.getChildByName("nodeXiazhu");
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
s.active = !1;
a.active = !1;
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this.lb_cardsTypes.length; ++e) this.lb_cardsTypes[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex);
this.gameRoot.getChildByName("game").getChildByName("players58").getChildByName("p" + t).active = !0;
var i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
this.showPlayersCards();
},
showPlayersCards: function() {
cc.vv.gameNetMgr.seats;
for (var e = 0; e < cc.vv.gameNetMgr.seats.length; e++) {
var t = cc.vv.gameNetMgr.seats[e];
this.initPlayerCards(t);
}
},
initPlayerCards: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._folds[t];
i.removeAllChildren();
for (var n = e.holds, a = "", s = e.holds, c = e.public_card, r = 0; r < c.length; r++) {
var o = c[r];
s.push(o);
}
var h = cc.vv.poker_util.dzpk_checkCard(s);
n = h.card_check;
a = 1 == e.give_up ? "弃牌" : cc.vv.poker_util.dzpkCardTypeSre(h.type);
this.lb_cardsTypes[t].getComponent(cc.Label).string = a;
this._halfLen = n.length / 2;
var l = 10;
0 == t ? l = 45 : 1 == t || 2 == t ? l = 45 : 3 <= t && t <= 5 && (l = 45);
n.sort(function(e, t) {
return t - e;
});
for (var d = 0; d < n.length; d++) {
var u = cc.instantiate(this.gameRoot.getComponent("MJGame_DZPK").turnCardPrefab), v = u.getChildByName("poker");
v.poker_id = n[d];
i.addChild(u);
var g = 30 * d - 30 * this._halfLen + l;
u.setPosition(g, 0);
v.getComponent("turnCard").setValue(n[d]);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
for (var a = t.holds, s = "", c = t.holds, r = t.public_card, o = 0; o < r.length; o++) {
var h = r[o];
c.push(h);
}
var l = cc.vv.poker_util.dzpk_checkCard(c);
a = l.card_check;
s = 1 == t.give_up ? "弃牌" : cc.vv.poker_util.dzpkCardTypeSre(l.type);
this.lb_cardsTypes[i].getComponent(cc.Label).string = s;
this._halfLen = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var d = 0; d < a.length; d++) {
h = a[d];
var u = cc.instantiate(this.gameRoot.getComponent("MJGame_DZPK").pk_prefab);
u.parent = n;
var v = 25 * d - 25 * this._halfLen, g = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
g = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
u.setPosition(v, g);
this.setSpriteFrameByMJID(u, h);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this.lb_cardsTypes[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(this.gameRoot.getComponent("MJGame_DZPK").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_dzpk: "poker_utils_dzpk"
} ],
MJGame_replay_PAGUO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "72bae2wPAZMPqG8l7Ra5GAF", "MJGame_replay_PAGUO");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_PAGUO");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
initView: function() {
for (var e = [ "myself", "right", "up", "left" ], t = this.node, i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs_3dh(i.seatindex);
}
},
setSpriteFrameByMJID_3dh: function(e, t, i) {
e.getComponent("MyPoker").setValueAndColor(t, i);
e.active = !0;
},
sortHolds_3dh: function(e, t) {
var i = [];
0 < e.length && (i = cc.vv.poker_util.pokerSort(e, t));
return i;
},
initMahjongs_3dh: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = this.sortHolds_3dh(t.holds, t.mainColor);
if (null != i) {
t = cc.vv.gameNetMgr.seats[e];
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = this._holds[n];
a.removeAllChildren();
this._halfLen = 21 < i.length ? 10 : i.length / 2;
for (var s = 0; s < i.length; s++) {
var c = i[s], r = c.cid, o = cc.instantiate(cc.find("Canvas").getComponent("MJGame_PAGUO").pk_prefab);
o.parent = a;
var h = 0 + 25 * s - 25 * this._halfLen, l = 0;
a.rotation = 1 == n ? 270 : 2 == n ? 0 : 3 == n ? 90 : 0;
if (21 < i.length) if (s < 8) {
l = 70;
h = 0 + 25 * s + 75;
} else h = 0 + 25 * (s - 8) - 25 * this._halfLen;
o.setPosition(h, l);
o.poker_id = r;
o.valueID = c.valueID;
o.valueC = c.color;
o.pokerIndex = s;
this.setSpriteFrameByMJID_3dh(o, c.valueID, c.color);
}
}
},
showFoldsCard_3dh: function(e, t) {
var i = cc.vv.gameNetMgr.seats[t], n = cc.vv.gameNetMgr.getLocalIndex(t);
console.log("------------localIndex:" + n);
var a = this._folds[n], s = this.sortHolds_3dh(e, i.mainColor);
a.scaleX = 1.3;
a.scaleY = 1.3;
a.removeAllChildren();
for (var c = 0; c < s.length; c++) {
var r = s[c], o = (r.cid, cc.instantiate(cc.find("Canvas").getComponent("MJGame_PAGUO").pk_prefab));
o.parent = a;
var h = 0 + 20 * c, l = 0, d = 0;
if (1 == t) {
d = 0;
var u = e.length >= this._halfLen ? this._halfLen : e.length;
h = c > this._halfLen ? d + 20 * c - 20 * (this._halfLen + 1) - 20 * u : 20 * c - 20 * u;
l = c > this._halfLen ? -50 : 0;
} else if (3 == t) {
d = 0;
h = c > this._halfLen ? d + 20 * c - 20 * (this._halfLen + 1) : 20 * c;
l = c > this._halfLen ? -50 : 0;
} else {
l = 0;
h = 20 * c - (d = e.length / 2 * 20);
}
o.setPosition(h, l);
this.setSpriteFrameByMJID_3dh(o, r.valueID, r.color);
}
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard_3dh(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs_3dh(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t];
e.type;
console.log("显示出牌:", "", "type:", e.type);
i.getComponent(cc.Label).string = "";
var n = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(n);
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_PAGUO: "poker_utils_PAGUO"
} ],
MJGame_replay_PDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "12b628HrKtF9pAwfQQQqB6B", "MJGame_replay_PDK");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_PDK");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
initView: function() {
for (var e = [ "myself", "right", "up", "left" ], t = this.node, i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
var a = t.holds;
this._halfLen = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < a.length; s++) {
var c = a[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_PDK").pk_prefab);
r.parent = n;
var o = 25 * s - 25 * this._halfLen, h = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
h = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_PDK").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_PDK: "poker_utils_PDK"
} ],
MJGame_replay_ZJH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0b4cagfTrdNibSbXKyRkJ2O", "MJGame_replay_ZJH");
cc.Class({
extends: cc.Component,
properties: {
_chupaiSprite: [],
_folds: [],
_holds: [],
_seatNodes: [],
_mjcount: null,
_gamecount: null,
_halfLen: 10
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_ZJH");
this.initView();
this.initSeats();
this.onGameReplay();
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
this.adaptScreen();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this.node.setScale(1 * i);
},
initView: function() {
for (var e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], t = this.node.getChildByName("players58"), i = 0; i < e.length; ++i) {
var n = e[i], a = t.getChildByName(n);
a.active = !0;
this._folds.push(a.getChildByName("folds"));
this._holds.push(a.getChildByName("holds"));
this._chupaiSprite.push(a.getChildByName("ChuPai").getChildByName("lb_type"));
this._seatNodes.push(a.getChildByName("seat"));
}
this.hideChupai();
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isZhuang:", i);
var n = this._seatNodes[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
onGameReplay: function() {
this.hideChupai();
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats[e], i = cc.vv.gameNetMgr.getLocalIndex(e), n = this._holds[i];
n.removeAllChildren();
var a = t.holds, s = "";
if (1 == t.give_up) s = "弃牌"; else if (0 < a.length) {
var c = cc.vv.poker_util.zjh_check_card_type(a);
s = cc.vv.poker_util.zjhCardTypeSre(c);
}
this._chupaiSprite[i].getComponent(cc.Label).string = s;
this._halfLen = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var r = 0; r < a.length; r++) {
var o = a[r], h = cc.instantiate(cc.find("Canvas").getComponent("MJGame_ZJH").pk_prefab);
h.parent = n;
var l = 25 * r - 25 * this._halfLen, d = 0;
if (0 == cc.vv.gameNetMgr.use58()) {
d = 0;
n.rotation = 1 == i ? 270 : 2 == i ? 0 : 3 == i ? 90 : 0;
}
h.setPosition(l, d);
this.setSpriteFrameByMJID(h, o);
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onDoReplayAction: function(e) {
var t = e.detail.folds;
this.showOutCard(e.detail);
this.showFoldsCard(t, e.detail.seatindex);
for (var i = cc.vv.gameNetMgr.seats[e.detail.seatindex].holds, n = 0; n < t.length; n++) for (var a = 0; a < i.length; a++) if (t[n] == i[a]) {
i.splice(a, 1);
break;
}
this.initMahjongs(e.detail.seatindex);
},
onDoReplayActionOver: function() {},
showOutCard: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = this._chupaiSprite[t], n = e.type, a = cc.vv.poker_util.getCardTypeName(n);
console.log("显示出牌:", a, "type:", e.type);
i.getComponent(cc.Label).string = a;
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
i.runAction(s);
},
showFoldsCard: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = this._folds[i];
n.removeAllChildren();
var a = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var s = 0; s < e.length; s++) {
var c = e[s], r = cc.instantiate(cc.find("Canvas").getComponent("MJGame_ZJH").pk_prefab);
r.parent = n;
var o = 0 + 20 * s, h = 0, l = 0;
if (1 == i) {
l = 0;
var d = e.length >= a ? a : e.length;
o = a < s ? l + 20 * s - 20 * (a + 1) - 20 * d : 20 * s - 20 * d;
h = a < s ? -50 : 0;
} else if (3 == i) {
l = 0;
o = a < s ? l + 20 * s - 20 * (a + 1) : 20 * s;
h = a < s ? -50 : 0;
} else {
h = 0;
o = 20 * s - (l = e.length / 2 * 20);
}
r.setPosition(o, h);
this.setSpriteFrameByMJID(r, c);
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_ZJH: "poker_utils_ZJH"
} ],
MJGame_replay_pinpinle: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a7f19aQw6xMmoGdnjXq9PHD", "MJGame_replay_pinpinle");
cc.Class({
extends: cc.Component,
properties: {
_seatNodes: [],
_public_node_list: [],
_my_node_list: [],
_Rival_node_list: [],
_lb_node_list: []
},
onLoad: function() {
cc.vv.poker_util = e("poker_utils_pinpinle");
this.initView();
this.initSeats();
this.onGameReplay();
},
initView: function() {
var e = this.node, t = [ "myself", "left" ], i = 0;
for (i = 0; i < t.length; ++i) {
var n = t[i], a = e.getChildByName(n);
this._seatNodes.push(a.getChildByName("seat"));
}
this.operation_node = e.getChildByName("operation_node");
var s = this.operation_node.getChildByName("public_node");
for (i = 0; i < s.children.length; i++) {
(o = (r = s.children[i]).getChildByName("ppl_item")).index = i;
this._public_node_list.push(o);
}
this.my_node = this.operation_node.getChildByName("my_node");
for (i = 0; i < this.my_node.children.length; i++) {
(r = this.my_node.children[i]).index = i;
cc.vv.utils.addClickEvent(r, this.node, "MJGame_PPL", "onMJClicked_changeCard");
this._my_node_list.push(r);
}
var c = this.operation_node.getChildByName("Rival_node");
for (i = 0; i < c.children.length; i++) {
var r, o;
(o = (r = c.children[i]).getChildByName("ppl_item")).index = i;
this._Rival_node_list.push(o);
}
var h = this.operation_node.getChildByName("lb_node");
for (i = 0; i < h.children.length; i++) {
var l = h.children[i], d = {};
d.lb_decs = l.getChildByName("lb_decs").getComponent(cc.Label);
d.lb_win = l.getChildByName("lb_win").getComponent(cc.Label);
this._lb_node_list.push(d);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex);
console.log("isZhuang:", !1);
var i = this._seatNodes[t].getComponent("Seat");
i.setInfo(e.name, "");
i.setOffline(!1);
i.setID(e.userid);
i.setZhuang(!1);
i.voiceMsg(!1);
},
onGameReplay: function() {
var e = cc.vv.gameNetMgr.SyncData;
e && e.public_cards && this.on_pub_cards_push(e.public_cards);
var t = cc.vv.gameNetMgr.seats;
for (var i in t) {
var n = t[i];
this.updateSeatHolds(n.seatindex, n.holds);
var a = n.pose_result;
for (var s in a) this.updatePoseResult(a[s]);
}
},
updateSeatHolds: function(e, t) {
var i = [];
i = 0 == cc.vv.gameNetMgr.getLocalIndex(e) ? this._my_node_list : this._Rival_node_list;
for (var n = 0; n < t.length; n++) {
var a = t[n], s = i[n].getComponent("ppl_Item");
s.clearNode();
-1 != a && s.setValueAndColor(a);
}
},
on_pub_cards_push: function(e) {
for (var t = 0; t < e.length; t++) {
var i = e[t], n = this._public_node_list[t].getComponent("ppl_Item");
n.clearNode();
n.setValueAndColor(i);
}
},
updatePoseResult: function(e) {
cc.vv.gameNetMgr.seats[e.index];
var t = e.index, i = Math.floor(e.row), n = e.card_type, a = e.card_value, s = e.win;
i = t == cc.vv.gameNetMgr.seatIndex ? i + 3 : i;
var c = this._lb_node_list[i];
if (c) {
c.lb_decs.string = cc.vv.poker_util.poker_row_decs(n, a, !0);
c.lb_win.string = 1 == s ? "单行胜+10" : "";
}
},
update: function(e) {},
onDestroy: function() {
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_pinpinle: "poker_utils_pinpinle"
} ],
MJRoom_13S: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "59029IC7PZBRqhDevtcw00k", "MJRoom_13S");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
battleBg: {
default: null,
type: cc.Sprite
},
_seats2: [],
_zhuangs: [],
_timeLabel: null,
_voiceMsgQueue: [],
_lastPlayingSeat: null,
_playingSeat: null,
_lastPlayTime: null,
donghuaPositionList: []
},
onLoad: function() {
if (null != cc.vv) {
this.initRoomInfo();
if (1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
var e, t = null;
t = this.node.getChildByName("game");
e = [ "myself", "right", "up", "left" ];
for (var i = 0; i < e.length; ++i) {
var n = t.getChildByName(e[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initRoomInfo: function() {},
initEventHandlers: function() {
var i = this;
this.node.on("new_user", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
i.initSeats();
i.initSingleSeatZhuang();
cc.vv.anysdkMgr.getBatteryLevel();
});
this.node.on("game_state", function(e) {
i.canleReady();
});
this.node.on("game_huanpai", function(e) {
for (var t in i._seats2) i._seats2[t].refreshXuanPaiState();
});
this.node.on("sdh_change_button", function(e) {
i.initSeats();
i.initSingleSeatZhuang();
});
this.node.on("kick_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("transfer_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("clear_Seats", function(e) {
i.clearSeats();
i.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "myself", "right", "up", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("Bdan").active = !1;
a.getChildByName("ht10").active = !1;
a.getChildByName("Bshuan").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch || 1 != cc.vv.gameNetMgr.getIsWatch()) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
var a = cc.vv.gameNetMgr._dzpk_taxas_state_data;
if (a) {
var s = a.user_state[e.seatindex].total_bet_score;
this._seats2[t].getComponent("Seat").setDelScore(s);
}
}
},
initSingleSeatZhuang: function() {
var e = cc.vv.gameNetMgr.conf.server_type;
if (20003 == e || 20007 == e || 20008 == e || 20009 == e || 20010 == e || 20011 == e) {
var t = 1 * cc.vv.gameNetMgr.conf.type_index, i = !1;
0 == (8 & t) && 0 == (16 & t) || (i = !0);
if (!i) {
for (var n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; ++a) {
var s = n[a], c = cc.vv.gameNetMgr.getLocalIndex(s.seatindex), r = s.seatindex == cc.vv.gameNetMgr.button, o = 1 < cc.vv.gameNetMgr.multiBanker.length;
this._seats2[c].setZhuangMC(r, o);
}
c = 0, this.node.getChildByName("game");
if (1 < cc.vv.gameNetMgr.multiBanker.length) for (var h = 0; h < cc.vv.gameNetMgr.multiBanker.length; h++) {
var l = cc.vv.gameNetMgr.multiBanker[h], d = cc.vv.gameNetMgr.getLocalIndex(l), u = this._zhuangs[d];
u.active = !0;
var v = cc.repeat(cc.sequence(cc.show(), cc.delayTime(.1), cc.callFunc(function() {}), cc.hide(), cc.delayTime(.1)), 10);
u.runAction(v);
}
}
}
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_21D: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "53073jCM31E6KzPCqrAmNPq", "MJRoom_21D");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: [],
donghuaPositionList: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
this.canleReady();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game").getChildByName("players_node"), t = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var i = this;
this.node.on("new_user", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
i.initSeats();
});
this.node.on("game_button_push", function(e) {
i.initSingleSeatZhuang();
});
this.node.on("game_state", function(e) {
i.canleReady();
});
this.node.on("game_huanpai", function(e) {
for (var t in i._seats2) i._seats2[t].refreshXuanPaiState();
});
this.node.on("kick_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("transfer_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("clear_Seats", function(e) {
i.clearSeats();
i.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName("players_node").getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("d21Node").active = !1;
a.getChildByName("chipNode").active = !1;
a.getChildByName("baoxianNode").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
}
},
initSingleSeatZhuang: function() {
console.log("-------------------cc.vv.gameNetMgr.button:" + cc.vv.gameNetMgr.button);
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
var i = e[t], n = cc.vv.gameNetMgr.getLocalIndex(i.seatindex), a = i.seatindex == cc.vv.gameNetMgr.button, s = 1 < cc.vv.gameNetMgr.multiBanker.length;
this._seats2[n].setZhuangMC(a, s);
}
n = 0, this.node.getChildByName("game");
if (1 < cc.vv.gameNetMgr.multiBanker.length) for (var c = 0; c < cc.vv.gameNetMgr.multiBanker.length; c++) {
var r = cc.vv.gameNetMgr.multiBanker[c], o = cc.vv.gameNetMgr.getLocalIndex(r), h = this._zhuangs[o];
h.active = !0;
var l = cc.repeat(cc.sequence(cc.show(), cc.delayTime(.1), cc.callFunc(function() {}), cc.hide(), cc.delayTime(.1)), 10);
h.runAction(l);
}
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_3DH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e21baMPONZM4qKsI+Ozx4vK", "MJRoom_3DH");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: [],
donghuaPositionList: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
this.canleReady();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var i = this;
this.node.on("new_user", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
i.initSeats();
});
this.node.on("game_state", function(e) {
i.canleReady();
});
this.node.on("game_huanpai", function(e) {
for (var t in i._seats2) i._seats2[t].refreshXuanPaiState();
});
this.node.on("sdh_change_button", function(e) {
i.initSeats();
});
this.node.on("kick_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("transfer_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("clear_Seats", function(e) {
i.clearSeats();
i.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "myself", "right", "up", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("Bshuan").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_3G: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "124beL+VMJBPIsm3omZv2TZ", "MJRoom_3G");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
var e, t = null;
t = this.node.getChildByName("game").getChildByName("players58");
e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (var i = 0; i < e.length; ++i) {
var n = t.getChildByName(e[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var t = this;
this.node.on("new_user", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
t.initSeats();
t.initSingleSeatZhuang();
});
this.node.on("game_state", function(e) {
t.canleReady();
});
this.node.on("kick_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("transfer_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("clear_Seats", function(e) {
t.clearSeats();
t.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName("players58").getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("holds").removeAllChildren();
a.getChildByName("effNode").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
initSingleSeatZhuang: function() {
cc.vv.gameNetMgr.conf.server_type;
var e = 1 * cc.vv.gameNetMgr.conf.type_index, t = !1;
0 == (8 & e) && 0 == (16 & e) || (t = !0);
if (!t) {
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = i[n], s = cc.vv.gameNetMgr.getLocalIndex(a.seatindex), c = a.seatindex == cc.vv.gameNetMgr.button, r = 1 < cc.vv.gameNetMgr.multiBanker.length;
this._seats2[s].setZhuangMC(c, r);
}
s = 0, this.node.getChildByName("game");
if (1 < cc.vv.gameNetMgr.multiBanker.length) for (var o = 0; o < cc.vv.gameNetMgr.multiBanker.length; o++) {
var h = cc.vv.gameNetMgr.multiBanker[o], l = cc.vv.gameNetMgr.getLocalIndex(h), d = this._zhuangs[l];
d.active = !0;
var u = cc.repeat(cc.sequence(cc.show(), cc.delayTime(.1), cc.callFunc(function() {}), cc.hide(), cc.delayTime(.1)), 10);
d.runAction(u);
}
}
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "57e53EvY95GN5s/deH1K3vy", "MJRoom_DDZ");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: [],
_timeLabel: null,
_voiceMsgQueue: [],
_lastPlayingSeat: null,
_playingSeat: null,
_lastPlayTime: null,
donghuaPositionList: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
onDownClick_OpenInfoBarTop: function(e) {
cc.vv.audioMgr.playBtnClick();
this._infobarTop_btnDown.active = !1;
this._infobarTop.active = !0;
},
onUpClick_OpenInfoBarTop: function(e) {
cc.vv.audioMgr.playBtnClick();
this._infobarTop_btnDown.active = !0;
this._infobarTop.active = !1;
},
onBackClick_InfoBar: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dissolve_request");
},
initEventHandlers: function() {
var i = this;
this.node.on("new_user", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
i.initSeats();
});
this.node.on("game_state", function(e) {
i.canleReady();
});
this.node.on("game_huanpai", function(e) {
for (var t in i._seats2) i._seats2[t].refreshXuanPaiState();
});
this.node.on("kick_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("transfer_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("clear_Seats", function(e) {
i.clearSeats();
i.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "myself", "right", "up", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("Bdan").active = !1;
a.getChildByName("Bshuan").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch || 1 != cc.vv.gameNetMgr.getIsWatch()) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
}
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_DNN: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "68e5fXuD4lGjb4cQfz6eddz", "MJRoom_DNN");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game").getChildByName("players58"), t = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var t = this;
this.node.on("new_user", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
t.initSeats();
t.initSingleSeatZhuang();
});
this.node.on("game_state", function(e) {
t.canleReady();
});
this.node.on("kick_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("transfer_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("clear_Seats", function(e) {
t.clearSeats();
t.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName("players58").getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("holds").removeAllChildren();
a.getChildByName("effNode").active = !1;
}
},
canleReady: function() {
var e = cc.vv.gameNetMgr.gamestate;
if (1 != e) for (var t = 0; t < this._seats2.length; ++t) this._seats2[t].setReady(!1);
if (7 == e) {
var i = cc.vv.gameNetMgr.seats;
for (t = 0; t < i.length; ++t) {
var n = cc.vv.gameNetMgr.getLocalIndex(t);
null == this._seats2[n]._score && (this._seats2[n]._score = i[t].score);
this._seats2[n].setInfo(i[t].name, this._seats2[n]._score);
}
}
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
initSingleSeatZhuang: function() {
cc.vv.gameNetMgr.conf.server_type;
var e = 1 * cc.vv.gameNetMgr.conf.type_index, t = !1;
0 == (8 & e) && 0 == (16 & e) || (t = !0);
if (!t) {
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = i[n], s = cc.vv.gameNetMgr.getLocalIndex(a.seatindex), c = a.seatindex == cc.vv.gameNetMgr.button, r = 1 < cc.vv.gameNetMgr.multiBanker.length;
this._seats2[s].setZhuangMC(c, r);
}
s = 0, this.node.getChildByName("game");
if (1 < cc.vv.gameNetMgr.multiBanker.length) for (var o = 0; o < cc.vv.gameNetMgr.multiBanker.length; o++) {
var h = cc.vv.gameNetMgr.multiBanker[o], l = cc.vv.gameNetMgr.getLocalIndex(h), d = this._zhuangs[l];
d.active = !0;
var u = cc.repeat(cc.sequence(cc.show(), cc.delayTime(.1), cc.callFunc(function() {}), cc.hide(), cc.delayTime(.1)), 10);
d.runAction(u);
}
}
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_DZPK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a3c7et8COVI2pqvLHC2As2a", "MJRoom_DZPK");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: [],
donghuaPositionList: []
},
onLoad: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
initView: function() {
var e = this.node.getChildByName("game").getChildByName("players58");
this.animworldmap = this.node.getChildByName("game").getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var t = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initEventHandlers: function() {
var t = this;
this.node.on("new_user", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
t.initSeats();
t.initSingleSeatZhuang();
});
this.node.on("game_state", function(e) {
t.canleReady();
});
this.node.on("sdh_change_button", function(e) {
t.initSeats();
t.initSingleSeatZhuang();
});
this.node.on("kick_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("transfer_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("clear_Seats", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("isReconnecting", function() {
t.canleReady();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
this.updateSysDataScore(e[t]);
}
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName("players58").getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("holds").removeAllChildren();
a.getChildByName("nodeXiazhu").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
updateSysDataScore: function(e) {
var t = cc.vv.gameNetMgr._dzpk_taxas_state_data;
if (t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), n = t.user_state[e.seatindex].total_bet_score;
this._seats2[i].getComponent("Seat").setDelScore(n);
}
},
initSingleSeatZhuang: function() {
var e = cc.vv.gameNetMgr.conf.server_type;
if (20003 == e || 20007 == e || 20008 == e || 20009 == e || 20010 == e || 20011 == e) {
var t = 1 * cc.vv.gameNetMgr.conf.type_index, i = !1;
0 == (8 & t) && 0 == (16 & t) || (i = !0);
if (!i) {
for (var n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; ++a) {
var s = n[a], c = cc.vv.gameNetMgr.getLocalIndex(s.seatindex), r = s.seatindex == cc.vv.gameNetMgr.button, o = 1 < cc.vv.gameNetMgr.multiBanker.length;
this._seats2[c].setZhuangMC(r, o);
}
c = 0, this.node.getChildByName("game");
if (1 < cc.vv.gameNetMgr.multiBanker.length) for (var h = 0; h < cc.vv.gameNetMgr.multiBanker.length; h++) {
var l = cc.vv.gameNetMgr.multiBanker[h], d = cc.vv.gameNetMgr.getLocalIndex(l), u = this._zhuangs[d];
u.active = !0;
var v = cc.repeat(cc.sequence(cc.show(), cc.delayTime(.1), cc.callFunc(function() {}), cc.hide(), cc.delayTime(.1)), 10);
u.runAction(v);
}
}
}
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_FLY: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "22077pwq/dEJrqreM9KPwgC", "MJRoom_FLY");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: [],
tg: {
default: null,
type: cc.Node
},
donghuaPositionList: []
},
onLoad: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
var e, t = null;
t = this.node.getChildByName("game");
e = [ "left", "up", "right", "myself" ];
for (var i = 0; i < e.length; ++i) {
var n = t.getChildByName(e[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
}
},
initEventHandlers: function() {
var t = this;
this.node.on("new_user", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
t.initSeats();
t.initSingleSeatZhuang();
});
this.node.on("game_state", function(e) {
t.canleReady();
});
this.node.on("robot", function(e) {
t.onRobot(e.detail);
});
this.node.on("sdh_change_button", function(e) {
t.initSeats();
t.initSingleSeatZhuang();
});
this.node.on("kick_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("transfer_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("clear_Seats", function(e) {
t.clearSeats();
t.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "myself", "right", "up", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e];
(s = t.getChildByName(n)).getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
s.getChildByName("folds").removeAllChildren();
s.getChildByName("Bdan").active = !1;
s.getChildByName("ht10").active = !1;
s.getChildByName("Bshuan").active = !1;
}
var a = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (e = 0; e < a.length; ++e) {
var s;
n = a[e];
(s = t.getChildByName("players58").getChildByName(n)).getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
s.getChildByName("folds").removeAllChildren();
s.getChildByName("holds").removeAllChildren();
s.getChildByName("nodeZJH").active = !1;
s.getChildByName("nodeXiazhu").active = !1;
s.getChildByName("d21Node").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = this.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
e.ready ? this._seats2[t].setInfo(e.name, e.score) : this._seats2[t].setInfo(e.name, this._seats2[t]._score);
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
initSingleSeatZhuang: function() {},
getLocalIndex: function(e) {
return 4 & cc.vv.gameNetMgr.conf.rule_index && 1 == e ? 2 : e;
},
onBtnTgClick: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("robot", {
active: 1
});
},
onBtnQXTgClick: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("robot", {
active: 0
});
},
btnDisable: function(e) {
this.tg.active = e;
},
onRobot: function(e) {
e.seat_index == cc.vv.gameNetMgr.seatIndex && this.btnDisable(e.robot);
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_PAGUO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c4fc29zUUtH46Oa6KsrACD7", "MJRoom_PAGUO");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var i = this;
this.node.on("new_user", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
i.initSeats();
});
this.node.on("game_state", function(e) {
i.canleReady();
});
this.node.on("game_huanpai", function(e) {
for (var t in i._seats2) i._seats2[t].refreshXuanPaiState();
});
this.node.on("sdh_change_button", function(e) {
i.initSeats();
});
this.node.on("kick_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("transfer_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("clear_Seats", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("change_button", function(e) {
i.update_change_button();
});
},
checkGPS: function(e) {
if (e.gps && -1 != e.gps.indexOf(",")) {
cc.vv.gameNetMgr.getSeatByID(e.user_id).gps = e.gps;
console.log("服务器传来用户", e.user_id, "的经纬度", e.gps);
} else console.log("没有获取到用户的经纬度", e.user_id);
var t = "";
if (1 < cc.vv.gameNetMgr.seats.length) for (var i = 0; i < cc.vv.gameNetMgr.seats.length; i++) for (var n = i + 1; n < cc.vv.gameNetMgr.seats.length; n++) {
var a = cc.vv.gameNetMgr.seats[i], s = cc.vv.gameNetMgr.seats[n];
if (a.gps && s.gps) {
var c = a.gps.split(","), r = c[0], o = c[1], h = s.gps.split(","), l = h[0], d = h[1];
cc.vv.utils.getFlatternDistance(Number(r), Number(o), Number(l), Number(d)) < 50 && (t += "玩家" + a.name + "和" + s.name + "距离小于50米\n");
}
}
"" != t && cc.vv.alert.show("警告", t);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "myself", "right", "up", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("Bshuan").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
update_change_button: function() {
for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setZhuang(!1);
var t = cc.vv.gameNetMgr.button, i = cc.vv.gameNetMgr.getLocalIndex(t);
this._seats2[i].setZhuang(!0);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_PDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c200ffxRAlEfocOsGcRYZwE", "MJRoom_PDK");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
onBackClick_InfoBar: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dissolve_request");
},
initEventHandlers: function() {
var i = this;
this.node.on("new_user", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
i.initSeats();
});
this.node.on("game_state", function(e) {
i.canleReady();
});
this.node.on("game_huanpai", function(e) {
for (var t in i._seats2) i._seats2[t].refreshXuanPaiState();
});
this.node.on("kick_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("transfer_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("clear_Seats", function(e) {
i.clearSeats();
i.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "myself", "right", "up", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("Bdan").active = !1;
a.getChildByName("ht10").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_PPL: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c8ae9jqVRVIV403KXIxUxDC", "MJRoom_PPL");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats: [],
_seats2: [],
_fengweiList: [],
donghuaPositionList: []
},
onLoad: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game").getChildByName("players_node"), t = [ "p0", "p1" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
}
},
initEventHandlers: function() {
var t = this;
this.node.on("new_user", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("game_begin_push", function(e) {
t.initSeats();
});
this.node.on("game_state_push", function(e) {
t.canleReady();
});
this.node.on("kick_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("transfer_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
t.clearSeats();
t.initSeats();
});
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats[e].setInfo("", "");
this._seats2[e].setInfo("", "");
}
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready, "isZhuang:" + n);
this._seats2[t].setReady(e.ready);
this._seats2[t].setInfo(e.name, e.score);
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_SDB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "188f2O08MVNH61x2h2TPOyr", "MJRoom_SDB");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: [],
_timeLabel: null,
_voiceMsgQueue: [],
_lastPlayingSeat: null,
_playingSeat: null,
_lastPlayTime: null,
donghuaPositionList: []
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game").getChildByName("players_node"), t = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var i = this;
this.node.on("new_user", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
i.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
i.initSeats();
});
this.node.on("game_button_push", function(e) {
i.initSingleSeatZhuang();
});
this.node.on("game_state", function(e) {
i.canleReady();
});
this.node.on("game_huanpai", function(e) {
for (var t in i._seats2) i._seats2[t].refreshXuanPaiState();
});
this.node.on("offBankerState", function(e) {
i._btnXiazhuang.active = cc.vv.gameNetMgr.isOffBanker;
});
this.node.on("sdh_change_button", function(e) {
i.initSeats();
i.initSingleSeatZhuang();
});
this.node.on("kick_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("transfer_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
i.clearSeats();
i.initSeats();
});
this.node.on("clear_Seats", function(e) {
i.clearSeats();
i.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName("players_node").getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("d21Node").active = !1;
a.getChildByName("chipNode").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
initSingleSeatZhuang: function() {
cc.vv.gameNetMgr.conf.server_type;
var e = 1 * cc.vv.gameNetMgr.conf.type_index, t = !1;
0 == (8 & e) && 0 == (16 & e) || (t = !0);
if (!t) {
for (var i = cc.vv.gameNetMgr.seats, n = 0; n < i.length; ++n) {
var a = i[n], s = cc.vv.gameNetMgr.getLocalIndex(a.seatindex), c = a.seatindex == cc.vv.gameNetMgr.button, r = 1 < cc.vv.gameNetMgr.multiBanker.length;
this._seats2[s].setZhuangMC(c, r);
}
s = 0, this.node.getChildByName("game");
if (1 < cc.vv.gameNetMgr.multiBanker.length) for (var o = 0; o < cc.vv.gameNetMgr.multiBanker.length; o++) {
var h = cc.vv.gameNetMgr.multiBanker[o], l = cc.vv.gameNetMgr.getLocalIndex(h), d = this._zhuangs[l];
d.active = !0;
var u = cc.repeat(cc.sequence(cc.show(), cc.delayTime(.1), cc.callFunc(function() {}), cc.hide(), cc.delayTime(.1)), 10);
d.runAction(u);
}
}
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MJRoom_ZJH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "911ad49w9NL0I2YEUH29cMs", "MJRoom_ZJH");
cc.Class({
extends: cc.Component,
properties: {
baseRoom: cc.Prefab,
_seats2: [],
_zhuangs: []
},
onLoad: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
if (1 != cc.vv.gameNetMgr.isReplay) {
this.canleReady();
var e = cc.instantiate(this.baseRoom);
this.node.addChild(e);
e.getComponent("BaseRoom")._seats2 = this._seats2;
e.getComponent("BaseRoom").initBaseRoom();
}
},
initView: function() {
for (var e = this.node.getChildByName("game").getChildByName("players_node"), t = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var t = this;
this.node.on("new_user", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
t.initSingleSeat(e.detail);
});
this.node.on("game_begin", function(e) {
t.initSeats();
});
this.node.on("game_state", function(e) {
t.canleReady();
});
this.node.on("sdh_change_button", function(e) {
t.initSeats();
});
this.node.on("kick_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("transfer_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("seq_move_seat_push", function(e) {
t.clearSeats();
t.initSeats();
});
this.node.on("clear_Seats", function(e) {
t.clearSeats();
t.initSeats();
});
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName("players_node").getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("holds").removeAllChildren();
a.getChildByName("effectNode").active = !1;
}
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
console.log("isOffline:" + i, "seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seatindex:" + e.seatindex, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex, "seat.ready:" + e.ready);
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
} else cc.vv.gameNetMgr.getIsWatch();
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {} ],
MahjongMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0ecea6X+IFIK5XFdJe38hXa", "MahjongMgr");
cc.Class({
extends: cc.Component,
properties: {
mjAtlas: {
default: null,
type: cc.SpriteAtlas
},
pkAtlas: {
default: null,
type: cc.SpriteAtlas
},
pkAtlas_old: {
default: null,
type: cc.SpriteAtlas
},
hallAtlas: {
default: null,
type: cc.SpriteAtlas
},
gradeicon: {
default: null,
type: cc.SpriteAtlas
}
},
onLoad: function() {
null != cc.vv && (cc.vv.mahjongmgr = this);
},
getMJSpriteByID: function(e, t, i) {
var n = "";
n = 0 == e || 2 == e ? 1 == i ? "down_" + t : "down_f_" + t : 1 == e ? "right_f_" + t : "left_f_" + t;
return this.mjAtlas.getSpriteFrame(n);
},
getMJActionSpriteByID: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = "";
n = 0 == e || 2 == e ? 1 == i ? "down_wall" : "down_f_" + t : 1 == e ? 1 == i ? "right_wall" : "right_f_" + t : 1 == i ? "left_wall" : "left_f_" + t;
return this.mjAtlas.getSpriteFrame(n);
},
getMJFlowerType: function(e) {
var t = "down_f_" + e;
return this.mjAtlas.getSpriteFrame(t);
},
getMJCaiType: function(e) {
var t = "down_" + e;
return this.mjAtlas.getSpriteFrame(t);
},
getPokerFrameByName: function(e) {
this.pkAtlas;
return this.pkAtlas.getSpriteFrame(e);
},
getPokerFrameByName_old: function(e) {
return this.pkAtlas_old.getSpriteFrame(e);
},
getHallRewardFraneByName: function(e) {
return this.hallAtlas.getSpriteFrame(e);
},
getGradeByName: function(e) {
return this.gradeicon.getSpriteFrame(e);
},
getAudioURLByMJID: function(e) {
if (3 <= e && e < 18) var t = e; else if (18 <= e && e < 31) t = e; else if (32 == e) t = e; else if (33 == e) t = e; else if (34 == e) t = e; else if (35 == e) t = e; else if (36 == e) t = e; else if (0 == e) t = e;
return "normal/man/" + t + ".mp3";
},
getAudioURLBy13S: function(e, t) {
return t ? "13SAudio/man/" + e + ".mp3" : "13SAudio/woman/" + e + ".mp3";
},
getEmptySpriteFrame: function(e) {
return "up" == e ? this.emptyAtlas.getSpriteFrame("e_mj_b_up") : "myself" == e ? this.emptyAtlas.getSpriteFrame("e_mj_b_bottom") : "left" == e ? this.emptyAtlas.getSpriteFrame("e_mj_b_left") : "right" == e ? this.emptyAtlas.getSpriteFrame("e_mj_b_right") : void 0;
},
getHoldsEmptySpriteFrame: function(e) {
return "up" == e ? this.emptyAtlas.getSpriteFrame("e_mj_up") : "myself" == e ? null : "left" == e ? this.emptyAtlas.getSpriteFrame("e_mj_left") : "right" == e ? this.emptyAtlas.getSpriteFrame("e_mj_right") : void 0;
},
sortMJ: function(e, t) {},
getSide: function(e) {
return this._sides[e];
},
getPre: function(e) {
return this._pres[e];
}
});
cc._RF.pop();
}, {} ],
Mall: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ea526R+OstHr7f3TrML3fvx", "Mall");
cc.Class({
extends: cc.Component,
properties: {
itemList: [],
text_buyDecs: cc.RichText,
lb_totalMoney: cc.Label,
lb_buyMoney: cc.Label,
lb_kefu: cc.Label,
payList: []
},
onLoad: function() {
this.initMallPayData();
this._mall = this.node;
var e = this._mall.getChildByName("item_node");
this.buyMC = this._mall.getChildByName("buyMC");
this.buyMC.active = !1;
this.lb_totalMoney.string = cc.vv.userMgr.coins;
this.lb_kefu.string = "微信：" + cc.KEFU;
for (var t = 0; t < e.children.length; ++t) {
var i = e.children[t];
i.index = t;
var n = {};
n.zuns = i.getChildByName("zuns");
n.tj = i.getChildByName("img_tj");
n.rm = i.getChildByName("img_rm");
n.bq = i.getChildByName("bq");
n.bq_lb = i.getChildByName("bq").getChildByName("lb").getComponent(cc.Label);
n.count = i.getChildByName("count").getComponent(cc.Label);
n.lb_money = i.getChildByName("lb_money").getComponent(cc.Label);
var a = this.payList[t];
n.count.string = a.ingot + "颗";
n.lb_money.string = "¥" + a.money;
n.rm.active = !1;
n.tj.active = !1;
n.bq.active = !1;
0 < a.hot && (n.rm.active = !0);
0 < a.offers && (n.tj.active = !0);
if (0 < a.sell) {
n.bq.active = !0;
n.bq_lb.string = a.sell + "%";
}
i.goodId = a.goodid;
cc.vv.utils.addClickEvent(i, this.node, "Mall", "itemClick");
this.itemList.push(n);
}
cc.vv.anysdkMgr.dataEventHandler = this.node;
var s = this;
this.node.on("freshUserInfo", function(e) {
s.refreshInfo();
});
},
refreshInfo: function() {
var t = this, e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.http.sendRequest("/get_user_status", e, function(e) {
if (0 !== e.errcode) console.log(e.errmsg); else if (null != e.gems) {
cc.vv.userMgr.gems = e.gems;
cc.vv.userMgr.coins = e.coins;
t.lb_totalMoney.string = cc.vv.userMgr.coins;
}
}.bind(this));
},
updateBuyMC: function(e) {
var t = this.payList[e];
this.lb_buyMoney.string = t.money + "元";
var i = "<color=#ffffff>钻石</c><color=#ffe13c>" + t.ingot + "颗</c>";
0 < t.give && (i = i + " + <color=#ffffff>钻石</c><color=#ffe13c>" + t.give + "颗</c>");
this.text_buyDecs.string = i;
},
itemClick: function(e) {
if (1 != this.buyMC.active) {
cc.vv.audioMgr.playBtnClick();
var t = e.target.index;
this.updateBuyMC(t);
if (cc.sys.os == cc.sys.OS_IOS) {
cc.sys.localStorage.getItem("checkOrder") ? cc.vv.alert.show("提示", "你有一笔订单还未完成") : cc.vv.anysdkMgr.paymentRequest(e.target.goodId);
} else {
this.buyMC.active = !0;
this.buyMC.goodId = e.target.goodId;
}
}
},
onBtnClick_closeBuy: function() {
cc.vv.audioMgr.playBtnClick();
this.buyMC.active = !1;
},
onBtnMall_colse: function() {
cc.vv.audioMgr.playBtnClick();
console.log("log------------close the mall!!!!!!");
this.node.destroy();
},
onBtnClick_BuyWX: function() {
cc.vv.audioMgr.playBtnClick();
console.log("微信购买");
cc.sys.localStorage.getItem("checkOrder") ? cc.vv.alert.show("提示", "你有一笔订单还未完成，赶紧联系客服把") : cc.vv.anysdkMgr.paymentRequestWX(this.buyMC.goodId);
this.buyMC.active = !1;
},
onBtnClick_BuyZFB: function() {
cc.vv.audioMgr.playBtnClick();
console.log("支付宝购买");
cc.vv.alert.show("提示", "目前只支持微信购买哦亲~0~");
},
onBtnClick_BuyYL: function() {
cc.vv.audioMgr.playBtnClick();
console.log("银联购买");
cc.vv.alert.show("提示", "目前只支持微信购买哦亲~0~");
},
initMallPayData: function() {
var e = [];
e = cc.sys.os == cc.sys.OS_IOS ? [ {
goodid: "10002",
money: 6,
give: 0,
ingot: 6,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258425411
}, {
goodid: "10003",
money: 12,
give: 0,
ingot: 12,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258426654
}, {
goodid: "10005",
money: 25,
give: 0,
ingot: 25,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258430563
}, {
goodid: "10006",
money: 50,
give: 0,
ingot: 50,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258431111
}, {
goodid: "10007",
money: 108,
give: 0,
ingot: 108,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258433136
}, {
goodid: "10008",
money: 218,
give: 0,
ingot: 218,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258433364
} ] : cc.sys.os == cc.sys.OS_ANDROID ? [ {
goodid: "20001",
money: 6,
give: 0,
ingot: 6,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258425411
}, {
goodid: "20003",
money: 12,
give: 0,
ingot: 12,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258426654
}, {
goodid: "20005",
money: 25,
give: 0,
ingot: 25,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258430563
}, {
goodid: "20006",
money: 50,
give: 0,
ingot: 50,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258431111
}, {
goodid: "20007",
money: 108,
give: 0,
ingot: 108,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258433136
}, {
goodid: "20008",
money: 218,
give: 0,
ingot: 218,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258433364
} ] : [ {
goodid: "20002",
money: 6,
give: 0,
ingot: 6,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258425411
}, {
goodid: "20003",
money: 12,
give: 0,
ingot: 12,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258426654
}, {
goodid: "20005",
money: 25,
give: 0,
ingot: 25,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258430563
}, {
goodid: "20006",
money: 50,
give: 0,
ingot: 50,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258431111
}, {
goodid: "20007",
money: 108,
give: 0,
ingot: 108,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258433136
}, {
goodid: "20008",
money: 218,
give: 0,
ingot: 218,
sell: 0,
hot: 0,
offers: 0,
item_id: 1258433364
} ];
for (var t = 0; t < e.length; t++) this.payList.push(e[t]);
}
});
cc._RF.pop();
}, {} ],
MatchChatConfig_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1ea4cJKZeBCEIuYfi+NSiK+", "MatchChatConfig_DDZ");
cc.Class({
extends: cc.Component,
properties: {
quickChatInfo: []
},
ctor: function() {
this.quickChatInfo = {
item0: {
index: 0,
content: "快点啊，都等到我花儿都谢谢了！",
sound: "resources/hall/sounds/fix_msg_1.mp3"
},
item1: {
index: 1,
content: "怎么又断线了，网络怎么这么差啊！",
sound: "resources/hall/sounds/fix_msg_2.mp3"
},
item2: {
index: 2,
content: "不要走，决战到天亮！",
sound: "resources/hall/sounds/fix_msg_3.mp3"
},
item3: {
index: 3,
content: "你的牌打得也太好了！",
sound: "resources/hall/sounds/fix_msg_4.mp3"
},
item4: {
index: 4,
content: "你是妹妹还是哥哥啊？",
sound: "resources/hall/sounds/fix_msg_5.mp3"
},
item5: {
index: 5,
content: "和你合作真是太愉快了！",
sound: "resources/hall/sounds/fix_msg_6.mp3"
},
item6: {
index: 6,
content: "大家好，很高兴见到各位！",
sound: "resources/hall/sounds/fix_msg_7.mp3"
},
item7: {
index: 7,
content: "各位，真是不好意思，我得离开一会儿。",
sound: "resources/hall/sounds/fix_msg_8.mp3"
},
item8: {
index: 8,
content: "不要吵了，专心玩游戏吧！",
sound: "resources/hall/sounds/fix_msg_9.mp3"
}
};
},
start: function() {}
});
cc._RF.pop();
}, {} ],
MatchDetail: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7ba4aRU4yBBEpJ/ioVVKYSo", "MatchDetail");
cc.Class({
extends: cc.Component,
properties: {
txt_title: {
default: null,
type: cc.RichText
},
node_left: {
default: null,
type: cc.Node
},
node_right: {
default: null,
type: cc.Node
}
},
onLoad: function() {},
start: function() {},
onClickExit: function() {
cc.vv.UILoader.destroy(this.node);
},
onClickBaoMing: function() {},
setViewData: function(e) {
cc.error("MatchDetail");
cc.log(e);
}
});
cc._RF.pop();
}, {} ],
MatchGameOver_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7d99bq4kodNFqgVxj9gB2mq", "MatchGameOver_DDZ");
cc.Class({
extends: cc.Component,
properties: {
_gameover: null,
_gameresult: null,
_seats: [],
_seats_re: [],
_win: null,
_lose: null,
_time: -1,
_springIconList: [],
items: []
},
onLoad: function() {
if (null != cc.vv) {
this.initView();
this.setData();
this.initEventHandle();
}
},
start: function() {
cc.vv.gameNetMgr.reset();
},
initEventHandle: function() {
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_BTN_CONTINUE_GAME, this.showContinueGame.bind(this));
},
showContinueGame: function() {
this.btn_countine && (this.btn_countine.active = !0);
},
initView: function() {
for (var e = this.node.getChildByName("content").getChildByName("node_result"), t = 0; t < 3; t++) {
var i = "item" + (t + 1).toString(), n = e.getChildByName(i);
this.items.push(n);
}
this._pingju = this.node.getChildByName("pingju");
this._win = this.node.getChildByName("win");
this._lose = this.node.getChildByName("lose");
this._pingju.active = !1;
this._win.active = !1;
this._lose.active = !1;
this.img_self_bg1 = this.items[0].getChildByName("img_self_bg1");
this.img_self_bg2 = this.items[0].getChildByName("img_self_bg2");
this.img_self_bg1.active = !1;
this.img_self_bg2.active = !1;
var a = this.node.getChildByName("txt_tip"), s = cc.vv.gameNetMgr.current_round == cc.vv.gameNetMgr.round_num;
a.active = !s;
this.btn_countine = this.node.getChildByName("btn_countine");
this.btn_countine.active = !1;
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
this.ddz_node.setScale(1 * i);
},
setData: function() {
var e = cc.vv.gameNetMgr.seats, t = cc.vv.utils.clone(e), i = [], n = void 0;
for (var a in t) if (t[a].user_id == cc.vv.userMgr.userId) {
n = a;
i.push(t[a]);
break;
}
t.splice(n, 1);
t = i.concat(t);
for (var s in this.items) this.setItemData(t[s], this.items[s]);
var c = t[0];
this._win.active = 0 <= c.end_score;
this._lose.active = c.end_score < 0;
this.img_self_bg1.active = 0 <= c.end_score;
this.img_self_bg2.active = c.end_score < 0;
},
setItemData: function(e, t) {
var i = t.getChildByName("name"), n = t.getChildByName("coin"), a = t.getChildByName("score"), s = t.getChildByName("total_score");
i.getComponent(cc.Label).string = e.name;
n.getComponent(cc.Label).string = e.end_score;
a.getComponent(cc.Label).string = e.end_score;
s.getComponent(cc.Label).string = e.score;
},
onClickExit: function() {
cc.vv.audioMgr.playBtnClick();
if (this.btn_countine.active) {
cc.vv.gameNetMgr.issue_reward = !1;
cc.vv.eventMgr.emit(cc.vv.event.SHOW_MATCH_DDZ_HALL);
} else cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_REMOVE_GAME_OVER);
},
onClickContinueGame: function() {
var e = this;
if (cc.vv.userMgr.curMatchId) {
if (!this.id) {
var t = function() {
if (cc.vv.gameNetMgr.auth_finish) {
clearInterval(e.id);
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("competition_registry", {
match_id: cc.vv.userMgr.curMatchId
});
} else ;
}, i = null;
cc.vv.match.match_info && cc.vv.match.match_info.server_info ? i = cc.vv.match.match_info.server_info : cc.vv.userMgr.match_info && cc.vv.userMgr.match_info.ws_ip && (i = cc.vv.userMgr.match_info);
if (i) {
var n = i.ws_ip + ":" + i.ws_port;
cc.vv.netMgr.connectMatchDDZServer(n, function() {
t();
e.id = setInterval(function() {
t();
}, 1e3);
});
}
}
} else this.onClickExit();
},
update: function(e) {},
onDestroy: function() {
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_BTN_CONTINUE_GAME);
}
});
cc._RF.pop();
}, {} ],
MatchGame_DDZ: [ function(h, e, t) {
"use strict";
cc._RF.push(e, "df7f43O1ZhJMbguqL16Ik4u", "MatchGame_DDZ");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
_myMJArr: [],
_chuPaiTempArr: [],
_chupaiSprite: [],
_folds: [],
_seatNodes: [],
_halfLen: 10,
_BDanMcList: [],
_BShuangMcList: [],
_showEff: !0,
_seatsList: [],
_lastIndex: -1,
bao1Map: null,
bao2Map: null,
over_node: null,
WaitingConnection: cc.Prefab,
node_reward: null
},
onLoad: function() {
if (cc.vv) {
this.initView();
this.initEventHandlers();
this.addGameTeXiao();
this.bao1Map = {};
this.bao2Map = {};
} else cc.director.loadScene("loading");
},
start: function() {
var t = this;
if (1 != cc.vv.gameNetMgr.isReplay) {
this.gameRoot.active = !0;
cc.vv.audioMgr.playBGM("resources/game/ddz/sounds/bgddz.mp3");
this.node.addChild(cc.instantiate(this.WaitingConnection), 110);
} else {
this.gameRoot.active = !1;
cc.vv.UILoader.loadRes("game/ddz/prefabs/replayGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
},
initView: function() {
cc.vv.poker_util = h("poker_utils_DDZ");
var e = this.node.getChildByName("game"), t = e.getChildByName("myself");
this._myholds = t.getChildByName("holds");
var i = cc.director.getVisibleSize().width;
this._myholds.scaleX *= i / 1280;
this._myholds.scaleY *= i / 1280;
for (var n = [ "myself", "right", "left" ], a = 0; a < n.length; ++a) {
var s = n[a], c = e.getChildByName(s);
c.active = !0;
this._chupaiSprite.push(c.getChildByName("ChuPai").getChildByName("lb_type"));
this._folds.push(c.getChildByName("folds"));
this._seatNodes.push(c.getChildByName("seat"));
this._seatsList.push(c.getChildByName("seat").getComponent("Seat"));
this._BDanMcList.push(c.getChildByName("Bdan"));
this._BShuangMcList.push(c.getChildByName("Bshuan"));
}
this.opration_DDZ = cc.find("Canvas/game/opration_DDZ");
this.opration_DDZ.active = !0;
this.ddz_fanpai_mc = cc.find("Canvas/game/DZholds");
this.ddz_prepare = this.opration_DDZ.getChildByName("ddz_prepare");
this.btn_pass = this.ddz_prepare.getChildByName("btn_pass");
this.nodeYaFen = this.ddz_prepare.getChildByName("nodeYaFen");
var r = this.nodeYaFen.getChildByName("yafen1");
this.yafen_1 = r.getChildByName("fen_1");
this.wuyong_fen_1 = r.getChildByName("wuyong_fen_1");
var o = this.nodeYaFen.getChildByName("yafen2");
this.yafen_2 = o.getChildByName("fen_2");
this.wuyong_fen_2 = o.getChildByName("wuyong_fen_2");
this.yafen_3 = this.nodeYaFen.getChildByName("fen_3");
this.yafen_1.active = !0;
this.yafen_2.active = !0;
this.wuyong_fen_1.active = !1;
this.wuyong_fen_2.active = !1;
cc.vv.utils.addClickEvent(this.yafen_1, this.node, "MatchGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.yafen_2, this.node, "MatchGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.yafen_3, this.node, "MatchGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btn_pass, this.node, "MatchGame_DDZ", "onOptionClicked");
this.ddz_doing = this.opration_DDZ.getChildByName("ddz_doing");
this.btnChuPai = this.ddz_doing.getChildByName("btn_chuPai");
this.btnGuo = this.ddz_doing.getChildByName("btn_guo");
this.btnTishi = this.ddz_doing.getChildByName("btn_tishi");
cc.vv.utils.addClickEvent(this.btnChuPai, this.node, "MatchGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnGuo, this.node, "MatchGame_DDZ", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnTishi, this.node, "MatchGame_DDZ", "onOptionClicked");
this.spring_1 = this.opration_DDZ.getChildByName("spring_1");
this.spring_2 = this.opration_DDZ.getChildByName("spring_2");
this.spring_1.active = !1;
this.spring_2.active = !1;
this.top_ddz = cc.find("Canvas/game/top_ddz");
this.txt_tip = e.getChildByName("txt_tip");
this.node_game_round = e.getChildByName("node_game_round");
this.txt_game_round = this.node_game_round.getChildByName("txt_game_round").getComponent(cc.Label);
this.node_wait = this.node.getChildByName("node_wait");
this.node_wait.active = !1;
this.hideClear();
},
showHeadTime: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 15;
if (!(this._lastIndex == e || t < 0)) {
this._lastIndex = e;
for (var i = 0; i < this._seatsList.length; ++i) this._seatsList[i].closeTimer();
if (-1 != e) {
var n = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[n].showTimer(t);
}
}
},
hideClear: function() {
this.hideChupai();
this.hideBDanMc();
this.closeAllOperation();
},
hideBDanMc: function() {
var e = 0;
for (e = 0; e < this._BDanMcList.length; ++e) this._BDanMcList[e].active = !1;
for (e = 0; e < this._BShuangMcList.length; ++e) this._BShuangMcList[e].active = !1;
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
closeAllOperation: function() {
this.ddz_doing.active = !1;
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
this.ddz_prepare.active = !1;
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var a = this;
this.node.on("game_holds", function(e) {
cc.log("MatchGame_DDZ  game_holds", e.detail);
a.initMahjongs(e.detail.index);
});
this.node.on("game_begin", function(e) {
cc.error("MatchGame_DDZ game_begin");
a.onGameBeign();
});
this.node.on("out_card", function(e) {
-1 != cc.vv.gameNetMgr.ddzRate && a.initWanfaLabel();
a.showOutCard(e.detail);
});
this.node.on("turn", function(e) {
for (var t = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.getLocalIndex(t), n = 0; n < a._folds.length; ++n) n == i && a._folds[n].removeAllChildren(!0);
a.showHeadTime(t, e.detail.time_out);
a.showOperation();
});
this.node.on("game_over_show", function() {
a.showHeadTime(-1);
a.onGameOverShow();
a.call_game_over();
a.clearBankerTag();
});
this.node.on("fresh_all_score", function() {
a.top_ddz.getComponent(cc.Label).string = "";
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
var i = cc.vv.gameNetMgr.getLocalIndex(t);
a._folds[i].removeAllChildren(!0);
}
a.spring_1.active = !1;
a.spring_2.active = !1;
a._showEff = !0;
a.ddz_fanpai_mc.removeAllChildren(!0);
});
this.node.on("call_turn_push", function() {
a.onCallTurnPush();
});
this.node.on("call_banker_push", function(e) {
a.onCallBankerPush(e.detail);
});
this.node.on("call_end_push", function(e) {
a.onCallEndPush(e.detail);
});
this.node.on("game_state", function() {
if (0 == cc.vv.gameNetMgr.gamestate) {
a.onCallTurnReadly();
a.onShowpaibei();
}
});
this.node.on("auto_push", function(e) {
a.on_auto_push(e.detail);
});
cc.vv.eventMgr.on(cc.vv.event.MATCH_GAME_PREPARE, this.dealMatchStart, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_REMOVE_GAME_OVER, this.removeGameOverDialog, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_MY_INFO, this.showMyInfo, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_TXT_TIP, this.showTxtTip, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_UPDATE_GAME_ROUND, this.updateGameRound, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_TABLE_WAIT, this.showTableWait, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_REWARD_DIALOG, this.showRewardDialog, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_REMOVE_REWARD_DIALOG, this.removeRewardDialog, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_LORD_CARD, this.onShowpaibei, this);
},
showRewardDialog: function(t) {
var i = this;
cc.vv.UILoader.loadRes("match/matchGame/match_ddz/prefabs/RewardDialog", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, i.node, function(e) {
i.node_reward = e;
i.node_reward.zIndex = 501;
i.node_reward.getComponent("RewardDialog").setViewData(t);
});
});
},
removeRewardDialog: function() {
if (this.node_reward) {
cc.vv.UILoader.destroy(this.node_reward);
this.node_reward = null;
}
},
showTableWait: function(e) {
if (e.isShow) {
this._myholds.removeAllChildren(!0);
this.node_wait.active = !0;
var t = e.current_idx || -100, i = e.num || -200, n = this.node_wait.getChildByName("txt_curRank").getComponent(cc.RichText), a = this.node_wait.getChildByName("txt_tip2").getComponent(cc.RichText), s = "< outline color = #954311 width= 4 > < color = #FEED9B > < b > 当前名次第" + t + "名 < /b></outline >", c = "< outline color = #964410 width = 2 > < color = #FFFFFF >剩余" + i + "桌 < /c></outline >";
n.string = s;
a.string = c;
} else this.node_wait.active = !1;
},
showMyInfo: function() {
var e = this._seatNodes[0], t = e.getComponent("Seat"), i = cc.vv.gameNetMgr.getSelfData(), n = i && i.score ? i.score : cc.vv.userMgr.coins;
e.active = !0;
t.setOffline(!1);
t.setZhuang(!1);
t.setInfo("self", n, !1);
t.setImgByUrl();
this.showTxtTip({
isShow: !0,
str: "匹配中"
});
},
showTxtTip: function(e) {
this.txt_tip.stopAllActions();
this.txt_tip.active = e.isShow;
if (e.isShow) {
var t = this.txt_tip.getComponent(cc.Label);
t.string = e.str;
var i = cc.repeatForever(cc.sequence(cc.callFunc(function() {
t.string = e.str + ".";
}), cc.delayTime(.5), cc.callFunc(function() {
t.string = e.str + "..";
}), cc.delayTime(.5), cc.callFunc(function() {
t.string = e.str + "...";
}), cc.delayTime(.5)));
this.txt_tip.runAction(i);
}
},
updateGameRound: function(e) {
if (e.isShow) {
this.node_game_round.active = !0;
this.txt_game_round.string = cc.vv.gameNetMgr.current_round + "/" + cc.vv.gameNetMgr.round_num;
} else this.node_game_round.active = !1;
},
dealMatchStart: function() {
cc.vv.gameNetMgr.seats = [];
cc.vv.gameNetMgr.tishi_card_data = [];
},
on_auto_push: function(e) {
e.user_id == cc.vv.userMgr.userId && (e.is_auto ? cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_TUOGUAN, {
isShow: !0
}) : cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_TUOGUAN, {
isShow: !1
}));
var t = cc.vv.gameNetMgr.getSeatByID(e.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t.seatindex);
this._seatNodes[i].getComponent("Seat").setOffline(e.is_auto);
},
call_game_over: function() {
var t = this;
this.node && this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function(e) {
t.onGameOver();
})));
},
onGameOver: function() {
var t = this;
cc.vv.UILoader.loadRes("match/matchGame/match_ddz/prefabs/MatchGameOver_DDZ", cc.Prefab, function(e) {
t.over_node = cc.instantiate(e);
t.over_node.parent = t.node;
t.over_node.zIndex = 500;
cc.vv.gameNetMgr.node_game_over = t.over_node;
t._myholds.removeAllChildren(!0);
});
},
removeGameOverDialog: function() {
if (this.over_node) {
this.over_node.destroy();
this.over_node = null;
cc.vv.gameNetMgr.node_game_over = null;
}
},
onShowpaibei: function() {
this.ddz_fanpai_mc.removeAllChildren(!0);
this.ddz_fanpai_mc.scaleX = .8;
this.ddz_fanpai_mc.scaleY = .8;
for (var e = 0; e < 3; e++) {
var t = cc.instantiate(this.pk_prefab);
t.parent = this.ddz_fanpai_mc;
var i = 0 + 95 * e;
t.setPosition(i, 10);
this.setSpriteFrameByMJID(t, -1);
}
},
onShowQiangHold: function() {
var e = cc.vv.gameNetMgr.ddz_qiangHolds;
this.ddz_fanpai_mc.removeAllChildren(!0);
this.ddz_fanpai_mc.scaleX = .8;
this.ddz_fanpai_mc.scaleY = .8;
for (var t = 0; t < e.length; t++) {
var i = e[t], n = cc.instantiate(this.pk_prefab);
n.parent = this.ddz_fanpai_mc;
var a = 0 + 95 * t;
n.setPosition(a, 10);
this.setSpriteFrameByMJID(n, i);
}
},
onCallEndPush: function(e) {
if (-1 != e.button) {
this.onShowQiangHold();
this.initWanfaLabel();
this.setBankerTag();
var t = this;
this.ddz_fanpai_mc.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function(e) {
t.hideChupai();
})));
}
},
setBankerTag: function() {
if (-1 != cc.vv.gameNetMgr.button) {
var e = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
this._seatNodes[e].getComponent("Seat").setZhuang(!0);
}
},
clearBankerTag: function() {
for (var e in this._seatNodes) {
var t = this._seatNodes[e].getComponent("Seat");
t.setZhuang(!1);
t.setPaiCount(-1);
}
},
onCallTurnPush: function() {
this.initWanfaLabel();
this.closeAllOperation();
this.onShowpaibei();
cc.vv.gameNetMgr.isSelfTurn() ? this.ddz_prepare.active = !0 : this.ddz_prepare.active = !1;
var e = cc.vv.gameNetMgr.call_banker;
if (16384 & cc.vv.gameNetMgr.conf.rule_index) {
var t = cc.vv.gameNetMgr.getSelfData().holds;
if (1 == cc.vv.poker_util.ddz_isCall_three(t)) {
this.yafen_1.active = !1;
this.wuyong_fen_1.active = !0;
this.yafen_2.active = !1;
this.wuyong_fen_2.active = !0;
this.btn_pass.active = !1;
return;
}
}
this.btn_pass.active = !0;
if (0 == e) {
this.yafen_1.active = !0;
this.wuyong_fen_1.active = !1;
this.yafen_2.active = !0;
this.wuyong_fen_2.active = !1;
} else if (1 == e) {
this.yafen_1.active = !1;
this.wuyong_fen_1.active = !0;
this.yafen_2.active = !0;
this.wuyong_fen_2.active = !1;
} else if (2 == e) {
this.yafen_1.active = !1;
this.wuyong_fen_1.active = !0;
this.yafen_2.active = !1;
this.wuyong_fen_2.active = !0;
}
},
onCallBankerPush: function(e) {
var t = cc.vv.gameNetMgr.getSeatByID(e.user_id), i = -1;
1 == e.call_value ? i = 40 : 2 == e.call_value ? i = 41 : 3 == e.call_value ? i = 42 : 0 == e.call_value && (i = 43);
var n = this.getAudioURLByDDZ(i, t.sex);
cc.vv.audioMgr.playSFX(n);
var a = cc.vv.gameNetMgr.getLocalIndex(t.seatindex);
this._chupaiSprite[a].getComponent(cc.Label).string = 0 == e.call_value ? "不叫" : e.call_value + "分";
},
showOperation: function() {
if (1 == cc.vv.gameNetMgr.gamestate) if (cc.vv.gameNetMgr.isSelfTurn()) {
this.ddz_doing.active = !0;
this.btnChuPai.active = !0;
this.btnGuo.active = !0;
this.btnTishi.active = !1;
var e = cc.vv.gameNetMgr.last_card_data, t = e.type, i = e.cards, n = cc.vv.gameNetMgr.getSelfData().holds;
e && e.user_id && e.user_id != cc.vv.userMgr.userId || (this.btnGuo.active = !1);
cc.vv.poker_util.match_ddz_check_must(n, t, i) ? this.btnTishi.active = !1 : this.btnTishi.active = !0;
} else this.closeAllOperation();
},
showOutCard: function(n) {
var a = cc.vv.gameNetMgr.seats[n.index], e = this._chupaiSprite[n.user_index], t = n.type, i = n.cards.length;
e.getComponent(cc.Label).string = cc.vv.poker_util.match_ddz_getCardTypeName(t);
var s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
e.runAction(s);
var c = this;
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
var e = cc.vv.gameNetMgr.seats[n.index].holds;
if (e && 2 == e.length && !c.bao2Map[n.user_index]) {
var t = 45, i = c.getAudioURLByDDZ(t, a.sex);
cc.vv.audioMgr.playSFX(i);
c.bao2Map[n.user_index] = !0;
}
if (e && 1 == e.length && !c.bao1Map[n.user_index]) {
t = 44, i = c.getAudioURLByDDZ(t, a.sex);
cc.vv.audioMgr.playSFX(i);
c.bao1Map[n.user_index] = !0;
}
})));
var r = -1, o = -1, h = cc.vv.poker_util.OUT_CARD_TYPE;
t != h.SINGLE && t != h.DOUBLE || (r = cc.vv.poker_util.get_poker_value(n.cards[0]));
switch (t) {
case h.PASS:
o = Math.floor(3 * Math.random());
break;

case h.SINGLE:
o = 52 == n.cards[0] ? 16 : 53 == n.cards[0] ? 17 : r;
break;

case h.DOUBLE:
o = r + 15;
break;

case h.MORE_DOUBLE:
this.anim.play("liandui");
o = 32;
break;

case h.SEQUNECE:
this.anim.play("shunzi");
o = 33;
break;

case h.THREE_PICK_DOUBLE:
o = 34;
break;

case h.MORE_THREE_PICK:
case h.MORE_THREE_PICK_ONE:
case h.MORE_THREE_PICK_DOUBLE:
this.anim.play("feiji");
o = 35;
cc.vv.audioMgr.playSFX("resources/game/ddz/sounds/feiji.mp3");
break;

case h.BOOM:
if (2 == i) {
this.anim.play("wangzha");
o = 31;
break;
}
this.anim.play("zhadan");
o = 36;
cc.vv.audioMgr.playSFX("resources/game/ddz/sounds/boom.mp3");
break;

case h.THREE_PICK:
o = 37;
break;

case h.THREE_PICK_ONE:
o = 38;
break;

case h.FOUR_PICK_TWO:
case h.FOUR_PICK_DOUBLE:
o = 39;
}
var l = this.getAudioURLByDDZ(o, a.sex);
cc.vv.audioMgr.playSFX(l);
},
getAudioURLByDDZ: function(e, t) {
return 1 == t ? "resources/game/ddz/sounds/man/" + e + ".mp3" : "resources/game/ddz/sounds/women/" + e + ".mp3";
},
showFoldsCard: function(e, t) {
var i = this._folds[t];
i.removeAllChildren(!0);
var n = this._halfLen;
e.sort(function(e, t) {
return t - e;
});
for (var a = 0; a < e.length; a++) {
var s = e[a], c = cc.instantiate(this.pk_prefab);
c.parent = i;
var r = 0 + 27 * a, o = 0, h = 0;
if (1 == t) {
h = 0;
var l = e.length >= n ? n : e.length;
r = n < a ? h + 27 * a - 27 * (n + 1) - 27 * l : 27 * a - 27 * l;
o = n < a ? -50 : 0;
} else if (2 == t) {
h = 0;
r = n < a ? h + 27 * a - 27 * (n + 1) : 27 * a;
o = n < a ? -50 : 0;
} else {
o = 0;
r = 27 * a - (h = e.length / 2 * 27);
}
c.setPosition(r, o);
this.setSpriteFrameByMJID(c, s);
}
},
initWanfaLabel: function() {
this.top_ddz.active = !0;
var e = null == cc.vv.gameNetMgr.ddzRate || cc.vv.gameNetMgr.ddzRate < 0 ? 1 : cc.vv.gameNetMgr.ddzRate;
this.top_ddz.getComponent(cc.Label).string = e + "倍";
},
onCallTurnReadly: function() {
this.hideChupai();
this.gameRoot.active = !0;
},
onGameBeign: function() {
this.bao1Map = {};
this.bao2Map = {};
this.hideBDanMc();
this.onShowQiangHold();
this.closeAllOperation();
this.gameRoot.active = !0;
this.spring_1.active = !1;
this.spring_2.active = !1;
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
if (null != cc.vv.gameNetMgr.curaction) {
this.showAction(cc.vv.gameNetMgr.curaction);
cc.vv.gameNetMgr.curaction = null;
}
var n = cc.vv.gameNetMgr.turn, a = cc.vv.gameNetMgr.getLocalIndex(n);
if (0 == a) {
this._folds[a].removeAllChildren(!0);
}
this.showOperation();
n = cc.vv.gameNetMgr.turn;
this.showHeadTime(n);
},
addGameTeXiao: function() {
if (!this.anim) {
var t = this;
cc.vv.UILoader.loadRes("game/ddz/prefabs/texiao1", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.gameRoot, function(e) {
t.anim = e.getComponent(cc.Animation);
});
});
}
},
initMahjongs: function(e) {
var t = cc.vv.gameNetMgr.seats, i = t[e];
if (i) {
var n = this.sortHolds(i);
if (null != n) {
this._halfLen = 4 == t.length ? 14 : 8;
var a = cc.vv.gameNetMgr.getLocalIndex(e);
this._BShuangMcList[a].active = !1;
if (2 == n.length) {
this._BShuangMcList[a].active = !0;
this._BShuangMcList[a].getChildByName("lb").getComponent(cc.Label).string = "报双";
}
this._BDanMcList[a].active = !1;
1 == n.length && (this._BDanMcList[a].active = !0);
if (0 == a) {
this._myMJArr = [];
var s = this._myholds, c = 35;
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
s.scaleX = 1.5;
s.scaleY = 1.5;
c = 25;
} else {
c = 17 < n.length ? 30 : 35;
s.scaleX = 2;
s.scaleY = 2;
}
s.removeAllChildren(!0);
var r = n.length / 2;
n.sort(function(e, t) {
return t - e;
});
for (var o = 0; o < n.length; o++) {
var h = n[o], l = cc.instantiate(this.pk_prefab);
l.parent = s;
var d = o * c - r * c;
l.setPosition(d, 0);
l.poker_id = h;
l.showEff = !1;
this.setSpriteFrameByMJID(l, h);
l.isRightPoke = o == n.length - 1;
this.onMJtprefabEvent(l);
this._myMJArr.push(l);
}
this._chuPaiTempArr = [];
} else {
var u = i.holds.length;
this._seatNodes[a].getComponent("Seat").setPaiCount(u);
}
0 < i.folds.length && this.showFoldsCard(i.folds[i.folds.length - 1], a);
}
}
},
onMJtprefabEvent: function(o) {
this.selectNode = null;
this.isTouchMove = !1;
o.on("touchstart", function(e) {
o.parent == this._myholds && (this.selectNode = null);
}.bind(this));
o.on("touchmove", function(e) {
if (o.parent == this._myholds) {
this.isTouchMove = !0;
var t = this._myholds.convertToNodeSpace(e.touch.getLocation()), i = !1;
if (this.selectNode) {
var n = this.selectNode.width * this.selectNode.scaleX, a = this.selectNode.height * this.selectNode.scaleX;
console.log("rightpoke?", e.target.isRightPoke);
var s = cc.rect(this.selectNode.x - n / 2, this.selectNode.y - a / 2, n * (this.selectNode.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (i = !0);
}
if (0 == i) for (var c = 0; c < this._myholds.getChildren().length; c++) {
var r = this._myholds.getChildren()[c];
n = r.width * r.scaleX, a = r.height * r.scaleX, s = cc.rect(r.x - n / 2, r.y - a / 2, n * (r.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (this.selectNode = r).getComponent("MyPoker").setBlack(!0);
}
}
}.bind(this));
o.on("touchcancel", function(e) {
this.freshAllBlack();
this.selectNode = null;
this.isTouchMove = !1;
console.log("------------touchcancel:");
}.bind(this));
o.on("touchend", function(e) {
console.log("------------touchend:");
this.selectNode = null;
this.isTouchMove = !1;
this.freshAllBlack();
}.bind(this));
cc.vv.utils.addClickEvent(o, this.node, "MatchGame_DDZ", "onMJClicked");
},
onMJClicked: function(e) {
if (!this.isTouchMove) {
var t = e.target;
this.updateMJPrefabNode(t);
}
},
updateMJPrefabNode: function(e) {
if (1 == cc.vv.gameNetMgr.gamestate) {
var t = e.getComponent("MyPoker");
if (1 != e.showEff) {
cc.vv.audioMgr.playBtnClick();
console.log(e.poker_id);
for (var i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e.poker_id == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
this._chuPaiTempArr.push(e.poker_id);
}
cc.vv.gameNetMgr.isSelfTurn();
}
}
},
freshAllBlack: function() {
for (var e in this._myholds.getChildren()) {
var t = this._myholds.getChildren()[e];
if (t.getComponent("MyPoker").isBlack()) {
this.updateMJPrefabNode(t);
t.getComponent("MyPoker").setBlack(!1);
}
}
},
onGameOverShow: function() {
this.hideBDanMc();
this.closeAllOperation();
for (var e = cc.vv.gameNetMgr.gameOverData.spring, t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.getLocalIndex(i), a = t[i], s = this.sortHolds(a);
if (null != s) if (0 == n) {
(d = this._myholds).removeAllChildren(!0);
var c = s.length / 2;
s.sort(function(e, t) {
return t - e;
});
for (var r = 0; r < s.length; r++) {
var o = s[r], h = cc.instantiate(this.pk_prefab);
h.parent = d;
var l = 0 + 25 * r - 25 * c;
h.setPosition(l, 50);
this.setSpriteFrameByMJID(h, o);
}
} else {
var d = this._folds[n];
0 < a.holds.length && this.showFoldsCard(a.holds, n);
}
}
this.spring_1.active = !1;
this.spring_2.active = !1;
var u = this;
if (1 == e) {
if (cc.vv.gameNetMgr.button == cc.vv.gameNetMgr.seatIndex) {
u.spring_1.active = !0;
d.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
u.anim.play("chuntian");
})));
}
} else if (2 == e && cc.vv.gameNetMgr.button != cc.vv.gameNetMgr.seatIndex) {
u.spring_2.active = !0;
d.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
u.anim.play("fanchun");
})));
}
},
sortHolds: function(e) {
e.holds && e.holds.sort(function(e, t) {
return t - e;
});
return e.holds;
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
getHoldsPokerByID: function(e) {
for (var t = null, i = 0; i < this._myMJArr.length; ++i) {
var n = this._myMJArr[i];
if (1 == n.active) {
var a = n.getComponent("MyPoker");
if (a.poker_id == e && 0 == a.isShowUp) {
t = a;
break;
}
}
}
return t;
},
onOptionClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
"btn_chuPai" == e.target.name ? this.chuPai() : "btn_guo" == e.target.name ? this.guo() : "btn_pass" == e.target.name ? this.isQiangdizhu(0) : "fen_1" == e.target.name ? this.isQiangdizhu(1) : "fen_2" == e.target.name ? this.isQiangdizhu(2) : "fen_3" == e.target.name ? this.isQiangdizhu(3) : "btn_tishi" == e.target.name && this.tishi();
},
isQiangdizhu: function(e) {
var t = JSON.parse(cc.vv.msgTemp.CS_CallLandLord);
t.call = e;
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("call_banker", t);
this.ddz_prepare.active = !1;
},
tishi: function() {
this._chuPaiTempArr = [];
for (var e = 0; e < this._myMJArr.length; ++e) {
var t = this._myMJArr[e];
if (1 == t.active) {
(n = t.getComponent("MyPoker")).setDown();
}
}
cc.vv.poker_util.match_ddz_check_out_tishi();
var i = cc.vv.gameNetMgr.tishi_card_data;
for (e = 0; e < i.length; ++e) {
var n;
(n = this.getHoldsPokerByID(i[e])).setUp();
this._chuPaiTempArr.push(n.poker_id);
}
},
guo: function() {
cc.vv.gameNetMgr.check_out_double_data = null;
var e = {
type: 0,
cards: []
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("out_card", e);
this.resetHandCard();
},
resetHandCard: function() {
for (var e = 0; e < this._myMJArr.length; e++) this._myMJArr[e].getComponent("MyPoker").setDown();
this._chuPaiTempArr = [];
},
chuPai: function() {
cc.error("点击出牌按钮");
var e = cc.vv.gameNetMgr.last_card_data, t = {};
t.cards = this._chuPaiTempArr;
t.type = cc.vv.poker_util.match_ddz_check_out_type(this._chuPaiTempArr);
var i = function() {
if (0 < t.cards.length && 0 < t.type) {
cc.vv.gameNetMgr.check_out_double_data = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("out_card", t);
} else cc.vv.toast.showToast({
txt: "出牌不符合规则！"
});
};
cc.log("上家出牌信息", e);
if (e && 0 < e.cards.length) if (e.user_id === cc.vv.userMgr.userId) i(); else {
var n = cc.vv.poker_util.compareCard(e, t);
cc.log("对比返回结果", n);
0 < n ? i() : cc.vv.toast.showToast({
txt: "出牌不符合规则！"
});
} else i();
},
onClickExit: function() {
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("competition_cancel");
},
update: function(e) {},
onDestroy: function() {
cc.vv.eventMgr.off(cc.vv.event.MATCH_GAME_PREPARE);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_REMOVE_GAME_OVER);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_MY_INFO);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_TXT_TIP);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_UPDATE_GAME_ROUND);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_TABLE_WAIT);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_REWARD_DIALOG);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_REMOVE_REWARD_DIALOG);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_LORD_CARD);
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_DDZ: "poker_utils_DDZ"
} ],
MatchGame_PDK: [ function(s, e, t) {
"use strict";
cc._RF.push(e, "63308PA25pK8bG/N7DtrmFx", "MatchGame_PDK");
cc.Class({
extends: cc.Component,
properties: {
gameRoot: {
default: null,
type: cc.Node
},
pk_prefab: {
default: null,
type: cc.Prefab
},
match_rank_prefab: {
default: null,
type: cc.Prefab
},
match_allend_prefab: {
default: null,
type: cc.Prefab
},
_myMJArr: [],
_chuPaiTempArr: [],
_options: null,
_selectedMJ: null,
_chupaiSprite: [],
_chupaidonghua: [],
_folds: [],
_lb_count: null,
_gamecount: null,
_hupaiTips: [],
_hupaiLists: [],
_showEff: !0,
_BDanMcList: [],
_pdk_red_ten: -1,
_pdk_red_tenList: [],
_seatNodes: [],
_halfLen: 10,
_seatsList: [],
_lastIndex: -1,
_bao1Map: null,
_bao2Map: null,
tipDecs: cc.Label,
lb_gameCount: cc.Label
},
onLoad: function() {
if (cc.vv) {
this._bao1Map = {};
this._bao2Map = {};
for (var e = this.node.getChildByName("game"), t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; ++i) {
var n = t[i], a = e.getChildByName(n);
a.getChildByName("Bdan").active = !1;
a.getChildByName("ht10").active = !1;
}
cc.vv.poker_util = s("poker_utils_PDK");
this.gameRoot = cc.find("Canvas/game");
this.opration_PDK = cc.find("Canvas/game/opration_PDK");
this.opration_PDK.active = !0;
this.btnChuPai = this.opration_PDK.getChildByName("btn_chuPai");
this.btnChuPai.active = !1;
this.btnGuo = this.opration_PDK.getChildByName("btn_guo");
this.btnGuo.active = !1;
this.btnTishi = this.opration_PDK.getChildByName("btn_tishi");
this.btnTishi.active = !1;
cc.vv.utils.addClickEvent(this.btnChuPai, this.node, "MatchGame_PDK", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnGuo, this.node, "MatchGame_PDK", "onOptionClicked");
cc.vv.utils.addClickEvent(this.btnTishi, this.node, "MatchGame_PDK", "onOptionClicked");
this.lb_gameCount.string = "";
cc.vv.audioMgr.playBGM("resources/game/pdk/sounds/bgpdk.mp3");
this.matchEndNode = new cc.Node("matchEnd");
this.matchEndNode.parent = this.node;
this.matchEndNode.setPosition(0, 0);
this.matchRankNode = new cc.Node("matchRank");
this.matchRankNode.parent = this.node;
this.matchRankNode.setPosition(0, 0);
} else cc.director.loadScene("loading");
},
start: function() {
this.initView();
this.match_onGameBeign();
this.initEventHandlers();
this.matchGameCounts();
this.gameRoot.active = !0;
cc.vv.match.table_sync || (this.tipDecs.string = "正在初始化比赛");
},
initView: function() {
var e = this.node.getChildByName("game"), t = e.getChildByName("myself");
this._myholds = t.getChildByName("holds");
var i = cc.director.getVisibleSize().width;
this._myholds.scaleX *= i / 1280;
this._myholds.scaleY *= i / 1280;
for (var n = [ "myself", "right", "up", "left" ], a = 0; a < n.length; ++a) {
var s = n[a], c = e.getChildByName(s);
c.active = !0;
this._chupaiSprite.push(c.getChildByName("ChuPai").getChildByName("lb_type"));
this._folds.push(c.getChildByName("folds"));
this._seatNodes.push(c.getChildByName("seat"));
this._seatsList.push(c.getChildByName("seat").getComponent("Seat"));
this._BDanMcList.push(c.getChildByName("Bdan"));
this._pdk_red_tenList.push(c.getChildByName("ht10"));
}
this.hideChupai();
this.hideBDanMc();
this.hideRedTenList();
},
showHeadTime: function(e) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var t = 0; t < this._seatsList.length; ++t) this._seatsList[t].closeTimer();
if (-1 != e) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this._seatsList[i].showTimer(30);
}
}
},
match_showHeadTime: function(e, t) {
if (this._lastIndex != e) {
this._lastIndex = e;
for (var i = 0; i < this._seatsList.length; ++i) this._seatsList[i].closeTimer();
if (-1 != e) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = new Date(t), s = a.getSeconds() < 10 ? "0" + a.getSeconds() : a.getSeconds();
this._seatsList[n].showTimer(s);
}
}
},
hideBDanMc: function() {
for (var e = 0; e < this._BDanMcList.length; ++e) this._BDanMcList[e].active = !1;
},
hideRedTenList: function() {
this._pdk_red_ten = -1;
for (var e = 0; e < this._pdk_red_tenList.length; ++e) this._pdk_red_tenList[e].active = !1;
},
hideChupai: function() {
for (var e = 0; e < this._chupaiSprite.length; ++e) this._chupaiSprite[e].getComponent(cc.Label).string = "";
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
cc.vv.eventMgr.on(cc.vv.event.MATCH_GAME_HOLDS, this.initMahjongs, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_OUT_CARD, this.showOutCard, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_TURN, this.playerTurnEvt, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_TOP_LIST, this.dealAllEnd, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_END_ONE, this.dealEndOne, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_GAME_PREPARE, this.dealMatchStart, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_TOP_CLICK, this.dealMatchStart, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_WAITING_PIPEI, this.matchWaitingPipei, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_TIME, this.matchTime, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_GAME_COUNTS, this.matchGameCounts, this);
},
matchTime: function(e) {
this.tipDecs.string = "等待比赛开始";
},
matchWaitingPipei: function(e) {
this.tipDecs.string = "系统正在为你安排本局对手,请稍等";
},
matchGameCounts: function(e) {
0 != cc.vv.gameNetMgr.max_loops && (this.lb_gameCount.string = "第" + cc.vv.gameNetMgr.current_loops + "/" + cc.vv.gameNetMgr.max_loops + "局");
},
dealMatchStart: function(e) {
cc.vv.gameNetMgr.seats = [];
cc.vv.gameNetMgr.now_card_type = 1;
cc.vv.gameNetMgr.now_card_data = [];
cc.vv.gameNetMgr.tishi_card_data = [];
this.matchRankNode.removeAllChildren();
},
dealAllEnd: function(e) {
var t = cc.instantiate(this.match_allend_prefab);
this.matchEndNode.addChild(t);
t.getComponent("matchAllTop").init(e);
},
dealEndOne: function(e) {
var t = cc.instantiate(this.match_rank_prefab);
this.matchRankNode.addChild(t);
t.getComponent("matchTop").init(e);
},
playerTurnEvt: function(e) {
console.log("deal_match_turn:", e);
for (var t = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.match_getSeatByID(t.toString()), n = cc.vv.gameNetMgr.getLocalIndex(i.seat_index), a = 0; a < this._folds.length; ++a) a == n && this._folds[a].removeAllChildren();
cc.vv.gameNetMgr.pdk_red_ten, this._pdk_red_ten;
this.match_showHeadTime(i.seat_index, e[1]);
this.showOperation();
},
showOperation: function() {
if (cc.vv.gameNetMgr.isSelfTurn()) {
this.btnChuPai.active = !0;
this.btnGuo.active = !0;
this.btnTishi.active = !1;
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.now_card_data, i = cc.vv.gameNetMgr.getSelfData();
if (!i) return;
var n = i.holds;
if (cc.vv.poker_util.check_must(n, e, t)) {
this.btnGuo.active = !0;
this.btnTishi.active = !1;
} else {
this.btnGuo.active = !1;
this.btnTishi.active = !0;
}
var a = !1;
if (0 == this.btnGuo.active) {
var s = 256 & cc.vv.gameNetMgr.conf.rule_index;
this.btnGuo.active = 0 == s;
a = this.btnGuo.active;
0 == e && (this.btnGuo.active = !1);
}
if (1 == this.btnGuo.active && 0 == a) {
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
var c = this;
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function(e) {
c.guo();
})));
}
if (1 == this.btnTishi.active && 1 == n.length) {
this.btnTishi.active = !1;
this.btnChuPai.active = !1;
c = this;
this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
console.log("------c:" + n);
c._chuPaiTempArr = n;
c.chuPai();
})));
}
if (0 == e) {
if (0 != cc.vv.poker_util.check_out_type(n)) {
var r = !1;
4 < n.length && (r = cc.vv.poker_util.pdk_check_has_boom(n));
if (0 == r) {
this.btnTishi.active = !1;
this.btnChuPai.active = !1;
c = this;
this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
c._chuPaiTempArr = n;
c.chuPai();
})));
}
}
}
} else {
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
}
},
showOutCard: function(t) {
cc.vv.gameNetMgr.match_getSeatByID(t.out_user);
var e = this._chupaiSprite[t.user_index], i = cc.vv.poker_util.check_out_type(t.out_cards_data), n = cc.vv.poker_util.getCardTypeName(i);
5 == i && (3 == t.out_cards_data.length ? n = "三个头" : 4 == t.out_cards_data.length && (n = "三带一"));
e.getComponent(cc.Label).string = n;
var a = cc.find("Canvas/game/texiao1").getComponent(cc.Animation), s = cc.sequence(cc.show(), cc.delayTime(2), cc.hide());
e.runAction(s);
var c = this;
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
if (0 != cc.vv.gameNetMgr.seats.length) {
var e = cc.vv.gameNetMgr.seats[t.si].holds;
if (e && 1 == e.length && !c._bao1Map[t.user_index]) {
c._bao1Map[t.user_index] = !0;
}
}
})));
if (1 == i || 2 == i) var r = cc.vv.poker_util.get_poker_value(t.out_cards_data[0]);
r = 0;
1 != i && 2 != i || (r = cc.vv.poker_util.get_poker_value(t.out_cards_data[0]));
switch (i) {
case 0:
Math.floor(3 * Math.random());
break;

case 1:
52 == t.out_cards_data[0] ? 16 : 53 == t.out_cards_data[0] ? 17 : r;
break;

case 2:
r + 15;
break;

case 3:
a.play("pdk-liandui");
32;
break;

case 4:
a.play("pdk-shunzi");
33;
break;

case 5:
34;
break;

case 6:
a.play("pdk-feiji");
35;
break;

case 7:
a.play("pdk-zhadan");
36;
cc.vv.audioMgr.playSFX("resources/game/pdk/sounds/boom.mp3");
break;

case 8:
33;
}
},
getAudioURLByPDK: function(e, t) {
return 1 == t ? "resources/game/pdk/sounds/man/" + e + ".mp3" : "resources/game/pdk/sounds/women/" + e + ".mp3";
},
showFoldsCard: function(e, t) {
var i = this._folds[t];
i.removeAllChildren();
var n = this._halfLen;
console.log("halfLen---", this.halfLen);
(e = e[1]).sort(function(e, t) {
return t - e;
});
for (var a = 0; a < e.length; a++) {
var s = e[a], c = cc.instantiate(this.pk_prefab);
c.parent = i;
var r = 0 + 20 * a, o = 0, h = 0;
if (1 == t) {
h = 0;
var l = e.length >= n ? n : e.length;
r = n < a ? h + 20 * a - 20 * (n + 1) - 20 * l : 20 * a - 20 * l;
o = n < a ? -50 : 0;
} else if (3 == t) {
h = 0;
r = n < a ? h + 20 * a - 20 * (n + 1) : 20 * a;
o = n < a ? -50 : 0;
} else {
o = 0;
r = 20 * a - (h = e.length / 2 * 20);
}
c.setPosition(r, o);
this.setSpriteFrameByMJID(c, s);
}
},
onGameBeign: function() {
this._bao1Map = {};
this._bao2Map = {};
this.hideChupai();
this.hideBDanMc();
this.hideRedTenList();
this.gameRoot.active = !0;
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seatindex);
}
var n = cc.vv.gameNetMgr.turn, a = cc.vv.gameNetMgr.getLocalIndex(n);
if (0 == a) {
this._folds[a].removeAllChildren();
}
this.showOperation();
},
match_onGameBeign: function() {
this._bao1Map = {};
this._bao2Map = {};
this.hideChupai();
this.hideBDanMc();
this.hideRedTenList();
this.gameRoot.active = !0;
var e = cc.vv.gameNetMgr.seats;
for (var t in e) {
var i = e[t];
this.initMahjongs(i.seat_index);
}
var n = cc.vv.gameNetMgr.turn, a = cc.vv.gameNetMgr.match_getSeatIndexByID(n), s = cc.vv.gameNetMgr.getLocalIndex(a);
if (0 == s) {
this._folds[s].removeAllChildren();
}
this.showOperation();
},
getMJIndex: function(e, t) {
return "right" == e || "up" == e ? 13 - t : t;
},
sortHolds: function(e) {
e.holds && e.holds.sort(function(e, t) {
return t - e;
});
return e.holds;
},
initMahjongs: function(e) {
var t = this, i = cc.vv.gameNetMgr.seats, n = i[e];
if (n) {
var a = this.sortHolds(n);
if (null != a) {
console.log("----initMahjongs");
this.tipDecs.string = "";
this._halfLen = 4 == i.length ? 14 : 8;
var s = cc.vv.gameNetMgr.getLocalIndex(e);
1 == a.length && (this._BDanMcList[s].active = !0);
cc.vv.gameNetMgr.pdk_red_ten, this._pdk_red_ten;
if (0 == s) {
this._myMJArr = [];
var c = this._myholds;
c.scaleX = 2.1;
var r = !(c.scaleY = 2.1);
if (1 == this._showEff) {
r = !0;
this._showEff = !1;
}
c.removeAllChildren();
var o = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var h = 0; h < a.length; h++) {
var l = a[h], d = cc.instantiate(this.pk_prefab);
d.parent = c;
var u = 0 + 35 * h - 35 * o;
d.setPosition(u, 0);
d.poker_id = l;
d.pokerIndex = h;
if (d.showEff = r) {
this.setSpriteFrameByMJID(d, -1);
var v = cc.sequence(cc.hide(), cc.delayTime(.05 * h), cc.show(), cc.delayTime(.1 * (a.length - h)), cc.callFunc(function(e) {
e.showEff = !1;
t.setSpriteFrameByMJID(e, e.poker_id);
}, d));
d.runAction(v);
this.setSpriteFrameByMJID(d, l);
} else this.setSpriteFrameByMJID(d, l);
d.isRightPoke = h == a.length - 1;
this.onMJtprefabEvent(d);
this._myMJArr.push(d);
}
this._chuPaiTempArr = [];
} else {
var g = n.holds.length;
this._seatNodes[s].getComponent("Seat").setPaiCount(g);
}
0 < n.folds.length && this.showFoldsCard(n.folds[n.folds.length - 1], s);
}
}
},
onMJtprefabEvent: function(e) {
this.selectNode = null;
this.isTouchMove = !1;
e.on("touchstart", function(e) {
this.selectNode = null;
}.bind(this));
e.on("touchmove", function(e) {
this.isTouchMove = !0;
console.log("------------touchmove:" + e.touch.getLocation());
var t = this._myholds.convertToNodeSpace(e.touch.getLocation()), i = !1;
if (this.selectNode) {
var n = this.selectNode.width * this.selectNode.scaleX, a = this.selectNode.height * this.selectNode.scaleX;
console.log("rightpoke?", e.target.isRightPoke);
var s = cc.rect(this.selectNode.x - n / 2, this.selectNode.y - a / 2, n * (this.selectNode.isRightPoke ? 1 : .4), a);
cc.rectContainsPoint(s, t) && (i = !0);
}
if (0 == i) for (var c = 0; c < this._myMJArr.length; c++) {
var r = this._myMJArr[c];
n = r.width * r.scaleX, a = r.height * r.scaleX, s = cc.rect(r.x - n / 2, r.y - a / 2, n * (r.isRightPoke ? 1 : .4), a);
if (cc.rectContainsPoint(s, t)) {
this.selectNode = r;
this.updateMJPrefabNode(r);
}
}
}.bind(this));
e.on("touchcancel", function(e) {
this.selectNode = null;
this.isTouchMove = !1;
console.log("------------touchcancel:");
}.bind(this));
e.on("touchend", function(e) {
console.log("------------touchend:");
this.selectNode = null;
this.isTouchMove = !1;
}.bind(this));
cc.vv.utils.addClickEvent(e, this.node, "MJGame_PDK", "onMJClicked");
},
onMJClicked: function(e) {
console.log("------------touchclick:");
if (!this.isTouchMove) {
var t = e.target;
this.updateMJPrefabNode(t);
console.log("node.poker_id:" + t.poker_id);
}
},
updateMJPrefabNode: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.getComponent("MyPoker");
console.log("node.poker_id:" + e.poker_id);
if (1 != e.showEff) {
for (var i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e.poker_id == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
console.log("---_chuPaiTempArr---add:" + e.poker_id);
this._chuPaiTempArr.push(e.poker_id);
}
}
},
onGameOverShow: function(e) {
this.btnChuPai.active = !1;
this.btnGuo.active = !1;
this.btnTishi.active = !1;
this.hideBDanMc();
this.hideRedTenList();
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = t[i], a = this.sortHolds(n);
if (null != a) {
var s = cc.vv.gameNetMgr.getLocalIndex(i);
if (0 == s) {
(d = this._myholds).removeAllChildren();
var c = a.length / 2;
a.sort(function(e, t) {
return t - e;
});
for (var r = 0; r < a.length; r++) {
var o = a[r], h = cc.instantiate(this.pk_prefab);
h.parent = d;
var l = 0 + 25 * r - 25 * c;
h.setPosition(l, 50);
this.setSpriteFrameByMJID(h, o);
}
} else {
var d = this._folds[s];
0 < n.holds.length && this.showFoldsCard(n.holds, s);
}
var u = e.detail.end_seats_data[i];
if (u) {
var v = cc.vv.gameNetMgr.getSeatByID(u.user_id).holds, g = cc.vv.gameNetMgr.getPDK_paiNum();
v.length || console.log("-------------log");
if (v.length == g) {
d.runAction(cc.sequence(cc.delayTime(1.5), cc.callFunc(function() {
cc.find("Canvas/game/texiao1").getComponent(cc.Animation).play("quanguan");
})));
}
}
}
}
},
setSpriteFrameByMJID: function(e, t) {
e.getComponent("MyPoker").setValueAndColorByID(t);
e.active = !0;
},
onOptionClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
console.log(e.target.pai);
"btn_chuPai" == e.target.name ? this.chuPai() : "btn_guo" == e.target.name ? this.guo() : "btn_chuPai_test" == e.target.name ? this.chuPai() : "btn_guo_test" == e.target.name ? this.guo() : "btn_tishi" == e.target.name && this.tishi();
},
getHoldsPokerByID: function(e) {
for (var t = null, i = 0; i < this._myMJArr.length; ++i) {
var n = this._myMJArr[i];
if (1 == n.active) {
var a = n.getComponent("MyPoker");
if (a.poker_id == e && 0 == a.isShowUp) {
t = a;
break;
}
}
}
return t;
},
tishi: function() {
this._chuPaiTempArr = [];
for (var e = 0; e < this._myMJArr.length; ++e) {
var t = this._myMJArr[e];
if (1 == t.active) {
(n = t.getComponent("MyPoker")).setDown();
}
}
cc.vv.poker_util.check_out_tishi();
var i = cc.vv.gameNetMgr.tishi_card_data;
for (e = 0; e < i.length; ++e) {
var n;
(n = this.getHoldsPokerByID(i[e])).setUp();
this._chuPaiTempArr.push(n.poker_id);
}
},
guo: function() {
cc.vv.gameNetMgr.check_out_double_data = null;
var e = JSON.parse(cc.vv.msgTemp.CS_out_card);
e.card_type = 0;
e.cards_data = [];
var t = [];
t[0] = 0;
t[1] = [];
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("match_out_card", t);
},
chuPai: function() {
if (1 == cc.vv.gameNetMgr.black_three) {
for (var e = !1, t = 0; t < this._chuPaiTempArr.length; t++) if (3 == this._chuPaiTempArr[t]) {
e = !0;
break;
}
if (0 == e) {
cc.vv.alert.show("提示", "第一手牌必须出黑桃3");
return;
}
}
var i = JSON.parse(cc.vv.msgTemp.CS_out_card);
i.cards_data = this._chuPaiTempArr;
i.card_type = cc.vv.poker_util.check_out_type(this._chuPaiTempArr);
var n = [];
n[0] = cc.vv.poker_util.check_out_type(this._chuPaiTempArr);
n[1] = this._chuPaiTempArr;
console.log(n);
if (0 < i.card_type) {
cc.vv.gameNetMgr.check_out_double_data = null;
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("match_out_card", n);
} else cc.vv.alert.show("提示", "出牌不符合规则！");
},
timer: function(e) {
this.count = e;
this.callback = function() {
if (0 == this.count) {
this.unschedule(this.callback);
this.node.removeChild(this.ThisItem, !0);
}
this.count--;
};
this.schedule(this.callback, 1);
},
update: function(e) {
if ("" != this.tipDecs.string) if (!this._ttime || this._ttime < 0) {
this._ttime = 1;
var t = this.tipDecs.string;
t += ".";
this.tipDecs.string = t;
if (-1 != this.tipDecs.string.indexOf(".....")) {
t = this.tipDecs.string.substring(0, this.tipDecs.string.indexOf("....."));
this.tipDecs.string = t;
}
} else this._ttime -= e;
},
onDestroy: function() {
cc.vv.eventMgr.off(cc.vv.event.MATCH_GAME_HOLDS, this.initMahjongs, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_OUT_CARD, this.showOutCard, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_TURN, this.playerTurnEvt, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_TOP_LIST, this.dealAllEnd, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_GAME_PREPARE, this.dealMatchStart, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_TOP_CLICK, this.dealMatchStart, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_END_ONE, this.dealEndOne, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_WAITING_PIPEI, this.matchWaitingPipei, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_TIME, this.matchTime, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_GAME_COUNTS, this.matchGameCounts, this);
console.log("onDestroy");
cc.vv && cc.vv.gameNetMgr.clear();
}
});
cc._RF.pop();
}, {
poker_utils_PDK: "poker_utils_PDK"
} ],
MatchHall_DDZ: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "34d51NthNJMNa4vrDlPpSvL", "MatchHall_DDZ");
var n = {
0: "福卡大奖赛",
1: "免费赚钻石"
};
cc.Class({
extends: cc.Component,
properties: {
txt_curNum: cc.Label,
scroll_view: {
default: null,
type: cc.Node
},
scroll_content: {
default: null,
type: cc.Node
},
view: {
default: null,
type: cc.Node
},
match_item: {
default: null,
type: cc.Prefab
},
WaitingConnection: cc.Prefab,
txt_beike: {
default: null,
type: cc.Label
},
txt_diamond: {
default: null,
type: cc.Label
},
txt_fangka: {
default: null,
type: cc.Label
},
btn_1: {
default: null,
type: cc.Node
},
node_btns: {
default: null,
type: cc.Node
},
cur_index: -1
},
onLoad: function() {
this.initMsgHandler();
this.ininEventHandlers();
this.initGameNetMgr();
this.initLabels();
this.initSocket();
},
start: function() {
this.setViewData();
this.node.addChild(cc.instantiate(this.WaitingConnection), 110);
},
initGameNetMgr: function() {
var e = t("GameNetMgr80002");
cc.vv.gameNetMgr = new e();
cc.vv.gameNetMgr.initHandlers();
},
setViewData: function() {
var e = cc.vv.match.match_info.match_info, t = [];
for (var i in e) {
var n = e[i];
t[n.award_type] = t[n.award_type] || [];
t[n.award_type].push(n);
}
cc.log(t);
this.initLeftPannel(t);
for (var a in t) {
this.showViewData(t[a]);
this.cur_index = a;
break;
}
},
initLeftPannel: function(e) {
this.node_btns.removeAllChildren();
for (var t in e) {
var i = cc.instantiate(this.btn_1);
i.x = 0;
i.parent = this.node_btns;
i.item_type = t;
i.view_data = e[t];
i.getChildByName("New RichText").getComponent(cc.RichText).string = "<color=#C0762A><b>" + n[t] + "</b></c>";
}
},
onClickLeftBtn: function(e) {
cc.log(e.currentTarget);
var t = e.currentTarget, i = Number(t.item_type), n = t.view_data;
if (i != this.cur_index) {
this.showViewData(n);
this.cur_index = i;
}
},
showViewData: function(e) {
cc.log("showViewData", e);
this.scroll_content.removeAllChildren(!0);
this.view.setContentSize(cc.size(300 * e.length, 400));
this.scroll_content.setContentSize(cc.size(300 * e.length + 50, 400));
for (var t = 0; t < e.length; t++) {
var i = cc.instantiate(this.match_item);
i.y = -200;
var n = i.getComponent("MatchItem");
this.scroll_content.addChild(i);
n.setData(e[t]);
}
},
initSocket: function() {
var e = this, t = cc.vv.match.match_info.server_info;
if (t) {
var i = t.ws_ip + ":" + t.ws_port;
cc.vv.netMgr.connectMatchDDZServer(i, function() {
clearInterval(e.id);
cc.vv.gameNetMgr.auth_finish ? (cc.vv.userMgr.inMatch || 0 == cc.vv.gameNetMgr.gamestate || 1 == cc.vv.gameNetMgr.gamestate) && e.testReconnect2() : e.id = setInterval(function() {
if (cc.vv.gameNetMgr.auth_finish) {
clearInterval(e.id);
(cc.vv.userMgr.inMatch || 0 == cc.vv.gameNetMgr.gamestate || 1 == cc.vv.gameNetMgr.gamestate) && e.testReconnect2();
}
}, 1e3);
});
}
},
initLabels: function() {
this.txt_diamond.string = cc.vv.userMgr.gems;
this.txt_fangka.string = cc.vv.userMgr.coins;
},
ininEventHandlers: function() {
cc.vv.gameNetMgr && (cc.vv.gameNetMgr.dataEventHandler = this.node);
this._dataEventHandler = this.node;
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
onClickExit: function() {
cc.vv.userMgr.inMatch = !1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].close(!0);
cc.director.loadScene("hall");
},
onClickBaoMing: function() {
var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1e4;
if (cc.vv.gameNetMgr.auth_finish) {
cc.vv.userMgr.curMatchId = e;
cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("competition_registry", {
match_id: e
});
} else cc.vv.toast.showToast({
txt: "网络验证失败！"
});
},
testReconnect2: function() {
cc.vv.gameNetMgr.auth_finish ? cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("match_reconnection") : cc.vv.toast.showToast({
txt: "网络验证失败！"
});
},
initMsgHandler: function() {
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_PLAYER_NUMBER_CHANGE, this.onCurNumberChange.bind(this));
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_MATCH_DETAIL_DIALOG, this.onShowMatchDetailDialog.bind(this));
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_BAOMING, this.onClickBaoMing.bind(this));
},
onDestroy: function() {
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_PLAYER_NUMBER_CHANGE);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_MATCH_DETAIL_DIALOG);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_BAOMING);
},
onCurNumberChange: function(e) {
this.txt_curNum.getComponent(cc.Label).string = "当前报名人数：" + e.num;
},
onShowMatchDetailDialog: function(t) {
var i = this;
cc.error("打开比赛详情");
cc.log(t);
cc.vv.UILoader.loadRes("match/matchGame/match_ddz/prefabs/MatchDetail", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, i.node, function(e) {
e.getComponent("MatchDetail").setViewData(t);
});
});
},
onClickFangKaExchange: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/exchange", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
}
});
cc._RF.pop();
}, {
GameNetMgr80002: "GameNetMgr80002"
} ],
MatchHistory: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0d824ufzBlLRZoeQexAiUU3", "MatchHistory");
cc.Class({
extends: cc.Component,
properties: {
HistoryItemPrefab: {
default: null,
type: cc.Prefab
}
},
onLoad: function() {
this._emptyTip = this.node.getChildByName("emptyTip");
this._emptyTip.active = !0;
this._viewlist = this.node.getChildByName("scrollView");
this._content = cc.find("view/content", this._viewlist);
this.node.active = !1;
cc.vv.matchHistory = this;
},
showNode: function(e) {
e = e.history;
this.initRoomHistoryList(e);
this.node.active = !0;
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
initRoomHistoryList: function(e) {
if (e) {
var t = this._content;
t.removeAllChildren();
for (var i = 0; i < e.length; ++i) {
var n = cc.instantiate(this.HistoryItemPrefab);
n.parent = t;
var a = e[i], s = this.dateFormat(1e3 * a[0]) + "  获得" + a[2] + "分,荣获" + a[3] + "名！";
n.getChildByName("decs").getComponent(cc.Label).string = s;
}
this._emptyTip.active = 0 == e.length;
}
}
});
cc._RF.pop();
}, {} ],
MatchItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7fee1zQ37hJA4JvMoBq+rMA", "MatchItem");
cc.Class({
extends: cc.Component,
properties: {
img_bg: {
default: null,
type: cc.Sprite
},
img_title: {
default: null,
type: cc.Sprite
},
txt_1: {
default: null,
type: cc.Label
},
txt_2: {
default: null,
type: cc.RichText
},
txt_people: {
default: null,
type: cc.RichText
},
txt_condition1: {
default: null,
type: cc.Label
},
txt_condition2: {
default: null,
type: cc.Label
},
item_data: null
},
start: function() {},
setData: function(e) {
this.item_data = e;
this.txt_condition2.string = this.item_data.start_num + "人开赛";
},
onItemClick: function() {
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_BAOMING, this.item_data.match_id);
}
});
cc._RF.pop();
}, {} ],
MatchList: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e6f95TT7+VJM6AgTk6qnV2+", "MatchList");
cc.Class({
extends: cc.Component,
properties: {
ItemPrefab: {
default: null,
type: cc.Prefab
}
},
onLoad: function() {
this._emptyTip = this.node.getChildByName("emptyTip");
this._emptyTip.active = !0;
this._viewlist = this.node.getChildByName("scrollView");
this._content = cc.find("view/content", this._viewlist);
this.node.active = !1;
cc.vv.matchList = this;
},
showNode: function(e) {
var t = cc.vv.match.matchMess;
this.initRoomHistoryList(t);
this.node.active = !0;
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
initRoomHistoryList: function(e) {
var t = this._content;
t.removeAllChildren();
for (var i in e) {
var n = cc.instantiate(this.ItemPrefab);
n.parent = t;
var a = this.getMatchGameName(i), s = e[i][0];
n.getChildByName("decs").getComponent(cc.Label).string = a + "  报名人数：" + s.load;
var c = n.getChildByName("btn_YBM"), r = n.getChildByName("btn_BM");
if ("" == s.token) {
c.active = !1;
r.active = !0;
r.idx = i;
r.guid = s.guid;
cc.vv.utils.addClickEvent(r, this.node, "MatchList", "onBtnBMClicked");
} else {
c.active = !0;
r.active = !1;
c.idx = i;
c.guid = s.guid;
cc.vv.utils.addClickEvent(c, this.node, "MatchList", "onBtnYBMClicked");
}
}
this._emptyTip.active = 0 == e.length;
},
onBtnBMClicked: function(e) {
var t = e.target.idx, i = e.target.guid, n = {
account: cc.vv.userMgr.account,
match_type: t,
guid: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("match_join", n);
},
onBtnYBMClicked: function(e) {
var t = e.target.idx, i = e.target.guid, n = {
account: cc.vv.userMgr.account,
match_type: t,
guid: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("match_cancel", n);
},
getMatchGameName: function(e) {
return 80001 == e ? "跑得快" : 80002 == e ? "斗地主" : void 0;
}
});
cc._RF.pop();
}, {} ],
MatchMain: [ function(o, e, t) {
"use strict";
cc._RF.push(e, "f649aCrJYBF2bXx1SBfck7Y", "MatchMain");
cc.Class({
extends: cc.Component,
properties: {
lblName: cc.Label,
lblID: cc.Label,
matchRule: {
default: null,
type: cc.Prefab
},
matchHistory: {
default: null,
type: cc.Prefab
},
matchList: {
default: null,
type: cc.Prefab
},
startMB: cc.Node,
readyMB: cc.Node,
role_num: cc.Label,
macth_rule_node: cc.Node,
gay60: cc.Node,
_matchType: "0",
_matchRule: "2"
},
onLoad: function() {
this.initMsgHandler();
this.ininEventHandlers();
this.initLabels();
this.initAtavar();
},
initLabels: function() {
console.log("log--------------userifo", cc.vv.userMgr);
this.lblName.string = cc.vv.userMgr.userName;
this.lblID.string = "ID:" + cc.vv.userMgr.userId;
},
initAtavar: function() {
this.node.getChildByName("head_node").getChildByName("headimg").getChildByName("head").getComponent("Atavar").load(cc.vv.userMgr.headimg);
},
start: function() {
this.node.addChild(cc.instantiate(this.matchRule), 50);
this.node.addChild(cc.instantiate(this.matchHistory), 50);
this.node.addChild(cc.instantiate(this.matchList), 50);
this.initInterface();
cc.vv.wc.hide();
for (var e = Object.keys(cc.vv.match.matchMess), t = 0; t < e.length; t++) {
var i = parseInt(e[t]);
if (cc.vv.match.matchMess[i][0].token) {
var n = cc.vv.match.matchMess[i][0].client_ip + ":" + cc.vv.match.matchMess[i][0].client_port, a = o("GameNetMgr80001");
cc.vv.gameNetMgr = new a();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.updateGameServer(cc.vv.match.matchMess);
cc.vv.netMgr.connectMatchServer(n);
console.log("--------连上长连接----start");
}
this.setTimer(i);
}
},
setTimer: function(e) {
if (2 == cc.vv.match.matchMess[e][0].match_type) {
var t = parseInt(cc.vv.match.matchMess[e][0].start_time), i = new Date().valueOf();
if (1e3 * t < i) {
cc.vv.match.matchWillBegin = !0;
cc.vv.wc.show("即将进入比赛...");
} else {
var n = 1e3 * t - i, a = (n = new Date(n)).getTime() / 1e3;
this.timer(a);
}
}
},
timer: function(e) {
this.count = e;
this.callback = function() {
0 == this.count && this.unschedule(this.callback);
if (this.count <= 2) {
cc.vv.match.matchWillBegin = !0;
cc.vv.wc.show("即将进入比赛...");
}
this.count--;
};
this.schedule(this.callback, 1);
},
ininEventHandlers: function() {
cc.vv.gameNetMgr && (cc.vv.gameNetMgr.dataEventHandler = this.node);
this._dataEventHandler = this.node;
this.node.on("lookDeatail", function(e) {});
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
onBtnComeBack: function() {
cc.vv.UILoader.destroy(this.node);
cc.vv.userMgr.inMatch = !1;
},
initInterface: function() {
this._matchType = "1";
this._matchRule = "2";
this.macth_rule_node.active = !0;
this.gay60.active = !0;
this.onBtnBaoMing();
},
onMatchHistory: function() {
cc.vv.audioMgr.playBtnClick();
1 == cc.vv.matchRule.node.active && (cc.vv.matchRule.node.active = !1);
1 == cc.vv.matchList.node.active && (cc.vv.matchList.node.active = !1);
if (1 == cc.vv.matchHistory.node.active) {
cc.vv.matchHistory.node.active = !1;
this.gay60.active = !1;
} else {
this.gay60.active = !0;
this.askMatchHistory();
}
},
onChangeMatch: function(e, t) {
cc.vv.audioMgr.playBtnClick();
1 == cc.vv.matchHistory.node.active && (cc.vv.matchHistory.node.active = !1);
1 == cc.vv.matchList.node.active && (cc.vv.matchList.node.active = !1);
this._matchType = "" + t;
if ("4" != this._matchRule) if ("0" == t) {
this.macth_rule_node.active = !1;
this.gay60.active = !1;
} else {
this.gay60.active = !0;
this.macth_rule_node.active = !0;
cc.vv.matchRule.showNode(this._matchType, "" + this._matchRule);
} else this.onBtnBaoMing();
},
onMatchRule: function(e, t) {
1 == cc.vv.matchHistory.node.active && (cc.vv.matchHistory.node.active = !1);
1 == cc.vv.matchList.node.active && (cc.vv.matchList.node.active = !1);
this._matchRule = "" + t;
cc.vv.audioMgr.playBtnClick();
this.gay60.active = !0;
4 == t ? this.onBtnBaoMing() : cc.vv.matchRule.showNode(this._matchType, this._matchRule);
},
onBtnBaoMing: function() {
cc.vv.audioMgr.playBtnClick();
1 == cc.vv.matchRule.node.active && (cc.vv.matchRule.node.active = !1);
1 == cc.vv.matchHistory.node.active && (cc.vv.matchHistory.node.active = !1);
if (1 == cc.vv.matchList.node.active) {
cc.vv.matchList.node.active = !1;
this.gay60.active = !1;
} else {
this.gay60.active = !0;
cc.vv.matchList.showNode(this._matchType);
}
},
onClickMatchRule: function(e) {
this._matchRule = "2";
this.onMatchRule(e, 2);
},
askMatchHistory: function() {
var e = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("match_history", e);
},
askMatchLoad: function(e, t) {},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("match_join", this.onMatchJoin.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("match_cancel", this.onMatchCancel.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("match_history", this.onMatchHistoryPush.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("match_load_msg", this.onMatchLoadPush.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("match_get_load", this.onMatchGetLoadPush.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("match_counts", this.onMatchGetLoadPush.bind(this));
},
onDestroy: function(e) {
cc.vv.netMgr.hallIEventDispatcher.off("match_join");
cc.vv.netMgr.hallIEventDispatcher.off("match_cancel");
cc.vv.netMgr.hallIEventDispatcher.off("match_history");
cc.vv.netMgr.hallIEventDispatcher.off("match_load_msg");
cc.vv.netMgr.hallIEventDispatcher.off("match_get_load");
},
onMatchJoin: function(e) {
console.log("--------------onMatchJoin:" + e.detail.errcode + "--:" + e.detail.token + "==L:" + e.detail.match_type);
if (0 != (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.match.matchMess[e.match_type][0].token = e.token;
cc.vv.matchList.showNode(this._matchType);
for (var i = Object.keys(cc.vv.match.matchMess), n = 0; n < i.length; n++) {
var a = parseInt(i[n]);
if (cc.vv.match.matchMess[a][0].token) {
var s = cc.vv.match.matchMess[a][0].client_ip + ":" + cc.vv.match.matchMess[a][0].client_port, c = o("GameNetMgr80001");
cc.vv.gameNetMgr = new c();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.updateGameServer(cc.vv.match.matchMess);
cc.vv.netMgr.connectMatchServer(s);
console.log("----onMatchJoin----连上长连接");
var r = cc.vv.match.matchMess[a][0].guid;
this.askMatchLoad(a, r);
}
this.setTimer(a);
}
}
},
onMatchCancel: function(e) {
console.log("--------------onMatchCancel");
if (0 != (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = cc.vv.match.matchMess[e.match_type][0];
i.token = "";
i.load = e.load;
var n = i.guid;
this.askMatchLoad(e.match_type, n);
cc.vv.matchList.showNode(this._matchType);
}
},
onMatchHistoryPush: function(e) {
e = e.detail;
cc.vv.matchHistory.showNode(e);
},
onMatchLoadPush: function(e) {
e = e.detail;
cc.vv.match.matchMess[e.match_type][0].load = e.load;
console.log("--------------onMatchLoadPush：" + e.load);
cc.vv.matchList.showNode(this._matchType);
},
onMatchGetLoadPush: function(e) {
e = e.detail;
cc.vv.match.matchMess[e.match_type][0].load = e.load;
console.log("--------------onMatchGetLoadPush:" + e.load);
cc.vv.matchList.showNode(this._matchType);
}
});
cc._RF.pop();
}, {
GameNetMgr80001: "GameNetMgr80001"
} ],
MatchRoom_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b3872e1fWBCA52p4E7sYB0j", "MatchRoom_DDZ");
var n = e("MatchChatConfig_DDZ");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_timeLabel: null,
_voiceMsgQueue: [],
_lastPlayingSeat: null,
_playingSeat: null,
_lastPlayTime: null,
donghuaPositionList: [],
node_tuoguan: cc.Node
},
onLoad: function() {
if (null != cc.vv && 1 != cc.vv.gameNetMgr.isReplay) {
this.initView();
this.initSeats();
this.initEventHandlers();
cc.vv.MJConfig = new n();
}
},
start: function() {
cc.vv.gameNetMgr.isReplay;
},
initView: function() {
for (var e = this.node.getChildByName("game"), t = [ "myself", "right", "left" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
var e = this;
this.node.on("game_begin", function() {
e.initSeats();
});
this.node.on("clear_Seats", function() {
e.clearSeats();
e.initSeats();
});
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_INIT_SEATS, this.initSeats.bind(this));
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_SHOW_TUOGUAN, this.onShowTuoGuan.bind(this));
cc.vv.eventMgr.on(cc.vv.event.MATCH_DDZ_CLEAR_SEATS, this.clearSeats.bind(this));
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setInfo("", "");
var t = this.node.getChildByName("game"), i = [ "myself", "right", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("Bdan").active = !1;
a.getChildByName("Bshuan").active = !1;
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setInfo(e.name, e.score);
this._seats2[t].setZhuang(i);
this._seats2[t].setOffline(!1);
this._seats2[t].setID(e.user_id);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
},
onClickSet: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/settings", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onClickTuoGuan: function() {
cc.vv.gameNetMgr.sendTuoGuan(!0);
},
onCancelTuoGuan: function() {
cc.vv.gameNetMgr.sendTuoGuan(!1);
},
onShowTuoGuan: function(e) {
this.node_tuoguan.active = e.isShow;
},
onClickChat: function() {
var t = this;
cc.vv.UILoader.loadRes("game/3DMahjong/prefabs/UI/p_chat", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {});
});
},
onDestroy: function() {
cc.vv.MJConfig = null;
cc.vv.voiceMgr.stop();
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_INIT_SEATS);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_SHOW_TUOGUAN);
cc.vv.eventMgr.off(cc.vv.event.MATCH_DDZ_CLEAR_SEATS);
}
});
cc._RF.pop();
}, {
MatchChatConfig_DDZ: "MatchChatConfig_DDZ"
} ],
MatchRoom_PDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e17cbbCZYdJzJjIXhfGfHXF", "MatchRoom_PDK");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_timeLabel: null,
_voiceMsgQueue: [],
_lastPlayingSeat: null,
_playingSeat: null,
_lastPlayTime: null,
donghuaPositionList: [],
alert: cc.Prefab,
wc: cc.Prefab,
PopupMgr: cc.Prefab
},
onLoad: function() {
if (null != cc.vv) {
console.log(cc.vv.match);
this.initView();
this.initSeats();
this.initEventHandlers();
}
},
start: function() {
this.node.addChild(cc.instantiate(this.PopupMgr), 100);
this.node.addChild(cc.instantiate(this.alert), 101);
this.node.addChild(cc.instantiate(this.wc), 102);
},
initView: function() {
var e = this.node.getChildByName("game");
this.animworldmap = e.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; ++i) {
var n = e.getChildByName(t[i]).getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3");
a.active = !1;
this._zhuangs.push(a);
}
},
initEventHandlers: function() {
cc.vv.eventMgr.on(cc.vv.event.MATCH_GEME_WAIT, this.matchClearSeats, this);
cc.vv.eventMgr.on(cc.vv.event.MATCH_GAME_START, this.initSeats, this);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.matchinitSingleSeat(e[t]);
},
matchClearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
var t = this.node.getChildByName("game"), i = [ "myself", "right", "up", "left" ];
for (e = 0; e < i.length; ++e) {
var n = i[e], a = t.getChildByName(n);
a.getChildByName("ChuPai").getChildByName("lb_type").getComponent(cc.Label).string = "";
a.getChildByName("folds").removeAllChildren();
a.getChildByName("holds").removeAllChildren();
a.getChildByName("Bdan").active = !1;
a.getChildByName("ht10").active = !1;
a.getChildByName("seat").getComponent("Seat").setPaiCount(0);
}
},
matchinitSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seat_index);
console.log("seat.score:", e.score, "index:" + t, "seat.name:" + e.name, "seat.seat_index:" + e.seat_index, "cc.vv.gameNetMgr.seatIndex:" + cc.vv.gameNetMgr.seatIndex);
this._seats2[t].setReady(!1);
this._seats2[t].setInfo(e.name, e.score);
this._seats2[t].setID(e.user_id);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
cc.vv.eventMgr.off(cc.vv.event.MATCH_GEME_WAIT, this.matchClearSeats, this);
cc.vv.eventMgr.off(cc.vv.event.MATCH_GAME_START, this.initSeats, this);
}
});
cc._RF.pop();
}, {} ],
MatchRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6105a8FRQBHUq1KNYQ2EMX4", "MatchRule");
cc.Class({
extends: cc.Component,
properties: {
title_js: cc.Node,
title_zs: cc.Node,
title_ys: cc.Node,
title_zjs: cc.Node,
ruleDecs: cc.RichText
},
onLoad: function() {
this.title_js.active = !1;
this.title_zs.active = !1;
this.title_ys.active = !1;
this.title_zjs.active = !1;
this.ruleDecs.string = "";
this.node.active = !1;
cc.vv.matchRule = this;
},
showNode: function(e, t) {
this.ruleDecs.string = "";
this.title_js.active = !1;
this.title_zs.active = !1;
this.title_ys.active = !1;
this.title_zjs.active = !1;
switch (e) {
case "1":
this.title_js.active = !0;
this.updateJS(t);
break;

case "2":
this.title_zs.active = !0;
this.updateZS(t);
break;

case "3":
this.title_ys.active = !0;
this.updateYS(t);
break;

case "4":
this.title_zjs.active = !0;
this.updateZJS(t);
}
this.node.active = !0;
},
updateJS: function(e) {
var t = "";
switch (e) {
case "1":
t = "奖励:\n第一名奖励钻石10颗\n第二名奖励钻石5颗\n第三名奖励钻石3颗";
break;

case "2":
t = "比赛规则:游戏类型（跑得快、斗地主），由系统随机分配房间，分3局（10/10一局）进行，按当次比赛输赢总分值排名，同等积分的情况下，赢局多的玩家为赢家（如：玩家A，赢分100，赢局20/30；玩家B，赢分100，赢局18/30；则判断玩家A赢）。";
break;

case "3":
t = "报名条件:\n免费\n时间：不限\n人数：满9人则开始比赛";
}
this.ruleDecs.string = t;
},
updateZS: function(e) {
var t = "";
switch (e) {
case "1":
t = "奖励:\n第一名奖励888元红包\n第二名奖励518元红包\n第三名奖励188元红包\n第三名奖励188元红包\n第四名至第十名奖励88元红包\n第十一名至五十名奖励30颗钻石\n第五十一名至一百名奖励10颗钻石\n奖品发放：\n红包奖品由约牌微信公众号发放给玩家，钻石奖品由系统自动发放给玩家（或者所有奖品都由约牌微信公众号发放给玩家，目的：让玩家积极加我们的微信公众号）。";
break;

case "2":
t = "比赛规则:游戏类型（跑得快、斗地主），由系统随机分配房间，按比赛结束时输赢累计总积分排名，同等积分的情况下，赢局多的玩家为赢家（如：玩家A，赢分100，赢局20/30；玩家B，赢分100，赢局18/30；则判断玩家A赢）。";
break;

case "3":
t = "报名条件:\n免费（比赛中的牌局需要消耗钻石，按10/10消耗1颗钻石计算）\n时间：星期一0:01至星期日11:59结束\n人数：不限";
}
this.ruleDecs.string = t;
},
updateYS: function(e) {
var t = "";
switch (e) {
case "1":
t = "奖励:\n冠军：   Apple iPhone X   价值9888\n亚军：华为Mate10 Pro价值5588\n季军：红包价值2000元\n4-12名： 红包  价值500元\n13-60名：红包价值100元\n61-300名：红包   价值18元";
break;

case "2":
t = "比赛规则:游戏类型（跑得快、斗地主），由系统随机分配房间，按当次比赛输赢总分值排名，同等积分的情况下，赢局多的玩家为赢家（如：玩家A，赢分100，赢局20/30；玩家B，赢分100，赢局18/30；则判断玩家A赢）。海选：当月1日0:01至20日11:59结束海选，由系统随机分配房间，按海选结束时输赢累计总积分排名，积分高的前300名选手晋级300强：当月22日0:01至25日11:59结束，由系统随机分配房间，按比赛结束时输赢累计总积分排名，积分高的前60名选手晋级60强：当月26日0:01至27日11:59结束，由系统随机分配房间，按比赛结束时输赢累计总积分排名，积分高的前12名选手晋级12强12强：当月28日19:00至21:00结束，分为3组，3人一组，以3局（10/10）进行，由系统随机分配房间，按当次比赛输赢总分值排名，积分高的前3名选手晋级总决赛总决赛：当月28日21:30至23:00结束，分为1组3人，以3局（10/10）定输赢，分出冠、亚、季军";
break;

case "3":
t = "报名条件:\n免费，当月20日11:59截止报名（比赛中的牌局需要消耗钻石，按10/10消耗1颗钻石计算）\n时间：当月1日0:01至当月最后一天的11:59结束\n人数：不限";
}
this.ruleDecs.string = t;
},
updateZJS: function(e) {
var t = "";
switch (e) {
case "1":
t = "奖励:";
break;

case "2":
t = "比赛规则:";
break;

case "3":
t = "报名条件:";
}
this.ruleDecs.string = t;
}
});
cc._RF.pop();
}, {} ],
Matching_DDZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2f7e0VBi5lKfbvP1T2D0yIg", "Matching_DDZ");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {},
start: function() {},
onClickExit: function() {
cc.vv.UILoader.destroy(this.node);
},
onClickStart: function() {
cc.director.loadScene("MatchGame_DDZ");
}
});
cc._RF.pop();
}, {} ],
Match: [ function(a, e, t) {
"use strict";
cc._RF.push(e, "af4c4zrsOdOxL/m8qBkRiFh", "Match");
cc.Class({
extends: cc.Component,
properties: {
lblMoney: cc.Label,
lblGems: cc.Label,
modelList: [ cc.Node ],
modelSeletedBtns: [ cc.Toggle ],
matchItemPre: cc.Prefab,
matchRecordPre: cc.Prefab,
matchAwardPre: cc.Prefab,
matchItemPreContent: cc.Node,
detailContent: [ cc.Node ],
matchLayout: cc.Node,
matchTips: cc.Label,
matchID: [],
match_Atlas: {
default: null,
type: cc.SpriteAtlas
},
matchNode: cc.Node,
recordNode: cc.Node,
recordContent: cc.Node,
detailsNode: cc.Node,
BgBtn: [ cc.Node ],
CheckBtn: [ cc.Node ],
_dataEventHandler: null
},
onLoad: function() {
cc.find("Canvas/WaitingConnection").active = !0;
cc.vv.net.pausePingPong();
this.initLabels();
this.newMatchPre();
this.ininEventHandlers();
},
start: function() {
for (var e = Object.keys(cc.vv.match.matchMess), t = 0; t < e.length; t++) {
var i = parseInt(e[t]);
if (cc.vv.match.matchMess[i][0].token) {
var n = a("GameNetMgr80001");
cc.vv.gameNetMgr = new n();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(cc.vv.match.matchMess);
}
this.setTimer(i);
}
},
setTimer: function(e) {
if (2 == cc.vv.match.matchMess[e][0].match_type) {
var t = parseInt(cc.vv.match.matchMess[e][0].start_time), i = new Date().valueOf();
if (1e3 * t < i) {
cc.vv.match.matchWillBegin = !0;
cc.vv.wc.show("即将进入比赛...");
} else {
var n = 1e3 * t - i, a = (n = new Date(n)).getTime() / 1e3;
this.timer(a);
}
}
},
timer: function(e) {
this.count = e;
this.callback = function() {
0 == this.count && this.unschedule(this.callback);
if (this.count <= 2) {
cc.vv.match.matchWillBegin = !0;
cc.vv.wc.show("即将进入比赛...");
}
this.count--;
};
this.schedule(this.callback, 1);
},
ininEventHandlers: function() {
var t = this;
cc.vv.gameNetMgr && (cc.vv.gameNetMgr.dataEventHandler = this.node);
t._dataEventHandler = this.node;
this.node.on("lookDeatail", function(e) {
t.showDetail(e);
});
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
onBtnComeBack: function() {
cc.vv.net.close(!0);
cc.vv.audioMgr.playBtnClick();
cc.vv.userMgr.match_info = null;
cc.vv.match.matchClear();
cc.vv.userMgr.inMatch = !1;
console.log("comeBack");
cc.director.loadScene("hall");
},
initLabels: function() {
console.log("log--------------userifo", cc.vv.userMgr);
this.lblMoney.string = cc.vv.userMgr.coins;
this.lblGems.string = cc.vv.userMgr.gems;
},
showModel: function(e) {
for (var t = 0; t < this.modelList.length; t++) if (t == e) {
this.modelList[t].active = !0;
this.BgBtn[t].active = !1;
this.CheckBtn[t].active = !0;
cc.log(t, this.modelList[t].active);
} else {
this.modelList[t].active = !1;
this.BgBtn[t].active = !0;
this.CheckBtn[t].active = !1;
cc.log(t, this.modelList[t].active);
}
},
awardDetail: function(e) {
for (var t = this.modelList[0], i = t.getChildByName("view").getChildByName("content").getChildByName("kuang"), n = e.awards[1], a = Object.keys(n), s = 0; s < 2 * a.length; s++) {
var c = cc.instantiate(this.matchAwardPre);
i.addChild(c);
var r = c.getChildByName("lab").getComponent(cc.Label);
if (s % 2 == 0) {
r.string = this.dataToChinese(parseInt(s / 2));
10 < s && (t.getChildByName("view").getChildByName("content").height += 62);
} else {
var o = n[parseInt(a[parseInt(s / 2)])];
o[2].money ? r.string = "现金奖励" + o[2].money : o[2].ingot ? r.string = "房卡*" + o[2].ingot : r.string = "钻石*" + o[2].gold;
}
}
},
dataToChinese: function(e) {
switch (e) {
case 0:
return "第一名";

case 1:
return "第二名";

case 2:
return "第三名";

case 3:
return "第四名";

case 4:
return "第五名";

case 5:
return "第六名";

case 6:
return "第七名";

case 7:
return "第八名";

case 8:
return "第九名";

case 9:
return "第十名";

case 10:
return "参与奖";
}
},
ruleDetail: function(e) {
var t = this.modelList[1].getChildByName("view").getChildByName("content"), i = (t.getChildByName("timeRule"), 
t.getChildByName("timeRule").getComponent(cc.Label));
1 == e.match_type ? i.string = "满" + e.match_user + "开赛" : i.string = this.dateFormat(1e3 * e.start_time);
t.getChildByName("wanfaRule").getComponent(cc.Label).string = "跑得快经典` 玩法、黑桃三、有大必走";
t.getChildByName("rule").getComponent(cc.Label).string = "由系统随机分配房间,分30局进行,按当次比赛输赢总分值排名,同等积分的情况下,赢局多的玩家为赢家(如:玩家A,赢分100,赢局20/30,玩家B,赢分100,赢局18/30,则判断玩家A赢)";
},
newMatchPre: function() {
for (var t = this, e = 0; e < Object.keys(cc.vv.match.matchMess).length; e++) {
var i = cc.instantiate(t.matchItemPre);
t.matchItemPreContent.addChild(i);
i.getComponent("matchPre").init(e);
i.on("lookDeatail", function(e) {
t.showDetail(e);
});
}
},
onBtnModelSeletedClick: function(e) {
cc.vv.audioMgr.playBtnClick();
for (var t = -1, i = 0; i < this.modelSeletedBtns.length; i++) this.modelSeletedBtns[i].getComponent(cc.Toggle).isChecked && (t = i);
this.showModel(t);
},
onBtnOpenRecordClick: function(e) {
this.matchNode.active = !1;
this.recordNode.active = !0;
e = {
account: cc.vv.userMgr.account
};
console.log(e);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("match_history", args);
},
onBtnCloseRecordClick: function(e) {
cc.vv.audioMgr.playBtnClick();
this.recordContent.removeAllChildren();
this.matchNode.active = !0;
this.recordNode.active = !1;
this.detailsNode.active = !1;
},
onBtnCloseDetailClick: function(e) {
cc.vv.audioMgr.playBtnClick();
this.matchNode.active = !0;
this.recordNode.active = !1;
this.detailsNode.active = !1;
this.modelList[0].getChildByName("view").getChildByName("content").getChildByName("kuang").removeAllChildren();
},
showDetail: function(e) {
this.matchNode.active = !1;
this.recordNode.active = !1;
this.detailsNode.active = !0;
var t = cc.vv.match.matchMess[e.detail][0];
cc.log(t);
this.ruleDetail(t);
this.awardDetail(t);
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
onMsgMatchHistory: function(e) {
if (0 !== e.errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = e.history;
if (null == i) {
var n = new cc.Node("tishiLab"), a = n.addComponent(cc.Label);
this.recordContent.addChild(n);
n.x = 0;
n.y = 0;
n.color = new cc.Color(255, 0, 0);
a.fontSize = 30;
a.string = "本月没有参加任何比赛！";
return 0;
}
for (var s = 0; s < i.length; s++) {
var c = cc.instantiate(this.matchRecordPre);
this.recordContent.addChild(c);
c.getComponent("matchRLPre").init(i[s]);
3 <= s && (this.recordContent.height += 113);
}
}
}
});
cc._RF.pop();
}, {
GameNetMgr80001: "GameNetMgr80001"
} ],
MemoryDetector: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "35fa6BbgetHwbLlMkCCcFFP", "MemoryDetector");
var n = {
_inited: !1,
showMemoryStatus: function() {
if (!cc.sys.isNative && !this._inited) {
var h = null, t = cc.profiler;
t.showStats();
(function() {
h = document.createElement("div");
t._fps = document.getElementById("fps");
t._fps.style.height = "100px";
var e = h.style;
e.color = "rgb(0, 255, 255)";
e.font = "bold 12px Helvetica, Arial";
e.lineHeight = "20px;";
e.width = "100%";
t._fps.appendChild(h);
})();
cc.director.on(cc.Director.EVENT_AFTER_VISIT, function() {
var e = 0, t = cc.textureCache._textures;
for (var i in t) {
var n = t[i];
e += n.getPixelWidth() * n.getPixelHeight() * 4;
}
var a = cc.textureCache._textureColorsCache;
for (var s in a) {
var c = a[s];
for (var r in c) {
var o = c[r];
e += o.width * o.height * 4;
}
}
h.innerHTML = "  Memory  " + (e / 1048576).toFixed(2) + " M";
});
this._inited = !0;
}
}
};
t.exports = n;
cc._RF.pop();
}, {} ],
MyPoker_old: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d97favL83tPm7Vw4nqkJHKj", "MyPoker_old");
cc.Class({
extends: cc.Component,
properties: {
num: {
default: null,
type: cc.Sprite
},
color1: {
default: null,
type: cc.Sprite
},
color2: {
default: null,
type: cc.Sprite
},
joker: {
default: null,
type: cc.Sprite
},
beimian: {
default: null,
type: cc.Sprite
},
poker_id: -1,
isShowUp: !1,
nodeY: 0
},
onLoad: function() {},
setValueAndColorByID: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
this.poker_id = e;
this.isShowUp = !1;
this.nodeY = this.node.y;
var i = cc.vv.poker_util.get_poker_value(e), n = cc.vv.poker_util.get_poker_color(e);
if (-1 != e) {
this.joker.spriteFrame = null;
if (16 == i) {
console.log("pkid:", e);
var a = n % 2 == 0 ? "small_joker_big" : "red_joker_big";
this.joker.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old(a);
} else {
a = n % 2 == 0 ? "red_" : "black_";
if (0 == t && (11 == i || 12 == i || 13 == i)) {
var s = a + "p" + i + "_big";
this.joker.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old(s);
}
this.num.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old(a + i + "_big");
this.color1.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old("color_" + n);
this.color2.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old("color_" + n);
}
} else {
var c = cc.vv.userMgr.poker_color;
console.log("color1:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" + c);
this.beimian.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_bg" + c);
}
},
setValueAndColor: function(e, t) {
this.isShowUp = !1;
this.nodeY = this.node.y;
this.joker.spriteFrame = null;
this.beimian.spriteFrame = null;
if (-1 != e) if (16 == e) {
var i = t % 2 == 0 ? "small_joker_big" : "red_joker_big";
this.joker.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old(i);
} else {
i = t % 2 == 0 ? "red_" : "black_";
this.num.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old(i + e + "_big");
this.color1.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old("color_" + t);
this.color2.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName_old("color_" + t);
} else {
var n = cc.vv.userMgr.poker_color;
console.log("color2:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" + n);
this.beimian.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_bg" + n);
}
},
setUp: function() {
this.node.y = this.nodeY + 20;
this.isShowUp = !0;
},
setDown: function() {
this.node.y = this.nodeY;
this.isShowUp = !1;
},
onMJClicked: function(e) {}
});
cc._RF.pop();
}, {} ],
MyPoker: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d969anyZKdIpZd18MVjTCOD", "MyPoker");
cc.Class({
extends: cc.Component,
properties: {
sp: {
default: null,
type: cc.Sprite
},
satrt_mc: cc.Node,
poker_id: -1,
isShowUp: !1,
nodeY: 0
},
onLoad: function() {},
setValueAndColorByID: function(e) {
1 < arguments.length && void 0 !== arguments[1] && arguments[1];
this.satrt_mc && (this.satrt_mc.active = !1);
this.poker_id = e;
this.isShowUp = !1;
this.nodeY = this.node.y;
var t = cc.vv.poker_util.get_poker_value(e), i = cc.vv.poker_util.get_poker_color(e);
if (-1 != e) {
if (16 == t) {
console.log("pkid:", e);
var n = i % 2 == 0 ? "card_joker_small" : "card_joker_big";
this.sp.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName(n);
} else this.sp.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_" + i + "_" + t);
this.updateMainColor(i, t);
} else {
var a = cc.vv.userMgr.poker_color;
this.sp.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_bg" + a);
}
},
setValueAndColor: function(e, t) {
this.val = e;
this.isShowUp = !1;
this.satrt_mc && (this.satrt_mc.active = !1);
this.nodeY = this.node.y;
this.sp.spriteFrame = null;
if (-1 != e) {
if (16 == e) {
var i = t % 2 == 0 ? "card_joker_small" : "card_joker_big";
this.sp.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName(i);
} else this.sp.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_" + t + "_" + e);
this.updateMainColor(t, e);
} else {
var n = cc.vv.userMgr.poker_color;
this.sp.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_bg" + n);
}
},
setUp: function() {
this.node.y = this.nodeY + 20;
this.isShowUp = !0;
this.setBlack(!1);
},
setDown: function() {
this.node.y = this.nodeY;
this.isShowUp = !1;
},
updateMainColor: function(e, t) {
if (cc.vv.gameNetMgr.pk_mainColor && -1 != cc.vv.gameNetMgr.pk_mainColor.pk_color) {
e == cc.vv.gameNetMgr.pk_mainColor.pk_color && (this.satrt_mc.active = !0);
7 != t && 15 != t && 16 != t || (this.satrt_mc.active = !0);
}
},
setBlack: function(e) {
this.node.getChildByName("cover").active = e;
},
isBlack: function() {
return this.node.getChildByName("cover").active;
},
onMJClicked: function(e) {}
});
cc._RF.pop();
}, {} ],
NetMgr: [ function(a, e, t) {
"use strict";
cc._RF.push(e, "91d8ajdVxhLI54A594abtM2", "NetMgr");
cc.Class({
extends: cc.Component,
properties: {
connectlist: [],
HALL: 0,
GAME: 1,
CLUB: 2,
VOICE: 3,
MATCH: 4,
hallIEventDispatcher: null,
hallId: 0
},
init: function() {
this.initHallSocket();
this.initGameSocket();
this.initVoiceSocket();
this.initMatchGameSocket();
},
initHallSocket: function() {
this.hallIEventDispatcher = new cc.EventTarget();
var e = a("Net"), t = a("HallReceiver"), i = new e();
i.sName = "hall";
var n = new t();
i.init();
this.connectlist[this.HALL] = i;
n.init();
},
initGameSocket: function() {
var e = new (a("Net"))();
e.sName = "game";
e.init();
this.connectlist[this.GAME] = e;
},
initVoiceSocket: function() {
var e = new (a("Net"))();
e.sName = "voice";
e.init();
this.connectlist[this.VOICE] = e;
},
initMatchGameSocket: function() {
var e = new (a("Net_Match"))();
e.sName = "net_match";
e.init();
this.connectlist[this.MATCH] = e;
},
connectHallServer: function(e) {
if (!this.hallid) {
var t = this;
e && (this.connectlist[this.HALL].ip = e);
var i = function() {
if (t.hallid) {
console.log("onConnectOK");
clearInterval(t.hallid);
t.hallid = 0;
t.hallIEventDispatcher.emit("NetSmooth");
t.connectlist[t.HALL].send("login", {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
});
}
}, n = function() {
console.log("failed.");
};
this.hallid = setInterval(function() {
t.connectlist[t.HALL].close();
t.connectlist[t.HALL].connect(i, n);
}, 5e3);
this.connectlist[this.HALL].connect(i, n);
}
},
closeHallServer: function() {
this.connectlist[this.HALL].close();
},
connectGameServer: function(e, t) {
if (!this.gameid) {
var i = this;
this.connectlist[this.GAME].ip = e;
var n = function() {
if (i.gameid) {
console.log("onConnectOK");
clearInterval(i.gameid);
i.gameid = 0;
i.connectlist[i.GAME].send("login", t);
}
}, a = function() {
console.log("failed.");
cc.vv.wc.hide();
};
this.gameid = setInterval(function() {
i.connectlist[i.GAME].connect(n, a);
}, 5e3);
this.connectlist[this.GAME].connect(n, a);
}
},
connectVoiceServer: function(e) {
this.connectlist[this.VOICE].ip = e;
this.connectlist[this.VOICE].connect(function() {
console.log("onConnectOK");
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
},
connectMatchServer: function(e) {
this.connectlist[this.MATCH].ip = e;
this.connectlist[this.MATCH].connect(function() {
console.log("onConnectOK");
}, function() {
console.log("failed.");
cc.vv.wc.hide();
});
},
connectMatchDDZServer: function(e, t) {
this.connectlist[this.MATCH].ip = e;
this.connectlist[this.MATCH].connect(function() {
console.log(" connectMatchDDZServer onConnectOK");
t && t(!0);
}, function() {
console.log("failed.");
t && t(!1);
cc.vv.wc.hide();
});
}
});
cc._RF.pop();
}, {
HallReceiver: "HallReceiver",
Net: "Net",
Net_Match: "Net_Match"
} ],
Net_Match: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2794+/SX1O2prPDAmKM20z", "Net_Match");
null == window.io && (window.io = e("socket-io"));
cc.Class({
sName: null,
extends: cc.Component,
init: function() {
this.ip = "";
this.sio = null;
this.isPinging = !1;
this.fnDisconnect = null;
this.handlers = {};
this.id = 0;
},
addHandler: function(t, i) {
this.handlers[t] && console.log("event:" + t + "' handler has been registered.");
this.handlers[t] = function(e) {
"disconnect" != t && "string" == typeof e && (e = JSON.parse(e));
i(e);
};
},
connect: function(t, e) {
var i = this;
this.sio = window.io.connect(this.ip, {
reconnection: !0,
"force new connection": !0,
transports: [ "websocket", "polling" ]
});
this.sio.on("reconnect", function() {
console.log("reconnection");
});
this.sio.on("connect", function(e) {
i.sio.connected = !0;
t(e);
});
this.sio.on("disconnect", function(e) {
console.log("disconnect", i.sName);
i.close();
});
this.sio.on("connect_failed", function() {
console.log("connect_failed");
});
for (var n in this.handlers) {
var a = this.handlers[n];
if ("function" == typeof a) if ("disconnect" == n) this.fnDisconnect = a; else {
console.log("register:function " + n);
this.sio.on(n, a);
}
}
this.startHearbeat();
},
startHearbeat: function() {
var e = this;
this.sio.on("game_pong", function() {
e.lastRecieveTime = Date.now();
});
this.lastRecieveTime = Date.now();
console.log("开始心跳包,当前状态" + e.isPinging);
e.isPinging = !0;
clearInterval(this.id);
this.id = setInterval(function() {
e.sio && (1e4 < Date.now() - e.lastRecieveTime && e.isPinging ? e.close() : e.ping());
}, 2e3);
},
pausePingPong: function() {
console.log("pausePingPong");
this.isPinging = !1;
},
resumePingPong: function() {
console.log("resumePingPong");
this.isPinging = !0;
this.lastRecieveTime = Date.now();
},
send: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
this.sio && this.sio.connected && this.sio.emit(e, t);
},
ping: function() {
this.send("game_ping");
},
close: function(e) {
console.log("关闭socket连接.........");
clearInterval(this.id);
this.isPinging = !1;
if (this.sio && this.sio.connected) {
this.sio.connected = !1;
cc.vv.gameNetMgr.auth_finish = !1;
this.sio.disconnect();
this.sio = null;
}
console.log("是否有断线处理函数", this.fnDisconnect);
if (this.fnDisconnect) {
e || this.fnDisconnect();
"hall" != this.sName && (this.fnDisconnect = null);
}
}
});
cc._RF.pop();
}, {
"socket-io": "socket-io"
} ],
Net: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1cc9yRd15CXqFg0vTGKZUk", "Net");
var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
null == window.io && (window.io = e("socket-io"));
cc.Class({
sName: null,
extends: cc.Component,
init: function() {
this.ip = "";
this.sio = null;
this.isPinging = !1;
this.fnDisconnect = null;
this.handlers = {};
this.id = 0;
},
addHandler: function(t, i) {
this.handlers[t] && console.log("event:" + t + "' handler has been registered.");
this.handlers[t] = function(e) {
"disconnect" != t && "string" == typeof e && (e = JSON.parse(e));
i(e);
};
},
connect: function(t, e) {
var i = this;
this.sio = window.io.connect(this.ip, {
reconnection: !1,
"force new connection": !0,
transports: [ "websocket", "polling" ]
});
this.sio.on("reconnect", function() {
console.log("reconnection");
});
this.sio.on("connect", function(e) {
i.sio.connected = !0;
t(e);
});
this.sio.on("disconnect", function(e) {
console.log("disconnect", i.sName);
i.close();
});
this.sio.on("connect_failed", function() {
console.log("connect_failed");
});
for (var n in this.handlers) {
var a = this.handlers[n];
if ("function" == typeof a) if ("disconnect" == n) this.fnDisconnect = a; else {
console.log("register:function " + n);
this.sio.on(n, a);
}
}
this.startHearbeat();
},
startHearbeat: function() {
var t = this;
this.sio.on("game_pong", function(e) {
cc.vv && cc.vv.userMgr && e && e.new_token && (cc.vv.userMgr.token = e.new_token);
t.lastRecieveTime = Date.now();
});
this.lastRecieveTime = Date.now();
console.log("开始心跳包,当前状态" + t.isPinging);
t.isPinging = !0;
clearInterval(this.id);
this.id = setInterval(function() {
t.sio && (1e4 < Date.now() - t.lastRecieveTime && t.isPinging ? t.close() : t.ping());
}, 5e3);
},
pausePingPong: function() {
console.log("pausePingPong");
this.isPinging = !1;
},
resumePingPong: function() {
console.log("resumePingPong");
this.isPinging = !0;
this.lastRecieveTime = Date.now();
},
send: function(e, t) {
if (this.sio && this.sio.connected) {
null != t && "object" == ("undefined" == typeof t ? "undefined" : n(t)) && (t = JSON.stringify(t));
t || (t = 0);
this.sio.emit(e, t);
}
},
ping: function() {
this.send("game_ping", {
token: cc.vv.userMgr.token
});
},
close: function(e) {
console.log("关闭socket连接.........");
clearInterval(this.id);
this.isPinging = !1;
if (this.sio && this.sio.connected) {
this.sio.connected = !1;
this.sio.disconnect();
this.sio = null;
}
console.log("是否有断线处理函数", this.fnDisconnect);
if (this.fnDisconnect) {
e || this.fnDisconnect();
"hall" != this.sName && (this.fnDisconnect = null);
}
}
});
cc._RF.pop();
}, {
"socket-io": "socket-io"
} ],
NodeNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7af1fLWcR5A3qa7i1L8hZ+A", "NodeNode");
var n = e("./UILoader");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LOADING, n.beforeSceneLoading);
cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, n.afterSceneLaunch);
}
});
cc._RF.pop();
}, {
"./UILoader": "UILoader"
} ],
NoticeTip: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "df61b4+FzFDvbpO5g8UNVIM", "NoticeTip");
cc.Class({
extends: cc.Component,
properties: {
_guohu: null,
_info: null,
_guohuTime: -1
},
onLoad: function() {
this._guohu = cc.find("Canvas/tip_notice");
this._guohu.active = !1;
this._info = cc.find("Canvas/tip_notice/info").getComponent(cc.Label);
var t = this;
this.node.on("push_notice", function(e) {
e = e.detail;
t._guohu.active = !0;
t._guohuTime = e.time;
t._info.string = e.info;
});
},
update: function(e) {
if (0 < this._guohuTime) {
this._guohuTime -= e;
this._guohuTime < 0 && (this._guohu.active = !1);
}
}
});
cc._RF.pop();
}, {} ],
Notice: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7b217oPwD9FHLqGnVgN8PYb", "Notice");
cc.Class({
extends: cc.Component,
onClose: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.sys.localStorage.setItem("gonggao" + cc.localVersion, "1");
}
});
cc._RF.pop();
}, {} ],
OtherOpenRoom: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a8fbaIcdTxEFayHgpNwBjPO", "OtherOpenRoom");
cc.Class({
extends: cc.Component,
properties: {
scrollview: {
default: null,
type: cc.ScrollView
},
_allRooms: null,
_itemList: [],
_content: null,
_viewitemTemp: null,
_gameName: "",
_creatRoomID: -1,
_server_type: -1,
_type_index: -1,
_rule_index: -1,
_max_games: 10,
_tabList: [],
_tabIndex: 0
},
onLoad: function() {
if (null != cc.vv) {
this.success_page = this.node.getChildByName("ShowWX");
this.success_page.active = !1;
this._emptyTip = this.node.getChildByName("lb_tip");
this._emptyTip.active = !0;
this.roomList = this.node.getChildByName("roomList");
this._content = cc.find("view/content", this.roomList);
this._viewitemTemp = this._content.children[0];
this._content.removeChild(this._viewitemTemp);
for (var e = cc.find("Canvas/Daikai/tab_node/btn_type"), t = 0; t < 5; t++) {
var i = "Type" + t;
this._tabList.push(e.getChildByName(i));
}
var n = this;
cc.find("Canvas").on("updateDaiKai", function() {
n.start();
});
(cc.vv.openRoom = this).adaptScreen();
this.initMsgHandler();
}
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t, n = 1180 * i;
this.roomList.setContentSize(cc.size(n, 500));
this._viewitemTemp.setScale(1 * i);
},
start: function() {
this.success_page.active = !1;
this.updateRoomList();
this.onButtonTab(null, 0);
if (cc.vv.userMgr.daiKaiRoomData) {
var e = cc.vv.userMgr.daiKaiRoomData;
this.success_openRoom(e.name, e.server_code, e.roomid, e.t_index, e.r_index, e.num);
}
},
success_openRoom: function(e, t, i, n, a, s) {
this._gameName = e;
this._creatRoomID = i;
this._server_type = t;
this._type_index = n;
this._rule_index = a;
this._max_games = s;
this.success_page.active = !0;
cc.vv.anysdkMgr.updateMoney();
},
updateRoomList: function() {
this._allRooms = null;
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_agent_room", e);
},
initList: function(e) {
for (var t = 0; t < e.length; t++) {
var i = e[t];
if (i) {
var n = this.getViewItem(t);
n.roomid = i.id;
var a = i.agent_expires_time, s = this.dateFormat(1e3 * a);
n.getChildByName("lb_time").getComponent(cc.Label).string = "房间解散时间:" + s;
var c = JSON.parse(i.base_info);
n.base_info = c;
var r = t + 1;
n.getChildByName("lb_num").getComponent(cc.Label).string = r;
n.getChildByName("lb_title").getComponent(cc.Label).string = "" + this.getGameTypeStr(c.server_type);
n.getChildByName("lb_room").getComponent(cc.Label).string = "房间号：" + i.id;
n.getChildByName("lb_decs").getComponent(cc.Label).string = this.getWaFaDecs(c.server_type, c.type_index, c.rule_index, c.max_games);
}
}
this._emptyTip.active = 0 == e.length;
this.shrinkContent(e.length);
},
getViewItem: function(e) {
var t = this._content;
if (t.childrenCount > e) return t.children[e];
var i = cc.instantiate(this._viewitemTemp);
t.addChild(i);
return i;
},
shrinkContent: function(e) {
for (;this._content.childrenCount > e; ) {
var t = this._content.children[this._content.childrenCount - 1];
this._content.removeChild(t, !0);
}
},
getWaFaDecs: function(e, t, i, n) {
return cc.vv.gameType.getWaFaDecs(e, t, i, n);
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
getGameTypeStr: function(e) {
return cc.vv.gameType.getGameTypeStr(e);
},
onButtonDel: function(e) {
var t = e.target.parent.roomid;
cc.vv.alert.show("提示", "确定是否删除该房间？", function() {
var e = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
roomid: t
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("delete_agent_room", e);
}, !0);
},
onShare: function(e, t) {
cc.vv.audioMgr.playBtnClick();
var i = this._gameName + "  房间ID:" + this._creatRoomID, n = this.getWaFaDecs(this._server_type, this._type_index, this._rule_index, this._max_games);
cc.vv.anysdkMgr.shareInHall(i, n, t, this._creatRoomID);
},
onbtnListShare: function(e, t) {
cc.vv.audioMgr.playBtnClick();
var i = e.target.parent.roomid, n = e.target.parent.base_info;
this._gameName = this.getGameTypeStr(n.server_type);
this._creatRoomID = i;
this._server_type = n.server_type;
this._type_index = n.type_index;
this._rule_index = n.rule_index;
this._max_games = n.max_games;
this.success_page.active = !0;
},
onClose_OtherOpenRoom: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.vv.userMgr.daiKaiRoomData = null;
},
onDaiKaiRoom: function() {
var t = this;
cc.vv.audioMgr.playBtnClick();
cc.vv.userMgr.isDaiKaiRoom = !0;
cc.vv.userMgr.isClubRoom = !1;
console.log("代开房间");
cc.vv.userMgr.daiKaiRoomData = null;
cc.vv.UILoader.loadRes("hall/prefabs/SelectGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node.parent, function(e) {});
});
},
closeShowPage: function() {
this.success_page.active = !1;
},
onButtonTab: function(e, t) {
var i = t;
if (0 == i) {
this._tabList[0].getComponent(cc.Toggle).isChecked = !0;
this._tabList[1].getComponent(cc.Toggle).isChecked = !1;
this._tabList[2].getComponent(cc.Toggle).isChecked = !1;
this._tabList[3].getComponent(cc.Toggle).isChecked = !1;
this._tabList[4].getComponent(cc.Toggle).isChecked = !1;
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -180);
this._tabList[3].setPosition(0, -270);
this._tabList[4].setPosition(0, -360);
} else if (1 == i) {
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -325);
this._tabList[3].setPosition(0, -415);
this._tabList[4].setPosition(0, -500);
} else if (2 == i) {
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -180);
this._tabList[3].setPosition(0, -415);
this._tabList[4].setPosition(0, -500);
} else if (3 == i) {
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -180);
this._tabList[3].setPosition(0, -270);
this._tabList[4].setPosition(0, -500);
} else if (4 == i) {
this._tabList[1].setPosition(0, -90);
this._tabList[2].setPosition(0, -180);
this._tabList[3].setPosition(0, -270);
this._tabList[4].setPosition(0, -360);
}
this.showbtnType();
},
showbtnType: function() {
for (var e in this._tabList) {
var t = this._tabList[e];
t.getChildByName("New Label").active = !0;
t.getChildByName("icon_nor").active = !0;
if (t && t.getComponent(cc.Toggle).isChecked) {
t.getChildByName("New Label").active = !1;
t.getChildByName("icon_nor").active = !1;
if (0 != e) for (var i = t.getChildByName("Background").getChildByName("checkmark").getChildByName("tabPageView").getChildByName("view").getChildByName("content").getChildByName("btn_list"), n = 0; n < i.children.length; ++n) {
var a = i.children[n];
if (a && a.getComponent(cc.Toggle).isChecked) {
var s = a.getComponent(cc.Toggle).checkEvents[0].customEventData;
this.updateTypeList(s);
}
} else this.updateTypeList(-1);
}
}
},
onBtnTypeClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = e.checkEvents[0].customEventData;
this.updateTypeList(t);
},
updateTypeList: function(e) {
var t = this._allRooms;
if (null != t) if (-1 != e) {
for (var i = [], n = 0; n < t.length; n++) {
var a = t[n];
if (a) {
JSON.parse(a.base_info).server_type == e && i.push(t[n]);
}
}
this.initList(i);
} else this.initList(t);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_agent_room", this.onMsgGetAgentRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("delete_agent_room", this.onMsgDeleteAgentRoom.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_agent_room");
cc.vv.netMgr.hallIEventDispatcher.off("delete_agent_room");
},
onMsgGetAgentRoom: function(e) {
if (0 != (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
this._allRooms = e.rooms;
this.initList(this._allRooms);
}
},
onMsgDeleteAgentRoom: function(e) {
if (0 != (e = e.detail).errcode) {
cc.vv.wc.hide();
if (2009 == e.errcode) {
cc.vv.alert.show("提示", "房间里有玩家在，无法删除房间");
return;
}
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else this.updateRoomList();
},
onDestroy: function() {
cc.vv.userMgr.isDaiKaiRoom = !1;
cc.vv.userMgr.daiKaiRoomData = null;
this.removeMsgHandler();
cc.find("Canvas") && cc.find("Canvas").off("updateDaiKai");
}
});
cc._RF.pop();
}, {} ],
PHZ_GameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "107d8D0iiFPTbFuNNH5a9zi", "PHZ_GameOver");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.initData();
this.initNode();
this.initEventHandler();
this.showBtnReadyLabelByState();
}
},
initData: function() {
this.huCountList = [];
this.itemLableList = [];
this.userList = [];
this.itemCardTag = 1100;
this._maxPlayerNum = 3;
this._handCardSpriteSize = {
width: 56,
height: 62
};
},
initNode: function() {
this._gameOverRoot = this.node.getChildByName("bg");
this._surplusCardsNode = this._gameOverRoot.getChildByName("surplusCardsNode");
this.initHuIcon();
this.initCommonLabels();
this.initHuCountLabels();
this.initUsers();
this.initFanLables();
this.node.active = !1;
},
initCommonLabels: function() {
this.lb_huXi = this._gameOverRoot.getChildByName("lb_huXi").getComponent(cc.Label);
this.lb_fanShu = this._gameOverRoot.getChildByName("lb_fanShu").getComponent(cc.Label);
this.lb_tunShu = this._gameOverRoot.getChildByName("lb_tunShu").getComponent(cc.Label);
this.lb_total = this._gameOverRoot.getChildByName("lb_total").getComponent(cc.Label);
},
initHuIcon: function() {
this.icon_huCardSign = this._gameOverRoot.getChildByName("huCardFrame");
this.icon_huCardSign.active = !1;
this.icon_huCardSign.setLocalZOrder(10);
},
initHuCountLabels: function() {
this._huCountNode = this._gameOverRoot.getChildByName("itemCardHuCountNode");
for (var e = 0; e < 8; e++) {
var t = this._huCountNode.getChildByName("huCount" + e), i = this._huCountNode.getChildByName("itemLable" + e);
t.getComponent(cc.Label).string = "";
i.getComponent(cc.Label).string = "";
this.huCountList.push(t);
this.itemLableList.push(i);
}
},
initUsers: function() {
for (var e = this._gameOverRoot.getChildByName("UserNode"), t = 0; t < this._maxPlayerNum; t++) {
var i = {}, n = e.getChildByName("user" + t);
i.frame = n.getChildByName("frame").getComponent(cc.Sprite);
i.icon_winOrLoseTyp = n.getChildByName("icon_winOrLoseType").getComponent(cc.Sprite);
i.icon_winOrLose = n.getChildByName("icon_winOrLose").getComponent(cc.Sprite);
i.lb_score = n.getChildByName("lb_score").getComponent(cc.Label);
i.lb_name = n.getChildByName("lb_name").getComponent(cc.Label);
i.lb_id = n.getChildByName("lb_id").getComponent(cc.Label);
i.image_atavar = n.getChildByName("head").getChildByName("image_Atavar").getComponent("ImageLoader");
this.userList.push(i);
}
},
initFanLables: function() {
var e = this._gameOverRoot.getChildByName("fanLabelNode");
this.Lb_fanTypeList = [];
for (var t = 0; t < 12; t++) {
var i = "lb_fanType" + t, n = e.getChildByName(i).getComponent(cc.Label);
n.string = "";
this.Lb_fanTypeList.push(n);
}
},
showBtnReadyLabelByState: function() {
var e = this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label);
cc.vv.gameNetMgr.isOver ? e.string = "总结算" : e.string = "继续";
},
initEventHandler: function() {
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("wp_over", this.call_game_over, this);
this.gameRoot.on("game_result_showLB", this.showLb, this);
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function(e) {
var t = this;
if (1 != e.detail.force) {
var i = cc.vv.gameNetMgr.getIsSpcialHu() ? 1 : 0;
this.gameRoot && this.gameRoot.runAction(cc.sequence(cc.delayTime(3.5 + i), cc.callFunc(function(e) {
t.onGameOver();
})));
} else this.onGameOver();
},
onGameOver: function() {
this.icon_huCardSign.active = !1;
this.node.active = !0;
var e = cc.vv.gameNetMgr.gameOverData, t = e.end_seats_data, i = (e.force, e.tian_hu, 
e.hu_user_id), n = e.pao_user_id;
this.hu_card = e.hu_card;
e.button;
var a = e.pokers, s = e.hu_details;
this.totalHuCount = 0;
this.hu_index = 0;
this.pick_hu = e.pick_hu;
console.log("log------------fangroup=:", e.fan_group);
this.clear();
this.showSurplusCards(a);
this.showItemsInfo(t, i);
this.showHuDetails(t, s);
this.showFanGroups(e.fan_group);
this.showPlayer(t, i, n);
this.lb_huXi.string = "胡息 +" + e.total_hu_nums;
this.lb_fanShu.string = "番数 +" + e.total_fan_nums;
this.lb_tunShu.string = "囤数 +" + e.base_zi_nums;
},
showSurplusCards: function(e) {
for (var t = 0; t < e.length; t++) {
var i = cc.vv.zipai_drawCard.drawCard(e[t], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
i.parent = this._surplusCardsNode;
i.setScale(.6);
i.setPosition((t + .5) * this._handCardSpriteSize.width * .6, 0);
}
},
showItemsInfo: function(e, t) {
for (var i = 0; i < e.length; i++) if (t == e[i].user_id) {
for (var n = 0; n < e[i].items.length; n++) {
var a = n, s = e[i].items[n][0], c = e[i].items[n][1], r = cc.vv.PHZ_Utils.getItemCards(s, c), o = cc.vv.PHZ_Utils.getHuCount(s, r), h = this.getItemType(s);
this.huCountList[n].getComponent(cc.Label).string = o;
this.itemLableList[a].getComponent(cc.Label).string = h;
this.showItemCards(r, a, cc.vv.zipai_drawCard.enumTalbe.cardSort.ITEM, s);
this.totalHuCount += o;
}
this.hu_index = i;
break;
}
},
showHuDetails: function(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i][0], a = t[i][1], s = e[this.hu_index].items.length + i;
this.showItemCards(a, s, cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS, n);
var c = cc.vv.PHZ_Utils.getHuCount(n, a), r = this.getItemType(n);
this.huCountList[s].getComponent(cc.Label).string = c;
this.itemLableList[s].getComponent(cc.Label).string = r;
this.totalHuCount += c;
}
this.huCountList[7].getComponent(cc.Label).string = this.totalHuCount;
this.lb_total.string = this.totalHuCount;
},
showItemCards: function(e, t, i, n) {
for (var a in e) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == a && (s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
s.parent = this._gameOverRoot;
s.tag = this.itemCardTag;
s.setScale(.5);
var c = this.huCountList[t].getPosition();
s.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
if (i == cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS && !this.icon_huCardSign.active && e[a] == this.hu_card) {
this.icon_huCardSign.active = !0;
this.icon_huCardSign.setScale(.8);
this.icon_huCardSign.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
!0;
}
}
},
getItemType: function(e) {
var t = "";
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
t = "吃";
break;

case cc.vv.globalSetting.ITEM_PENG:
t = "碰";
break;

case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
t = "偎";
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
t = "提";
break;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
t = "跑";
break;

case cc.vv.globalSetting.ITEM_KAN:
t = "坎";
break;

case cc.vv.globalSetting.ITEM_DUIZI:
t = "对";
break;

case cc.vv.globalSetting.ITEM_SHUNZI:
t = "句";
}
return t;
},
showPlayer: function(e, t, i) {
this.sortByScore(e);
for (var n = 0; n < e.length; n++) {
var a = null, s = null, c = null;
if (0 < e[n].end_score) {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_win");
s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("win");
t == i && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_zimo"));
} else {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_lose");
e[n].end_score < 0 && (s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("lose"));
e[n].user_id == i && this.pick_hu <= 0 && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("fangpao"));
e[n].user_id == i && 0 < this.pick_hu && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_dianpao"));
}
var r = this.getUserNameByID(e[n].user_id);
this.userList[n].frame.spriteFrame = a;
this.userList[n].icon_winOrLose.spriteFrame = s;
this.userList[n].icon_winOrLoseTyp.spriteFrame = c;
this.userList[n].lb_score.string = e[n].end_score;
if (cc.vv.userMgr.isHighDefend) {
this.userList[n].lb_name.string = "已屏蔽";
this.userList[n].lb_id.string = "已屏蔽";
} else {
this.userList[n].lb_name.string = r;
this.userList[n].lb_id.string = e[n].user_id;
}
this.userList[n].image_atavar.setUserID(e[n].user_id);
}
},
sortByScore: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t].end_score < e[i].end_score) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
showFanGroups: function(e) {
this.resetfanLabels();
var t = 0;
for (var i in e) {
var n = Number(i);
this.showSingleFanGroup(t, n, e[i]);
t++;
}
},
resetfanLabels: function() {
for (var e = 0; e < this.Lb_fanTypeList.length; e++) this.Lb_fanTypeList[e].string = "";
},
showSingleFanGroup: function(e, t, i) {
var n = "";
switch (t) {
case cc.vv.globalSetting.FAN_TYPE_TIAN_HU:
n = "天胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DI_HU:
n = "地胡";
break;

case cc.vv.globalSetting.FAN_TYPE_PENG_PENG_HU:
n = "碰碰胡";
break;

case cc.vv.globalSetting.FAN_TYPE_SHIBA_DA:
n = "十八大";
break;

case cc.vv.globalSetting.FAN_TYPE_SHIBA_XIAO:
n = "十八小";
break;

case cc.vv.globalSetting.FAN_TYPE_HEI_HU:
n = "黑胡";
break;

case cc.vv.globalSetting.FAN_TYPE_SHI_HONG:
n = "十红";
break;

case cc.vv.globalSetting.FAN_TYPE_YI_DIAN_HONG:
n = "一点红";
break;

case cc.vv.globalSetting.FAN_TYPE_SHUANG_PIAO:
n = "双飘";
break;

case cc.vv.globalSetting.FAN_TYPE_TWO_BI:
n = "二比";
break;

case cc.vv.globalSetting.FAN_TYPE_THREE_BI:
n = "三比";
break;

case cc.vv.globalSetting.FAN_TYPE_FOUR_BI:
n = "四比";
}
this.Lb_fanTypeList[e].string = 0 < i ? n + "x" + i + "番" : n;
},
getUserNameByID: function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) if (e == t[i].userid) return t[i].name;
},
clear: function() {
this.clearHuCount();
this.clearItemLabels();
this.clearItemCards();
this.clearSurplusCards();
},
clearHuCount: function() {
for (var e in this.huCountList) this.huCountList[e].getComponent(cc.Label).string = "";
},
clearItemLabels: function() {
for (var e in this.itemLableList) this.itemLableList[e].getComponent(cc.Label).string = "";
},
clearItemCards: function() {
for (;this._gameOverRoot.getChildByTag(this.itemCardTag); ) this._gameOverRoot.removeChildByTag(this.itemCardTag);
},
clearSurplusCards: function() {
this._surplusCardsNode.removeAllChildren();
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.gameRoot.emit("show_gameResult"); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.active = !1;
this.gameRoot.emit("fresh_all_score");
},
onDestroy: function() {
this.gameRoot.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
PHZ_GlobalSetting: [ function(e, i, n) {
(function(t) {
"use strict";
cc._RF.push(i, "255c3IdxFtMSpAyZk+FZ/sm", "PHZ_GlobalSetting");
var a = {
DISMISS_TIME: 12e4,
GAME_TYPE_CLASSIC: 1,
MASK_PC10: 1,
MASK_PC20: 2,
MASK_FIVE_FAN: 3,
MASK_NO_LIMIT_FAN: 4,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
ITEM_LEFT_CHI: 1,
ITEM_CENTER_CHI: 2,
ITEM_RIGHT_CHI: 3,
ITEM_SMALL_ERQISHI_CHI: 4,
ITEM_BIG_ERQISHI_CHI: 5,
ITEM_TWO_BIG_SMALL_CHI: 6,
ITEM_TWO_SMALL_BIG_CHI: 7,
ITEM_PENG: 8,
ITEM_SAO: 9,
ITEM_GUO_SAO: 10,
ITEM_SAO_CHUAN: 11,
ITEM_KAI_DUO: 12,
ITEM_PENG_KAI_DUO: 13,
ITEM_SAO_KAI_DUO: 14,
ITEM_SAO_SAO_CHUAN: 15,
ITEM_SELF_SAO_CHUAN: 16,
ITEM_KAN: 17,
ITEM_DUIZI: 18,
ITEM_SHUNZI: 19,
OPERATE_PASS: 1,
OPERATE_LEFT_CHI: 2,
OPERATE_CENTER_CHI: 3,
OPERATE_RIGHT_CHI: 4,
OPERATE_SMALL_ERQISHI_CHI: 5,
OPERATE_BIG_ERQISHI_CHI: 6,
OPERATE_TWO_BIG_SMALL_CHI: 7,
OPERATE_TWO_SMALL_BIG_CHI: 8,
OPERATE_PENG: 9,
OPERATE_SAO: 10,
OPERATE_GUO_SAO: 11,
OPERATE_SAO_CHUAN: 12,
OPERATE_KAI_DUO: 13,
OPERATE_PENG_KAI_DUO: 14,
OPERATE_SAO_KAI_DUO: 15,
OPERATE_SAO_SAO_CHUAN: 16,
OPERATE_HU: 17,
OPERATE_PENG_KAI_DUO_HU: 18,
OPERATE_SAO_KAI_DUO_HU: 19,
OPERATE_SAO_SAO_CHUAN_HU: 20,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_LEFT_CHI: 3,
ACTION_CENTER_CHI: 4,
ACTION_RIGHT_CHI: 5,
ACTION_SMALL_ERQISHI_CHI: 6,
ACTION_BIG_ERQISHI_CHI: 7,
ACTION_TWO_BIG_SMALL_CHI: 8,
ACTION_TWO_SMALL_BIG_CHI: 9,
ACTION_PENG: 10,
ACTION_SAO: 11,
ACTION_GUO_SAO: 12,
ACTION_SAO_CHUAN: 13,
ACTION_KAI_DUO: 14,
ACTION_PENG_KAI_DUO: 15,
ACTION_SAO_KAI_DUO: 16,
ACTION_SAO_SAOCHUAN: 17,
ACTION_SELF_SAO_CHUAN: 18,
ACTION_HU: 19,
ACTION_LEFT_CHI_XIABI: 20,
ACTION_CENTER_CHI_XIABI: 21,
ACTION_RIGHT_CHI_XIABI: 22,
ACTION_SMALL_ERQISHI_CHI_XIABI: 23,
ACTION_BIG_ERQISHI_CHI_XIABI: 24,
ACTION_TWO_BIG_SMALL_CHI_XIABI: 25,
ACTION_TWO_SMALL_BIG_CHI_XIABI: 26,
FAN_TYPE_TIAN_HU: 1,
FAN_TYPE_DI_HU: 2,
FAN_TYPE_PENG_PENG_HU: 3,
FAN_TYPE_SHIBA_DA: 4,
FAN_TYPE_SHIBA_XIAO: 5,
FAN_TYPE_HEI_HU: 6,
FAN_TYPE_SHI_HONG: 7,
FAN_TYPE_YI_DIAN_HONG: 8,
FAN_TYPE_SHUANG_PIAO: 9,
FAN_TYPE_TWO_BI: 10,
FAN_TYPE_THREE_BI: 11,
FAN_TYPE_FOUR_BI: 12,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
MIN_HUXI_NUMS: 15,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
has_rule: function(e, t) {
return 0 != (e & 1 << t);
},
type_check: function(e) {
var t = 0;
a.has_rule(e, a.GAME_TYPE_CLASSIC) && (t += 1);
return 1 == t;
},
rule_check: function(e) {
var t = 0;
a.has_rule(e, a.MASK_PC10) && (t += 1);
a.has_rule(e, a.MASK_PC20) && (t += 1);
if (1 != t) return !1;
var i = 0;
a.has_rule(e, a.MASK_INGOT_GAME) && (i += 1);
a.has_rule(e, a.MASK_GOLD_GAME) && (i += 1);
if (1 != i) return !1;
var n = 0;
a.has_rule(e, a.MASK_FIVE_FAN) && (n += 1);
a.has_rule(e, a.MASK_NO_LIMIT_FAN) && (n += 1);
return 1 == n;
},
get_ingot_value: function(e) {
if ("zy" == t.env.NODE_ENV || "zy2" == t.env.NODE_ENV) {
if (a.has_rule(e, a.MASK_INGOT_GAME)) {
if (a.has_rule(e, a.MASK_PC10)) return 2;
if (a.has_rule(e, a.MASK_PC20)) return 3;
}
if (a.has_rule(e, a.MASK_GOLD_GAME)) {
if (a.has_rule(e, a.MASK_PC10)) return 3;
if (a.has_rule(e, a.MASK_PC20)) return 4;
}
} else {
if (a.has_rule(e, a.MASK_INGOT_GAME)) {
if (a.has_rule(e, a.MASK_PC10)) return 1;
if (a.has_rule(e, a.MASK_PC20)) return 2;
}
if (a.has_rule(e, a.MASK_GOLD_GAME)) {
if (a.has_rule(e, a.MASK_PC10)) return 1;
if (a.has_rule(e, a.MASK_PC20)) return 2;
}
}
}
};
n.global = a;
cc._RF.pop();
}).call(this, e("_process"));
}, {
_process: 118
} ],
PHZ_Msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4dfdaswUrlB65Ypu2AAy+nG", "PHZ_Msgdefine");
var n = {};
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
tian_hu: 0,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
button: 0,
xing_cards: [],
xing_counts: []
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_action_mask = JSON.stringify({
action_mask: 0,
xiabi_actions: {},
card: 0
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.CS_card_type_action = JSON.stringify({
action: 0,
xiabi_action: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
PHZ_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5ce1d1Dsk1Lfb9zbCOxbpyI", "PHZ_Replay");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_iconsNodes: [],
_itemNodes: [],
_foldsNodes: [],
_holdsNodes: [],
_playerPos: []
},
onLoad: function() {
if (cc.vv) {
this.replayGameNode = cc.find("Canvas/replayGame");
this.gameNode = cc.find("Canvas/game");
this.peaceNode = this.replayGameNode.getChildByName("peaceNode");
this.replayGameNode.active = !0;
this.peaceNode.active = !1;
this.gameNode.active = !1;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.initData();
this.initView();
this.initHoldNodes();
this.initSeats();
this.initBigCardBack();
this.initEvent();
this.judgeShowPeace();
} else cc.director.loadScene("loading");
},
initData: function() {
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._beginThrowCardPos = [ {
x: 0,
y: -50
}, {
x: 100,
y: 100
}, {
x: -100,
y: 100
} ];
this.holdsList = [ [], [], [] ];
this.foldsList = [ [], [], [] ];
this.itemsList = [ [], [], [] ];
this.holdsSpriteList = [ [], [], [] ];
this.actionCount = 0;
this.outPool = [];
this.outCardTag = 10086;
},
initView: function() {
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat");
this._seats2.push(n);
var a = n.getChildByName("zhuang3"), s = i.getChildByName("icons"), c = i.getChildByName("items"), r = i.getChildByName("folds");
a.active = !1;
this._zhuangs.push(a);
this._iconsNodes.push(s);
this._itemNodes.push(c);
this._foldsNodes.push(r);
this._playerPos.push(i.getPosition());
}
this.cardNode = cc.find("Canvas/replayGame/cardNode");
},
initHoldNodes: function() {
for (var e = [ "selfHandCardNode", "rightHandCardNode", "leftHandCardNode" ], t = 0; t < e.length; t++) {
var i = this.replayGameNode.getChildByName(e[t]);
i && this._holdsNodes.push(i);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.holdsList[i] = e[t].holds.concat();
this.drawHolds(e[t].holds, i);
console.log("log----------------------seats[i].holds=:", e[t].holds);
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button, n = this._seats2[t].getComponent("Seat");
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.cardNode;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initEvent: function() {
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
drawHolds: function(e, t) {
var i = e.concat(), n = cc.vv.zipai_cardsSort.cardSort(i), a = 0 == t ? cc.vv.zipai_drawCard.enumTalbe.cardType.BIG : cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL;
this.holdsSpriteList[t] = [];
this._holdsNodes[t].removeAllChildren();
for (var s = 0; s < n.sort.length; s++) {
this.holdsSpriteList[t][s] = {
posx: s * this._outCardSpriteSize.width - 640,
cards: []
};
for (var c = 0; c < Math.ceil(n.sort[s].type); c++) {
2.5 == n.sort[s].type && 2 == c && (10 < n.sort[s].value ? n.sort[s].value -= 10 : n.sort[s].value += 10);
2.3 == n.sort[s].type && 0 < c && n.sort[s].value++;
(r = cc.vv.zipai_drawCard.drawCard(n.sort[s].value, a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(Math.ceil(n.sort[s].type) - c);
r.setLocalZOrder(Math.ceil(n.sort[s].type) - c);
this.holdsSpriteList[t][s].cards.push(r);
}
}
for (s = 0; s < n.single.length; s++) {
s % 3 == 0 && (this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)] = {
posx: (n.sort.length + Math.floor(s / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var r;
(r = cc.vv.zipai_drawCard.drawCard(n.single[s], a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(n.single.length - s);
r.setLocalZOrder(n.single.length - s);
this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)].cards.push(r);
}
this.replaceCards(t);
},
replaceCards: function(e) {
for (var t = 0; t < this.holdsSpriteList[e].length; t++) for (var i = 0; i < this.holdsSpriteList[e][t].cards.length; i++) {
this.holdsSpriteList[e][t].cards[i].setLocalZOrder(this.holdsSpriteList[e][t].cards.length - i);
this.holdsSpriteList[e][t].cards[i].getComponent("zipai_card").setOrder(Math.ceil(this.holdsSpriteList[e][t].cards.length - i));
if (0 == e) this.holdsSpriteList[e][t].cards[i].setPosition(t * this._outCardSpriteSize.width - 310 + (8 - this.holdsSpriteList[e].length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * i - .1 * this._outCardSpriteSize.height); else {
this.holdsSpriteList[e][t].cards[i].setScale(.75);
this.holdsSpriteList[e][t].cards[i].setPosition(t * this._handCardSpriteSize.width * .75 + (8 - this.holdsSpriteList[e].length) * this._handCardSpriteSize.width / 2 * .75, this._handCardSpriteSize.height * i * .75);
}
}
},
onDoReplayAction: function(e) {
var t = e.detail.action, i = (e.detail.next, t.d_actions), n = i[0], a = i[1], s = i[2], c = i[3], r = cc.vv.gameNetMgr.getLocalIndex(n), o = cc.vv.gameNetMgr.getLocalIndex(c);
this.showTurn(r);
if (a != cc.vv.globalSetting.ACTION_HU) this.deleteCard(); else if (n == c) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO, r);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", 1);
} else {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.HU, r);
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PAO, o);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", 1);
}
if (a == cc.vv.globalSetting.ACTION_PICK) {
if (0 < this.outPool.length) {
this.updateFoldsData(this.outPool[0]._card, this.outPool[0]._seat);
this.updateFolds(this.outPool[0]._seat);
this.outPool.pop();
}
if (0 == this.actionCount) this.showFirstPickCardAction(s, r); else {
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
}
} else if (a == cc.vv.globalSetting.ACTION_OUT) {
this.outPool.push({
_card: s,
_seat: r
});
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
(h = []).push(s);
this.updateHoldsData(h, r);
this.updateHolds(r);
} else {
this.outPool.pop();
if (a < cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI) {
var h = (d = cc.vv.PHZ_Utils.getItemCards(a - 2, s)).concat();
if (a != cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) for (var l = 0; l < h.length; l++) if (s == h[l]) {
h.splice(l, 1);
break;
}
} else {
var d;
h = (d = cc.vv.PHZ_Utils.getItemCards(a, s)).concat();
}
this.showIconByAction(a, r);
this.updateHoldsData(h, r);
this.updateItemsData(d, r, a);
this.updateHolds(r);
this.updateItems(r);
}
this.actionCount++;
},
onDoReplayActionOver: function() {},
updateHolds: function(e) {
this.drawHolds(this.holdsList[e], e);
},
updateItems: function(e) {
for (var t = 1 == e ? -1 : 1, i = 0; i < this.itemsList[e].length; i++) for (var n = 0; n < this.itemsList[e][i].cards.length; n++) {
var a = null;
if (0 < this.itemsList[e][i].cards[n]) {
a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
var s = this.itemsList[e][i].act_type;
s == cc.vv.globalSetting.ACTION_SAO && n < 2 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(s == cc.vv.globalSetting.ACTION_SAO_CHUAN || s == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN || s == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) && n < 3 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI && 2 == n) {
var c = !1;
a.getComponent("zipai_card").setBlack(c);
}
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI && 2 == n) {
c = !1;
a.getComponent("zipai_card").setBlack(c);
}
} else a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
a.setScale(.6);
a.parent = this._itemNodes[e];
a.setPosition(t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
}
},
updateFolds: function(e) {
for (var t = 2 == e ? 1 : -1, i = 0; i < this.foldsList[e].length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(this.foldsList[e][i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.setScale(.6);
n.parent = this._foldsNodes[e];
n.setPosition(.6 * this._handCardSpriteSize.width * i * t + t * this._handCardSpriteSize.width * .6 / 2, 0);
}
},
updateHoldsData: function(e, t) {
if (0 == t) {
console.log("**************************************:");
console.log("updateHoldsData--------\x3esubCards=:", e);
}
for (var i = 0; i < e.length; i++) for (var n = 0; n < this.holdsList[t].length; n++) if (e[i] == this.holdsList[t][n]) {
this.holdsList[t].splice(n, 1);
break;
}
0 == t && console.log("updateHoldsData--------\x3ethis.holdsList[seat]=:", this.holdsList[t]);
},
updateItemsData: function(e, t, i) {
var n = this.itemsList[t].length;
this.itemsList[t][n] = {
cards: [],
act_type: i
};
for (var a = 0; a < this.itemsList[t].length; a++) for (var s = 0; s < this.itemsList[t][a].cards.length; s++) if (this.itemsList[t][a].cards[0] == e[0] && this.itemsList[t][a].cards[1] == e[1] && this.itemsList[t][a].cards[2] == e[2] && e[0] == e[1] && e[0] == e[2]) {
this.itemsList[t][a].cards.push(e[0]);
this.itemsList[t].pop();
return;
}
for (a = 0; a < e.length; a++) this.itemsList[t][n].cards.push(e[a]);
},
updateFoldsData: function(e, t) {
this.foldsList[t].push(e);
},
showCard: function(e, t, i) {
(e = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.cardNode;
e.tag = this.outCardTag;
e.setPosition(0, 50);
var n = this;
if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD) {
e.setPosition(this._beginThrowCardPos[t].x, this._beginThrowCardPos[t].y);
e.runAction(cc.moveTo(.1, cc.p(0, 50)));
} else if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD) {
e.active = !1;
e.setPosition(0, 50);
e.setScale(.2, 1);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.1, .2, 1), cc.callFunc(function() {
e.active = !0;
e.runAction(cc.scaleTo(.1, 1, 1));
}), cc.callFunc(function() {
n.bigCardBack.active = !1;
})));
}
},
showFirstPickCardAction: function(e, t) {
var i = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
i.parent = this.cardNode;
i.tag = this.outCardTag;
i.setPosition(0, 50);
var n = 0 < t ? this._playerPos[t] : {
x: 0,
y: -300
}, a = this;
i.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.1, cc.p(n.x, n.y)), cc.callFunc(function() {
i.destroy();
a.holdsList[t].push(e);
a.updateHolds(t);
})));
},
deleteCard: function() {
for (;this.cardNode.getChildByTag(this.outCardTag); ) this.cardNode.removeChildByTag(this.outCardTag);
},
showTurn: function(e) {
for (var t = 0; t < this._seats2.length; t++) this._seats2[t].getComponent("Seat").hideIconTurn();
this._seats2[e].getComponent("Seat").showIconTurn();
},
judgeShowPeace: function() {
var e = this;
if (cc.vv.gameNetMgr.getIsPeaceGame()) {
var t = cc.vv.gameNetMgr.getActionCount();
this.node.runAction(cc.sequence(cc.delayTime(t + 1), cc.callFunc(function() {
e.peaceNode.active = !0;
})));
}
},
showIconByAction: function(e, t) {
if (e >= cc.vv.globalSetting.ACTION_LEFT_CHI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI || e >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", 1);
} else if (e == cc.vv.globalSetting.ACTION_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO || e == cc.vv.globalSetting.ACTION_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("xiu", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO_CHUAN || e == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e >= cc.vv.globalSetting.ACTION_KAI_DUO && e <= cc.vv.globalSetting.ACTION_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", 1);
}
},
showIcon: function(e, t) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("xiu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
});
cc._RF.pop();
}, {} ],
PHZ_Room: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "243698wUl1J6Z7grg/py8Bs", "PHZ_Room");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_playerPos: [],
_itemsNodes: [],
_foldsNodes: [],
_iconsNodes: [],
_maxPlayerCount: null,
game_over: null,
is_auto: !1
},
onLoad: function() {
var t = this;
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
this.initData();
this.initRes();
this.initView();
this.initComponent();
this.initSplitLine();
this.initOperationBtns();
this.initEatNode();
this.initHuNode();
this.initEventHandlers();
this.resetGame();
this.initBigCardBack();
this.initHoldsEventHandler();
this.initEatNodeEventHandler();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/GameBaseUI", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("BaseRoom")._seats2 = i._seats2;
e.getComponent("BaseRoom").initBaseRoom();
});
});
} else this.addComponent("PHZ_Replay"); else cc.director.loadScene("loading");
},
initRes: function() {
this.gameNode = cc.find("Canvas/game");
this.outCardPools = this.gameNode.getChildByName("outCardPools");
this.lb_surplusCardNums = this.gameNode.getChildByName("lb_surplusCardNums");
this.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.gameOverHandNode = this.node.getChildByName("gameOverHandNode");
this.selfHandCardNode = this.gameNode.getChildByName("selfHandCardNode");
this.xingNode = this.node.getChildByName("xingNode");
this.surplusCardNode = this.node.getChildByName("surplusCardNode");
},
initData: function() {
this._maxPlayerCount = 3;
this._playerItems = [ [], [], [] ];
this._PlayerItemCount = [ 0, 0, 0 ];
this._outCardCoordinate = {
x: null,
y: null
};
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.isReconnectGame = !1;
this.iconItemTag = 1111;
this.recentOutCardValue = null;
this.pickCardCount = null;
this.shangbi_way = null;
this.xiabi_way = null;
this._handcardsInfoList = [];
this.end_seats_data = null;
this.xingCard = [];
this.isTianHu = !1;
this.has_action = !1;
this.actionCount = 0;
this.hucode = 0;
this.pick_seat = -1;
this.pick_data = -1;
this.out_seat = -1;
this.out_data = -1;
this.updateHoldCount = 0;
this.tuoGuanNode = null;
},
initComponent: function() {
cc.loader.loadRes("game/zipaiGames/phz/prefabs/game_over", cc.Prefab, function(e, t) {
if (!e) {
this.game_over = cc.instantiate(t);
this.node.addChild(this.game_over, 10);
this.initSeats();
}
}.bind(this));
cc.loader.loadRes("game/zipaiGames/prefab/game_result", cc.Prefab, function(e, t) {
e || this.node.addChild(cc.instantiate(t), 10);
}.bind(this));
},
initSplitLine: function() {
this.splitLine = this.gameNode.getChildByName("splitLine");
this.splitWord = this.gameNode.getChildByName("splitWord");
this.handTip = this.gameNode.getChildByName("hand");
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.outCardPools;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initOperationBtns: function() {
this.operationBtnsNode = this.gameNode.getChildByName("operationBtnNode");
this.btn_eat = this.operationBtnsNode.getChildByName("btn_chi");
this.btn_peng = this.operationBtnsNode.getChildByName("btn_peng");
this.btn_win = this.operationBtnsNode.getChildByName("btn_win");
this.btn_pass = this.operationBtnsNode.getChildByName("btn_pass");
this.btn_liu = this.operationBtnsNode.getChildByName("btn_liu");
this.icon_win = this.operationBtnsNode.getChildByName("icon_win");
this.icon_peng = this.operationBtnsNode.getChildByName("icon_peng");
this.icon_chi = this.operationBtnsNode.getChildByName("icon_chi");
this.icon_pass = this.operationBtnsNode.getChildByName("icon_pass");
this.icon_liu = this.operationBtnsNode.getChildByName("icon_liu");
this.btn_liu.active = !1;
this.icon_liu.active = !1;
this.initOperationBtnsListener();
},
initOperationBtnsListener: function() {
var t = this;
this.btn_eat.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnEat();
});
this.btn_peng.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPeng();
});
this.btn_win.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnWin();
});
this.btn_pass.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPass();
});
},
initEatNode: function() {
this.eatNode = this.node.getChildByName("eatNode");
this.btnCloseEatNode = this.eatNode.getChildByName("btn_close");
this.btnCloseEatNodeIndex = 15e3;
},
initHuNode: function() {
var e = [ "selfHuNode", "rightHuNode", "leftHuNode" ];
this.huNodeList = [];
for (var t = 0; t < e.length; t++) {
var i = this.gameNode.getChildByName(e[t]), n = i.getChildByName("lb_huCount").getComponent(cc.Label);
i.active = !1;
n.string = 0;
this.huNodeList[t] = {
node: i,
lb: n
};
}
},
initView: function() {
this.animworldmap = this.node.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat"), a = i.getChildByName("folds"), s = i.getChildByName("items"), c = i.getChildByName("icons");
n.getChildByName("zhuang3").active = !1;
this._foldsNodes.push(a);
this._itemsNodes.push(s);
this._iconsNodes.push(c);
this._seats2.push(n.getComponent("Seat"));
this._playerPos.push(i.getPosition());
}
},
initHoldsEventHandler: function() {
new (e("holdsEventHandler"))().init(this, "wp_out");
},
initEatNodeEventHandler: function() {
new (e("eatNodeEventHandler"))().init(this);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("new_user", function(e) {
o.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
o.initSingleSeat(e.detail);
cc.vv.gameNetMgr.getLocalIndex(e.detail.seatindex);
});
this.node.on("wp_button_push", function(e) {
o.onGameStart();
o.initBigCardBack();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
o._seats2[t].setZhuang(!0);
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getSeatIndexByID(cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id), c = cc.vv.gameNetMgr.getLocalIndex(s);
o._seats2[c].setScore(n, a);
for (var r = 0; r < t.length; r++) cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id == cc.vv.gameNetMgr.seats[r].userid && (cc.vv.gameNetMgr.seats[r].score = n);
}
});
this.node.on("wp_state_push", function(e) {
o.canleReady();
});
this.node.on("kick_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("transfer_push", function(e) {});
this.node.on("seq_move_seat_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("wp_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.OnMsgUpdateSeatHolds(t, t.holds);
});
this.node.on("wp_folds_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id);
o.OnMsgShowFlods(t, e.detail.folds);
o.eatNode.active = !1;
});
this.node.on("wp_out_push_err", function(e) {
o._handcardsInfoList[o._outCardCoordinate.x].cards[o._outCardCoordinate.y].setPosition(o.clickCardPos.x, o.clickCardPos.y);
});
this.node.on("wp_out_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.out_user), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.out_user);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(e.detail.out_card, n.sex);
o.OnMsgShowOutCard(e.detail.out_card, i);
o.out_seat = i;
o.out_data = e.detail.out_card;
});
this.node.on("wp_turn_push", function(e) {
var t = cc.vv.gameNetMgr.turn;
o.OnMsgNoteOperater(t);
});
this.node.on("wp_surplus_push", function(e) {
var t = cc.vv.gameNetMgr.numOfMJ;
o.OnMsgUpdateSurplus(t);
});
this.node.on("wp_action_mask_push", function(e) {
var t = e.detail.action_mask;
o.has_action = 0 < t;
if (0 == o.actionCount && !o.isReconnecting) {
var i = t & 1 << cc.vv.globalSetting.OPERATE_HU;
o.isTianHu = 0 != i;
}
o.hideSplitLine();
o.OnMsgShowOperationTypes(e.detail.action_mask, e.detail.xiabi_actions);
o.has_action && o.hideSplitLine();
o.isTianHu && o.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
o.operationBtnsNode.active = !0;
o.isTianHu = !1;
})));
o.actionCount++;
});
this.node.on("wp_cancel_action_push", function(e) {});
this.node.on("wp_pick_card_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.user_id);
o.hideSplitLine();
o.OnMsgShowPickCard(i, e.detail.card, n.sex);
o.pick_seat = i;
o.pick_data = e.detail.card;
});
this.node.on("wp_item_push", function(e) {
var t = e.detail.user_id, i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = e.detail.add_items;
o.OnMsgShowItems(i, t, n);
cc.vv.gameNetMgr.getLocalIndex(i);
o.eatNode.active = !1;
o.operationBtnsNode.active = !1;
o.pick_seat = -1;
o.pick_data = -1;
o.out_seat = -1;
o.out_data = -1;
o.has_action = !1;
});
this.node.on("wp_hu_push", function(e) {
o.isSpcialHu = !1;
o.isSpcialHu = e.detail.special_hu;
cc.vv.gameNetMgr.setIsSpcialHu(o.isSpcialHu);
var t = o.isSpcialHu ? 1 : 0, i = e.detail;
o.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
o.OnMsgShowHu(i);
})));
});
this.node.on("wp_over", function(e) {
var t = o.isSpcialHu ? 1 : 0;
o.CloseTimer();
o.clearAutoState();
o.hideSplitLine();
o.OnMsgShowSingleGameOver(e);
o.scheduleOnce(function() {
o.initHuNode();
o.clearHolds();
o.clearFolds();
o.clearItemsCards();
o.clearOutCard();
o.clearSurplusCards();
o.clearGameOverHandCards();
o.initData();
o.outCardPools.removeAllChildren();
o.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.operationBtnsNode.active = !1;
}, 3 + t);
});
this.node.on("time_sync", function(e) {
o.on_time_sync(e.detail);
});
this.node.on("auto_push", function(e) {
o.on_auto_push(e.detail);
});
this.node.on("cancel_auto", function(e) {
o.on_cancel_auto(e.detail);
});
},
onGameStart: function() {
this.isGaming = !0;
this.pickCardCount = 0;
this.showHuNode();
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
console.log("log-------initSingleSeat------seat=:", e);
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
e.is_auto && this._seats2[t].setTuoGuan(e.is_auto);
} else 1 == cc.vv.gameNetMgr.getIsWatch() && (this.BtnReady.node.active = !1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
},
resetGame: function() {
var t = this, e = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.getLocalIndex(e);
this.isReconnecting = !1;
if (!(e < 0)) {
this.updateHoldCount++;
this.initHuNode();
this.isReconnecting = !0;
this.OnMsgNoteOperater(e);
this.OnMsgUpdateSurplus(cc.vv.gameNetMgr.numOfMJ);
this.canleReady();
for (var n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; a++) {
this.OnMsgUpdateSeatHolds(n[a], n[a].holds);
this.OnMsgShowFlods(n[a].seatindex, n[a].folds);
this.OnMsgShowItems(n[a].seatindex, n[a].userid, n[a].items);
}
for (a = 0; a < n.length; a++) {
if (0 == cc.vv.gameNetMgr.getLocalIndex(n[a].seatindex)) {
this.xiabi_actions = {};
this.xiabi_actions = n[a].xiabi_actions;
if (n[a].select_action <= 0) {
this.OnMsgShowOperationTypes(n[a].action_mask, n[a].xiabi_actions);
this.has_action = 0 < n[a].action_mask;
}
n[a].is_auto && 1 == n[a].is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/zipai_tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
t.tuoGuanNode = e;
});
});
}
}
this.hideSplitLine();
this.drawOutByLocalTurn(i);
2 == cc.vv.gameNetMgr.gamestate && this.showHuNode();
this.isReconnecting = !1;
this.isReconnectGame = !0;
}
},
drawOutByLocalTurn: function(e) {
this.pick_seat = cc.vv.gameNetMgr.syncData.pick_seat;
this.pick_data = cc.vv.gameNetMgr.syncData.pick_data;
this.out_seat = cc.vv.gameNetMgr.syncData.out_seat;
this.out_data = cc.vv.gameNetMgr.syncData.out_data;
this.recentOutCardValue = -1;
0 < this.pick_data && (this.recentOutCardValue = this.pick_data);
0 < this.out_data && (this.recentOutCardValue = this.out_data);
this.clearOutCard();
if (0 < this.recentOutCardValue) {
var t = this.createOutCard(this.recentOutCardValue), i = this.getOutCardPos(e);
t.setPosition(i);
}
this.hideSplitLine();
0 == e && this.recentOutCardValue <= 0 && !this.has_action && this.showSplitLine();
},
OnMsgUpdateSeatHolds: function(e, t) {
if (!(0 < cc.vv.gameNetMgr.getLocalIndex(e.seatindex))) {
var i = [];
i = t.concat();
if (0 < this.updateHoldCount && !this.clickCardPos) this.drawHolds(t); else if (0 == this.isReconnecting && 0 < this._handcardsInfoList.length) this.deleteOutCards(t); else {
this.drawHolds(t);
this.dealAction();
}
this.holdstemp = [];
this.holdstemp = i.concat();
this.updateHoldCount++;
}
},
OnMsgUpdateSurplus: function(e) {
this.lb_surplusCardNums.getComponent(cc.Label).string = "牌x" + e;
},
OnMsgNoteOperater: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.CloseTimer();
this.ShowTimer(t, 15);
this.hideSplitLine();
0 == t && -1 == this.pick_seat && -1 == this.out_seat && this.showSplitLine();
if (0 == t && 21 == this.getSelfFoldCount() && 0 == this.actionCount) {
this.hideSplitLine();
this.node.runAction(cc.sequence(cc.delayTime(2.4), cc.callFunc(function() {
this.isTianHu || 0 != this.actionCount || this.showSplitLine();
}.bind(this))));
}
},
OnMsgShowOutCard: function(e, t) {
this.recentOutCardValue = e;
this.clearOutCard();
this.hideSplitLine();
var i = this.getOutCardPos(t);
this.clickCardPos || (this.clickCardPos = {
x: 0,
y: -200
});
if (0 == t) {
(n = this.createOutCard(e)).setPosition(this.clickCardPos.x, this.clickCardPos.y);
n.runAction(cc.moveTo(.15, i));
} else {
var n;
(n = this.createOutCard(e)).setPosition(this._playerPos[t].x, this._playerPos[t].y);
n.setScale(.4);
n.runAction(cc.spawn(cc.scaleTo(.15, 1), cc.moveTo(.15, i)));
}
this.CloseTimer();
this.clickCardPos = null;
},
OnMsgShowOperationTypes: function(e, t) {
this.xiabi_actions = {};
this.xiabi_actions = t;
this.decodeOperationValue(e);
(this._canEat || this._canPeng || this._canWin) && this.scheduleOnce(function() {
this.showOperationBtns();
}, .5);
},
OnMsgUpdateGameCount: function() {
this.lbGameCount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
},
OnMsgShowItems: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = !this.isReconnecting;
this.operationBtnsNode.active = !1;
this.clearOutCard();
for (var s = 0; s < i.length; s++) {
this.showIconByItem(i[s][0], n, t, this.isReconnecting);
this.savePlayersItem(n, i[s]);
this.showItemCards(n, i[s], a);
this.updateHuCount(n);
}
},
OnMsgShowPickCard: function(e, t, i) {
this.recentOutCardValue = t;
this.showPickCard(t, e);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(t, i);
},
OnMsgShowFlods: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = 2 == i ? 1 : -1;
if (0 == this.isReconnecting) {
var a = t.length - 1;
this.clearOutCard();
var s = this.createOutCard(t[a]);
s.active = !0;
s.parent = this._foldsNodes[i];
var c = this._foldsNodes[i].convertToNodeSpace(cc.v2(640, 370));
s.setPosition(c.x, c.y);
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.p(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0)), cc.scaleTo(.2, .55 * this._handCardSpriteSize.width / this._outCardSpriteSize.width, .55 * this._handCardSpriteSize.height / this._outCardSpriteSize.height)), cc.callFunc(function() {
s.destroy();
var e = cc.vv.zipai_drawCard.drawCard(t[a], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
e.parent = this._foldsNodes[i];
e.setScale(.55);
e.setPosition(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}.bind(this))));
} else for (var r in t) {
var o = cc.vv.zipai_drawCard.drawCard(t[r], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
o.parent = this._foldsNodes[i];
o.setScale(.55);
o.setPosition(.55 * this._handCardSpriteSize.width * r * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}
},
OnMsgShowHu: function(e) {
this.CloseTimer();
this.hideSplitLine();
this.eatNode.active = !1;
this.operationBtnsNode.active = !1;
var t = cc.vv.gameNetMgr.getSeatByID(e.hu_user_id), i = cc.vv.gameNetMgr.getSeatIndexByID(e.hu_user_id), n = cc.vv.gameNetMgr.getSeatIndexByID(e.pao_user_id), a = cc.vv.gameNetMgr.getLocalIndex(i), s = cc.vv.gameNetMgr.getLocalIndex(n);
if (a == s) {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.ZIMO, a);
} else {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.PAO, s);
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.HU, a);
}.bind(this))));
}
},
OnMsgShowSingleGameOver: function(e) {
var t = e.detail.end_seats_data;
e.detail.hu_user_id, e.detail.pokers.concat();
this.end_seats_data = e.detail.end_seats_data;
for (var i in t) {
var n = cc.vv.gameNetMgr.getSeatIndexByID(t[i].user_id), a = cc.vv.gameNetMgr.getLocalIndex(n);
0 < a && this.showGameOverHandCards(t[i].holds, a);
}
this.clearOutCard();
},
getOutCardPos: function(e) {
switch (e) {
case 0:
return cc.p(0, 70);

case 1:
return cc.p(350, 150);

case 2:
return cc.p(-350, 150);
}
},
savePlayersItem: function(e, t) {
this.doSpecialItem(t, e);
},
doSpecialItem: function(e, t) {
var i = e[0], n = e[1];
e[2];
this.specialItemIndex = -1;
if (i == cc.vv.globalSetting.ITEM_PENG_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var a = 0; a < this._playerItems[t].length; a++) {
if (n == this._playerItems[t][a][1]) {
this._playerItems[t][a] = e;
this.specialItemIndex = a;
return;
}
} else this._playerItems[t].push(e);
},
doChongZhao: function(e, t) {
if (!t) {
this.judgeIsChongZhao(e) && this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.CHONGZHAO, e);
}
},
showIconByItem: function(e, t, i, n) {
if (!n) {
var a = cc.vv.gameNetMgr.getSeatByID(i).sex;
if (e >= cc.vv.globalSetting.ITEM_LEFT_CHI && e <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", a);
} else if (e == cc.vv.globalSetting.ITEM_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO || e == cc.vv.globalSetting.ITEM_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("xiu", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO_CHUAN || e == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e >= cc.vv.globalSetting.ITEM_KAI_DUO && e <= cc.vv.globalSetting.ITEM_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", a);
}
}
},
showSplitLine: function() {
this.splitLine.active = !0;
this.splitWord.active = !0;
this.handTip.active = !0;
this.handTip.setPosition(370, -220);
this.handTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.p(60, 70)), cc.moveBy(0, cc.p(-60, -70)))));
},
hideSplitLine: function() {
this.splitLine.active = !1;
this.splitWord.active = !1;
this.handTip.active = !1;
this.handTip.stopAllActions();
},
decodeOperationValue: function(e) {
this.operationsList = [];
this.shangbi_List = [];
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.shangbi_List = this.decodeEatAcition(e);
0 < this.shangbi_List.length && (this._canEat = !0);
0 != (e & 1 << cc.vv.globalSetting.OPERATE_PASS) && (this._canPass = !0);
if (0 != (e & 1 << cc.vv.globalSetting.OPERATE_PENG)) {
this.operationsList.push(cc.vv.globalSetting.OPERATE_PENG);
this._canPeng = !0;
}
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_GUO_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_CHUAN);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN_HU);
2 == e && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
}, 2);
},
judgeAutoOperation: function(e, t) {
0 != (e & 1 << t) && this.scheduleOnce(function() {
this.sendMsgOperation(t);
}, 2);
},
judgeHuCode: function(e, t) {
if (0 != (e & 1 << t)) {
this.hucode = t;
this._canWin = !0;
}
},
decodeEatAcition: function(e) {
var t = [];
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_LEFT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_CENTER_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_RIGHT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI);
return t;
},
judgeExistEatAction: function(e, t, i) {
0 != (t & 1 << i) && e.push(i);
},
showOperationBtns: function() {
this.operationBtnsNode.active = !0;
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this._canEat && (this.btn_eat.active = !0);
this._canPeng && (this.btn_peng.active = !0);
this._canPass && (this.btn_pass.active = !0);
this._canWin && (this.btn_win.active = !0);
this.isTianHu && (this.operationBtnsNode.active = !1);
},
showIcon: function(e, t) {
if (1 != this.isReconnecting) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("xiu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
e == cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN && (i.y += 130);
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
},
showItemCards: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = t[0], a = t[1], s = cc.vv.PHZ_Utils.getItemCards(n, a), c = this._itemsNodes[e].convertToNodeSpace(cc.v2(640, 410)), r = 1 == e ? -1 : 1, o = i ? .2 : 0;
this._PlayerItemCount[e] = 0 <= this.specialItemIndex ? this.specialItemIndex : this._PlayerItemCount[e];
for (var h = 0; h < s.length; h++) {
var l = null;
if (0 < s[h]) {
l = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_SAO && h < 2 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(n == cc.vv.globalSetting.ITEM_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) && h < 3 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (n >= cc.vv.globalSetting.ITEM_LEFT_CHI && n <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI && 2 == h) {
l.getComponent("zipai_card").setBlack(!1);
}
} else l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
l.setScale(.55);
l.parent = this._itemsNodes[e];
l.setPosition(c.x, c.y);
l.runAction(cc.moveTo(o, cc.p(r * this._PlayerItemCount[e] * this._handCardSpriteSize.width * .55 + r * this._handCardSpriteSize.width * .55 / 2, .55 * this._handCardSpriteSize.height * h)));
}
this.specialItemIndex < 0 ? this._PlayerItemCount[e]++ : this._PlayerItemCount[e] = this._playerItems[e].length;
},
judgeIsChongZhao: function(e) {
var t = this._playerItems[e].length;
if ((n = this._playerItems[e][t - 1][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) for (var i = 0; i < t - 1; i++) {
var n;
if ((n = this._playerItems[e][i][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) return !0;
}
return !1;
},
showGameOverHandCards: function(e, t) {
this.gameOverHandNode.active = !0;
var i = this.gameOverHandNode.getChildByName([ "right", "left" ][t - 1]);
i.active = !0;
i.removeAllChildren();
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = i;
a.setScale(.75);
a.setPosition(n % 7 * this._handCardSpriteSize.width * .75 - 126, .75 * this._handCardSpriteSize.height - .75 * this._handCardSpriteSize.height * Math.floor(n / 7));
}
},
deleteOutCards: function(e) {
var t = this.getNeedDeleteCards(e);
if (1 != t.length) {
for (var i in t) for (var n = !1, a = 0; a < this._handcardsInfoList.length; a++) {
for (var s = 0; s < this._handcardsInfoList[a].cards.length; s++) {
var c = this._handcardsInfoList[a].cards[s].getComponent("zipai_card").getValue();
if (t[i] == c) {
this.deleteOutCard(a, s);
n = !0;
break;
}
}
if (1 == n) break;
}
this.replaceCards();
} else {
this.deleteOutCard(this._outCardCoordinate.x, this._outCardCoordinate.y);
this.replaceCards();
}
},
deleteOutCard: function(e, t) {
this._handcardsInfoList[e].cards[t].destroy();
1 < this._handcardsInfoList[e].cards.length ? this._handcardsInfoList[e].cards.splice(t, 1) : this._handcardsInfoList.splice(e, 1);
},
getNeedDeleteCards: function(e) {
for (var t = [], i = 0; i < this.holdstemp.length; i++) {
var n = e.indexOf(this.holdstemp[i]);
-1 != n ? e.splice(n, 1) : t.push(this.holdstemp[i]);
}
return t;
},
getSelfFoldCount: function() {
for (var e = 0, t = 0; t < this._handcardsInfoList.length; t++) e += this._handcardsInfoList[t].cards.length;
return e;
},
OnClickBtnEat: function() {
cc.vv.audioMgr.playBtnClick();
this.eatlist = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.clearXiabiCards();
this.showEatCards(this.shangbi_List, cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI);
},
OnClickBtnPeng: function() {
cc.vv.audioMgr.playBtnClick();
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PENG);
},
OnClickBtnWin: function() {
cc.vv.audioMgr.playBtnClick();
this.sendMsgOperation(this.hucode);
},
OnClickBtnPass: function() {
cc.vv.audioMgr.playBtnClick();
this.has_action = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
},
OnClickCloseEatNode: function() {
if (1 == this.eatNode.active) {
this.eatNode.active = !1;
this.shangbi_way = null;
this.xiabi_way = null;
}
},
sendMsgOperation: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
this.operationBtnsNode.active = !1;
this.eatNode.active = !1;
var i = JSON.parse(cc.vv.msgTemp_GLZP.CS_card_type_action);
i.action = e;
i.xiabi_action = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("wp_card_type_action", i);
},
showEatCards: function(e, t) {
if (0 != e.length) for (var i in e) e[i] == cc.vv.globalSetting.OPERATE_LEFT_CHI ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 1, this.recentOutCardValue + 2 ], cc.vv.globalSetting.OPERATE_LEFT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_CENTER_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 1, this.recentOutCardValue, this.recentOutCardValue + 1 ], cc.vv.globalSetting.OPERATE_CENTER_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_RIGHT_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 2, this.recentOutCardValue - 1, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_RIGHT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI ? this.showSingleEatCard([ 2, 7, 10 ], cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI ? this.showSingleEatCard([ 12, 17, 20 ], cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI ? this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 10, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI && (this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue - 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t));
},
showSingleEatCard: function(e, t, i) {
this.eatNode.active = !0;
this.eatlist[this.eatWayCount] = {
cardSprites: [],
operation: null,
type: null
};
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = this.eatNode;
a.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? a.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 170 - this._handCardSpriteSize.height * n) : a.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -45 - this._handCardSpriteSize.height * n);
this.eatlist[this.eatWayCount].cardSprites.push(a);
}
this.eatlist[this.eatWayCount].operation = t;
this.eatlist[this.eatWayCount].type = i;
var s = new cc.Node("New Sprite");
s.addComponent(cc.Sprite).spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("jiantou");
s.parent = this.eatNode;
s.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? s.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 10) : s.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -200);
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.15, cc.p(0, -3.5)), cc.moveBy(.3, cc.p(0, 7)), cc.moveBy(.15, cc.p(0, -3.5)))));
this.eatWayCount++;
},
dealAction: function() {
if (!this.isReconnecting) {
var e = 0;
this.node.runAction(cc.repeat(cc.sequence(cc.callFunc(function() {
cc.vv.zipai_atlasAndAudioUtils.playDealCardsSound();
}), cc.delayTime(.55)), 4));
for (var t = 0; t < this._handcardsInfoList.length; t++) for (var i = 0; i < this._handcardsInfoList[t].cards.length; i++) {
e++;
this._handcardsInfoList[t].cards[i].runAction(cc.sequence(cc.hide(), cc.delayTime(.1 * e), cc.show()));
}
}
},
showXiabiCards: function(e) {
this.xiabi_list = [];
this.eatWayCount = this.shangbi_List.length;
this.xiabi_list = this.decodeEatAcition(this.xiabi_actions[e]);
this.showEatCards(this.xiabi_list, cc.vv.zipai_cardsSort.enumTalbe.eatType.XIA_BI);
},
CloseTimer: function() {
for (var e in this._seats2) this._seats2[e].closeTimer();
},
ShowTimer: function(e, t) {
this._seats2[e].showTimer(t);
},
showPickCard: function(e, t) {
var i = null, n = this.getOutCardPos(t);
this.clearOutCard();
if (0 == e) {
(i = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK)).parent = this.outCardPools;
i.tag = 1e3;
} else i = this.createOutCard(e);
i.active = !1;
i.setPosition(n);
this.bigCardBack.setScale(.6);
this.bigCardBack.setPosition(0, 270);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, n), cc.scaleTo(.3, 1)), cc.callFunc(function() {
this.bigCardBack.active = !1;
i.active = !0;
}.bind(this))));
return i;
},
createOutCard: function(e) {
var t = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG);
t.parent = this.outCardPools;
t.tag = 1e3;
return t;
},
drawHolds: function(e) {
this.selfHandCardNode.removeAllChildren(!1);
this._handcardsInfoList = [];
for (var t = e.concat(), i = cc.vv.zipai_cardsSort.cardSort(t), n = 0; n < i.sort.length; n++) {
this._handcardsInfoList[n] = {
posx: n * this._outCardSpriteSize.width - 320,
cards: []
};
for (var a = 0; a < Math.ceil(i.sort[n].type); a++) {
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.threeNotSame && 2 == a && (i.sort[n].value = 10 < i.sort[n].value ? i.sort[n].value - 10 : i.sort[n].value + 10);
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.shunZi && 0 < a && i.sort[n].value++;
(s = cc.vv.zipai_drawCard.drawCard(i.sort[n].value, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.sort[n].value;
s.getComponent("zipai_card").setOrder(Math.ceil(i.sort[n].type) - a);
s.getComponent("zipai_card").setType(i.sort[n].type);
s.setLocalZOrder(Math.ceil(i.sort[n].type) - a);
this._handcardsInfoList[n].cards.push(s);
}
}
for (n = 0; n < i.single.length; n++) {
n % 3 == 0 && (this._handcardsInfoList[i.sort.length + Math.floor(n / 3)] = {
posx: (i.sort.length + Math.floor(n / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var s;
(s = cc.vv.zipai_drawCard.drawCard(i.single[n], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.single[n];
s.getComponent("zipai_card").setOrder(i.single.length - n);
s.setLocalZOrder(i.single.length - n);
this._handcardsInfoList[i.sort.length + Math.floor(n / 3)].cards.push(s);
}
this.replaceCards();
},
showHuNode: function() {
for (var e = 0; e < this._maxPlayerCount; e++) this.huNodeList[e].node.active = !0;
},
updateHuCount: function(e) {
for (var t = 0, i = 0; i < this._playerItems[e].length; i++) {
var n = this._playerItems[e][i][0], a = this._playerItems[e][i][1], s = cc.vv.PHZ_Utils.getItemCards(n, a);
t += cc.vv.PHZ_Utils.getHuCount(n, s);
}
this.huNodeList[e].lb.string = t;
},
replaceCards: function() {
for (var e = 0; e < this._handcardsInfoList.length; e++) for (var t = 0; t < this._handcardsInfoList[e].cards.length; t++) {
this._handcardsInfoList[e].cards[t].setPosition(e * this._outCardSpriteSize.width - 310 + (8 - this._handcardsInfoList.length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * t - .15 * this._outCardSpriteSize.height);
this._handcardsInfoList[e].cards[t].setLocalZOrder(this._handcardsInfoList[e].cards.length - t);
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setOrder(Math.ceil(this._handcardsInfoList[e].cards.length - t));
var i = this._handcardsInfoList[e].cards[t].getComponent("zipai_card").getType();
if (i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.three || i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.four) {
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setBlack(!0);
}
}
},
clearItemsCards: function() {
for (var e = 0; e < this._itemsNodes.length; e++) this._itemsNodes[e].removeAllChildren();
},
clearHolds: function() {
this.selfHandCardNode.removeAllChildren();
},
clearFolds: function() {
for (var e = 0; e < this._foldsNodes.length; e++) this._foldsNodes[e].removeAllChildren();
},
clearSurplusCards: function() {
this.surplusCardNode.removeAllChildren();
},
clearOutCard: function() {
for (;this.outCardPools.getChildByTag(1e3); ) this.outCardPools.removeChildByTag(1e3);
},
clearGameOverHandCards: function() {
this.gameOverHandNode.active = !1;
for (var e = 1; e < this.gameOverHandNode.children.length; e++) this.gameOverHandNode.children[e].removeAllChildren();
},
clearXiabiCards: function() {
for (;this.eatNode.getChildByTag(-2222); ) this.eatNode.removeChildByTag(-2222);
},
clearShangbiCards: function() {
for (;this.eatNode.getChildByTag(2222); ) this.eatNode.removeChildByTag(2222);
},
clearAutoState: function() {
for (var e = 0; e < this._seats2.length; e++) this._seats2[e].setTuoGuan(!1);
for (e = 0; e < cc.vv.gameNetMgr.seats.length; e++) cc.vv.gameNetMgr.seats[e].is_auto && (cc.vv.gameNetMgr.seats[e].is_auto = !1);
},
on_auto_push: function(e) {
var t = this;
console.log("log------------on_auto_push------------this.tuoGuanNode=:", this.tuoGuanNode);
this.tuoGuanNode || e.user_id == cc.vv.userMgr.userId && 1 == e.is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/zipai_tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
t.tuoGuanNode = e;
});
});
var i = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), n = cc.vv.gameNetMgr.getLocalIndex(i);
this._seats2[n].setTuoGuan(e.is_auto);
},
on_cancel_auto: function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t);
this._seats2[i].setTuoGuan(e.is_auto);
if (cc.vv.userMgr.userId == e.user_id) {
this.tuoGuanNode = null;
console.log("log------------on_cancel_auto------------this.tuoGuanNode=:", this.tuoGuanNode);
}
},
on_time_sync: function(e) {
var t = Math.floor((e.end - e.sys) / 1e3);
this._turn_time = t;
console.log("服务器倒计时", t);
var i = cc.vv.gameNetMgr.turn;
this.ShowTimer(i, t);
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {
eatNodeEventHandler: "eatNodeEventHandler",
holdsEventHandler: "holdsEventHandler"
} ],
PHZ_Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "40b02X3KQ5FJ58PACBu5Gnt", "PHZ_Utils");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && (cc.vv.PHZ_Utils = this);
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI:
i.push(t);
i.push(t + 1);
i.push(t + 2);
break;

case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ACTION_CENTER_CHI_XIABI:
i.push(t - 1);
i.push(t);
i.push(t + 1);
break;

case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ACTION_RIGHT_CHI_XIABI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI_XIABI:
i.push(2);
i.push(7);
i.push(10);
break;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI_XIABI:
i.push(12);
i.push(17);
i.push(20);
break;

case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t);
i.push(t + 10);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t);
i.push(t);
i.push(t + 10);
}
break;

case cc.vv.globalSetting.ITEM_PENG:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getHuCount: function(e, t) {
for (var i = 0; i < t.length; i++) for (var n = i + 1; n < t.length; n++) if (t[i] > t[n]) {
var a = t[i];
t[i] = t[n];
t[n] = a;
}
if (0 == t[0]) return 0;
switch (e) {
case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
return 10 < t[0] ? 12 : 9;

case cc.vv.globalSetting.ITEM_KAN:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
return 10 < t[0] ? 6 : 3;

case cc.vv.globalSetting.ITEM_PENG:
return 10 < t[0] ? 3 : 1;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
return 10 < t[0] ? 9 : 6;

case cc.vv.globalSetting.ITEM_DUIZI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
return 0;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
return 6;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
return 3;

case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SHUNZI:
return 1 == t[0] ? 3 : 11 == t[0] ? 6 : 0;
}
},
decodeXingtypes: function() {
var e = {
up: 0,
center: 0,
down: 0
};
8192 & cc.vv.gameNetMgr.rule_index && (e.up = 1);
16384 & cc.vv.gameNetMgr.rule_index && (e.center = 1);
32768 & cc.vv.gameNetMgr.rule_index && (e.down = 1);
return e;
},
getAllXingCards: function(e) {
for (var t = [], i = this.decodeXingtypes(), n = 0; n < e.length; n++) {
0 < i.up && (10 == e[n] ? t.push(1) : 20 == e[n] ? t.push(11) : t.push(e[n] + 1));
0 < i.center && t.push(e[n]);
0 < i.down && (1 == e[n] ? t.push(10) : 11 == e[n] ? t.push(20) : t.push(e[n] - 1));
}
return t;
},
isXingCard: function(e, t) {
for (var i in t) if (e == t[i]) return !0;
return !1;
}
});
cc._RF.pop();
}, {} ],
PopupMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bc0d2VLgL1Avo166tHLsjCJ", "PopupMgr");
cc.Class({
extends: cc.Component,
properties: {
_popuproot: null,
_dissolveNotice: null,
_startNotice: null,
_endTime: -1,
_extraInfo: null,
_noticeLabel: null,
_startNoticeLabel: null
},
onLoad: function() {
if (null != cc.vv) {
this.node.active = !1;
(cc.vv.popupMgr = this)._popuproot = this.node;
this.fa = cc.find("Canvas");
this._dissolveNotice = this._popuproot.getChildByName("dissolve_notice");
this._noticeLabel = this._dissolveNotice.getChildByName("info").getComponent(cc.RichText);
this._btn_agree = this._dissolveNotice.getChildByName("btn_agree");
this._btn_reject = this._dissolveNotice.getChildByName("btn_reject");
this._startNotice = this._popuproot.getChildByName("start_notice");
this._startNoticeLabel = this._startNotice.getChildByName("info").getComponent(cc.RichText);
this._startBtn_agree = this._startNotice.getChildByName("start_btn_agree");
this._startBtn_reject = this._startNotice.getChildByName("start_btn_reject");
this.closeAll();
var i = this;
this.fa.on("dissolve_notice", function(e) {
var t = e.detail;
i.showDissolveNotice(t);
});
this.fa.on("dissolve_cancel", function(e) {
i.closeAll();
});
this.fa.on("notice_start_play", function(e) {});
this.fa.on("start_play_choice", function(e) {
i.showStartNotice(e.detail);
});
this.fa.on("start_play_end", function(e) {
i.closeAll();
});
cc.vv.gameNetMgr.dissoveData && this.showDissolveNotice(cc.vv.gameNetMgr.dissoveData);
}
},
visibleBtnAqjsfj: function() {
var e = this.btn_sqjsfj;
e && (0 == cc.vv.gameNetMgr.numOfGames ? e.active = !1 : e.active = !0);
},
onBtnClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
this.closeAll();
var t = e.target.name;
if ("btn_agree" == t) cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dissolve_agree"); else if ("btn_reject" == t) cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("dissolve_reject"); else if ("start_btn_agree" == t) {
(i = JSON.parse(cc.vv.msgTemp.CS_StartPlay_Choice)).agree = 1;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("start_play_choice", i);
} else if ("start_btn_reject" == t) {
var i;
(i = JSON.parse(cc.vv.msgTemp.CS_StartPlay_Choice)).agree = 0;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("start_play_choice", i);
}
},
closeAll: function() {
this._btn_agree.active = !1;
this._btn_reject.active = !1;
this._popuproot.active = !1;
this._dissolveNotice.active = !1;
this._startNotice.active = !1;
},
showDissolveRequest: function() {
this.closeAll();
this._popuproot.active = !0;
},
showDissolveNotice: function(e) {
this._endTime = Date.now() / 1e3 + e.time;
for (var t = !(this._extraInfo = ""), i = 5 < e.states.length, n = 0; n < e.states.length; ++n) {
var a = e.states[n];
if (null != cc.vv.gameNetMgr.seats[n]) {
var s = cc.vv.gameNetMgr.seats[n].name, c = "";
1 == i && 0 != n && 2 != n && 4 != n && 6 != n || (c = "\n");
if (a) {
var r = "<size=21><color=#fcecd1>" + c + "[已同意] " + s + "    </color></size>";
this._extraInfo += r;
} else {
r = "<size=21><color=#fcecd1>" + c + "[待确认] " + s + "    </color></size>";
this._extraInfo += r;
t = !1;
}
}
}
this.closeAll();
if (1 != t) {
this._popuproot.active = !0;
this._dissolveNotice.active = !0;
if (0 == (e.mask & 1 << cc.vv.gameNetMgr.seatIndex + 1)) {
this._btn_agree.active = !0;
this._btn_reject.active = !0;
}
}
},
showStartNotice: function(e) {
this._endTime = Date.now() / 1e3 + 30;
this._extraInfo = "";
var t = e.agree_list, i = !1, n = Object.keys(t), a = 4 < (n = n.sort()).length, s = 0;
for (var c in t) {
var r = t[c];
if (null != cc.vv.gameNetMgr.seats[1 * c]) {
var o = cc.vv.gameNetMgr.seats[1 * c].name;
1 * c == 1 * cc.vv.gameNetMgr.seatIndex && (i = !0);
var h = "";
1 == a && 0 != s && 2 != s && 4 != s && 6 != s || (h = "\n");
if (r) {
var l = "<size=21><color=#fcecd1>" + h + "[已同意] " + o + "    </color></size>";
this._extraInfo += l;
} else {
l = "<size=21><color=#fcecd1>" + h + "[待确认] " + o + "    </color></size>";
this._extraInfo += l;
}
s++;
}
}
this.closeAll();
this._popuproot.active = !0;
this._startNotice.active = !0;
this._startBtn_agree.active = !1;
this._startBtn_reject.active = !1;
if (!i) {
this._startBtn_agree.active = !0;
this._startBtn_reject.active = !0;
}
},
update: function(e) {
if (0 < this._endTime) {
var t = this._endTime - Date.now() / 1e3;
t < 0 && (this._endTime = -1);
var i = Math.floor(t / 60), n = Math.ceil(t - 60 * i), a = "";
0 < i && (a += i + "分");
if (this._dissolveNotice.active) {
var s = "<size=30><color=#ffe13c>" + a + n + "  </color></size>";
this._noticeLabel.string = s + "<size=30>秒后房间将自动解散</size>" + this._extraInfo;
-1 == this._endTime && this.closeAll();
}
if (this._startNotice.active) {
s = "<size=30><color=#ffffff>房主申请提前开始游戏，正等待其他在线\n玩家选择...</color></size>";
this._startNoticeLabel.string = s + "<size=30><color=#ffe13c>" + a + n + "  </color></size><size=30>秒将自动拒绝</size><size=21><color=#fcecd1>" + this._extraInfo + "  </color></size>";
}
}
}
});
cc._RF.pop();
}, {} ],
QMT_GameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6ecd7/+ekJLWowvexSsS4jv", "QMT_GameOver");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.initData();
this.initNode();
this.initEventHandler();
this.showBtnReadyLabelByState();
}
},
initData: function() {
this.huCountList = [];
this.itemLableList = [];
this.userList = [];
this.itemCardTag = 1100;
this._maxPlayerNum = 3;
this._handCardSpriteSize = {
width: 56,
height: 62
};
},
initNode: function() {
this._gameOverRoot = this.node.getChildByName("bg");
this._surplusCardsNode = this._gameOverRoot.getChildByName("surplusCardsNode");
this.initHuIcon();
this.initCommonLabels();
this.initHuCountLabels();
this.initUsers();
this.initFanLables();
this.node.active = !1;
},
initCommonLabels: function() {
this.lb_huXi = this._gameOverRoot.getChildByName("lb_huXi").getComponent(cc.Label);
this.lb_fanShu = this._gameOverRoot.getChildByName("lb_fanShu").getComponent(cc.Label);
this.lb_tunShu = this._gameOverRoot.getChildByName("lb_tunShu").getComponent(cc.Label);
this.lb_total = this._gameOverRoot.getChildByName("lb_total").getComponent(cc.Label);
},
initHuIcon: function() {
this.icon_huCardSign = this._gameOverRoot.getChildByName("huCardFrame");
this.icon_huCardSign.active = !1;
this.icon_huCardSign.setLocalZOrder(10);
},
initHuCountLabels: function() {
this._huCountNode = this._gameOverRoot.getChildByName("itemCardHuCountNode");
for (var e = 0; e < 8; e++) {
var t = this._huCountNode.getChildByName("huCount" + e), i = this._huCountNode.getChildByName("itemLable" + e);
t.getComponent(cc.Label).string = "";
i.getComponent(cc.Label).string = "";
this.huCountList.push(t);
this.itemLableList.push(i);
}
},
initUsers: function() {
for (var e = this._gameOverRoot.getChildByName("UserNode"), t = 0; t < this._maxPlayerNum; t++) {
var i = {}, n = e.getChildByName("user" + t);
i.frame = n.getChildByName("frame").getComponent(cc.Sprite);
i.icon_winOrLoseTyp = n.getChildByName("icon_winOrLoseType").getComponent(cc.Sprite);
i.icon_winOrLose = n.getChildByName("icon_winOrLose").getComponent(cc.Sprite);
i.lb_score = n.getChildByName("lb_score").getComponent(cc.Label);
i.lb_name = n.getChildByName("lb_name").getComponent(cc.Label);
i.lb_id = n.getChildByName("lb_id").getComponent(cc.Label);
i.image_atavar = n.getChildByName("head").getChildByName("image_Atavar").getComponent("ImageLoader");
this.userList.push(i);
}
},
initFanLables: function() {
var e = this._gameOverRoot.getChildByName("fanLabelNode");
this.Lb_fanTypeList = [];
for (var t = 0; t < 12; t++) {
var i = "lb_fanType" + t, n = e.getChildByName(i).getComponent(cc.Label);
this.Lb_fanTypeList.push(n);
}
},
showBtnReadyLabelByState: function() {
var e = this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label);
cc.vv.gameNetMgr.isOver ? e.string = "总结算" : e.string = "继续";
},
initEventHandler: function() {
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("wp_over", this.call_game_over, this);
this.gameRoot.on("game_result_showLB", this.showLb, this);
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function(e) {
var t = this;
if (1 != e.detail.force) {
var i = cc.vv.gameNetMgr.getIsSpcialHu() ? 1 : 0;
this.gameRoot && this.gameRoot.runAction(cc.sequence(cc.delayTime(3.5 + i), cc.callFunc(function(e) {
t.onGameOver();
})));
} else this.onGameOver();
},
onGameOver: function() {
this.icon_huCardSign.active = !1;
this.node.active = !0;
var e = cc.vv.gameNetMgr.gameOverData, t = e.end_seats_data, i = (e.force, e.tian_hu, 
e.hu_user_id), n = e.pao_user_id;
this.hu_card = e.hu_card;
e.button;
var a = e.pokers, s = e.hu_details;
this.totalHuCount = 0;
this.hu_index = 0;
this.pick_hu = e.pick_hu;
console.log("log------------fangroup=:", e.fan_group);
this.clear();
this.showSurplusCards(a);
this.showItemsInfo(t, i);
this.showHuDetails(t, s);
this.showFanGroups(e.fan_group);
this.showPlayer(t, i, n);
this.lb_huXi.string = "胡息 +" + e.total_hu_nums;
this.lb_fanShu.string = "番数 +" + e.total_fan_nums;
this.lb_tunShu.string = "囤数 +" + e.base_zi_nums;
},
showSurplusCards: function(e) {
for (var t = 0; t < e.length; t++) {
var i = cc.vv.zipai_drawCard.drawCard(e[t], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
i.parent = this._surplusCardsNode;
i.setScale(.6);
i.setPosition((t + .5) * this._handCardSpriteSize.width * .6, 0);
}
},
showItemsInfo: function(e, t) {
for (var i = 0; i < e.length; i++) if (t == e[i].user_id) {
for (var n = 0; n < e[i].items.length; n++) {
var a = n, s = e[i].items[n][0], c = e[i].items[n][1], r = cc.vv.QMT_Utils.getItemCards(s, c), o = cc.vv.QMT_Utils.getHuCount(s, r), h = this.getItemType(s);
this.huCountList[n].getComponent(cc.Label).string = o;
this.itemLableList[a].getComponent(cc.Label).string = h;
this.showItemCards(r, a, cc.vv.zipai_drawCard.enumTalbe.cardSort.ITEM, s);
this.totalHuCount += o;
}
this.hu_index = i;
break;
}
},
showHuDetails: function(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i][0], a = t[i][1], s = e[this.hu_index].items.length + i;
this.showItemCards(a, s, cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS, n);
var c = cc.vv.QMT_Utils.getHuCount(n, a), r = this.getItemType(n);
this.huCountList[s].getComponent(cc.Label).string = c;
this.itemLableList[s].getComponent(cc.Label).string = r;
this.totalHuCount += c;
}
this.huCountList[7].getComponent(cc.Label).string = this.totalHuCount;
this.lb_total.string = this.totalHuCount;
},
showItemCards: function(e, t, i, n) {
for (var a in e) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == a && (s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
s.parent = this._gameOverRoot;
s.setScale(.5);
s.tag = this.itemCardTag;
var c = this.huCountList[t].getPosition();
s.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
if (i == cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS && !this.icon_huCardSign.active && e[a] == this.hu_card) {
this.icon_huCardSign.active = !0;
this.icon_huCardSign.setScale(.8);
this.icon_huCardSign.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
!0;
}
}
},
getItemType: function(e) {
var t = "";
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
t = "吃";
break;

case cc.vv.globalSetting.ITEM_PENG:
t = "碰";
break;

case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
t = "偎";
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
t = "提";
break;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
t = "跑";
break;

case cc.vv.globalSetting.ITEM_KAN:
t = "坎";
break;

case cc.vv.globalSetting.ITEM_DUIZI:
t = "对";
break;

case cc.vv.globalSetting.ITEM_SHUNZI:
t = "句";
}
return t;
},
showPlayer: function(e, t, i) {
this.sortByScore(e);
for (var n = 0; n < e.length; n++) {
var a = null, s = null, c = null;
if (0 < e[n].end_score) {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_win");
s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("win");
t == i && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_zimo"));
} else {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_lose");
e[n].end_score < 0 && (s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("lose"));
e[n].user_id == i && this.pick_hu <= 0 && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("fangpao"));
e[n].user_id == i && 0 < this.pick_hu && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_dianpao"));
}
var r = this.getUserNameByID(e[n].user_id);
this.userList[n].frame.spriteFrame = a;
this.userList[n].icon_winOrLose.spriteFrame = s;
this.userList[n].icon_winOrLoseTyp.spriteFrame = c;
this.userList[n].lb_score.string = e[n].end_score;
if (cc.vv.userMgr.isHighDefend) {
this.userList[n].lb_name.string = "已屏蔽";
this.userList[n].lb_id.string = "已屏蔽";
} else {
this.userList[n].lb_name.string = r;
this.userList[n].lb_id.string = e[n].user_id;
}
this.userList[n].image_atavar.setUserID(e[n].user_id);
}
},
sortByScore: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t].end_score < e[i].end_score) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
showFanGroups: function(e) {
this.resetfanLabels();
var t = 0;
for (var i in e) {
var n = Number(i);
this.showSingleFanGroup(t, n, e[i]);
t++;
}
},
resetfanLabels: function() {
for (var e = 0; e < this.Lb_fanTypeList.length; e++) this.Lb_fanTypeList[e].string = "";
},
showSingleFanGroup: function(e, t, i) {
var n = "";
switch (t) {
case cc.vv.globalSetting.FAN_TYPE_HONG_HU:
n = "红胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DIAN_HU:
n = "点胡";
break;

case cc.vv.globalSetting.FAN_TYPE_WU_HU:
n = "乌胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DUI_DUI_HU:
n = "对对胡";
break;

case cc.vv.globalSetting.FAN_TYPE_HAI_DI_HU:
n = "海底胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DA_ZI_HU:
n = "大字胡";
break;

case cc.vv.globalSetting.FAN_TYPE_XIAO_ZI_HU:
n = "小字胡";
break;

case cc.vv.globalSetting.FAN_TYPE_SHUAI_HOU:
n = "耍猴";
break;

case cc.vv.globalSetting.FAN_TYPE_HUANG_FAN:
n = "黄番";
break;

case cc.vv.globalSetting.FAN_TYPE_SELF_HU:
n = "自摸";
break;

case cc.vv.globalSetting.FAN_TYPE_TIAN_HU:
n = "天胡";
break;

case cc.vv.globalSetting.FAN_TYPE_TING_HU:
n = "听胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DA_TUAN_YUAN:
n = "大团圆";
break;

case cc.vv.globalSetting.FAN_TYPE_HANG_HANG_XI:
n = "行行息";
break;

case cc.vv.globalSetting.FAN_TYPE_HONG_WU_HU:
n = "红乌胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DI_HU:
n = "地胡";
break;

case cc.vv.globalSetting.FAN_TYPE_YIN:
n = "印";
break;

case cc.vv.globalSetting.FAN_TYPE_QI_HANG_XI:
n = "七行息";
break;

case cc.vv.globalSetting.FAN_TYPE_JIA_HANG_HANG:
n = "假行行";
break;

case cc.vv.globalSetting.FAN_TYPE_DI_HU:
n = "背靠背";
}
this.Lb_fanTypeList[e].string = 0 < i ? n + "x" + i + "番" : n;
},
getUserNameByID: function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) if (e == t[i].userid) return t[i].name;
},
clear: function() {
this.clearHuCount();
this.clearItemLabels();
this.clearItemCards();
this.clearSurplusCards();
},
clearHuCount: function() {
for (var e in this.huCountList) this.huCountList[e].getComponent(cc.Label).string = "";
},
clearItemLabels: function() {
for (var e in this.itemLableList) this.itemLableList[e].getComponent(cc.Label).string = "";
},
clearItemCards: function() {
for (;this._gameOverRoot.getChildByTag(this.itemCardTag); ) this._gameOverRoot.removeChildByTag(this.itemCardTag);
},
clearSurplusCards: function() {
this._surplusCardsNode.removeAllChildren();
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.gameRoot.emit("show_gameResult"); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.active = !1;
this.gameRoot.emit("fresh_all_score");
},
onDestroy: function() {
this.gameRoot.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
QMT_GlobalSetting: [ function(e, i, n) {
(function(t) {
"use strict";
cc._RF.push(i, "f14efdZ8vZF2oLLJTUni0Fl", "QMT_GlobalSetting");
var s = {
DISMISS_TIME: 12e4,
GAME_TYPE_CLASSIC: 1,
MASK_PC10: 1,
MASK_PC20: 2,
MASK_QUAN_MING_TANG: 3,
MASK_HONG_HEI_DIAN: 4,
MASK_AUTO: 5,
MASK_QUAN_MING_TANG_6_8: 6,
MASK_QUAN_MING_TANG_8_10: 7,
MASK_TIAN_HU: 8,
MASK_DI_HU: 9,
MASK_DIAN_HU: 10,
MASK_HONG_HU: 11,
MASK_WU_HU: 12,
MASK_DUIDUI_HU: 13,
MASK_DAZI_HU: 14,
MASK_XIAOZI_HU: 15,
MASK_HAIDI_HU: 16,
MASK_TING_HU: 17,
MASK_HONG_WU: 18,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
MASK_XIANG_XIANG_XI: 21,
MASK_YIN: 22,
MASK_SHUA_HOU: 23,
MASK_HUANG_FAN: 24,
MASK_DA_TUANYUAN: 25,
MASK_QI_HANG_XI: 26,
MASK_JIA_HANGHANG: 27,
MASK_SIQI_HONG: 28,
MASK_BEI_KAO_BEI: 29,
ITEM_LEFT_CHI: 1,
ITEM_CENTER_CHI: 2,
ITEM_RIGHT_CHI: 3,
ITEM_SMALL_ERQISHI_CHI: 4,
ITEM_BIG_ERQISHI_CHI: 5,
ITEM_TWO_BIG_SMALL_CHI: 6,
ITEM_TWO_SMALL_BIG_CHI: 7,
ITEM_PENG: 8,
ITEM_SAO: 9,
ITEM_GUO_SAO: 10,
ITEM_SAO_CHUAN: 11,
ITEM_KAI_DUO: 12,
ITEM_PENG_KAI_DUO: 13,
ITEM_SAO_KAI_DUO: 14,
ITEM_SAO_SAO_CHUAN: 15,
ITEM_SELF_SAO_CHUAN: 16,
ITEM_KAN: 17,
ITEM_DUIZI: 18,
ITEM_SHUNZI: 19,
OPERATE_PASS: 1,
OPERATE_LEFT_CHI: 2,
OPERATE_CENTER_CHI: 3,
OPERATE_RIGHT_CHI: 4,
OPERATE_SMALL_ERQISHI_CHI: 5,
OPERATE_BIG_ERQISHI_CHI: 6,
OPERATE_TWO_BIG_SMALL_CHI: 7,
OPERATE_TWO_SMALL_BIG_CHI: 8,
OPERATE_PENG: 9,
OPERATE_SAO: 10,
OPERATE_GUO_SAO: 11,
OPERATE_SAO_CHUAN: 12,
OPERATE_KAI_DUO: 13,
OPERATE_PENG_KAI_DUO: 14,
OPERATE_SAO_KAI_DUO: 15,
OPERATE_SAO_SAO_CHUAN: 16,
OPERATE_HU: 17,
OPERATE_PENG_KAI_DUO_HU: 18,
OPERATE_SAO_KAI_DUO_HU: 19,
OPERATE_SAO_SAO_CHUAN_HU: 20,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_LEFT_CHI: 3,
ACTION_CENTER_CHI: 4,
ACTION_RIGHT_CHI: 5,
ACTION_SMALL_ERQISHI_CHI: 6,
ACTION_BIG_ERQISHI_CHI: 7,
ACTION_TWO_BIG_SMALL_CHI: 8,
ACTION_TWO_SMALL_BIG_CHI: 9,
ACTION_PENG: 10,
ACTION_SAO: 11,
ACTION_GUO_SAO: 12,
ACTION_SAO_CHUAN: 13,
ACTION_KAI_DUO: 14,
ACTION_PENG_KAI_DUO: 15,
ACTION_SAO_KAI_DUO: 16,
ACTION_SAO_SAOCHUAN: 17,
ACTION_SELF_SAO_CHUAN: 18,
ACTION_HU: 19,
ACTION_LEFT_CHI_XIABI: 20,
ACTION_CENTER_CHI_XIABI: 21,
ACTION_RIGHT_CHI_XIABI: 22,
ACTION_SMALL_ERQISHI_CHI_XIABI: 23,
ACTION_BIG_ERQISHI_CHI_XIABI: 24,
ACTION_TWO_BIG_SMALL_CHI_XIABI: 25,
ACTION_TWO_SMALL_BIG_CHI_XIABI: 26,
FAN_TYPE_HONG_HU: 1,
FAN_TYPE_DIAN_HU: 2,
FAN_TYPE_WU_HU: 3,
FAN_TYPE_DUI_DUI_HU: 4,
FAN_TYPE_HAI_DI_HU: 5,
FAN_TYPE_DA_ZI_HU: 6,
FAN_TYPE_XIAO_ZI_HU: 7,
FAN_TYPE_SHUAI_HOU: 8,
FAN_TYPE_HUANG_FAN: 9,
FAN_TYPE_SELF_HU: 10,
FAN_TYPE_TIAN_HU: 11,
FAN_TYPE_TING_HU: 12,
FAN_TYPE_DA_TUAN_YUAN: 13,
FAN_TYPE_HANG_HANG_XI: 14,
FAN_TYPE_HONG_WU_HU: 15,
FAN_TYPE_DI_HU: 16,
FAN_TYPE_YIN: 17,
FAN_TYPE_QI_HANG_XI: 18,
FAN_TYPE_JIA_HANG_HANG: 19,
FAN_TYPE_BEI_KAO_BEI: 20,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
MIN_HUXI_NUMS: 15,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
has_rule: function(e, t) {
return 0 != (e & 1 << t);
},
type_check: function(e) {
var t = 0;
s.has_rule(e, s.GAME_TYPE_CLASSIC) && (t += 1);
return 1 == t;
},
rule_check: function(e) {
var t = 0;
s.has_rule(e, s.MASK_PC10) && (t += 1);
s.has_rule(e, s.MASK_PC20) && (t += 1);
if (1 != t) return !1;
var i = 0;
s.has_rule(e, s.MASK_INGOT_GAME) && (i += 1);
s.has_rule(e, s.MASK_GOLD_GAME) && (i += 1);
if (1 != i) return !1;
var n = 0;
s.has_rule(e, s.MASK_QUAN_MING_TANG) && (n += 1);
s.has_rule(e, s.MASK_HONG_HEI_DIAN) && (n += 1);
if (1 != n) return !1;
if (s.has_rule(e, s.MASK_QUAN_MING_TANG)) {
var a = 0;
s.has_rule(e, s.MASK_QUAN_MING_TANG) && (a += 1);
s.has_rule(e, s.MASK_QUAN_MING_TANG) && (a += 1);
if (1 != a) return !1;
}
return !0;
},
get_ingot_value: function(e) {
if ("zy" == t.ENV_CONFIG.ENV || "zy2" == t.ENV_CONFIG.ENV) {
if (s.has_rule(e, s.MASK_INGOT_GAME)) {
if (s.has_rule(e, s.MASK_PC10)) return 2;
if (s.has_rule(e, s.MASK_PC20)) return 3;
}
if (s.has_rule(e, s.MASK_GOLD_GAME)) {
if (s.has_rule(e, s.MASK_PC10)) return 3;
if (s.has_rule(e, s.MASK_PC20)) return 4;
}
} else {
if (s.has_rule(e, s.MASK_INGOT_GAME)) {
if (s.has_rule(e, s.MASK_PC10)) return 1;
if (s.has_rule(e, s.MASK_PC20)) return 2;
}
if (s.has_rule(e, s.MASK_GOLD_GAME)) {
if (s.has_rule(e, s.MASK_PC10)) return 1;
if (s.has_rule(e, s.MASK_PC20)) return 2;
}
}
}
};
n.global = s;
cc._RF.pop();
}).call(this, e("_process"));
}, {
_process: 118
} ],
QMT_Msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3eed4D0GNxKYpa3l86BPmDp", "QMT_Msgdefine");
var n = {};
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
button: 0,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
total_hu_nums: 0,
base_zi_nums: 0,
total_fan_nums: 0,
pokers: [],
hu_details: [],
fan_group: {}
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_action_mask = JSON.stringify({
action_mask: 0,
xiabi_actions: {},
card: 0
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.CS_card_type_action = JSON.stringify({
action: 0,
xiabi_action: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
QMT_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "98845kPfeZNIIM+6w5ISdqS", "QMT_Replay");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_iconsNodes: [],
_itemNodes: [],
_foldsNodes: [],
_holdsNodes: [],
_playerPos: []
},
onLoad: function() {
if (cc.vv) {
this.replayGameNode = cc.find("Canvas/replayGame");
this.gameNode = cc.find("Canvas/game");
this.peaceNode = this.replayGameNode.getChildByName("peaceNode");
this.replayGameNode.active = !0;
this.peaceNode.active = !1;
this.gameNode.active = !1;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.initData();
this.initView();
this.initHoldNodes();
this.initSeats();
this.initBigCardBack();
this.initEvent();
this.judgeShowPeace();
} else cc.director.loadScene("loading");
},
initData: function() {
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._beginThrowCardPos = [ {
x: 0,
y: -50
}, {
x: 100,
y: 100
}, {
x: -100,
y: 100
} ];
this.holdsList = [ [], [], [] ];
this.foldsList = [ [], [], [] ];
this.itemsList = [ [], [], [] ];
this.holdsSpriteList = [ [], [], [] ];
this.actionCount = 0;
this.outPool = [];
this.outCardTag = 10086;
},
initView: function() {
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3"), s = i.getChildByName("icons"), c = i.getChildByName("items"), r = i.getChildByName("folds");
a.active = !1;
this._zhuangs.push(a);
this._iconsNodes.push(s);
this._itemNodes.push(c);
this._foldsNodes.push(r);
this._playerPos.push(i.getPosition());
}
this.cardNode = cc.find("Canvas/replayGame/cardNode");
},
initHoldNodes: function() {
for (var e = [ "selfHandCardNode", "rightHandCardNode", "leftHandCardNode" ], t = 0; t < e.length; t++) {
var i = this.replayGameNode.getChildByName(e[t]);
i && this._holdsNodes.push(i);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.holdsList[i] = e[t].holds.concat();
this.drawHolds(e[t].holds, i);
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button, n = this._seats2[t];
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.cardNode;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initEvent: function() {
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
drawHolds: function(e, t) {
var i = e.concat(), n = cc.vv.zipai_cardsSort.cardSort(i), a = 0 == t ? cc.vv.zipai_drawCard.enumTalbe.cardType.BIG : cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL;
this.holdsSpriteList[t] = [];
this._holdsNodes[t].removeAllChildren();
for (var s = 0; s < n.sort.length; s++) {
this.holdsSpriteList[t][s] = {
posx: s * this._outCardSpriteSize.width - 640,
cards: []
};
for (var c = 0; c < Math.ceil(n.sort[s].type); c++) {
2.5 == n.sort[s].type && 2 == c && (10 < n.sort[s].value ? n.sort[s].value -= 10 : n.sort[s].value += 10);
2.3 == n.sort[s].type && 0 < c && n.sort[s].value++;
(r = cc.vv.zipai_drawCard.drawCard(n.sort[s].value, a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(Math.ceil(n.sort[s].type) - c);
r.setLocalZOrder(Math.ceil(n.sort[s].type) - c);
this.holdsSpriteList[t][s].cards.push(r);
}
}
for (s = 0; s < n.single.length; s++) {
s % 3 == 0 && (this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)] = {
posx: (n.sort.length + Math.floor(s / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var r;
(r = cc.vv.zipai_drawCard.drawCard(n.single[s], a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(n.single.length - s);
r.setLocalZOrder(n.single.length - s);
this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)].cards.push(r);
}
this.replaceCards(t);
},
replaceCards: function(e) {
for (var t = 0; t < this.holdsSpriteList[e].length; t++) for (var i = 0; i < this.holdsSpriteList[e][t].cards.length; i++) {
this.holdsSpriteList[e][t].cards[i].setLocalZOrder(this.holdsSpriteList[e][t].cards.length - i);
this.holdsSpriteList[e][t].cards[i].getComponent("zipai_card").setOrder(Math.ceil(this.holdsSpriteList[e][t].cards.length - i));
if (0 == e) this.holdsSpriteList[e][t].cards[i].setPosition(t * this._outCardSpriteSize.width - 310 + (8 - this.holdsSpriteList[e].length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * i - .1 * this._outCardSpriteSize.height); else {
this.holdsSpriteList[e][t].cards[i].setScale(.75);
this.holdsSpriteList[e][t].cards[i].setPosition(t * this._handCardSpriteSize.width * .75 + (8 - this.holdsSpriteList[e].length) * this._handCardSpriteSize.width / 2 * .75, this._handCardSpriteSize.height * i * .75);
}
}
},
onDoReplayAction: function(e) {
var t = e.detail.action, i = (e.detail.next, t.d_actions), n = i[0], a = i[1], s = i[2], c = i[3], r = cc.vv.gameNetMgr.getLocalIndex(n), o = cc.vv.gameNetMgr.getLocalIndex(c);
console.log("log seat  card  act_type=:", r, s, a);
this.showTurn(r);
if (a != cc.vv.globalSetting.ACTION_HU) this.deleteCard(); else if (n == c) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO, r);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", 1);
} else {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.HU, r);
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PAO, o);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", 1);
}
if (a == cc.vv.globalSetting.ACTION_PICK) {
if (0 < this.outPool.length) {
this.updateFoldsData(this.outPool[0]._card, this.outPool[0]._seat);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
this.updateFolds(this.outPool[0]._seat);
this.outPool.pop();
}
0 == this.actionCount ? this.showFirstPickCardAction(s, r) : this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD);
} else if (a == cc.vv.globalSetting.ACTION_OUT) {
this.outPool.push({
_card: s,
_seat: r
});
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
(h = []).push(s);
this.updateHoldsData(h, r);
this.updateHolds(r);
} else {
this.outPool.pop();
if (a < cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI) {
var h = (d = cc.vv.QMT_Utils.getItemCards(a - 2, s)).concat();
if (a != cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) for (var l = 0; l < h.length; l++) if (s == h[l]) {
h.splice(l, 1);
break;
}
} else {
var d;
h = (d = cc.vv.QMT_Utils.getItemCards(a, s)).concat();
}
this.showIconByAction(a, r);
this.updateHoldsData(h, r);
this.updateItemsData(d, r, a);
this.updateHolds(r);
this.updateItems(r);
}
this.actionCount++;
},
onDoReplayActionOver: function() {},
updateHolds: function(e) {
this.drawHolds(this.holdsList[e], e);
},
updateItems: function(e) {
for (var t = 1 == e ? -1 : 1, i = 0; i < this.itemsList[e].length; i++) for (var n = 0; n < this.itemsList[e][i].cards.length; n++) {
var a = null;
if (0 < this.itemsList[e][i].cards[n]) {
a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
var s = this.itemsList[e][i].act_type;
s == cc.vv.globalSetting.ACTION_SAO && n < 2 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(s == cc.vv.globalSetting.ACTION_SAO_CHUAN || s == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN || s == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) && n < 3 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI && 2 == n) {
var c = !1;
a.getComponent("zipai_card").setBlack(c);
}
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && s <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI && 2 == n) {
c = !1;
a.getComponent("zipai_card").setBlack(c);
}
} else a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
a.setScale(.6);
a.parent = this._itemNodes[e];
a.setPosition(t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
}
},
updateFolds: function(e) {
for (var t = 2 == e ? 1 : -1, i = 0; i < this.foldsList[e].length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(this.foldsList[e][i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.setScale(.6);
n.parent = this._foldsNodes[e];
n.setPosition(.6 * this._handCardSpriteSize.width * i * t + t * this._handCardSpriteSize.width * .6 / 2, 0);
}
},
updateHoldsData: function(e, t) {
for (var i = 0; i < e.length; i++) for (var n = 0; n < this.holdsList[t].length; n++) if (e[i] == this.holdsList[t][n]) {
this.holdsList[t].splice(n, 1);
break;
}
},
updateItemsData: function(e, t, i) {
var n = this.itemsList[t].length;
this.itemsList[t][n] = {
cards: [],
act_type: i
};
for (var a = 0; a < this.itemsList[t].length; a++) for (var s = 0; s < this.itemsList[t][a].cards.length; s++) if (this.itemsList[t][a].cards[0] == e[0] && this.itemsList[t][a].cards[1] == e[1] && this.itemsList[t][a].cards[2] == e[2] && e[0] == e[1] && e[0] == e[2]) {
this.itemsList[t][a].cards.push(e[0]);
this.itemsList[t].pop();
return;
}
for (a = 0; a < e.length; a++) this.itemsList[t][n].cards.push(e[a]);
},
updateFoldsData: function(e, t) {
this.foldsList[t].push(e);
},
showCard: function(e, t, i) {
(e = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.cardNode;
e.tag = this.outCardTag;
e.setPosition(0, 50);
var n = this;
if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD) {
e.setPosition(this._beginThrowCardPos[t].x, this._beginThrowCardPos[t].y);
e.runAction(cc.moveTo(.1, cc.p(0, 50)));
} else if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD) {
e.active = !1;
e.setPosition(0, 50);
e.setScale(.2, 1);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.1, .2, 1), cc.callFunc(function() {
e.active = !0;
e.runAction(cc.scaleTo(.1, 1, 1));
}), cc.callFunc(function() {
n.bigCardBack.active = !1;
})));
}
},
showFirstPickCardAction: function(e, t) {
var i = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
i.parent = this.cardNode;
i.tag = this.outCardTag;
i.setPosition(0, 50);
var n = 0 < t ? this._playerPos[t] : {
x: 0,
y: -300
}, a = this;
i.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.1, cc.p(n.x, n.y)), cc.callFunc(function() {
i.destroy();
a.holdsList[t].push(e);
a.updateHolds(t);
})));
},
deleteCard: function() {
for (;this.cardNode.getChildByTag(this.outCardTag); ) this.cardNode.removeChildByTag(this.outCardTag);
},
showTurn: function(e) {
for (var t = 0; t < this._seats2.length; t++) this._seats2[t].hideIconTurn();
this._seats2[e].showIconTurn();
},
judgeShowPeace: function() {
var e = this;
if (cc.vv.gameNetMgr.getIsPeaceGame()) {
var t = cc.vv.gameNetMgr.getActionCount();
this.node.runAction(cc.sequence(cc.delayTime(t + 1), cc.callFunc(function() {
e.peaceNode.active = !0;
})));
}
},
showIconByAction: function(e, t) {
if (e >= cc.vv.globalSetting.ACTION_LEFT_CHI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI || e >= cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI && e <= cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", 1);
} else if (e == cc.vv.globalSetting.ACTION_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO || e == cc.vv.globalSetting.ACTION_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("weiqi", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO_CHUAN || e == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e == cc.vv.globalSetting.ACTION_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
} else if (e >= cc.vv.globalSetting.ACTION_KAI_DUO && e <= cc.vv.globalSetting.ACTION_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", 1);
}
},
showIcon: function(e, t) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wei");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
});
cc._RF.pop();
}, {} ],
QMT_Room: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ee941AvQf1OxpWvCXE3J+Tr", "QMT_Room");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_playerPos: [],
_itemsNodes: [],
_foldsNodes: [],
_iconsNodes: [],
_maxPlayerCount: null,
game_over: null
},
onLoad: function() {
var t = this;
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
this.initData();
this.initRes();
this.initView();
this.initComponent();
this.initSplitLine();
this.initOperationBtns();
this.initEatNode();
this.initHuNode();
this.initEventHandlers();
this.resetGame();
this.initBigCardBack();
this.initHoldsEventHandler();
this.initEatNodeEventHandler();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/GameBaseUI", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("BaseRoom")._seats2 = i._seats2;
e.getComponent("BaseRoom").initBaseRoom();
});
});
} else this.addComponent("QMT_Replay"); else cc.director.loadScene("loading");
},
initRes: function() {
this.gameNode = cc.find("Canvas/game");
this.outCardPools = this.gameNode.getChildByName("outCardPools");
this.lb_surplusCardNums = this.gameNode.getChildByName("lb_surplusCardNums");
this.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.gameOverHandNode = this.node.getChildByName("gameOverHandNode");
this.selfHandCardNode = this.gameNode.getChildByName("selfHandCardNode");
this.xingNode = this.node.getChildByName("xingNode");
this.surplusCardNode = this.node.getChildByName("surplusCardNode");
},
initData: function() {
this._maxPlayerCount = 3;
this._playerItems = [ [], [], [] ];
this._PlayerItemCount = [ 0, 0, 0 ];
this._outCardCoordinate = {
x: null,
y: null
};
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.isReconnectGame = !1;
this.iconItemTag = 1111;
this.recentOutCardValue = null;
this.pickCardCount = null;
this.shangbi_way = null;
this.xiabi_way = null;
this._handcardsInfoList = [];
this.end_seats_data = null;
this.xingCard = [];
this.isTianHu = !1;
this.has_action = !1;
this.actionCount = 0;
this.hucode = 0;
this.pick_seat = -1;
this.pick_data = -1;
this.out_seat = -1;
this.out_data = -1;
this.updateHoldCount = 0;
this.tuoGuanNode = null;
},
initComponent: function() {
cc.loader.loadRes("game/zipaiGames/qmt/prefabs/game_over", cc.Prefab, function(e, t) {
if (!e) {
this.game_over = cc.instantiate(t);
this.node.addChild(this.game_over, 10);
this.initSeats();
}
}.bind(this));
cc.loader.loadRes("game/zipaiGames/prefab/game_result", cc.Prefab, function(e, t) {
e || this.node.addChild(cc.instantiate(t), 10);
}.bind(this));
},
initSplitLine: function() {
this.splitLine = this.gameNode.getChildByName("splitLine");
this.splitWord = this.gameNode.getChildByName("splitWord");
this.handTip = this.gameNode.getChildByName("hand");
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.outCardPools;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initOperationBtns: function() {
this.operationBtnsNode = this.gameNode.getChildByName("operationBtnNode");
this.btn_eat = this.operationBtnsNode.getChildByName("btn_chi");
this.btn_peng = this.operationBtnsNode.getChildByName("btn_peng");
this.btn_win = this.operationBtnsNode.getChildByName("btn_win");
this.btn_pass = this.operationBtnsNode.getChildByName("btn_pass");
this.btn_liu = this.operationBtnsNode.getChildByName("btn_liu");
this.icon_win = this.operationBtnsNode.getChildByName("icon_win");
this.icon_peng = this.operationBtnsNode.getChildByName("icon_peng");
this.icon_chi = this.operationBtnsNode.getChildByName("icon_chi");
this.icon_pass = this.operationBtnsNode.getChildByName("icon_pass");
this.icon_liu = this.operationBtnsNode.getChildByName("icon_liu");
this.btn_liu.active = !1;
this.icon_liu.active = !1;
this.initOperationBtnsListener();
},
initOperationBtnsListener: function() {
var t = this;
this.btn_eat.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnEat();
});
this.btn_peng.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPeng();
});
this.btn_win.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnWin();
});
this.btn_pass.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPass();
});
},
initEatNode: function() {
this.eatNode = this.node.getChildByName("eatNode");
this.btnCloseEatNode = this.eatNode.getChildByName("btn_close");
this.btnCloseEatNodeIndex = 15e3;
},
initHuNode: function() {
var e = [ "selfHuNode", "rightHuNode", "leftHuNode" ];
this.huNodeList = [];
for (var t = 0; t < e.length; t++) {
var i = this.gameNode.getChildByName(e[t]), n = i.getChildByName("lb_huCount").getComponent(cc.Label);
i.active = !1;
n.string = 0;
this.huNodeList[t] = {
node: i,
lb: n
};
}
},
initView: function() {
this.animworldmap = this.node.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat"), a = i.getChildByName("folds"), s = i.getChildByName("items"), c = i.getChildByName("icons");
n.getChildByName("zhuang3").active = !1;
this._foldsNodes.push(a);
this._itemsNodes.push(s);
this._iconsNodes.push(c);
this._seats2.push(n.getComponent("Seat"));
this._playerPos.push(i.getPosition());
}
},
initHoldsEventHandler: function() {
new (e("holdsEventHandler"))().init(this, "wp_out");
},
initEatNodeEventHandler: function() {
new (e("eatNodeEventHandler"))().init(this);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("new_user", function(e) {
o.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
o.initSingleSeat(e.detail);
cc.vv.gameNetMgr.getLocalIndex(e.detail.seatindex);
});
this.node.on("wp_button_push", function(e) {
o.onGameStart();
o.initBigCardBack();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
o._seats2[t].setZhuang(!0);
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getSeatIndexByID(cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id), c = cc.vv.gameNetMgr.getLocalIndex(s);
o._seats2[c].setScore(n, a);
for (var r = 0; r < t.length; r++) cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id == cc.vv.gameNetMgr.seats[r].userid && (cc.vv.gameNetMgr.seats[r].score = n);
}
});
this.node.on("wp_state_push", function(e) {
o.canleReady();
});
this.node.on("kick_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("transfer_push", function(e) {});
this.node.on("seq_move_seat_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("wp_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.OnMsgUpdateSeatHolds(t, t.holds);
});
this.node.on("wp_folds_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id);
o.OnMsgShowFlods(t, e.detail.folds);
o.eatNode.active = !1;
});
this.node.on("wp_out_push_err", function(e) {
o._handcardsInfoList[o._outCardCoordinate.x].cards[o._outCardCoordinate.y].setPosition(o.clickCardPos.x, o.clickCardPos.y);
});
this.node.on("wp_out_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.out_user), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.out_user);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(e.detail.out_card, n.sex);
o.OnMsgShowOutCard(e.detail.out_card, i);
o.out_seat = i;
o.out_data = e.detail.out_card;
});
this.node.on("wp_turn_push", function(e) {
var t = cc.vv.gameNetMgr.turn;
o.OnMsgNoteOperater(t);
});
this.node.on("wp_surplus_push", function(e) {
var t = cc.vv.gameNetMgr.numOfMJ;
o.OnMsgUpdateSurplus(t);
});
this.node.on("wp_action_mask_push", function(e) {
var t = e.detail.action_mask;
o.has_action = 0 < t;
o.hideSplitLine();
o.OnMsgShowOperationTypes(e.detail.action_mask, e.detail.xiabi_actions);
o.has_action && o.hideSplitLine();
if (0 == o.actionCount && !o.isReconnecting) {
var i = t & 1 << cc.vv.globalSetting.OPERATE_HU;
o.isTianHu = 0 != i;
}
o.isTianHu && o.node.runAction(cc.sequence(cc.delayTime(5.5), cc.callFunc(function() {
o.operationBtnsNode.active = !0;
o.isTianHu = !1;
})));
o.actionCount++;
});
this.node.on("wp_cancel_action_push", function(e) {});
this.node.on("wp_pick_card_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.user_id);
o.hideSplitLine();
var a = 0 == o.pickCardCount ? 2.3 : 0, s = e.detail.card, c = n.sex;
o.node.runAction(cc.sequence(cc.delayTime(a), cc.callFunc(function() {
o.OnMsgShowPickCard(i, s, c);
})));
o.pick_seat = i;
o.pick_data = e.detail.card;
});
this.node.on("wp_item_push", function(e) {
var t = e.detail.user_id, i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = e.detail.add_items;
o.OnMsgShowItems(i, t, n);
cc.vv.gameNetMgr.getLocalIndex(i);
o.eatNode.active = !1;
o.operationBtnsNode.active = !1;
o.pick_seat = -1;
o.pick_data = -1;
o.out_seat = -1;
o.out_data = -1;
o.has_action = !1;
});
this.node.on("wp_hu_push", function(e) {
o.isSpcialHu = !1;
o.isSpcialHu = e.detail.special_hu;
cc.vv.gameNetMgr.setIsSpcialHu(o.isSpcialHu);
var t = o.isSpcialHu ? 1 : 0, i = e.detail;
o.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
o.OnMsgShowHu(i);
})));
});
this.node.on("wp_over", function(e) {
var t = o.isSpcialHu ? 1 : 0;
o.CloseTimer();
o.clearAutoState();
o.OnMsgShowSingleGameOver(e);
o.hideSplitLine();
o.scheduleOnce(function() {
o.initHuNode();
o.clearHolds();
o.clearFolds();
o.clearItemsCards();
o.clearOutCard();
o.clearSurplusCards();
o.clearGameOverHandCards();
o.initData();
o.outCardPools.removeAllChildren();
o.lb_surplusCardNums.getComponent(cc.Label).string = "";
}, 3 + t);
});
this.node.on("time_sync", function(e) {
o.on_time_sync(e.detail);
});
this.node.on("auto_push", function(e) {
o.on_auto_push(e.detail);
});
this.node.on("cancel_auto", function(e) {
o.on_cancel_auto(e.detail);
});
},
onGameStart: function() {
this.isGaming = !0;
this.pickCardCount = 0;
this.showHuNode();
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
e.is_auto && this._seats2[t].setTuoGuan(e.is_auto);
} else 1 == cc.vv.gameNetMgr.getIsWatch() && (this.BtnReady.node.active = !1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
},
resetGame: function() {
var t = this, e = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.getLocalIndex(e);
this.isReconnecting = !1;
if (!(e < 0)) {
this.updateHoldCount++;
this.initHuNode();
this.isReconnecting = !0;
this.OnMsgNoteOperater(e);
this.OnMsgUpdateSurplus(cc.vv.gameNetMgr.numOfMJ);
this.canleReady();
for (var n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; a++) {
this.OnMsgUpdateSeatHolds(n[a], n[a].holds);
this.OnMsgShowFlods(n[a].seatindex, n[a].folds);
this.OnMsgShowItems(n[a].seatindex, n[a].userid, n[a].items);
}
for (a = 0; a < n.length; a++) {
if (0 == cc.vv.gameNetMgr.getLocalIndex(n[a].seatindex)) {
this.xiabi_actions = {};
this.xiabi_actions = n[a].xiabi_actions;
if (n[a].select_action <= 0) {
this.OnMsgShowOperationTypes(n[a].action_mask, n[a].xiabi_actions);
this.has_action = 0 < n[a].action_mask;
}
n[a].is_auto && 1 == n[a].is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/zipai_tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
t.tuoGuanNode = e;
});
});
}
}
this.hideSplitLine();
this.drawOutByLocalTurn(i);
2 == cc.vv.gameNetMgr.gamestate && this.showHuNode();
this.isReconnecting = !1;
this.isReconnectGame = !0;
}
},
drawOutByLocalTurn: function(e) {
this.pick_seat = cc.vv.gameNetMgr.syncData.pick_seat;
this.pick_data = cc.vv.gameNetMgr.syncData.pick_data;
this.out_seat = cc.vv.gameNetMgr.syncData.out_seat;
this.out_data = cc.vv.gameNetMgr.syncData.out_data;
this.recentOutCardValue = -1;
0 < this.pick_data && (this.recentOutCardValue = this.pick_data);
0 < this.out_data && (this.recentOutCardValue = this.out_data);
this.clearOutCard();
if (0 < this.recentOutCardValue) {
var t = this.createOutCard(this.recentOutCardValue), i = this.getOutCardPos(e);
t.setPosition(i);
}
this.hideSplitLine();
0 == e && this.recentOutCardValue <= 0 && !this.has_action && this.showSplitLine();
},
OnMsgUpdateSeatHolds: function(e, t) {
if (!(0 < cc.vv.gameNetMgr.getLocalIndex(e.seatindex))) {
var i = [];
i = t.concat();
console.log("log---------OnMsgUpdateSeatHolds--this.updateHoldCount  this.clickCardPos=:", this.updateHoldCount, this.clickCardPos);
if (1 < this.updateHoldCount && !this.clickCardPos) this.drawHolds(t); else if (0 == this.isReconnecting && 0 < this._handcardsInfoList.length) this.deleteOutCards(t); else {
this.drawHolds(t);
this.dealAction();
}
this.holdstemp = [];
this.holdstemp = i.concat();
this.updateHoldCount++;
this.clickCardPos = null;
}
},
OnMsgUpdateSurplus: function(e) {
this.lb_surplusCardNums.getComponent(cc.Label).string = "牌x" + e;
},
OnMsgNoteOperater: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.CloseTimer();
this.ShowTimer(t, 15);
this.hideSplitLine();
0 == t && -1 == this.pick_seat && -1 == this.out_seat && this.showSplitLine();
if (0 == t && 21 == this.getSelfFoldCount()) {
this.hideSplitLine();
this.node.runAction(cc.sequence(cc.delayTime(2.4), cc.callFunc(function() {
this.showSplitLine();
}.bind(this))));
}
},
OnMsgShowOutCard: function(e, t) {
this.recentOutCardValue = e;
this.clearOutCard();
this.hideSplitLine();
var i = this.getOutCardPos(t);
this.clickCardPos || (this.clickCardPos = {
x: 0,
y: -200
});
if (0 == t) {
(n = this.createOutCard(e)).setPosition(this.clickCardPos.x, this.clickCardPos.y);
n.runAction(cc.moveTo(.15, i));
} else {
var n;
(n = this.createOutCard(e)).setPosition(this._playerPos[t].x, this._playerPos[t].y);
n.setScale(.4);
n.runAction(cc.spawn(cc.scaleTo(.15, 1), cc.moveTo(.15, i)));
}
this.CloseTimer();
},
OnMsgShowOperationTypes: function(e, t) {
this.xiabi_actions = {};
this.xiabi_actions = t;
this.decodeOperationValue(e);
(this._canEat || this._canPeng || this._canWin) && this.scheduleOnce(function() {
this.showOperationBtns();
}, .5);
},
OnMsgUpdateGameCount: function() {
this.lbGameCount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
},
OnMsgShowItems: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = !this.isReconnecting;
this.operationBtnsNode.active = !1;
this.clearOutCard();
for (var s = 0; s < i.length; s++) {
this.showIconByItem(i[s][0], n, t, this.isReconnecting);
this.savePlayersItem(n, i[s]);
this.showItemCards(n, i[s], a);
this.updateHuCount(n);
}
},
OnMsgShowPickCard: function(i, e, t) {
this.recentOutCardValue = e;
var n = this.showPickCard(e, i), a = !1;
if (0 == this.pickCardCount && 20 == this.getSelfFoldCount() && !this.isReconnectGame) {
n.tag = 10010;
a = !0;
this.scheduleOnce(function() {
var e = {};
if (0 == i) {
n.removeFromParent();
n = null;
e = {
x: 0,
y: -300
};
var t = cc.vv.zipai_drawCard.drawCard(this.recentOutCardValue, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
t.parent = this.selfHandCardNode;
t.tag = this.recentOutCardValue;
t.setPosition(0, 430);
t.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
t.destroy();
this.drawHolds(this.holdstemp);
this.isTianHu || this.showSplitLine();
}.bind(this))));
} else {
e = this._playerPos[i];
n.runAction(cc.sequence(cc.delayTime(.7), cc.moveTo(.3, cc.p(e.x, e.y)), cc.callFunc(function() {
n.destroy();
})));
}
}.bind(this), 1.5);
}
a || cc.vv.zipai_atlasAndAudioUtils.playCardSound(e, t);
this.pickCardCount++;
},
OnMsgShowFlods: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = 2 == i ? 1 : -1;
if (0 == this.isReconnecting) {
var a = t.length - 1;
this.clearOutCard();
var s = this.createOutCard(t[a]);
s.active = !0;
s.parent = this._foldsNodes[i];
var c = this._foldsNodes[i].convertToNodeSpace(cc.v2(640, 370));
s.setPosition(c.x, c.y);
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.p(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0)), cc.scaleTo(.2, .55 * this._handCardSpriteSize.width / this._outCardSpriteSize.width, .55 * this._handCardSpriteSize.height / this._outCardSpriteSize.height)), cc.callFunc(function() {
s.destroy();
var e = cc.vv.zipai_drawCard.drawCard(t[a], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
e.parent = this._foldsNodes[i];
e.setScale(.55);
e.setPosition(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}.bind(this))));
} else for (var r in t) {
var o = cc.vv.zipai_drawCard.drawCard(t[r], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
o.parent = this._foldsNodes[i];
o.setScale(.55);
o.setPosition(.55 * this._handCardSpriteSize.width * r * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}
},
OnMsgShowHu: function(e) {
this.CloseTimer();
this.hideSplitLine();
this.eatNode.active = !1;
this.operationBtnsNode.active = !1;
var t = cc.vv.gameNetMgr.getSeatByID(e.hu_user_id), i = cc.vv.gameNetMgr.getSeatIndexByID(e.hu_user_id), n = cc.vv.gameNetMgr.getSeatIndexByID(e.pao_user_id), a = cc.vv.gameNetMgr.getLocalIndex(i), s = cc.vv.gameNetMgr.getLocalIndex(n);
if (a == s) {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.ZIMO, a);
} else {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.PAO, s);
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.HU, a);
}.bind(this))));
}
},
OnMsgShowSingleGameOver: function(e) {
var t = e.detail.end_seats_data;
e.detail.hu_user_id, e.detail.pokers.concat();
this.end_seats_data = e.detail.end_seats_data;
for (var i in t) {
var n = cc.vv.gameNetMgr.getSeatIndexByID(t[i].user_id), a = cc.vv.gameNetMgr.getLocalIndex(n);
0 < a && this.showGameOverHandCards(t[i].holds, a);
}
this.clearOutCard();
},
getOutCardPos: function(e) {
switch (e) {
case 0:
return cc.p(0, 70);

case 1:
return cc.p(350, 150);

case 2:
return cc.p(-350, 150);
}
},
savePlayersItem: function(e, t) {
this.doSpecialItem(t, e);
},
doSpecialItem: function(e, t) {
var i = e[0], n = e[1];
e[2];
this.specialItemIndex = -1;
if (i == cc.vv.globalSetting.ITEM_PENG_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var a = 0; a < this._playerItems[t].length; a++) {
if (n == this._playerItems[t][a][1]) {
this._playerItems[t][a] = e;
this.specialItemIndex = a;
return;
}
} else this._playerItems[t].push(e);
},
doChongZhao: function(e, t) {
if (!t) {
this.judgeIsChongZhao(e) && this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.CHONGZHAO, e);
}
},
showIconByItem: function(e, t, i, n) {
if (!n) {
var a = cc.vv.gameNetMgr.getSeatByID(i).sex;
if (e >= cc.vv.globalSetting.ITEM_LEFT_CHI && e <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", a);
} else if (e == cc.vv.globalSetting.ITEM_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO || e == cc.vv.globalSetting.ITEM_GUO_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("weiqi", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO_CHUAN || e == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", a);
} else if (e >= cc.vv.globalSetting.ITEM_KAI_DUO && e <= cc.vv.globalSetting.ITEM_SAO_KAI_DUO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("paoqi", a);
}
}
},
showSplitLine: function() {
this.splitLine.active = !0;
this.splitWord.active = !0;
this.handTip.active = !0;
this.handTip.setPosition(370, -220);
this.handTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.p(60, 70)), cc.moveBy(0, cc.p(-60, -70)))));
},
hideSplitLine: function() {
this.splitLine.active = !1;
this.splitWord.active = !1;
this.handTip.active = !1;
this.handTip.stopAllActions();
},
decodeOperationValue: function(e) {
this.operationsList = [];
this.shangbi_List = [];
this._canEat = !1;
this._canPeng = !1;
this._canWin = !1;
this._canPass = !1;
this.shangbi_List = this.decodeEatAcition(e);
0 < this.shangbi_List.length && (this._canEat = !0);
0 != (e & 1 << cc.vv.globalSetting.OPERATE_PASS) && (this._canPass = !0);
if (0 != (e & 1 << cc.vv.globalSetting.OPERATE_PENG)) {
this.operationsList.push(cc.vv.globalSetting.OPERATE_PENG);
this._canPeng = !0;
}
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_GUO_SAO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_CHUAN);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO);
this.judgeAutoOperation(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_PENG_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_KAI_DUO_HU);
this.judgeHuCode(e, cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN_HU);
2 == e && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
}, 2);
},
judgeAutoOperation: function(e, t) {
0 != (e & 1 << t) && this.scheduleOnce(function() {
this.sendMsgOperation(t);
}, 2);
},
judgeHuCode: function(e, t) {
if (0 != (e & 1 << t)) {
this.hucode = t;
this._canWin = !0;
}
},
decodeEatAcition: function(e) {
var t = [];
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_LEFT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_CENTER_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_RIGHT_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI);
this.judgeExistEatAction(t, e, cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI);
return t;
},
judgeExistEatAction: function(e, t, i) {
0 != (t & 1 << i) && e.push(i);
},
showOperationBtns: function() {
this.operationBtnsNode.active = !0;
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this._canEat && (this.btn_eat.active = !0);
this._canPeng && (this.btn_peng.active = !0);
this._canPass && (this.btn_pass.active = !0);
this._canWin && (this.btn_win.active = !0);
this.isTianHu && (this.operationBtnsNode.active = !1);
},
showIcon: function(e, t) {
if (1 != this.isReconnecting) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wei");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("ti");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongpao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
e == cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN && (i.y += 130);
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
},
showItemCards: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = t[0], a = t[1], s = cc.vv.QMT_Utils.getItemCards(n, a), c = this._itemsNodes[e].convertToNodeSpace(cc.v2(640, 410)), r = 1 == e ? -1 : 1, o = i ? .2 : 0;
this._PlayerItemCount[e] = 0 <= this.specialItemIndex ? this.specialItemIndex : this._PlayerItemCount[e];
for (var h = 0; h < s.length; h++) {
var l = null;
if (0 < s[h]) {
l = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_SAO && h < 2 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(n == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) && h < 3 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (n >= cc.vv.globalSetting.ITEM_LEFT_CHI && n <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI && 2 == h) {
l.getComponent("zipai_card").setBlack(!1);
}
} else l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
l.setScale(.55);
l.parent = this._itemsNodes[e];
l.setPosition(c.x, c.y);
l.runAction(cc.moveTo(o, cc.p(r * this._PlayerItemCount[e] * this._handCardSpriteSize.width * .55 + r * this._handCardSpriteSize.width * .55 / 2, .55 * this._handCardSpriteSize.height * h)));
}
this.specialItemIndex < 0 ? this._PlayerItemCount[e]++ : this._PlayerItemCount[e] = this._playerItems[e].length;
},
judgeIsChongZhao: function(e) {
var t = this._playerItems[e].length;
if ((n = this._playerItems[e][t - 1][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) for (var i = 0; i < t - 1; i++) {
var n;
if ((n = this._playerItems[e][i][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) return !0;
}
return !1;
},
showGameOverHandCards: function(e, t) {
this.gameOverHandNode.active = !0;
var i = this.gameOverHandNode.getChildByName([ "right", "left" ][t - 1]);
i.active = !0;
i.removeAllChildren();
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = i;
a.setScale(.75);
a.setPosition(n % 7 * this._handCardSpriteSize.width * .75 - 126, .75 * this._handCardSpriteSize.height - .75 * this._handCardSpriteSize.height * Math.floor(n / 7));
}
},
deleteOutCards: function(e) {
var t = this.getNeedDeleteCards(e);
if (1 != t.length) {
for (var i in t) for (var n = !1, a = 0; a < this._handcardsInfoList.length; a++) {
for (var s = 0; s < this._handcardsInfoList[a].cards.length; s++) {
var c = this._handcardsInfoList[a].cards[s].getComponent("zipai_card").getValue();
if (t[i] == c) {
this.deleteOutCard(a, s);
n = !0;
break;
}
}
if (1 == n) break;
}
this.replaceCards();
} else {
this.deleteOutCard(this._outCardCoordinate.x, this._outCardCoordinate.y);
this.replaceCards();
}
},
deleteOutCard: function(e, t) {
this._handcardsInfoList[e].cards[t].destroy();
1 < this._handcardsInfoList[e].cards.length ? this._handcardsInfoList[e].cards.splice(t, 1) : this._handcardsInfoList.splice(e, 1);
},
getNeedDeleteCards: function(e) {
for (var t = [], i = 0; i < this.holdstemp.length; i++) {
var n = e.indexOf(this.holdstemp[i]);
-1 != n ? e.splice(n, 1) : t.push(this.holdstemp[i]);
}
return t;
},
getSelfFoldCount: function() {
for (var e = 0, t = 0; t < this._handcardsInfoList.length; t++) e += this._handcardsInfoList[t].cards.length;
return e;
},
OnClickBtnEat: function() {
cc.vv.audioMgr.playBtnClick();
this.eatlist = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.clearXiabiCards();
this.showEatCards(this.shangbi_List, cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI);
},
OnClickBtnPeng: function() {
cc.vv.audioMgr.playBtnClick();
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PENG);
},
OnClickBtnWin: function() {
cc.vv.audioMgr.playBtnClick();
this.sendMsgOperation(this.hucode);
},
OnClickBtnPass: function() {
cc.vv.audioMgr.playBtnClick();
this.has_action = !1;
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
},
OnClickCloseEatNode: function() {
if (1 == this.eatNode.active) {
this.eatNode.active = !1;
this.shangbi_way = null;
this.xiabi_way = null;
}
},
sendMsgOperation: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
this.operationBtnsNode.active = !1;
this.eatNode.active = !1;
var i = JSON.parse(cc.vv.msgTemp_GLZP.CS_card_type_action);
i.action = e;
i.xiabi_action = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("wp_card_type_action", i);
},
showEatCards: function(e, t) {
if (0 != e.length) for (var i in e) e[i] == cc.vv.globalSetting.OPERATE_LEFT_CHI ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 1, this.recentOutCardValue + 2 ], cc.vv.globalSetting.OPERATE_LEFT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_CENTER_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 1, this.recentOutCardValue, this.recentOutCardValue + 1 ], cc.vv.globalSetting.OPERATE_CENTER_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_RIGHT_CHI ? this.showSingleEatCard([ this.recentOutCardValue - 2, this.recentOutCardValue - 1, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_RIGHT_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI ? this.showSingleEatCard([ 2, 7, 10 ], cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI ? this.showSingleEatCard([ 12, 17, 20 ], cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI ? this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue + 10, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, t) : e[i] == cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI && (this.recentOutCardValue <= 10 ? this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t) : this.showSingleEatCard([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue - 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, t));
},
showSingleEatCard: function(e, t, i) {
this.eatNode.active = !0;
this.eatlist[this.eatWayCount] = {
cardSprites: [],
operation: null,
type: null
};
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = this.eatNode;
a.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? a.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 170 - this._handCardSpriteSize.height * n) : a.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -45 - this._handCardSpriteSize.height * n);
this.eatlist[this.eatWayCount].cardSprites.push(a);
}
this.eatlist[this.eatWayCount].operation = t;
this.eatlist[this.eatWayCount].type = i;
var s = new cc.Node("New Sprite");
s.addComponent(cc.Sprite).spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("jiantou");
s.parent = this.eatNode;
s.tag = 2222 * i;
i == cc.vv.zipai_cardsSort.enumTalbe.eatType.SHANG_BI ? s.setPosition(this.eatWayCount % this.shangbi_List.length * 100 - 185, 10) : s.setPosition(100 * Math.floor(this.eatWayCount - this.shangbi_List.length) - 185, -200);
s.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.15, cc.p(0, -3.5)), cc.moveBy(.3, cc.p(0, 7)), cc.moveBy(.15, cc.p(0, -3.5)))));
this.eatWayCount++;
},
dealAction: function() {
if (!this.isReconnecting) {
var e = 0;
this.node.runAction(cc.repeat(cc.sequence(cc.callFunc(function() {
cc.vv.zipai_atlasAndAudioUtils.playDealCardsSound();
}), cc.delayTime(.55)), 4));
for (var t = 0; t < this._handcardsInfoList.length; t++) for (var i = 0; i < this._handcardsInfoList[t].cards.length; i++) {
e++;
this._handcardsInfoList[t].cards[i].runAction(cc.sequence(cc.hide(), cc.delayTime(.1 * e), cc.show()));
}
}
},
showXiabiCards: function(e) {
this.xiabi_list = [];
this.eatWayCount = this.shangbi_List.length;
this.xiabi_list = this.decodeEatAcition(this.xiabi_actions[e]);
this.showEatCards(this.xiabi_list, cc.vv.zipai_cardsSort.enumTalbe.eatType.XIA_BI);
},
CloseTimer: function() {
for (var e in this._seats2) this._seats2[e].closeTimer();
},
ShowTimer: function(e, t) {
this._seats2[e].showTimer(t);
},
showPickCard: function(e, t) {
var i = null, n = this.getOutCardPos(t);
this.clearOutCard();
if (0 == e) {
(i = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK)).parent = this.outCardPools;
i.tag = 1e3;
} else i = this.createOutCard(e);
i.active = !1;
i.setPosition(n);
this.bigCardBack.setScale(.6);
this.bigCardBack.setPosition(0, 270);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, n), cc.scaleTo(.3, 1)), cc.callFunc(function() {
this.bigCardBack.active = !1;
i.active = !0;
}.bind(this))));
return i;
},
createOutCard: function(e) {
var t = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG);
t.parent = this.outCardPools;
t.tag = 1e3;
return t;
},
drawHolds: function(e) {
this.selfHandCardNode.removeAllChildren(!1);
this._handcardsInfoList = [];
for (var t = e.concat(), i = cc.vv.zipai_cardsSort.cardSort(t), n = 0; n < i.sort.length; n++) {
this._handcardsInfoList[n] = {
posx: n * this._outCardSpriteSize.width - 320,
cards: []
};
for (var a = 0; a < Math.ceil(i.sort[n].type); a++) {
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.threeNotSame && 2 == a && (i.sort[n].value = 10 < i.sort[n].value ? i.sort[n].value - 10 : i.sort[n].value + 10);
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.shunZi && 0 < a && i.sort[n].value++;
(s = cc.vv.zipai_drawCard.drawCard(i.sort[n].value, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.sort[n].value;
s.getComponent("zipai_card").setOrder(Math.ceil(i.sort[n].type) - a);
s.getComponent("zipai_card").setType(i.sort[n].type);
s.setLocalZOrder(Math.ceil(i.sort[n].type) - a);
this._handcardsInfoList[n].cards.push(s);
}
}
for (n = 0; n < i.single.length; n++) {
n % 3 == 0 && (this._handcardsInfoList[i.sort.length + Math.floor(n / 3)] = {
posx: (i.sort.length + Math.floor(n / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var s;
(s = cc.vv.zipai_drawCard.drawCard(i.single[n], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.single[n];
s.getComponent("zipai_card").setOrder(i.single.length - n);
s.setLocalZOrder(i.single.length - n);
this._handcardsInfoList[i.sort.length + Math.floor(n / 3)].cards.push(s);
}
this.replaceCards();
},
showHuNode: function() {
for (var e = 0; e < this._maxPlayerCount; e++) this.huNodeList[e].node.active = !0;
},
updateHuCount: function(e) {
for (var t = 0, i = 0; i < this._playerItems[e].length; i++) {
var n = this._playerItems[e][i][0], a = this._playerItems[e][i][1], s = cc.vv.QMT_Utils.getItemCards(n, a);
t += cc.vv.QMT_Utils.getHuCount(n, s);
}
this.huNodeList[e].lb.string = t;
},
replaceCards: function() {
for (var e = 0; e < this._handcardsInfoList.length; e++) for (var t = 0; t < this._handcardsInfoList[e].cards.length; t++) {
this._handcardsInfoList[e].cards[t].setPosition(e * this._outCardSpriteSize.width - 310 + (8 - this._handcardsInfoList.length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * t - .15 * this._outCardSpriteSize.height);
this._handcardsInfoList[e].cards[t].setLocalZOrder(this._handcardsInfoList[e].cards.length - t);
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setOrder(Math.ceil(this._handcardsInfoList[e].cards.length - t));
var i = this._handcardsInfoList[e].cards[t].getComponent("zipai_card").getType();
if (i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.three || i == cc.vv.zipai_drawCard.enumTalbe.holdTpye.four) {
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setBlack(!0);
}
}
},
clearItemsCards: function() {
for (var e = 0; e < this._itemsNodes.length; e++) this._itemsNodes[e].removeAllChildren();
},
clearHolds: function() {
this.selfHandCardNode.removeAllChildren();
},
clearFolds: function() {
for (var e = 0; e < this._foldsNodes.length; e++) this._foldsNodes[e].removeAllChildren();
},
clearSurplusCards: function() {
this.surplusCardNode.removeAllChildren();
},
clearOutCard: function() {
for (;this.outCardPools.getChildByTag(1e3); ) this.outCardPools.removeChildByTag(1e3);
},
clearGameOverHandCards: function() {
this.gameOverHandNode.active = !1;
for (var e = 1; e < this.gameOverHandNode.children.length; e++) this.gameOverHandNode.children[e].removeAllChildren();
},
clearXiabiCards: function() {
for (;this.eatNode.getChildByTag(-2222); ) this.eatNode.removeChildByTag(-2222);
},
clearShangbiCards: function() {
for (;this.eatNode.getChildByTag(2222); ) this.eatNode.removeChildByTag(2222);
},
clearAutoState: function() {
for (var e = 0; e < this._seats2.length; e++) this._seats2[e].setTuoGuan(!1);
for (e = 0; e < cc.vv.gameNetMgr.seats.length; e++) cc.vv.gameNetMgr.seats[e].is_auto && (cc.vv.gameNetMgr.seats[e].is_auto = !1);
},
on_auto_push: function(e) {
var t = this;
console.log("log------------on_auto_push------------this.tuoGuanNode=:", this.tuoGuanNode);
this.tuoGuanNode || e.user_id == cc.vv.userMgr.userId && 1 == e.is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/zipai_tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
t.tuoGuanNode = e;
});
});
var i = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), n = cc.vv.gameNetMgr.getLocalIndex(i);
this._seats2[n].setTuoGuan(e.is_auto);
},
on_cancel_auto: function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t);
this._seats2[i].setTuoGuan(e.is_auto);
if (cc.vv.userMgr.userId == e.user_id) {
this.tuoGuanNode = null;
console.log("log------------on_cancel_auto------------this.tuoGuanNode=:", this.tuoGuanNode);
}
},
on_time_sync: function(e) {
var t = Math.floor((e.end - e.sys) / 1e3);
this._turn_time = t;
console.log("服务器倒计时", t);
var i = cc.vv.gameNetMgr.turn;
this.ShowTimer(i, t);
},
onDestroy: function() {
cc.vv.voiceMgr.stop();
}
});
cc._RF.pop();
}, {
eatNodeEventHandler: "eatNodeEventHandler",
holdsEventHandler: "holdsEventHandler"
} ],
QMT_Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "afbb6E2QPVEQrsqWGwZVQWF", "QMT_Utils");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && (cc.vv.QMT_Utils = this);
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI:
i.push(t + 1);
i.push(t + 2);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ACTION_CENTER_CHI_XIABI:
i.push(t - 1);
i.push(t + 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ACTION_RIGHT_CHI_XIABI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI_XIABI:
switch (t) {
case 2:
i.push(7);
i.push(10);
i.push(t);
break;

case 7:
i.push(2);
i.push(10);
i.push(t);
break;

case 10:
i.push(2);
i.push(7);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI_XIABI:
switch (t) {
case 12:
i.push(17);
i.push(20);
i.push(t);
break;

case 17:
i.push(12);
i.push(20);
i.push(t);
break;

case 20:
i.push(12);
i.push(17);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t + 10);
i.push(t + 10);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t + 10);
i.push(t);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_PENG:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getHuCount: function(e, t) {
for (var i = 0; i < t.length; i++) for (var n = i + 1; n < t.length; n++) if (t[i] > t[n]) {
var a = t[i];
t[i] = t[n];
t[n] = a;
}
if (0 == t[0]) return 0;
switch (e) {
case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
return 10 < t[0] ? 12 : 9;

case cc.vv.globalSetting.ITEM_KAN:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
return 10 < t[0] ? 6 : 3;

case cc.vv.globalSetting.ITEM_PENG:
return 10 < t[0] ? 3 : 1;

case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
return 10 < t[0] ? 9 : 6;

case cc.vv.globalSetting.ITEM_DUIZI:
case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
return 0;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
return 6;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
return 3;

case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SHUNZI:
return 1 == t[0] ? 3 : 11 == t[0] ? 6 : 0;
}
}
});
cc._RF.pop();
}, {} ],
ReConnect: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7f553G0boRH6KrTE7wACaXx", "ReConnect");
cc.Class({
extends: cc.Component,
properties: {
_reconnect: null,
_lblTip: null,
_lastPing: 0
},
onLoad: function() {
this._reconnect = this.node;
this.node.active = !1;
this._lblTip = this.node.getChildByName("tip").getComponent(cc.Label);
var i = this, n = cc.find("Canvas");
n.on("disconnect", function e(t) {
n.off("disconnect", e);
i._reconnect && (i._reconnect.active = !0);
cc.vv.netMgr.closeHallServer();
});
n.on("dispress_push", function(e) {
cc.vv.netMgr.closeHallServer();
});
},
update: function(e) {
if (this._reconnect && this._reconnect.active) {
var t = Math.floor(Date.now() / 1e3) % 4, i = "网络状态不佳，重新连接中...";
cc.vv.gameNetMgr.roomId || (i = "房间已解散，正在返回大厅...");
this._lblTip.string = i;
for (var n = 0; n < t; ++n) this._lblTip.string += ".";
}
}
});
cc._RF.pop();
}, {} ],
ReplayCtrl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1faabdQf9GKYGSAcBpgQL6", "ReplayCtrl");
cc.Class({
extends: cc.Component,
properties: {
_nextPlayTime: 1,
_replay: null
},
onLoad: function() {
if (null != cc.vv) {
this._replay = cc.find("Canvas/replayGame");
this._replay.active = cc.vv.gameNetMgr.isReplay;
this.lb_decs = cc.find("Canvas/replayGame/replay/show_decs").getComponent(cc.Label);
this.lb_show = cc.find("Canvas/replayGame/replay/btn_pause/btn_txt").getComponent(cc.Label);
this.lb_show.string = "暂停";
this.lb_decs.string = "播放中";
this._isRepPlaying = !0;
}
},
onBtnPauseClicked: function() {
cc.vv.audioMgr.playBtnClick();
if ("暂停" != this.lb_show.string) if ("播放中" != this.lb_show.string) ; else {
this.lb_show.string = "暂停";
this._isRepPlaying = !0;
this.lb_decs.string = "播放中";
} else {
this.lb_show.string = "播放中";
this._isRepPlaying = !1;
this.lb_decs.string = "暂停";
}
},
onBtnPlayClicked: function() {
cc.vv.audioMgr.playBtnClick();
},
onBtnBackClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.replayMgr.clear();
cc.vv.gameNetMgr.resetGame();
cc.director.loadScene("hall");
},
update: function(e) {
if (cc.vv && 1 == this._isRepPlaying && 1 == cc.vv.gameNetMgr.isReplay && 0 < this._nextPlayTime) {
this._nextPlayTime -= e;
this._nextPlayTime < 0 && (this._nextPlayTime = cc.vv.replayMgr.takeAction());
}
}
});
cc._RF.pop();
}, {} ],
ReplayMgr: [ function(s, e, t) {
"use strict";
cc._RF.push(e, "8ef81n3n5JPQbjKTEAtCKtU", "ReplayMgr");
cc.Class({
extends: cc.Component,
properties: {
_lastAction: null,
_actionRecords: null,
_currentIndex: 0,
_server_type: -1
},
onLoad: function() {},
clear: function() {
this._lastAction = null;
this._actionRecords = null;
this._currentIndex = 0;
},
ininGameNetMgr: function(e, t, i) {
var n = JSON.parse(e.base_info).server_type;
this._server_type = n;
var a = s("GameNetMgr" + n);
cc.vv.gameNetMgr = new a();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.prepareReplay(e, t, i);
n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_RUN ? cc.director.loadScene("mjgame_PDK") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_LANDLORD ? cc.director.loadScene("mjgame_DDZ") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_OX ? cc.director.loadScene("mjgame_DNN") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_JINH ? cc.director.loadScene("mjgame_zjh") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_DEZ ? cc.director.loadScene("mjgame_DZPK") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PHZ ? cc.director.loadScene("mjgame_PDK") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_21 ? cc.director.loadScene("mjgame_21D") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_3G ? cc.director.loadScene("mjgame_3G") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SHISANSHUI ? cc.director.loadScene("mjgame_13S") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_SANDAHA ? cc.director.loadScene("mjgame_3DH") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PAGUO ? cc.director.loadScene("mjgame_PAGUO") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_10POINT ? cc.director.loadScene("mjgame_10DB") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_SSP ? cc.director.loadScene("Game_SSP") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP ? cc.director.loadScene("zipaiGameScene") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ ? cc.director.loadScene("wzmj_game") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ ? cc.director.loadScene("Game_FZMJ") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HN ? cc.director.loadScene("3Dmahjong") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_ZZ ? cc.director.loadScene("3Dmahjong") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HZ ? cc.director.loadScene("3Dmahjong") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC ? cc.director.loadScene("Game_DCZB") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PK_PINGOINGLE ? cc.director.loadScene("Game_PPL") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ ? cc.director.loadScene("zipaiGameScene") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF ? cc.director.loadScene("zipaiGameScene") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW ? cc.director.loadScene("zipaiGameScene") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT ? cc.director.loadScene("zipaiGameScene") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH ? cc.director.loadScene("zipaiGameScene") : n == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ && cc.director.loadScene("zipaiGameScene");
},
init: function(e, t) {
var i = JSON.parse(e.base_info).server_type;
if (i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_SSP && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HN && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_ZZ && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HZ && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH && i != cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ) {
var n = JSON.parse(t[0].change_info), a = JSON.parse(t[0].actions), s = JSON.parse(t[0].folds);
JSON.parse(t[0].holds);
null == this._actionRecords && (this._actionRecords = []);
var c = n.button, r = a.length, o = 0, h = 1, l = 2, d = 3;
if (0 == c) {
o = 0;
h = 1;
l = 2;
d = 4 == r ? 3 : -1;
} else if (1 == c) {
o = 1;
h = 2;
l = 4 == r ? 3 : 0;
d = 4 == r ? 0 : -1;
} else if (2 == c) {
o = 2;
h = 4 == r ? 3 : 0;
l = 4 == r ? 0 : 1;
d = 4 == r ? 1 : -1;
} else if (3 == c) {
o = 3;
h = 0;
l = 1;
d = 2;
}
for (var u = [ o, h, l, d ], v = a[o], g = 0; g < v.length; g++) for (var _ = 0; _ < u.length; _++) {
var f = u[_];
if (-1 != f && null != a[f] && null != a[f][g]) {
var p = {};
p.type = a[f][g];
p.seatindex = f;
p.folds = s[f][g];
p.public_card = p;
this._actionRecords.push(p);
}
}
this._currentIndex = 0;
this._lastAction = null;
} else this.init_else(t);
},
init_else: function(e) {
JSON.parse(e[0].change_info);
var t = JSON.parse(e[0].actions), i = JSON.parse(e[0].folds);
JSON.parse(e[0].holds);
this._actionRecords = [];
for (var n = 0; n < t.length; n++) {
var a = {};
a.d_actions = t[n];
a.folds = i[n];
this._actionRecords.push(a);
}
this._currentIndex = 0;
this._lastAction = null;
},
isReplay: function() {
return null != this._actionRecords;
},
takeAction: function() {
if (this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_SSP || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_WZ || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_FZ || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HN || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_ZZ || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_HZ || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_MJ_DC || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH || this._server_type == cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ) return this.takeAction_else();
if (this._currentIndex >= this._actionRecords.length) {
cc.vv.gameNetMgr.doReplayActionOver();
return -1;
}
var e = this._actionRecords[this._currentIndex];
this._currentIndex++;
if (null == (this._lastAction = e)) return -1;
cc.vv.gameNetMgr.doReplayAction(e);
return 2.5;
},
takeAction_else: function() {
if (this._currentIndex >= this._actionRecords.length) {
cc.vv.gameNetMgr.doReplayActionOver();
return -1;
}
var e = this._actionRecords[this._currentIndex];
this._currentIndex++;
if (null == (this._lastAction = e)) return -1;
var t = this._currentIndex, i = this._actionRecords[t], n = {};
n.action = e;
n.next = i;
cc.vv.gameNetMgr.doReplayAction(n);
return 1;
}
});
cc._RF.pop();
}, {} ],
RewardDialog: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d695cimEeNCyqF2zyqveoyT", "RewardDialog");
cc.Class({
extends: cc.Component,
properties: {
txt_1: {
default: null,
type: cc.Label
},
txt_2: {
default: null,
type: cc.Label
},
txt_3: {
default: null,
type: cc.RichText
},
node_reward: {
default: null,
type: cc.Node
}
},
onLoad: function() {},
start: function() {},
setViewData: function(e) {
var t = "第" + e.index + "名";
this.txt_3.string = "< color = #FF0000 > < b > " + t + " < /b></c >";
},
onClickContinue: function() {
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_SHOW_BTN_CONTINUE_GAME);
cc.vv.gameNetMgr.node_game_over || cc.vv.eventMgr.emit(cc.vv.event.SHOW_MATCH_DDZ_HALL);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_DDZ_REMOVE_REWARD_DIALOG);
}
});
cc._RF.pop();
}, {} ],
Seat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "820870ltMZNDYlvzr+qCDEJ", "Seat");
cc.Class({
extends: cc.Component,
properties: {
_sprIcon: null,
_zhuang: null,
_ready: null,
_offline: null,
_lblName: null,
_lblScore: null,
_lblScore2: null,
_scoreBg: null,
_nddayingjia: null,
_voicemsg: null,
_zhuang2: null,
_chatBubble: null,
_emoji: null,
_lastChatTime: -1,
_userName: "",
_score: 0,
_dayingjia: !1,
_isOffline: !1,
_isReady: !1,
_isZhuang: !1,
_userId: null,
_paiCount: 0,
_isScoreRunning: 0,
_time: -1,
_totalTime: -1,
_alertTime: -1
},
onLoad: function() {
if (null != cc.vv) {
var e = this.node.getChildByName("Sprite");
if (null != e) {
this._paiCount = e.getChildByName("num");
this._paiCount.getComponent(cc.Label).string = "";
}
var t = this.node.getChildByName("mask");
this._sprIcon = t ? t.getChildByName("icon").getComponent("ImageLoader") : this.node.getChildByName("icon").getComponent("ImageLoader");
this._lblName = this.node.getChildByName("name").getComponent(cc.Label);
this._lblScore = this.node.getChildByName("score").getComponent(cc.Label);
this._lblScore.node.scale = 1.5;
if (null != this.node.getChildByName("score2")) {
this._lblScore2 = this.node.getChildByName("score2").getComponent(cc.Label);
this._lblScore2.node.scale = 2;
this._lblScore2.node.active = !1;
}
if (null != this.node.getChildByName("zhuang2")) {
this._zhuang2 = this.node.getChildByName("zhuang2");
this._zhuang2.scale = 2;
this._zhuang2.active = !1;
}
this._voicemsg = this.node.getChildByName("voicemsg");
this._xuanpai = this.node.getChildByName("xuanpai");
this.refreshXuanPaiState();
this._voicemsg && (this._voicemsg.active = !1);
this._sprIcon && this._sprIcon.getComponent(cc.Button) && cc.vv.utils.addClickEvent(this._sprIcon, this.node, "Seat", "onIconClicked");
this._offline = this.node.getChildByName("offline");
this._ready = this.node.getChildByName("ready");
this._ready && (this._ready.active = this._isReady);
this._zhuang = this.node.getChildByName("zhuang");
this._scoreBg = this.node.getChildByName("Z_money_frame");
this._nddayingjia = this.node.getChildByName("dayingjia");
this._chatBubble = this.node.getChildByName("ChatBubble");
null != this._chatBubble && (this._chatBubble.active = !1);
this._emoji = this.node.getChildByName("emoji");
null != this._emoji && (this._emoji.active = !1);
this.refresh();
this._sprIcon && this._userId && this._sprIcon.setUserID(this._userId);
this._TimerMC = this.node.getChildByName("TimerMC");
if (this._TimerMC) {
this._timeLabel = this._TimerMC.getChildByName("timeNum").getComponent(cc.Label);
this._timeLabel.string = "00";
this._progress = this._TimerMC.getChildByName("bar");
this._progress.getComponent(cc.ProgressBar).progress = 1;
this._TimerMC.active = !1;
}
this._zhuang3 = this.node.getChildByName("zhuang3");
}
},
showIconTurn: function() {
this._zhuang3.active = !0;
},
hideIconTurn: function() {
this._zhuang3.active = !1;
},
showName: function() {
this._lblName && (this._lblName.node.active = !0);
},
hideName: function() {
this._lblName && (this._lblName.node.active = !1);
},
onIconClicked: function() {
cc.vv.audioMgr.playBtnClick();
var e = this._sprIcon.node.getComponent(cc.Sprite);
if (null != this._userId && 0 < this._userId) {
var t = cc.vv.gameNetMgr.getSeatByID(this._userId);
if (cc.vv.baseInfoMap) {
var i = cc.vv.baseInfoMap[this._userId];
i && i.sex;
}
cc.vv.userMgr.getOtherUserInfo(t.userid, t.ip, e);
}
},
refresh: function() {
null != this._lblName && (cc.vv.userMgr.isHighDefend ? this._lblName.string = "已屏蔽" : this._lblName.string = this._userName);
cc.find("Canvas/game_over");
if (!this._isScoreRunning && null != this._lblScore) {
"" == this._score && console.log("==================:this._lblScore" + this._lblScore.node.active);
console.log("log--------------refresh------\x3ethis._score=:", this._score);
this._lblScore.string = this._score;
}
null != this._nddayingjia && (this._nddayingjia.active = 1 == this._dayingjia);
this._offline && (this._offline.active = this._isOffline && "" != this._userName);
this._zhuang && (this._zhuang.active = this._isZhuang);
this.node.active = null != this._userName && "" != this._userName;
},
setDelScore: function(e) {
var t = this._score - e;
this._score = t;
this.refresh();
},
setDZPKScore: function(e) {
this._score = e;
this.refresh();
},
getScore: function() {
return null == this._score ? cc.vv.gameNetMgr.getSelfTotaloScore() : this._score;
},
setScore: function(e, t) {
this._score = e;
console.log("log------score  addScore=:", e, t);
if (t && null != this._lblScore2) {
var i = this;
this._isScoreRunning = 1;
this._lblScore2.node.active = !0;
this._lblScore2.string = t;
var n = this._lblScore2.node.convertToNodeSpace(cc.v2(640, 360));
this._lblScore2.node.setPosition(n.x, n.y);
var a = this._lblScore.node.getPosition(), s = cc.sequence(cc.moveTo(1, a), cc.callFunc(function(e) {
i._lblScore2.node.active = !1;
i._isScoreRunning = 0;
i.refresh();
}));
this._lblScore2.node.runAction(s);
} else this.refresh();
},
setInfo: function(e, t, i) {
e && 6 < e.length && (e = e.substr(0, 6) + "...");
this._userName = e;
this._score = t;
null == this._score && (this._score = 0);
this._dayingjia = i;
null != this._scoreBg && (this._scoreBg.active = null != this._score);
null != this._lblScore && (this._lblScore.node.active = null != this._score);
this.refresh();
},
setIsBanker: function(e) {
var t = this._userName;
this._userName = 1 == e ? t + "(地主)" : t + "(农民)";
},
setZhuang: function(e) {
this._isZhuang = e;
this._zhuang && (this._zhuang.active = e);
},
setZhuangMC: function(e, t) {
this._isZhuang = e;
if (this._zhuang && this._zhuang2) if (1 == e) {
var i = this;
this._isScoreRunning = 1;
this._zhuang2.active = !0;
this._zhuang2.getComponent(cc.Sprite).enabled = !1;
this._zhuang.active = !1;
var n = this._zhuang2.convertToNodeSpace(cc.v2(640, 360));
this._zhuang2.setPosition(n.x, n.y);
var a = this._zhuang.getPosition(), s = cc.sequence(cc.delayTime(t ? 2 : 0), cc.callFunc(function(e) {
i._zhuang2.getComponent(cc.Sprite).enabled = !0;
}), cc.moveTo(1, a), cc.callFunc(function(e) {
i._zhuang2.active = !1;
i._isScoreRunning = 0;
i._zhuang.active = !0;
cc.vv.audioMgr.playSFX("resources/hall/sounds/zhuang.mp3");
}));
this._zhuang2.runAction(s);
} else this._zhuang.active = !1;
},
setReady: function(e) {
this._isReady = e;
this._ready && (this._ready.active = !(!this._isReady || 1 != cc.vv.gameNetMgr.gamestate));
},
setImgByUrl: function() {
if (this._sprIcon) {
var e = cc.vv.userMgr.headimg;
this._sprIcon.setImgByUrl(e);
}
},
setID: function(e) {
var t = this.node.getChildByName("id");
if (t) {
t.getComponent(cc.Label).string = "ID:" + e;
}
this._userId = e;
this._sprIcon && this._sprIcon.setUserID(e);
},
clear_setUserID: function() {
this._sprIcon && this._sprIcon.clear_setUserID();
},
setOffline: function(e) {
this._isOffline = e;
if (this._offline) {
this._offline.active = this._isOffline && "" != this._userName;
this._isOffline && this.setReady(!1);
}
},
chat: function(e) {
if (null != this._chatBubble && null != this._emoji) {
this._emoji.active = !1;
this._chatBubble.active = !0;
this._chatBubble.getComponent(cc.Label).string = e;
this._chatBubble.getChildByName("New Label").color = cc.hexToColor("#FFFFFF");
this._chatBubble.getChildByName("New Label").getComponent(cc.Label).string = e;
this._lastChatTime = 3;
}
},
emoji: function(e) {
if (null != this._emoji && null != this._emoji) {
console.log(e);
this._chatBubble.active = !1;
this._emoji.active = !0;
this._emoji.getComponent(cc.Animation).play(e);
this._lastChatTime = 3;
}
},
voiceMsg: function(e) {
this._voicemsg && (this._voicemsg.active = e);
},
refreshXuanPaiState: function() {
if (null != this._xuanpai) {
this._xuanpai.active = cc.vv.gameNetMgr.isHuanSanZhang;
if (0 != cc.vv.gameNetMgr.isHuanSanZhang) {
this._xuanpai.getChildByName("xz").active = !1;
this._xuanpai.getChildByName("xd").active = !1;
var e = cc.vv.gameNetMgr.getSeatByID(this._userId);
e && (null == e.huanpais ? this._xuanpai.getChildByName("xz").active = !0 : this._xuanpai.getChildByName("xd").active = !0);
}
}
},
setPaiCount: function(e) {
this._paiCount && (this._paiCount.getComponent(cc.Label).string = -1 == e ? "" : e);
},
update: function(e) {
if (0 < this._lastChatTime) {
this._lastChatTime -= e;
if (this._lastChatTime < 0) {
this._chatBubble.active = !1;
this._emoji.active = !1;
this._emoji.getComponent(cc.Animation).stop();
}
}
if (0 < this._time) {
this._time -= e;
if (0 < this._alertTime && this._time < this._alertTime) {
cc.vv.audioMgr.playSFX("resources/hall/sounds/Countdown.mp3");
this._alertTime--;
}
var t = "";
this._time < 0 && (this._time = 0);
var i = Math.ceil(this._time);
i < 10 && (t = "");
this._timeLabel.string = t + i;
this._progress.getComponent(cc.ProgressBar).progress = this._time / this._totalTime;
if (0 == this._time) {
this._TimerMC.active = !1;
cc.vv.gameNetMgr.turnTimerOver();
}
}
},
showTimer: function(e) {
if (this._TimerMC) {
this._alertTime = 5;
this._time = e;
this._totalTime = e;
var t = Math.ceil(e), i = "";
t < 10 && (i = "");
this._timeLabel.string = i + t;
this._progress.getComponent(cc.ProgressBar).progress = 1;
this._TimerMC.active = !0;
}
},
closeTimer: function() {
if (this._TimerMC) {
this._time = -1;
this._alertTime = -1;
this._progress.getComponent(cc.ProgressBar).progress = 1;
this._TimerMC.active = !1;
}
}
});
cc._RF.pop();
}, {} ],
SelectGame: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2fdf9pVLVBNQ6Lc06bt/KNZ", "SelectGame");
cc.Class({
extends: cc.Component,
properties: {
isPrefabMode: !1,
commonGame: cc.Prefab,
pukerGame: cc.Prefab,
majiangGame: cc.Prefab,
zipaiGame: cc.Prefab,
relaxationGame: cc.Prefab,
modelList: [],
modelName: [],
btn_common: {
default: null,
type: cc.Node
},
btn_puker: {
default: null,
type: cc.Node
},
btn_majiang: {
default: null,
type: cc.Node
},
btn_zipai: {
default: null,
type: cc.Node
},
btn_relaxationGame: {
default: null,
type: cc.Node
}
},
onLoad: function() {
this.modelName = [ this.commonGame, this.pukerGame, this.majiangGame, this.zipaiGame, this.relaxationGame ];
this.initBtnModelSeleted();
this.revertButton();
},
start: function() {
this.initRefreshCommonEvent();
this.hu = cc.instantiate(cc.vv.updateGame);
var t = this;
this.hu.on("updateFinish", function(e) {
t.saveLocalData(t.sceneData);
cc.vv.UILoader.loadRes(t.sceneData, cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node.parent, function(e) {
t.hu.active = !1;
});
});
});
this.node.addChild(this.hu, 200);
this.hu.active = !1;
},
initRefreshCommonEvent: function() {},
initBtnModelSeleted: function() {
this.modelSeletedBtns = [];
this.modelSeletedBtns.push(this.btn_common);
this.modelSeletedBtns.push(this.btn_puker);
this.modelSeletedBtns.push(this.btn_majiang);
this.modelSeletedBtns.push(this.btn_zipai);
this.modelSeletedBtns.push(this.btn_relaxationGame);
},
revertButton: function() {
var e = cc.sys.localStorage.getItem("btn_index"), t = 0;
e && (t = JSON.parse(e));
0 == t && this.initCommonGameList();
for (var i = 0; i < this.modelSeletedBtns.length; i++) this.modelSeletedBtns[i].getComponent(cc.Toggle).isChecked = i == t;
this.modelList = [];
var n = cc.instantiate(this.modelName[t]);
this.node.addChild(n, 100);
this.modelList[t] = n;
this.adaptScreen(n);
this.initButtonEvent(n, t);
},
startInitModel: function(e) {
if (!this.modelList[e]) {
var t = cc.instantiate(this.modelName[e]);
this.node.addChild(t, 100);
this.modelList[e] = t;
this.adaptScreen(t);
this.initButtonEvent(t, e);
}
},
initButtonEvent: function(e, t) {
for (var i = e.getChildByName("view").getChildByName("content"), n = 0; n < i.children.length; n++) {
var a = i.children[n];
a.modelType = t;
this.onMJtprefabEvent(a, i);
}
},
onClicked: function(e) {
for (var t = -1, i = 0; i < this.gameCardNodeList.length; i++) {
var n = this.gameCardNodeList[i].convertToNodeSpace(e.getLocation()), a = this.gameCardNodeList[i].getContentSize(), s = cc.rect(0, 0, a.width, a.height);
if (cc.rectContainsPoint(s, n)) return t = i;
}
return t;
},
onMJtprefabEvent: function(e, c) {
e.on("touchstart", function(e) {
this.selectNode = null;
this.localPoint = c.convertToNodeSpace(e.touch.getLocation());
for (var t = 0; t < c.getChildren().length; t++) {
var i = c.getChildren()[t], n = i.width * i.scaleX, a = i.height * i.scaleX, s = cc.rect(i.x - n / 2, i.y, n, a);
cc.rectContainsPoint(s, this.localPoint) && (this.selectNode = i);
}
}.bind(this));
e.on("touchmove", function(e) {}.bind(this));
e.on("touchcancel", function(e) {
this.selectNode = null;
}.bind(this));
e.on("touchend", function(e) {
var t = c.convertToNodeSpace(e.touch.getLocation());
if (!(.6 <= Math.abs(t.x - this.localPoint.x) || 30 <= t.y - this.localPoint.y || 30 <= this.localPoint.y - t.y)) {
this.selectNode && e.target.name == this.selectNode.name && this.onBtnTypeClick(e);
this.selectNode = null;
}
}.bind(this));
},
initCommonGameList: function() {
if (!cc.sys.localStorage.getItem("recentGame")) {
cc.sys.localStorage.setItem("game/pdk/prefabs/CreateRoom", .5);
cc.sys.localStorage.setItem("game/3DH/prefabs/CreateRoom", .4);
cc.sys.localStorage.setItem("game/ddz/prefabs/CreateRoom", .3);
}
this.getEnterGamesData();
var s = this.getCommonGameList(), c = this, r = 0;
for (var e in s) {
var t = "hall/textures/Games/" + s[e];
cc.loader.loadRes(t, cc.SpriteFrame, function(e, t) {
var i = t;
if (-1 != (a = c.getNameIndex(i.name, s))) {
var n = c.modelList[0].getChildByName("view").getChildByName("content").getChildByName("commonGame" + r);
n.getComponent(cc.Sprite).spriteFrame = i;
if (n.getComponent(cc.Button).clickEvents[0]) {
var a = c.getNameIndex(i.name, s);
n.re_name = c.getCreateRoomPath(s[a]);
r++;
} else console.log("----------不存在zzz:" + r);
}
});
}
},
getNameIndex: function(e, t) {
for (var i in t) if (t[i] == e) return i;
return -1;
},
adaptScreen: function(e) {
var t = cc.view.getFrameSize(), i = 1440 * t.height / 720, n = t.width / i;
e.setScale(1 * n);
},
getEnterGamesData: function() {
this.enterGameCountList = [];
this.enterGameCountList.push(this.getEnterGameCount("PDK"));
this.enterGameCountList.push(this.getEnterGameCount("DDZ"));
this.enterGameCountList.push(this.getEnterGameCount("DZPK"));
this.enterGameCountList.push(this.getEnterGameCount("3DH"));
this.enterGameCountList.push(this.getEnterGameCount("PAGUO"));
this.enterGameCountList.push(this.getEnterGameCount("CSMJ"));
this.enterGameCountList.push(this.getEnterGameCount("HZMJ"));
this.enterGameCountList.push(this.getEnterGameCount("ZZMJ"));
this.enterGameCountList.push(this.getEnterGameCount("GLZP"));
this.enterGameCountList.push(this.getEnterGameCount("PHZ"));
this.enterGameCountList.push(this.getEnterGameCount("HYLH"));
this.enterGameCountList.push(this.getEnterGameCount("HGW"));
this.enterGameCountList.push(this.getEnterGameCount("FPF"));
this.enterGameCountList.push(this.getEnterGameCount("WHZ"));
this.enterGameCountList.push(this.getEnterGameCount("QMT"));
for (var e = 0; e < this.enterGameCountList.length; e++) for (var t = e + 1; t < this.enterGameCountList.length; t++) if (this.enterGameCountList[e]._count < this.enterGameCountList[t]._count) {
var i = this.enterGameCountList[e];
this.enterGameCountList[e] = this.enterGameCountList[t];
this.enterGameCountList[t] = i;
}
console.log(this.enterGameCountList);
},
getCommonGameList: function() {
var e = [];
for (var t in this.enterGameCountList) {
e.push(this.enterGameCountList[t]._name);
if (3 == e.length) break;
}
return e;
},
getEnterGameCount: function(e) {
var t = this.getCreateRoomPath(e), i = cc.sys.localStorage.getItem(t);
console.log("log--------------getEnterGameCount--\x3ecreateRoomPath gameName  count=:", t, e, i);
return i ? {
_name: e,
_count: i - 0
} : {
_name: e,
_count: 0
};
},
getCreateRoomPath: function(e) {
for (var t = "", i = 0; i < cc.vv.param_creatRoom.length; i++) if (e == cc.vv.param_creatRoom[i].name) return t = cc.vv.param_creatRoom[i].path;
return t;
},
showModel: function(e) {
for (var t = 0; t < this.modelList.length; t++) this.modelList[t] && (this.modelList[t].active = t == e);
0 == e && this.initCommonGameList();
},
onBtnBack: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.userMgr.isHighDefend = 0;
cc.vv.UILoader.destroy(this.node);
},
onBtnModelSeletedClick: function(e) {
cc.vv.audioMgr.playBtnClick();
for (var t = -1, i = 0; i < this.modelSeletedBtns.length; i++) this.modelSeletedBtns[i].getComponent(cc.Toggle).isChecked && (t = i);
cc.error(t);
this.startInitModel(t);
this.showModel(t);
cc.sys.localStorage.setItem("btn_index", t);
},
onBtnTypeClick: function(e) {
var t = this;
cc.vv.audioMgr.playBtnClick();
var i = e.target.modelType, n = e.target.name, a = "";
a = 0 == i ? e.target.re_name : 2 == i ? "game/3DMahjong/" + n + "/CreateRoom" : 3 == i && "ssp" != n ? "game/zipaiGames/" + n + "/prefabs/CreateRoom" : "game/" + n + "/prefabs/CreateRoom";
this.sceneData = a;
this.saveLocalData(a);
var s = "";
if (-1 != a.indexOf("fly")) {
s = -1 != a.indexOf("zipaiGames") ? a.substring(a.indexOf("zipaiGames/") + 11, a.indexOf("/prefabs/CreateRoom")) : a.substring(a.indexOf("game/") + 5, a.indexOf("/prefabs/CreateRoom"));
var c = cc.sys.localStorage.getItem(s + "version"), r = cc.vv.games[s].version;
if (0 < cc.vv.utils.compareVer(r, c)) {
this.hu.active = !0;
this.hu.getComponent("HotUpdate_Games").updateGame(s);
} else cc.vv.UILoader.loadRes(a, cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node.parent, function(e) {});
});
} else cc.vv.UILoader.loadRes(a, cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node.parent, function(e) {});
});
},
saveLocalData: function(e) {
cc.sys.localStorage.setItem("recentGame", e);
if (cc.sys.localStorage.getItem(e)) {
var t = cc.sys.localStorage.getItem(e) - 0;
cc.sys.localStorage.setItem(e, t + 1);
} else cc.sys.localStorage.setItem(e, 1);
},
left: function() {
var e = this.gameSelect.getComponent(cc.PageView), t = e.getCurrentPageIndex();
0 < t && e.scrollToPage(t - 1, .2);
},
right: function() {
var e = this.gameSelect.getComponent(cc.PageView), t = e.getCurrentPageIndex();
t < e.getPages().length && e.scrollToPage(t + 1, .2);
}
});
cc._RF.pop();
}, {} ],
Settings_FLY: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d75348T9R1Gr4odOMTglOFK", "Settings_FLY");
cc.Class({
extends: cc.Component,
properties: {
qxtgbtn: null,
tgbtn: null,
qxtgMask: null,
tgMask: null,
tgBool: !1
},
onLoad: function() {
this.qxtgbtn = cc.find("Canvas/popups/settings/btn_tg").getComponent(cc.Button);
this.tgbtn = cc.find("Canvas/popups/settings/btn_qxtg").getComponent(cc.Button);
this.tgMask = cc.find("Canvas/popups/settings/btn_tg/Mask");
this.qxtgMask = cc.find("Canvas/popups/settings/btn_qxtg/Mask");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("robot", {
active: 0
});
},
onBtnTgClick: function() {
var e = this.tgBool;
if (0 == e) {
this.btnDisable(e);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("robot", {
active: 1
});
}
},
onBtnQXTgClick: function() {
var e = this.tgBool;
if (1 == e) {
this.btnDisable(e);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("robot", {
active: 0
});
}
},
btnDisable: function(e) {
if (0 == e) {
this.tgMask.active = !0;
this.qxtgMask.active = !1;
this.tgbtn.enabled = !0;
this.qxtgbtn.enabled = !1;
this.tgBool = !0;
} else {
this.tgMask.active = !1;
this.qxtgMask.active = !0;
this.tgbtn.enabled = !1;
this.qxtgbtn.enabled = !0;
this.tgBool = !1;
}
cc.find("Canvas/popups").active = !1;
}
});
cc._RF.pop();
}, {} ],
Settings: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4c04fyd89JAZY7qGjvubi+f", "Settings");
cc.Class({
extends: cc.Component,
properties: {
_btnYXOpen: null,
_btnYXClose: null,
_btnYYOpen: null,
_btnYYClose: null
},
onLoad: function() {
if (null != cc.vv) {
this.node.getChildByName("btn_exit").active = !1;
var e = this.node.getChildByName("yinxiao").getChildByName("progress");
cc.vv.utils.addSlideEvent(e, this.node, "Settings", "onSlided");
e = this.node.getChildByName("yinyue").getChildByName("progress");
cc.vv.utils.addSlideEvent(e, this.node, "Settings", "onSlided");
}
},
start: function() {
this.refreshVolume();
},
isOpenExit: function() {
cc.sys.os == cc.sys.OS_IOS ? this.node.getChildByName("btn_exit") && (this.node.getChildByName("btn_exit").active = !1) : this.node.getChildByName("btn_exit").active = !0;
},
onSlided: function(e) {
"yinxiao" == e.node.parent.name ? cc.vv.audioMgr.setSFXVolume(e.progress) : "yinyue" == e.node.parent.name && cc.vv.audioMgr.setBGMVolume(e.progress);
this.refreshVolume();
},
initButtonHandler: function(e) {
cc.vv.utils.addClickEvent(e, this.node, "Settings", "onBtnClicked");
},
refreshVolume: function() {
var e = this.node.getChildByName("yinxiao"), t = 450 * cc.vv.audioMgr.sfxVolume;
(i = e.getChildByName("progress")).getComponent(cc.Slider).progress = cc.vv.audioMgr.sfxVolume;
i.getChildByName("progress").width = t;
var i, n = this.node.getChildByName("yinyue");
t = 450 * cc.vv.audioMgr.bgmVolume;
(i = n.getChildByName("progress")).getComponent(cc.Slider).progress = cc.vv.audioMgr.bgmVolume;
i.getChildByName("progress").width = t;
},
onbtn_back: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
onBtnClicked: function(e) {
this.node.active && cc.vv.audioMgr.playBtnClick();
if ("btn_exit" == e.target.name) cc.director.end(); else if ("btn_yx_open" == e.target.name) {
cc.vv.audioMgr.setSFXVolume(1);
this.refreshVolume();
} else if ("btn_yx_close" == e.target.name) {
cc.vv.audioMgr.setSFXVolume(0);
this.refreshVolume();
} else if ("btn_yy_open" == e.target.name) {
cc.vv.audioMgr.setBGMVolume(.5);
this.refreshVolume();
} else if ("btn_yy_close" == e.target.name) {
cc.vv.audioMgr.setBGMVolume(0);
this.refreshVolume();
}
}
});
cc._RF.pop();
}, {} ],
ShowWX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d965b72ErBPpoRGJj/MmqRZ", "ShowWX");
cc.Class({
extends: cc.Component,
onClose: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
onShare: function(e, t) {
var i = cc.vv.userMgr.userName + "(" + cc.vv.userMgr.userId + ")：我在" + cc.YXNAME + "等你一起来玩哟~", n = "输入专属邀请码(" + cc.vv.userMgr.userId + ")即可获得钻石奖励哦~";
cc.vv.anysdkMgr.shareInHall(i, n, t, 0);
this.onClose();
}
});
cc._RF.pop();
}, {} ],
SongFangKa: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bfc738B2k5FspOyzXNtw38Q", "SongFangKa");
cc.Class({
extends: cc.Component,
properties: {
contentNode: cc.Node,
recordItem: {
default: null,
type: cc.Prefab
},
_lb_list: [],
_OP: -1,
fangka_chechmark: cc.Node,
zuanshi_chechmark: cc.Node
},
onLoad: function() {
this._lb_list = [];
if (!(0 < this._lb_list.length)) {
for (var e = 1; e < 9; e++) {
var t = "Canvas/songfangka/result/lb" + e, i = cc.find(t).getComponent(cc.Label);
i.string = "";
this._lb_list.push(i);
}
this.initOpEnum();
this.initMsgHandler();
this.onShowFk();
}
},
initOpEnum: function() {
this.ops = {
SHOW_ROOM_CARDS: 1,
SHOW_DIAMOND: 0
};
},
initSongRecord: function() {
this.contentNode.removeAllChildren();
for (var e = 0; e < cc.vv.userMgr.songRecord.length; e++) {
var t = cc.instantiate(this.recordItem);
this.contentNode.addChild(t);
var i = t.getChildByName("userID").getComponent(cc.Label), n = t.getChildByName("num").getComponent(cc.Label), a = t.getChildByName("record").getComponent(cc.Label), s = t.getChildByName("times").getComponent(cc.Label);
i.string = cc.vv.userMgr.songRecord[e].userID;
n.string = cc.vv.userMgr.songRecord[e].ingot;
console.log("数量：" + cc.vv.userMgr.songRecord[e].ingot);
a.string = cc.vv.userMgr.songRecord[e].jieguo ? "成功" : "失败";
s.string = cc.vv.userMgr.songRecord[e].times;
}
},
onShowFk: function() {
this.fangka_chechmark.getComponent(cc.Toggle).isChecked = !0;
this.zuanshi_chechmark.getComponent(cc.Toggle).isChecked = !1;
this.initShowFangka();
},
onShowZS: function() {
this.fangka_chechmark.getComponent(cc.Toggle).isChecked = !1;
this.zuanshi_chechmark.getComponent(cc.Toggle).isChecked = !0;
this.initShowZuanshi();
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
initShowFangka: function() {
this._OP = this.ops.SHOW_ROOM_CARDS;
var e = {
account: cc.vv.userMgr.account,
m_tp: 1,
page: 1
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_money_log", e);
},
initShowZuanshi: function() {
this._OP = this.ops.SHOW_DIAMOND;
var e = {
account: cc.vv.userMgr.account,
m_tp: "0",
page: 1
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_money_log", e);
},
showFangka: function(e) {
if (0 == e.errcode) {
this.contentNode.removeAllChildren();
if (0 < e.data.length) for (var t = 0; t < e.data.length; t++) {
var i = e.data[t], n = cc.instantiate(this.recordItem);
n.parent = this.contentNode;
n.getChildByName("money").getComponent(cc.Label).string = "房卡";
if (102 == i.event_type) {
n.getChildByName("record").getComponent(cc.Label).string = "送出";
0 != i.to ? n.getChildByName("userID").getComponent(cc.Label).string = i.to : n.getChildByName("userID").getComponent(cc.Label).string = "系统";
} else if (203 == i.event_type) {
n.getChildByName("record").getComponent(cc.Label).string = "接受";
0 != i.to ? n.getChildByName("userID").getComponent(cc.Label).string = i.from : n.getChildByName("userID").getComponent(cc.Label).string = "系统";
}
n.getChildByName("num").getComponent(cc.Label).string = i.change_value;
n.getChildByName("times").getComponent(cc.Label).string = this.dateFormat(1e3 * i.last_insert_time);
}
} else cc.vv.alert.show("提示", "用户不存在");
},
showZuanshi: function(e) {
if (0 == e.errcode) {
this.contentNode.removeAllChildren();
if (0 < e.data.length) for (var t = 0; t < e.data.length; t++) {
var i = e.data[t], n = cc.instantiate(this.recordItem);
n.parent = this.contentNode;
n.getChildByName("money").getComponent(cc.Label).string = "钻石";
if (302 == i.event_type) {
n.getChildByName("record").getComponent(cc.Label).string = "送出";
0 != i.to ? n.getChildByName("userID").getComponent(cc.Label).string = i.to : n.getChildByName("userID").getComponent(cc.Label).string = "系统";
} else if (403 == i.event_type) {
n.getChildByName("record").getComponent(cc.Label).string = "接受";
0 != i.to ? n.getChildByName("userID").getComponent(cc.Label).string = i.from : n.getChildByName("userID").getComponent(cc.Label).string = "系统";
}
n.getChildByName("num").getComponent(cc.Label).string = i.change_value;
n.getChildByName("times").getComponent(cc.Label).string = this.dateFormat(1e3 * i.last_insert_time);
}
} else cc.vv.alert.show("提示", "用户不存在");
},
onBtnCloseSongClick: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
onBtnSearchIDClick: function() {
cc.vv.audioMgr.playBtnClick();
var e = cc.find("Canvas/songfangka/input_id").getComponent(cc.EditBox);
if ("" != e.string) {
var t = {
user_id: e.string,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_user_info", t);
} else cc.vv.alert.show("提示", "请输入玩家ID！");
},
onBtnSongFangKaClick: function(e, t) {
cc.vv.audioMgr.playBtnClick();
var i = cc.find("Canvas/songfangka/input_id").getComponent(cc.EditBox), n = cc.find("Canvas/songfangka/input_count").getComponent(cc.EditBox);
if ("" != this._lb_list[2].string && "" != this._lb_list[1].string) {
var a = n.string;
if (a < 1) cc.vv.alert.show("提示", "请输入赠送房卡或钻石的数量！"); else {
if ("1" == t) {
var s = "是否确定将" + a + "张房卡赠送给" + this._lb_list[2].string + "(" + this._lb_list[1].string + ")？";
cc.vv.alert.show("提示", s, function() {
var e = {
account: cc.vv.userMgr.account,
target: i.string,
ingot: a,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("give_ingot", e);
}, !0, "赠送");
} else {
s = "是否确定将" + a + "颗钻石赠送给" + this._lb_list[2].string + "(" + this._lb_list[1].string + ")？";
cc.vv.alert.show("提示", s, function() {
var e = {
account: cc.vv.userMgr.account,
target: i.string,
gold: a,
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("give_gold", e);
}, !0, "赠送");
}
}
} else cc.vv.alert.show("提示", "请输入玩家ID并点击查询确保玩家真实存在！");
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_money_log", this.onMsgGetMoneyLog.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_user_info", this.onMsgGetUserInfo.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("give_ingot", this.onMsgGiveIngot.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("give_gold", this.onMsgGiveGold.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_money_log");
cc.vv.netMgr.hallIEventDispatcher.off("get_user_info");
cc.vv.netMgr.hallIEventDispatcher.off("give_ingot");
cc.vv.netMgr.hallIEventDispatcher.off("give_gold");
},
onMsgGetMoneyLog: function(e) {
e = e.detail;
this._OP == this.ops.SHOW_ROOM_CARDS ? this.showFangka(e) : this._OP == this.ops.SHOW_DIAMOND && this.showZuanshi(e);
},
onMsgGetUserInfo: function(e) {
if (!(e = e.detail).user_id || e.user_id != cc.vv.userMgr.userId) if (0 == e.errcode) {
this._lb_list[0].string = "用户存在";
this._lb_list[1].string = e.user_id;
this._lb_list[2].string = e.name;
} else cc.vv.alert.show("提示", "用户不存在");
},
onMsgGiveIngot: function(e) {
if (0 == (e = e.detail).errcode) {
this._lb_list[3].string = "成功";
this._lb_list[4].string = e.ingot + "张";
this._lb_list[5].string = e.new_ingot + "张";
this._lb_list[6].string = "赠送房卡";
this._lb_list[7].string = "剩余房卡";
var t = cc.vv.utils.getNowTime(), i = {
userID: this._lb_list[2].string,
ingot: e.ingot,
jieguo: !0,
times: t
};
cc.vv.userMgr.songRecord.push(i);
this.onShowFk();
cc.vv.anysdkMgr.updateMoney();
} else {
t = cc.vv.utils.getNowTime(), i = {
userID: this._lb_list[2].string,
ingot: e.ingot,
jieguo: !1,
times: t
};
cc.vv.userMgr.songRecord.push(i);
cc.vv.alert.show("提示", "您的房卡不足。");
}
},
onMsgGiveGold: function(e) {
if (0 == (e = e.detail).errcode) {
this._lb_list[3].string = "成功";
this._lb_list[4].string = e.gold + "颗";
this._lb_list[5].string = e.new_gold + "颗";
this._lb_list[6].string = "赠送钻石";
this._lb_list[7].string = "剩余钻石";
var t = cc.vv.utils.getNowTime(), i = {
userID: this._lb_list[2].string,
ingot: e.ingot,
jieguo: !0,
times: t
};
cc.vv.userMgr.songRecord.push(i);
this.onShowZS();
cc.vv.anysdkMgr.updateMoney();
} else {
t = cc.vv.utils.getNowTime(), i = {
userID: this._lb_list[2].string,
ingot: e.ingot,
jieguo: !1,
times: t
};
cc.vv.userMgr.songRecord.push(i);
cc.vv.alert.show("提示", "您的钻石不足。");
}
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
TimeButton: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41cd0/z8rlO6pExUlD4mw05", "TimeButton");
cc.Class({
extends: cc.Component,
properties: {
btn_lable: cc.Label,
btn_bg: {
default: null,
type: cc.Sprite
},
_time: -1,
_totalTime: -1,
_alertTime: -1
},
onLoad: function() {
this._TimerMC = this.node.getChildByName("TimerMC");
if (this._TimerMC) {
this._progress = this._TimerMC.getChildByName("bar");
this._progress.getComponent(cc.ProgressBar).progress = 1;
this._TimerMC.active = !1;
}
},
update: function(e) {
if (0 < this._time) {
this._time -= e;
if (0 < this._alertTime && this._time < this._alertTime) {
cc.vv.audioMgr.playSFX("resources/hall/sounds/Countdown.mp3");
this._alertTime--;
}
this._time < 0 && (this._time = 0);
Math.ceil(this._time) < 10 && "";
this._progress.getComponent(cc.ProgressBar).progress = this._time / this._totalTime;
0 == this._time && (this._TimerMC.active = !1);
}
},
setBtnBg: function(e) {
this.btn_bg.spriteFrame = e;
},
setBtnLable: function(e) {
this.btn_lable.string = e;
},
getBtnLable: function() {
return this.btn_lable.string;
},
showTimer: function(e) {
if (this._TimerMC) {
this._alertTime = 5;
this._time = e;
this._totalTime = e;
Math.ceil(e) < 10 && "";
this._progress.getComponent(cc.ProgressBar).progress = 1;
this._TimerMC.active = !0;
}
},
closeTimer: function() {
if (this._TimerMC) {
this._time = -1;
this._alertTime = -1;
this._progress.getComponent(cc.ProgressBar).progress = 1;
this._TimerMC.active = !1;
}
}
});
cc._RF.pop();
}, {} ],
TimePointer_FLY: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ef8a20FvgpBBL2gVEWhy067", "TimePointer_FLY");
cc.Class({
extends: cc.Component,
properties: {
_arrow: null,
_pointer: null,
_timeLabel: null,
_time: -1,
_alertTime: -1,
_clock: null
},
onLoad: function() {
var e = this.node.getChildByName("game");
this._arrow = e.getChildByName("arrow");
this._pointer = this._arrow.getChildByName("pointer");
this._clock = this._arrow.getChildByName("clock");
this.initPointer();
this._timeLabel = this._arrow.getChildByName("clock").getChildByName("lblTime").getComponent(cc.Label);
this._timeLabel.string = "00";
var t = this;
this.node.on("game_begin", function(e) {
t._arrow.active = !0;
t.initPointer();
});
this.node.on("turn", function(e) {
t.initPointer();
t._time = 10;
t._alertTime = 3;
});
this.node.on("active_clock", function(e) {
t._arrow.active = !1;
});
},
initPointer: function() {
if (null != cc.vv) {
this._arrow.active = 2 == cc.vv.gameNetMgr.gamestate || 5 == cc.vv.gameNetMgr.gamestate;
if (this._arrow.active) for (var e = cc.vv.gameNetMgr.turn, t = this.getLocalIndex(e), i = 0; i < this._pointer.children.length; ++i) i == t && this._clock.setPosition(this._pointer.children[i].getPosition());
}
},
update: function(e) {
if (0 < this._time) {
this._time -= e;
if (0 < this._alertTime && this._time < this._alertTime) {
cc.vv.audioMgr.playSFX("resources/game/fly/sounds/timeup_alarm.mp3");
this._alertTime = -1;
}
var t = "";
this._time < 0 && (this._time = 0);
var i = Math.ceil(this._time);
i < 10 && (t = "0");
this._timeLabel.string = t + i;
}
},
getLocalIndex: function(e) {
return 4 & cc.vv.gameNetMgr.conf.rule_index && 1 == e ? 2 : e;
}
});
cc._RF.pop();
}, {} ],
TimeSearch: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7e080nBa45D0a36h27e5rDL", "TimeSearch");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = n.property, c = function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.text = "hello";
e.lb_year = null;
e.lb_month = null;
e.lb_day = null;
return e;
}
e.prototype.onLoad = function() {
var e = new Date();
this.year = e.getFullYear();
this.month = e.getMonth() + 1;
this.day = e.getDate();
this.fresh();
};
e.prototype.start = function() {};
e.prototype.onAddClick = function(e, t) {
console.log(t);
switch (t) {
case "0":
this.addYear(!0);
break;

case "1":
this.addMonth(!0);
break;

case "2":
this.addDay(!0);
}
this.fresh();
};
e.prototype.onSubClick = function(e, t) {
switch (t) {
case "0":
this.addYear(!1);
break;

case "1":
this.addMonth(!1);
break;

case "2":
this.addDay(!1);
}
this.fresh();
};
e.prototype.fresh = function() {
this.year < 0 && (this.year = 1);
this.month < 1 && (this.month = 12);
12 < this.month && (this.month = 1);
var e = 0, t = this.year % 400 == 0 || this.year % 4 == 0 && this.year % 100 != 0;
2 == this.month && (e = t ? 29 : 28);
if (4 == this.month || 6 == this.month || 9 == this.month || 11 == this.month) {
30 < this.day && (this.day = 1);
e = 30;
}
if (1 == this.month || 3 == this.month || 5 == this.month || 7 == this.month || 8 == this.month || 10 == this.month || 12 == this.month) {
31 < this.day && (this.day = 1);
e = 31;
}
this.day < 1 && (this.day = e);
this.day > e && (this.day = 1);
this.lb_year.string = this.year + "";
this.lb_month.string = this.month + "";
this.lb_day.string = this.day + "";
};
e.prototype.addYear = function(e) {
e ? this.year++ : this.year--;
};
e.prototype.addMonth = function(e) {
e ? this.month++ : this.month--;
};
e.prototype.addDay = function(e) {
e ? this.day++ : this.day--;
};
e.prototype.onClose = function() {
this.node.active = !1;
};
e.prototype.getDate = function() {
return this.year + "" + (9 < this.month ? this.month + "" : "0" + this.month) + (9 < this.day ? this.day + "" : "0" + this.day);
};
__decorate([ s(cc.Label) ], e.prototype, "label", void 0);
__decorate([ s ], e.prototype, "text", void 0);
__decorate([ s(cc.Label) ], e.prototype, "lb_year", void 0);
__decorate([ s(cc.Label) ], e.prototype, "lb_month", void 0);
__decorate([ s(cc.Label) ], e.prototype, "lb_day", void 0);
return e = __decorate([ a ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ToastView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0d834cNhE5LvZFjAEQJcsqZ", "ToastView");
var n = void 0, a = cc.Class({
extends: cc.Component,
properties: {
node_pool: cc.NodePool
},
statics: {
getInstance: function() {
n || (n = new a());
return n;
}
},
ctor: function() {
this.node_pool = new cc.NodePool();
},
showToast: function(e) {
var i = this;
if (e.txt) {
this.tbToastTxt = this.tbToastTxt ? this.tbToastTxt : [];
this.tbToastBG = this.tbToastBG ? this.tbToastBG : [];
this.showTime = e.showTime || 0;
for (var t in this.tbToastTxt) {
var n = this.tbToastTxt[t];
if (e.txt === n) return;
}
if (this.tbToastTxt && 0 < this.tbToastTxt.length) this.tbToastTxt.push(e.txt); else {
var a = this.createNode(e.txt);
if (a) {
this.setData(a, e.txt);
this.tbToastTxt.push(e.txt);
this._toastAction(a, function e() {
i.tbToastTxt.splice(0, 1);
if (i.tbToastTxt[0]) {
var t = i.createNode(i.tbToastTxt[0]);
if (!t) return;
i.setData(t, i.tbToastTxt[0]);
i._toastAction(t, e);
}
});
}
}
}
},
createNode: function(e) {
if (0 < this.node_pool.size()) {
var t = this.node_pool.get();
this.tbToastBG.push(t);
return t;
}
var i = cc.loader.getRes("hall/textures/Toast/global_pic_toast_bg", cc.SpriteFrame);
if (i) {
var n = new cc.Node();
n.opacity = 0;
var a = new cc.Node("nodeBg"), s = a.addComponent(cc.Sprite);
s.spriteFrame = i;
s.type = cc.Sprite.Type.SLICED;
s.trim = !0;
s.sizeMode = cc.Sprite.SizeMode.CUSTOM;
a.parent = n;
var c = new cc.Node("nodeLabel");
c.width = 576;
c.height = 0;
var r = cc.color(255, 255, 255);
c.color = r;
c.parent = n;
var o = c.addComponent(cc.Label);
o.string = e;
o.fontSize = 30;
o.lineHeight = 40;
o.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
o.horizontalAlign = cc.Label.HorizontalAlign.CENTER;
o.verticalAlign = cc.Label.VerticalAlign.CENTER;
this.tbToastBG.push(n);
return n;
}
},
setData: function(e, t) {
var i = e.getChildByName("nodeBg"), n = e.getChildByName("nodeLabel"), a = n.getComponent(cc.Label);
a.string = t;
var s = Math.ceil(t.length * a.fontSize / n.width);
i.width = n.width + 100;
i.height = a.lineHeight * s + 30;
e.parent = cc.director.getScene();
e.zIndex = 1e6;
var c = cc.winSize, r = cc.v2(c.width / 2, c.height / 2 + 80);
e.position = r;
e.opacity = 0;
},
_toastAction: function(e, t) {
for (var i = this, n = 0; n < this.tbToastBG.length; n++) {
var a = this.tbToastBG[n];
a.parent && (a && e !== a && a.runAction(cc.moveBy(.4, cc.v2(0, 65))));
}
var s = 0;
1 < this.tbToastBG.length && (s = .5);
e.runAction(cc.sequence(cc.delayTime(s), cc.fadeTo(.5, 255), cc.callFunc(function() {
t();
}), cc.delayTime(this.showTime), cc.fadeTo(2.5, 0), cc.callFunc(function() {
i.tbToastBG.splice(0, 1);
i.node_pool.put(e);
i.tbToastTxt.length <= 0 && i.cleanToast();
})));
},
cleanToast: function() {
this.tbToastBG = [];
this.tbToastTxt = [];
}
});
cc._RF.pop();
}, {} ],
UILoader: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "710a4bkp5ZNnJ0NtZ2FEvxB", "UILoader");
function d(e) {
if (!e) {
console.log("空的");
return !1;
}
null == e.retain && (e.retain = 0);
return !0;
}
function s(e) {
return !!e && (null != e.bk_retain && null != e.bk_retain || !(e.bk_retain = 1));
}
function a(e, t) {
e._children.forEach(function(e) {
(function(e, t) {
var i = e.getComponent(cc.Sprite);
if (i && i.spriteFrame && cc.loader._cache[i.spriteFrame._textureFilename]) {
d(cc.loader._cache[i.spriteFrame._textureFilename]);
cc.loader._cache[i.spriteFrame._textureFilename].retain += t;
}
var n = e.getComponent(cc.Button);
if (n) {
if (n.normalSprite && cc.loader._cache[n.normalSprite._textureFilename]) {
d(cc.loader._cache[n.normalSprite._textureFilename]);
cc.loader._cache[n.normalSprite._textureFilename].retain += t;
}
if (n.pressedSprite && cc.loader._cache[n.pressedSprite._textureFilename]) {
d(cc.loader._cache[n.pressedSprite._textureFilename]);
cc.loader._cache[n.pressedSprite._textureFilename].retain += t;
}
if (n.hoverSprite && cc.loader._cache[n.hoverSprite._textureFilename]) {
d(cc.loader._cache[n.hoverSprite._textureFilename]);
cc.loader._cache[n.hoverSprite._textureFilename].retain += t;
}
if (n.disabledSprite && cc.loader._cache[n.disabledSprite._textureFilename]) {
d(cc.loader._cache[n.disabledSprite._textureFilename]);
cc.loader._cache[n.disabledSprite._textureFilename].retain += t;
}
}
var a = e.getComponent(cc.Label);
a && a.font && a.font instanceof cc.BitmapFont && a.font.spriteFrame && d(cc.loader._cache[a.font.spriteFrame._textureFilename]) && (cc.loader._cache[a.font.spriteFrame._textureFilename].retain += t);
var s = e.getComponent(cc.RichText);
if (s && s.imageAtlas) {
var c = Object.keys(s.imageAtlas._spriteFrames);
0 < c.length && d(cc.loader._cache[s.imageAtlas._spriteFrames[c[0]]._textureFilename]) && (cc.loader._cache[s.imageAtlas._spriteFrames[c[0]]._textureFilename].retain += t);
}
var r = e.getComponent(cc.ParticleSystem);
r && r._texture && d(cc.loader._cache[r._texture]) && (cc.loader._cache[r._texture].retain += t);
var o = e.getComponent(cc.PageViewIndicator);
o && o.spriteFrame && d(cc.loader._cache[o.spriteFrame._textureFilename]) && (cc.loader._cache[o.spriteFrame._textureFilename].retain += t);
var h = e.getComponent(cc.EditBox);
h && h.backgroundImage && d(cc.loader._cache[h.backgroundImage._textureFilename]) && (cc.loader._cache[h.backgroundImage._textureFilename].retain += t);
var l = e.getComponent(cc.Mask);
l && l.spriteFrame && d(cc.loader._cache[l.spriteFrame._textureFilename]) && (cc.loader._cache[l.spriteFrame._textureFilename].retain += t);
})(e, t);
a(e, t);
});
}
function c(t, i) {
if (t instanceof cc.Texture2D) {
cc.loader._cache[t.url].isStatic = !0;
cc.loader._cache[t.url].cusTag = i;
} else if (t instanceof cc.SpriteFrame) {
cc.loader._cache[t._textureFilename].isStatic = !0;
cc.loader._cache[t._textureFilename].cusTag = i;
} else if (t instanceof cc.Prefab) (function t(e, i) {
var n = e;
e.data && (n = e.data);
n instanceof cc.Scene || r(n, i);
var a = n._children;
a.forEach(function(e) {
r(e, i);
t(e, i);
});
})(t, i); else if (t instanceof cc.BitmapFont) {
cc.loader._cache[t.spriteFrame._textureFilename].isStatic = !0;
cc.loader._cache[t.spriteFrame._textureFilename].cusTag = i;
} else if (t instanceof cc.SpriteAtlas) {
Object.keys(t._spriteFrames).forEach(function(e) {
cc.loader._cache[t._spriteFrames[e]._textureFilename].isStatic = !0;
cc.loader._cache[t._spriteFrames[e]._textureFilename].cusTag = i;
});
} else t instanceof cc.AnimationClip ? cc.log("AnimationClip 资源加载未做处理") : t instanceof Object && t.name && cc.log("Object 资源加载未做处理");
}
function r(e, t) {
var i = e.getComponent(cc.Sprite);
if (i && i.spriteFrame && _isNullObj(cc.loader._cache[i.spriteFrame._textureFilename])) {
cc.loader._cache[i.spriteFrame._textureFilename].isStatic = !0;
cc.loader._cache[i.spriteFrame._textureFilename].cusTag = t;
}
var n = e.getComponent(cc.Button);
if (n) {
if (n.normalSprite && _isNullObj(cc.loader._cache[n.normalSprite._textureFilename])) {
cc.loader._cache[n.normalSprite._textureFilename].isStatic = !0;
cc.loader._cache[n.normalSprite._textureFilename].cusTag = t;
}
if (n.pressedSprite && _isNullObj(cc.loader._cache[n.pressedSprite._textureFilename])) {
cc.loader._cache[n.pressedSprite._textureFilename].isStatic = !0;
cc.loader._cache[n.pressedSprite._textureFilename].cusTag = t;
}
if (n.hoverSprite && _isNullObj(cc.loader._cache[n.hoverSprite._textureFilename])) {
cc.loader._cache[n.hoverSprite._textureFilename].isStatic = !0;
cc.loader._cache[n.hoverSprite._textureFilename].cusTag = t;
}
if (n.disabledSprite && _isNullObj(cc.loader._cache[n.disabledSprite._textureFilename])) {
cc.loader._cache[n.disabledSprite._textureFilename].isStatic = !0;
cc.loader._cache[n.disabledSprite._textureFilename].cusTag = t;
}
}
var a = e.getComponent(cc.Label);
if (a && a.font && a.font instanceof cc.BitmapFont && a.font.spriteFrame && _isNullObj(cc.loader._cache[a.font.spriteFrame._textureFilename])) {
cc.loader._cache[a.font.spriteFrame._textureFilename].isStatic = !0;
cc.loader._cache[a.font.spriteFrame._textureFilename].cusTag = t;
}
var s = e.getComponent(cc.RichText);
if (s && s.imageAtlas) {
var c = Object.keys(s.imageAtlas._spriteFrames);
if (0 < c.length && _isNullObj(cc.loader._cache[s.imageAtlas._spriteFrames[c[0]]._textureFilename])) {
cc.loader._cache[s.imageAtlas._spriteFrames[c[0]]._textureFilename].isStatic = !0;
cc.loader._cache[s.imageAtlas._spriteFrames[c[0]]._textureFilename].cusTag = t;
}
}
var r = e.getComponent(cc.ParticleSystem);
if (r && r._texture && _isNullObj(cc.loader._cache[r._texture])) {
cc.loader._cache[r._texture].isStatic = !0;
cc.loader._cache[r._texture].cusTag = t;
}
var o = e.getComponent(cc.PageViewIndicator);
if (o && o.spriteFrame && _isNullObj(cc.loader._cache[o.spriteFrame._textureFilename])) {
cc.loader._cache[o.spriteFrame._textureFilename].isStatic = !0;
cc.loader._cache[o.spriteFrame._textureFilename].cusTag = t;
}
var h = e.getComponent(cc.EditBox);
if (h && h.backgroundImage && _isNullObj(cc.loader._cache[h.backgroundImage._textureFilename])) {
cc.loader._cache[h.backgroundImage._textureFilename].isStatic = !0;
cc.loader._cache[h.backgroundImage._textureFilename].cusTag = t;
}
var l = e.getComponent(cc.Mask);
if (l && l.spriteFrame && _isNullObj(cc.loader._cache[l.spriteFrame._textureFilename])) {
cc.loader._cache[l.spriteFrame._textureFilename].cusTag = t;
cc.loader._cache[l.spriteFrame._textureFilename].isStatic = !0;
}
}
function o(e) {
var t, i = Array.isArray(e) ? [] : {};
for (t in e) e.hasOwnProperty(t) && (i[t] = "Object" == typeof e[t] ? o(e[t]) : e[t]);
return i;
}
function h() {
cc.director.getScene().dependAssets;
var e = o(cc.loader._cache), t = [];
for (var i in e) if (!e[i].isStatic && e[i].retain <= 0) {
t.push(e[i].url);
cc.loader.release(e[i].url);
}
var n = [];
for (var i in cc.loader._cache) if (cc.loader._cache[i].dependKeys && 0 < cc.loader._cache[i].dependKeys.length) {
for (var a = !1, s = 0; s < cc.loader._cache[i].dependKeys.length; s++) -1 !== t.indexOf(cc.loader._cache[i].dependKeys[s]) && (a = !0);
if (a) {
n.push(cc.loader._cache[i].url);
cc.loader.release(cc.loader._cache[i].url);
}
}
for (var i in cc.loader._cache) if (cc.loader._cache[i].dependKeys && 0 < cc.loader._cache[i].dependKeys.length) {
for (a = !1, s = 0; s < cc.loader._cache[i].dependKeys.length; s++) -1 !== n.indexOf(cc.loader._cache[i].dependKeys[s]) && (a = !0);
a && cc.loader.release(cc.loader._cache[i].url);
}
t = [];
}
function l(e, t, i) {
e[t] && d(cc.loader._cache[e[t]._textureFilename]) && (cc.loader._cache[e[t]._textureFilename].retain -= 1);
d(cc.loader._cache[i._textureFilename]) && (cc.loader._cache[i._textureFilename].retain += 1);
e[t] = i;
}
var u = {}, v = null, n = {
loadRes: function(e, t, i) {
cc.loader.loadRes(e, t, function(e, t) {
e ? cc.log("[资源加载] 错误 " + e) : i(t);
});
},
loadStaticRes: function(e, t, i, n) {
e && t && n ? cc.loader.loadRes(e, t, function(e, t) {
if (e) cc.log("[资源加载] 错误 " + e); else {
n(t);
c(t, i);
}
}) : cc.log("参数错误");
},
retainScene: function(e) {
a(e, 1);
},
replaceSpriteTexture: function(e, t) {
if (e && t) if (e.getComponent(cc.Sprite)) {
l(e.getComponent(cc.Sprite), "spriteFrame", t);
h();
} else cc.log("目标节点没有Sprite组件"); else cc.log("参数错误");
},
replaceButtonTexture: function(e, t, i, n, a) {
if (e && t) if (e.getComponent(cc.Button)) {
var s = e.getComponent(cc.Button);
t && l(s, "normalSprite", t);
i && l(s, "pressedSprite", i);
n && l(s, "hoverSprite", n);
a && l(s, "disabledSprite", a);
h();
} else cc.log("目标节点没有Button组件"); else cc.log("参数错误");
},
instantiate: function(e, t, i) {
t && i || cc.log("参数不对, 请检查参数");
var n = cc.instantiate(e);
t.addChild(n);
i(n);
a(n, 1);
},
releaseStaticRes: function(e) {
(function(e) {
cc.director.getScene().dependAssets;
var t = o(cc.loader._cache), i = [];
for (var n in t) if (!e || t[n].cusTag == e) if (0 < t[n].retain && t[n].isStatic) cc.log(n + " 还在使用中..., 该纹理不会释放"); else if (t[n].retain <= 0) {
i.push(t[n].url);
cc.loader.release(t[n].url);
}
var a = [];
for (var n in cc.loader._cache) if (cc.loader._cache[n].dependKeys && 0 < cc.loader._cache[n].dependKeys.length) {
for (var s = !1, c = 0; c < cc.loader._cache[n].dependKeys.length; c++) -1 !== i.indexOf(cc.loader._cache[n].dependKeys[c]) && (s = !0);
if (s) {
a.push(cc.loader._cache[n].url);
cc.loader.release(cc.loader._cache[n].url);
}
}
for (var n in cc.loader._cache) if (cc.loader._cache[n].dependKeys && 0 < cc.loader._cache[n].dependKeys.length) {
for (s = !1, c = 0; c < cc.loader._cache[n].dependKeys.length; c++) -1 !== a.indexOf(cc.loader._cache[n].dependKeys[c]) && (s = !0);
s && cc.loader.release(cc.loader._cache[n].url);
}
i = [];
})(e);
},
destroy: function(e) {
if (!e instanceof cc.Node) cc.log("你要销毁的不是一个节点"); else {
a(e, -1);
e.destroy();
h();
}
},
beforeSceneLoading: function(e, t) {
u = {};
var i = e.currentTarget._scene.dependAssets;
if (i && 0 < i.length) for (var n = 0; n < i.length; n++) {
if (cc.loader._cache[i[n]] && cc.loader._cache[i[n]].isStatic) {
u[n] = i[n];
delete i[n];
}
s(cc.loader._cache[i[n]]) && (cc.loader._cache[i[n]].retain -= 1);
}
Object.keys(cc.loader._cache).forEach(function(e) {
cc.loader._cache[e] && !cc.loader._cache[e].isStatic && 0 < cc.loader._cache[e].retain && s(cc.loader._cache[e]) && (cc.loader._cache[e].retain = 0);
});
},
afterSceneLaunch: function(e, t) {
for (var i in u) e.currentTarget._scene.dependAssets[i] = u[i];
var n = e.currentTarget._scene.dependAssets;
if (n && 0 < n.length) for (var a = n.length - 1; 0 <= a; a--) cc.loader._cache[n[a]] && cc.loader._cache[n[a]].isStatic || s(cc.loader._cache[n[a]]) && (cc.loader._cache[n[a]].retain += 1);
h();
},
playEffect: function(e, t) {
if (e && t) {
var i = cc.audioEngine.play(e, !1, t);
cc.audioEngine.setFinishCallback(i, function(e, t) {
cc.loader.release(cc.loader._cache[e.target.src].url);
});
return i;
}
cc.log("参数错误");
},
playMusic: function(e, t, i) {
if (e && i) {
v && cc.loader.release(cc.loader._cache[v].url);
v = e;
var n = cc.audioEngine.playMusic(e, t, i);
cc.audioEngine.setFinishCallback(n, function(e, t) {
cc.log("触发回调函数");
cc.loader.release(cc.loader._cache[e.target.src].url);
});
return n;
}
cc.log("参数错误");
}
};
t.exports = n;
cc._RF.pop();
}, {} ],
UserInfoShow: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fe4f16CAmpBlZphnpsH1ETv", "UserInfoShow");
cc.Class({
extends: cc.Component,
properties: {
_userinfo: null,
_targetID: -1
},
onLoad: function() {
if (null != cc.vv) {
console.log("--------------userinfo---onLoad");
this.hallBtn = this.node.getChildByName("hall");
this.hallBtn.active = !1;
this.gameBtn = this.node.getChildByName("game");
this.gameBtn.active = !1;
cc.vv.utils.addClickEvent(this.node, this.node, "UserInfoShow", "onClicked");
this.btnTi = this.node.getChildByName("btn_ti");
this.btnTi.active = !1;
cc.vv.utils.addClickEvent(this.btnTi, this.node, "UserInfoShow", "onClickedTi");
}
},
showAtavar: function(e) {
var t = this.node.getChildByName("mask").getChildByName("icon").getComponent("Atavar");
cc.vv.userMgr.isHighDefend || t.load(e);
},
openInHall: function() {
var e = {};
e.name = cc.vv.userMgr.userName;
e.ip = cc.vv.userMgr.ip;
e.userId = cc.vv.userMgr.userId;
e.sex = cc.vv.userMgr.sex;
e.coins = cc.vv.userMgr.coins;
e.gems = cc.vv.userMgr.gems;
e.lv = cc.vv.userMgr.lv;
e.exp = cc.vv.userMgr.exp;
var t = cc.vv.userMgr.reg_area;
t || (t = "未知");
e.reg_area = t;
var i = cc.vv.userMgr.device;
i && "default" != i || (i = "未知");
e.device = i;
var n = cc.vv.userMgr.online_time;
n || (n = "未知");
e.online_time = n + "秒";
e.totoal_play = cc.vv.userMgr.statistic_get(cc.vv.userMgr.statistic, cc.vv.userMgr.statistic_key.JOIN_COUNTS, "未知");
e.totoal_win_count = cc.vv.userMgr.statistic_get(cc.vv.userMgr.statistic, cc.vv.userMgr.statistic_key.WIN_COUNTS, "未知");
e.max_score = cc.vv.userMgr.statistic_get(cc.vv.userMgr.statistic, cc.vv.userMgr.statistic_key.MAX_WIN_SCORE, "未知");
this.show(e, cc.vv.userMgr.headimg, "hall");
},
onClickedTi: function() {
if (0 < this._targetID) {
var e = JSON.parse(cc.vv.msgTemp.CS_Kick);
e.target = this._targetID;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("kick", e);
}
cc.vv.audioMgr.playBtnClick();
this._targetID = -1;
this.node.active = !1;
},
onClickedRang: function() {
if (0 < this._targetID) {
var e = JSON.parse(cc.vv.msgTemp.CS_Transfer);
e.target = this._targetID;
console.log("-----------转让房间");
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("transfer", e);
}
cc.vv.audioMgr.playBtnClick();
this._targetID = -1;
this.node.active = !1;
},
show: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : "55", n = 3 < arguments.length && void 0 !== arguments[3] && arguments[3];
if (null != e.userId && 0 < e.userId) {
this.showAtavar(t);
this._targetID = e.userId;
this.node.active = !0;
if (cc.vv.userMgr.isHighDefend) {
this.node.getChildByName("name").getComponent(cc.Label).string = "已屏蔽";
this.node.getChildByName("id").getComponent(cc.Label).string = "已屏蔽";
} else {
this.node.getChildByName("name").getComponent(cc.Label).string = e.name;
this.node.getChildByName("id").getComponent(cc.Label).string = e.userId;
}
this.node.getChildByName("didian").getComponent(cc.Label).string = "未知";
1e3 < e.coins ? this.node.getChildByName("zuan").getComponent(cc.Label).string = " >1000 " : this.node.getChildByName("zuan").getComponent(cc.Label).string = e.coins;
1e3 < e.gems ? this.node.getChildByName("fangka").getComponent(cc.Label).string = " >1000 " : this.node.getChildByName("fangka").getComponent(cc.Label).string = e.gems;
var a = e.ip.replace("::ffff:", "");
this.node.getChildByName("ip").getComponent(cc.Label).string = a;
if ("hall" == i) {
if (h = cc.vv.userMgr.gps) {
var s = h.split(","), c = Math.floor(100 * s[0]) / 100, r = Math.floor(100 * s[1]) / 100, o = new Array(c, r).join(",");
this.node.getChildByName("didian").getComponent(cc.Label).string = o;
} else this.node.getChildByName("didian").getComponent(cc.Label).string = "未知";
} else {
var h, l = e.userId;
s = (h = cc.vv.gameNetMgr.getSeatByID(l).gps).split(","), c = Math.floor(100 * s[0]) / 100, 
r = Math.floor(100 * s[1]) / 100, o = new Array(c, r).join(",");
this.node.getChildByName("didian").getComponent(cc.Label).string = o;
}
var d = this.node.getChildByName("sex_female");
d.active = !1;
var u = this.node.getChildByName("sex_male");
u.active = !1;
1 == e.sex ? u.active = !0 : (e.sex, d.active = !0);
this.gameBtn.active = !1;
this.hallBtn.active = !1;
this.btnTi.active = !1;
"hall" == i ? this.hallBtn.active = !0 : this.gameBtn.active = !0;
1 == n && (this.btnTi.active = !0);
this.node.active = !0;
}
},
onClicked: function() {
this.node.active && cc.vv.audioMgr.playBtnClick();
this.node.active = !1;
},
onShowInteractive: function(e) {
cc.vv.audioMgr.playBtnClick();
this.node.active = !1;
var t = JSON.parse(cc.vv.msgTemp.SC_emoji);
t.target = this.node.getChildByName("id").getComponent(cc.Label).string;
t.content = e.target.name;
cc.vv.userMgr.userId != t.target && cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("emoji_to", t);
},
onBtnLogoutClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.sys.localStorage.removeItem("wx_account");
cc.sys.localStorage.removeItem("wx_sign");
cc.director.loadScene("login");
this.node.active = !1;
}
});
cc._RF.pop();
}, {} ],
UserMgr: [ function(n, e, t) {
"use strict";
cc._RF.push(e, "74d78JBqHdDKY6hckY2YuL+", "UserMgr");
cc.Class({
extends: cc.Component,
properties: {
statistic_key: null,
daily_value_key: null,
account: null,
userId: null,
userName: null,
lv: 0,
exp: 0,
coins: 0,
gems: 0,
sign: 0,
ip: "",
sex: 0,
reg_time: 0,
reg_area: "",
device: "",
online_time: 0,
statistic: [],
daily_value: [],
roomData: null,
isDaiKaiRoom: !1,
daiKaiRoomData: null,
inMatch: !1,
Match: null,
share_time: -1,
poker_color: 1,
unions: null,
songRecord: [],
isHighDefend: 0,
inClub: !1,
_loginCount: 0,
roomUUID: 0,
token: null,
curMatchId: null
},
init: function() {
this.initMsgHandler();
},
guestAuth: function(e) {
var t = e;
t || (t = cc.sys.localStorage.getItem("account"));
if (!t) {
t = Date.now();
cc.sys.localStorage.setItem("account", t);
}
cc.sys.localStorage.setItem("account", t);
cc.vv.http.sendRequest("/login", {
login_type: 1,
code: t
}, this.onAuth);
},
accountAuth: function(e) {
cc.vv.http.sendRequest("/login", {
login_type: 3,
code: e
}, this.onAuth);
},
onAuth: function(e) {
var t = cc.vv.userMgr;
cc.error("=================================onAuth==============================");
console.log(e);
if (0 !== e.errcode) {
console.log(e.errmsg);
var i = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", i);
} else {
t.account = e.account;
t.sign = e.sign;
t.token = e.token;
t.hallAddr = e.halladdr;
t.voice_chat_addr = "http://" + e.voice_chat_addr;
cc.vv.http.url = "http://" + e.hallhttpaddr;
cc.vv.netMgr.connectHallServer(t.hallAddr);
}
},
statistic_get: function(e, t, i) {
if (!e) return i;
var n = e["k_" + t];
return n || i;
},
daily_value_get: function(e, t, i) {
if (!e) return i;
var n = e["k_" + t];
return n || i;
},
getOtherUserInfo: function(e, t, i) {
this._ip = t;
this.iconSprite = i;
var n = {
account: this.account,
sign: this.sign,
target: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("other_user_info", n);
},
create: function(e) {
var t = {
account: this.account,
sign: this.sign,
name: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_user", t);
},
enterRoom: function(e, t) {
if (!this.eid) {
this.enterPrivateRoom_callFunc = t;
var i = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
roomid: e
};
cc.vv.wc.show("正在请求房间 " + e);
this._loginCount = 0;
var n = this;
this.eid = setInterval(function() {
n._loginCount++;
cc.vv.wc.show("正在第" + n._loginCount + "次请求房间 " + e);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("enter_private_room", i);
}, 2e3);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("enter_private_room", i);
}
},
getHistoryList: function(e, t, i, n, a) {
0 == e && (e = "0");
this.getHistoryList_callFunc = a;
var s = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
page: e,
server_type: t,
clubid: i,
st: n
};
console.log("log--------------------getHistoryList  ->args=:", s);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_history_list", s);
},
getGamesOfRoom: function(e, t) {
this.getGamesOfRoom_callFunc = t;
var i = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
uuid: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_games_of_room", i);
},
getDetailOfGame: function(e, t, i) {
this.getDetailOfGame_callFunc = i;
this.index = t;
this.roomUUID = e;
var n = cc.sys.localStorage.getItem("rep" + e + "index" + t);
if (n) i(JSON.parse(n)); else {
var a = {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign,
uuid: e,
index: t
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_detail_of_game", a);
}
},
getFeedBackShowAdvice: function(e, t) {
this.showAdvice_callFunc = t;
var i = {
account: cc.vv.userMgr.account,
page: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("show_advice", i);
},
getFeedBackUserAdvice: function(e, t, i, n) {
this.userAdvice_callFunc = n;
var a = {
account: cc.vv.userMgr.account,
advice_type: e,
advice_game: t,
advice_platform: cc.sys.os,
msg: i
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("user_advice", a);
},
getFeedBackSolveAdvice: function(e, t) {
this.solveAdvice_callFunc = t;
var i = {
account: cc.vv.userMgr.account,
ad_id: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("solve_advice", i);
},
getF_exchange_Z: function(e, t) {
this.ingotToGlod_callFunc = t;
var i = {
account: cc.vv.userMgr.account,
ingot: e,
sign: 0
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("ingot_to_gold", i);
},
getZ_exchange_F: function(e, t) {
this.goldToIngot_callFunc = t;
var i = {
account: cc.vv.userMgr.account,
gold: e,
sign: 0
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("gold_to_ingot", i);
},
getpoker_color: function(e) {
this.poker_color = e;
},
create_union: function(e, t, i) {
if (cc.vv.clubAutoPre.node.active) {
cc.vv.wc.hide();
cc.vv.clubAutoPre.getRuleType(e, t, i);
cc.vv.UILoader.destroy(cc.find("Canvas/CreateRoom"));
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
} else {
var n = {
server_code: e,
type_index: t = t,
rule_index: i = i
}, a = {
account: this.account,
unionid: this.nowClubID,
high_defend: cc.vv.userMgr.isHighDefend,
conf: JSON.stringify(n)
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_union_room", a);
}
},
update_unions: function(e) {
this.uptate_unions_callFunc = e;
var t = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_unions", t);
},
getXiaoxi: function(e) {
this.xiaoxi_callFunc = e;
var t = {
account: cc.vv.userMgr.account,
page: "0",
sign: cc.vv.userMgr.sign
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("user_mail", t);
},
getGlobal_award_status: function(e) {
this.globalAwardStatus_callFunc = e;
var t = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("global_award_status", t);
},
getTask: function(e) {
this.getTask_callFunc = e;
var t = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_tasks", t);
},
IsOfficialServer: function() {
return "http://39.108.129.174:9000" == cc.vv.http.url;
},
getRandCode: function() {
var e = n("random_code").random_code, t = e.length;
return e[Math.round(Math.random() * (t - 1))];
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("login", this.onMsgLogin.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("user_mail", this.onMsgUserMail.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("global_award_status", this.onMsgGlobalAwardStutus.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_unions", this.onMsgGetUnions.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_tasks", this.onMsgGetTasks.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_union_room", this.onMsgCreateUnionRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("gold_to_ingot", this.onMsgGoldToIngot.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("ingot_to_gold", this.onMsgIngotToGold.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("solve_advice", this.onMsgSolveAdvice.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("user_advice", this.onMsgUserAdvice.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("show_advice", this.onMsgShowAdvice.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_detail_of_game", this.onMsgGetDetailOfGame.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_games_of_room", this.onMsgGetGamesOfRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_history_list", this.onMsgGetHistoryList.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("enter_private_room", this.onMsgEnterPrivateRoom.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_user", this.onMsgCreateUser.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("other_user_info", this.onMsgOtherUserInfo.bind(this));
},
onMsgLogin: function(e) {
var t = e.detail, i = this;
if ((i._loginCount = 0) !== t.errcode) {
console.log(t.errmsg);
cc.vv.error.errorMsg(t.errcode);
var n = "";
switch (t.errcode) {
case 1001:
n = "登录失败，微信返回错误";
break;

case 1002:
n = "登录失败，检测账户返回错误";
break;

case 1003:
n = "登录失败,账号被锁定，请联系客服";
break;

default:
n = "登录失败，未定义错误";
}
cc.vv.alert.show("提示", n);
} else {
console.log("log---------------------------onMsgLogin=:", t);
i.account = t.account;
i.userId = t.userid;
i.userName = t.name;
i.lv = t.lv;
i.exp = t.exp;
i.coins = t.coins;
i.gems = t.gems;
i.roomData = t.roomid;
i.sex = t.sex;
i.ip = t.ip;
i.reg_time = t.reg_time;
i.reg_area = t.reg_area;
i.device = t.platform;
i.online_time = t.online_time;
i.share_time = t.share_time;
i.identify = t.identify;
i.match_info = t.match_info;
i.headimg = t.headimg;
null != Object.keys(i.match_info)[0] && (i.inMatch = !0);
i.daily_value = [];
if ("" != t.daily_value) {
var a = JSON.parse(t.daily_value);
for (var s in a) {
var c = "k_" + s;
i.daily_value[c] = a[s];
}
}
i.statistic = [];
if ("" != t.statistic) {
var r = JSON.parse(t.statistic);
for (var s in r) {
var o = "k_" + s;
i.statistic[o] = r[s];
}
}
i.agent_status = t.agent_status;
i.web_agent = t.web_agent;
i.invitation_code = t.invitation_code;
if ("guest_TEMP" == i.account) {
cc.vv.userMgr.tmpLogin++;
4 == cc.vv.userMgr.tmpLogin && cc.vv.wc.hide();
cc.vv.http.url = cc.vv.http.master_url;
} else if (cc.vv && i.inMatch) {
"hall" != cc.director.getScene().name ? cc.director.loadScene("hall", function() {
cc.vv.wc.show("正在进入游戏");
i.reconnectMatchDDZ();
}) : i.reconnectMatchDDZ();
} else {
cc.vv.wc.show("正在进入游戏大厅");
cc.director.loadScene("hall");
}
}
},
reconnectMatchDDZ: function() {
var e = this;
cc.error("reconnectMatchDDZ !!!");
if (!cc.vv.gameNetMgr) {
var t = n("GameNetMgr80002");
cc.vv.gameNetMgr = new t();
cc.vv.gameNetMgr.initHandlers();
}
var i = this.match_info.ws_ip + ":" + this.match_info.ws_port;
cc.error(i);
cc.vv.netMgr.connectMatchDDZServer(i, function() {
if (cc.vv.gameNetMgr.auth_finish) e.reconnectMatchDDZRoom(); else {
clearInterval(e.id);
e.id = setInterval(function() {
if (cc.vv.gameNetMgr.auth_finish) {
clearInterval(e.id);
e.reconnectMatchDDZRoom();
}
}, 1e3);
}
});
},
reconnectMatchDDZRoom: function() {
cc.vv.gameNetMgr.auth_finish ? cc.vv.netMgr.connectlist[cc.vv.netMgr.MATCH].send("match_reconnection") : cc.vv.toast.showToast({
txt: "网络验证失败！"
});
},
onMsgUserMail: function(e) {
e = e.detail;
console.log("log----------onMsgUserMail=:", e);
0 !== e.errcode ? this.xiaoxi_callFunc(0) : null != this.xiaoxi_callFunc && (e.mail ? this.xiaoxi_callFunc(e.mail) : this.xiaoxi_callFunc(e.errmsg.mail));
},
onMsgGlobalAwardStutus: function(e) {
0 !== (e = e.detail).errcode ? this.globalAwardStatus_callFunc(0) : null != this.globalAwardStatus_callFunc && this.globalAwardStatus_callFunc(e);
},
onMsgGetUnions: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("获取俱乐部信息失败", t);
} else {
cc.vv.userMgr.unions = e.unions;
this.uptate_unions_callFunc(e);
}
},
onMsgGetTasks: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else null != this.getTask_callFunc && this.getTask_callFunc(e);
},
onMsgCreateUnionRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
cc.vv.wc.hide();
} else {
cc.log("俱乐部创建房间", e);
e.less_than && cc.vv.alert.show("提示", "该俱乐部房卡余额不足十张,请及时补充!");
cc.find("Canvas");
cc.vv.UILoader.destroy(cc.find("Canvas/CreateRoom"));
cc.vv.UILoader.destroy(cc.find("Canvas/SelectGame"));
cc.find("Canvas/clubMain").emit("update_unions");
cc.vv.wc.hide();
}
},
onMsgGoldToIngot: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else null != this.goldToIngot_callFunc && this.goldToIngot_callFunc(e);
},
onMsgIngotToGold: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else null != this.ingotToGlod_callFunc && this.ingotToGlod_callFunc(e);
},
onMsgSolveAdvice: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else null != this.solveAdvice_callFunc && this.solveAdvice_callFunc("success");
},
onMsgUserAdvice: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else null != this.userAdvice_callFunc && this.userAdvice_callFunc("success");
},
onMsgShowAdvice: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else null != this.showAdvice_callFunc && this.showAdvice_callFunc(e);
},
onMsgGetDetailOfGame: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
console.log(e.data);
cc.sys.localStorage.setItem("rep" + this.uuid + "index" + this.index, JSON.stringify(e.data));
this.getDetailOfGame_callFunc(e.data);
}
},
onMsgGetGamesOfRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else this.getGamesOfRoom_callFunc(e.data);
},
onMsgGetHistoryList: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
console.log(e.history);
null != this.getHistoryList_callFunc && this.getHistoryList_callFunc(e.history);
}
},
onMsgEnterPrivateRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
if (-1 == e.errcode || 2108 == e.errcode) return;
clearInterval(this.eid);
this.eid = 0;
cc.vv.wc.hide();
null != this.enterPrivateRoom_callFunc && this.enterPrivateRoom_callFunc(e);
} else {
null != this.enterPrivateRoom_callFunc && this.enterPrivateRoom_callFunc(e);
clearInterval(this.eid);
this.eid = 0;
var t = n("GameNetMgr" + e.server_type);
cc.vv.gameNetMgr = new t();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
}
},
onMsgCreateUser: function(e) {
if (0 !== (e = e.detail).errcode) {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("login", {
account: cc.vv.userMgr.account,
sign: cc.vv.userMgr.sign
});
},
onMsgOtherUserInfo: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = {};
i.name = e.name;
i.ip = this._ip;
i.userId = e.user_id;
i.sex = e.sex;
i.coins = e.coins;
i.gems = e.gems;
i.headimg = e.headimg;
var n = cc.vv.userMgr.reg_area;
n || (n = "未知");
i.reg_area = n;
var a = cc.vv.userMgr.platform;
a && "default" != a || (a = "未知");
i.device = a;
var s = cc.vv.userMgr.online_time;
s || (s = "未知");
i.online_time = s + "秒";
var c = [];
if ("" != e.statistic) {
i.gems = e.gems;
var r = JSON.parse(e.statistic);
for (var o in r) {
c["k_" + o] = r[o];
}
}
i.totoal_play = this.statistic_get(c, this.statistic_key.JOIN_COUNTS, "未知");
i.totoal_win_count = this.statistic_get(c, this.statistic_key.WIN_COUNTS, "未知");
i.max_score = this.statistic_get(c, this.statistic_key.MAX_WIN_SCORE, "未知");
var h = 0 == cc.vv.gameNetMgr.seatIndex;
if (1 == h) {
e.user_id == cc.vv.userMgr.userId && (h = !1);
cc.vv.gameNetMgr.numOfGames && (h = !1);
}
cc.vv.UILoader.loadRes("hall/prefabs/userinfo", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, cc.find("Canvas"), function(e) {
e.getComponent("UserInfoShow").show(i, i.headimg, "game", h);
});
});
}
}
});
cc._RF.pop();
}, {
GameNetMgr80002: "GameNetMgr80002",
random_code: "random_code"
} ],
Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b717fzww0hNzIqvNbb1t9wx", "Utils");
var s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
cc.Class({
extends: cc.Component,
properties: {},
addClickEvent: function(e, t, i, n) {
console.log(i + ":" + n);
var a = new cc.Component.EventHandler();
a.target = t;
a.component = i;
a.handler = n;
e.getComponent(cc.Button).clickEvents.push(a);
},
addSlideEvent: function(e, t, i, n) {
var a = new cc.Component.EventHandler();
a.target = t;
a.component = i;
a.handler = n;
e.getComponent(cc.Slider).slideEvents.push(a);
},
parseWebArgs: function(e) {
for (var t = {}, i = e.split("$$"), n = 0; n < i.length; n++) {
var a = i[n].split("$");
t[a[0]] = a[1];
}
return t;
},
resetWindow: function() {
if (cc.sys.isBrowser) {
var e = cc.view.getFrameSize();
e.width / e.height > 1280 / 720 && cc.view.setDesignResolutionSize(1520, 720, cc.ResolutionPolicy.SHOW_ALL);
e.width / e.height < 1280 / 720 && cc.view.setDesignResolutionSize(1280, 820, cc.ResolutionPolicy.SHOW_ALL);
}
},
getRad: function(e) {
return e * Math.PI / 180;
},
log2: function(e) {
return Math.log2(e);
},
getFlatternDistance: function(e, t, i, n) {
var a, s, c, r, o = this.getRad((e + i) / 2), h = this.getRad((e - i) / 2), l = this.getRad((t - n) / 2), d = Math.sin(h), u = Math.sin(l), v = Math.sin(o);
a = (d *= d) * (1 - (u *= u)) + (1 - (v *= v)) * u;
s = (1 - d) * (1 - u) + v * u;
return 2 * (c = Math.atan(Math.sqrt(a / s))) * 6378137 * (1 + 1 / 298.257 * ((3 * (r = Math.sqrt(a * s) / c) - 1) / 2 / s * v * (1 - d) - (3 * r + 1) / 2 / a * (1 - v) * d));
},
getNowTime: function() {
var e = new Date(), t = "{0}-{1}-{2} {3}:{4}:{5}", i = e.getFullYear(), n = e.getMonth() + 1;
n = 10 <= n ? n : "0" + n;
var a = e.getDate();
a = 10 <= a ? a : "0" + a;
var s = e.getHours();
s = 10 <= s ? s : "0" + s;
var c = e.getMinutes();
c = 10 <= c ? c : "0" + c;
var r = e.getSeconds();
r = 10 <= r ? r : "0" + r;
return t = t.format(i, n, a, s, c, r);
},
compareVer: function(e, t) {
if (!t) return 1;
var i = e.split("."), n = t.split(".");
return i[0] == n[0] ? i[1] == n[1] ? i[2] == n[2] ? 0 : 0 < i[2] - n[2] ? 1 : -1 : 0 < i[1] - n[1] ? 1 : -1 : 0 < i[0] - n[0] ? 1 : -1;
},
seekNodeByName: function(e, t) {
var i = void 0;
if (i = -1 !== e.indexOf("/") ? cc.find(e, t) : t.name === e ? t : this._findChild(e, t)) return i;
loge(e, "没有找到指定的Node");
return null;
},
_findChild: function(e, t) {
var i = t.getChildByName(e);
if (i) return i;
var n = t.children;
for (var a in n) if (i = this._findChild(e, n[a])) return i;
return null;
},
makeSet: function(e) {
var t = {}, i = [];
for (var n in e) {
var a = e[n];
if (!t[a]) {
i.push(a);
t[a] = 1;
}
}
return i;
},
clone: function(e) {
var a = new WeakMap();
return function e(t) {
if (t && "object" === ("undefined" == typeof t ? "undefined" : s(t))) {
if (a.get(t)) return a.get(t);
var i = new t.constructor();
a.set(t, i);
for (var n in t) t.hasOwnProperty(n) && (i[e(n)] = e(t[n]));
return i;
}
return t;
}(e);
}
});
cc._RF.pop();
}, {} ],
VoiceMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1f066RbLAxKGJZtkDFO2kq/", "VoiceMgr");
var n = 12, a = 128 - n;
function s(e) {
e -= a;
var t = Math.floor(e / n) + a, i = e % n + a;
return String.fromCharCode(t) + String.fromCharCode(i);
}
for (var r = {}, o = {}, c = 0; c < 256; ++c) {
var h = null, l = c + 1;
h = a <= l ? s(l) : String.fromCharCode(l);
r[c] = h;
o[h] = c;
}
function d(e, t) {
var i = e.charCodeAt(t);
return i = a <= i ? e.charAt(t) + e.charAt(t + 1) : e.charAt(t);
}
cc.Class({
extends: cc.Component,
properties: {
onPlayCallback: null,
_voiceMediaPath: null
},
init: function() {
if (cc.sys.isNative) {
this._voiceMediaPath = jsb.fileUtils.getWritablePath() + "/voicemsgs/";
this.setStorageDir(this._voiceMediaPath);
}
},
prepare: function(e) {
if (cc.sys.isNative) {
cc.vv.audioMgr.pauseAll();
this.clearCache(e);
cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod("com/vivigames/voicesdk/VoiceRecorder", "prepare", "(Ljava/lang/String;)V", e) : cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod("VoiceSDK", "prepareRecord:", e);
}
},
release: function() {
if (cc.sys.isNative) {
cc.vv.audioMgr.resumeAll();
cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod("com/vivigames/voicesdk/VoiceRecorder", "release", "()V") : cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod("VoiceSDK", "finishRecord");
}
},
cancel: function() {
if (cc.sys.isNative) {
cc.vv.audioMgr.resumeAll();
cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod("com/vivigames/voicesdk/VoiceRecorder", "cancel", "()V") : cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod("VoiceSDK", "cancelRecord");
}
},
writeVoice: function(e, t) {
if (cc.sys.isNative && t && 0 < t.length) {
var i = function(e) {
for (var t = 0, i = 0, n = 0; n < 4; ++n) {
t += (c = d(e, t)).length;
i |= o[c] << 8 * (3 - n);
}
for (var a = new Uint8Array(i), s = 0; t < e.length; ) {
var c;
t += (c = d(e, t)).length;
a[s] = o[c];
s++;
}
return a;
}(t), n = this._voiceMediaPath + e;
this.clearCache(e);
jsb.fileUtils.writeDataToFile(i, n);
}
},
clearCache: function(e) {
if (cc.sys.isNative) {
var t = this._voiceMediaPath + e;
jsb.fileUtils.isFileExist(t) && jsb.fileUtils.removeFile(t);
jsb.fileUtils.isFileExist(t + ".wav") && jsb.fileUtils.removeFile(t + ".wav");
}
},
play: function(e) {
if (cc.sys.isNative) {
cc.vv.audioMgr.pauseAll();
cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod("com/vivigames/voicesdk/VoicePlayer", "play", "(Ljava/lang/String;)V", e) : cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod("VoiceSDK", "play:", e);
}
},
stop: function() {
if (cc.sys.isNative) {
cc.vv.audioMgr.resumeAll();
cc.sys.os == cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod("com/vivigames/voicesdk/VoicePlayer", "stop", "()V") : cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod("VoiceSDK", "stopPlay");
}
},
getVoiceLevel: function(e) {
return Math.floor(Math.random() * e + 1);
},
getVoiceData: function(e) {
if (cc.sys.isNative) {
var t = this._voiceMediaPath + e;
console.log("getVoiceData:" + t);
var i = jsb.fileUtils.getDataFromFile(t);
if (i) {
return function(e) {
var t = "", i = e.length, n = i >> 16 & 255, a = i >> 8 & 255, s = 255 & i;
t += r[i >> 24 & 255];
t += r[n];
t += r[a];
t += r[s];
for (var c = 0; c < e.length; ++c) t += r[e[c]];
return t;
}(i);
}
}
return "";
},
download: function() {},
setStorageDir: function(e) {
if (cc.sys.isNative) if (cc.sys.os == cc.sys.OS_ANDROID) jsb.reflection.callStaticMethod("com/vivigames/voicesdk/VoiceRecorder", "setStorageDir", "(Ljava/lang/String;)V", e); else if (cc.sys.os == cc.sys.OS_IOS) {
jsb.reflection.callStaticMethod("VoiceSDK", "setStorageDir:", e);
jsb.fileUtils.isDirectoryExist(e) || jsb.fileUtils.createDirectory(e);
}
}
});
cc._RF.pop();
}, {} ],
Voice: [ function(i, e, t) {
"use strict";
cc._RF.push(e, "f6db9z0CxdEzpRVgU569dDu", "Voice");
cc.Class({
extends: cc.Component,
properties: {
_lastTouchTime: null,
_voice: null,
_volume: null,
_voice_failed: null,
_lastCheckTime: -1,
_timeBar: null,
MAX_TIME: 15e3
},
onLoad: function() {
this._voice = this.node;
this._voice.active = !1;
this._voice_failed = this.node.getChildByName("voice_failed");
this._voice_failed.active = !1;
this._timeBar = this.node.getChildByName("time");
this._timeBar.scaleX = 0;
this._volume = this.node.getChildByName("volume");
for (var e = 1; e < this._volume.children.length; ++e) this._volume.children[e].active = !1;
(t = this._voice_failed.getChildByName("btn_ok")) && cc.vv.utils.addClickEvent(t, this.node, "Voice", "onBtnOKClicked");
var t, i = this;
if (t = this.node.parent.getChildByName("btn_voice")) {
if (cc.vv.gameNetMgr.isReplay) return;
t.on(cc.Node.EventType.TOUCH_START, function() {
console.log("cc.Node.EventType.TOUCH_START");
cc.vv.voiceMgr.prepare("record.amr");
i._lastTouchTime = Date.now();
i._voice.active = !0;
i._voice_failed.active = !1;
});
t.on(cc.Node.EventType.TOUCH_MOVE, function() {});
t.on(cc.Node.EventType.TOUCH_END, function() {
console.log("cc.Node.EventType.TOUCH_END");
if (Date.now() - i._lastTouchTime < 1e3) {
i._voice_failed.active = !0;
cc.vv.voiceMgr.cancel();
} else i.onVoiceOK();
i._lastTouchTime = null;
});
t.on(cc.Node.EventType.TOUCH_CANCEL, function() {
console.log("cc.Node.EventType.TOUCH_CANCEL");
if (Date.now() - i._lastTouchTime < 1e3) {
i._voice_failed.active = !0;
cc.vv.voiceMgr.cancel();
} else i.onVoiceOK();
i._lastTouchTime = null;
});
}
},
onVoiceOK: function() {
var n = this;
if (null != this._lastTouchTime) {
cc.vv.voiceMgr.release();
var a = Date.now() - this._lastTouchTime, e = cc.vv.voiceMgr.getVoiceData("record.amr");
"dev" == cc.ENV && cc.sys.isBrowser && (e = "780asdufihahjsdfyuiapsgjkbskhlfghapdsfgasfd");
e = new (i("buffer").Buffer)(e).toString("base64");
for (;-1 != e.indexOf("+"); ) e = e.replace("+", ".");
var t = {
voice_msg: e
};
cc.vv.http.sendRequest("/voice_chat", t, function(e) {
if (e.errcode) console.log("语音上传失败，错误码", e.errcode); else if (1 == cc.vv.userMgr.inClub) {
var t = n.node.parent.parent.getComponent("ClubChat"), i = {
chat_msg: e.voice_msg_id,
unionid: t._curr_unionid,
chat_type: 2,
time: a,
msg_id: t.msg_id
};
t.dealMeMsg(i, 2);
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].send("union_chat", i);
} else cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("voice_msg", {
msg: e.voice_msg_id,
time: a
});
}, cc.vv.userMgr.voice_chat_addr);
}
this._voice.active = !1;
},
onBtnOKClicked: function() {
this._voice.active = !1;
},
update: function(e) {
if (this._voice) {
if (1 == this._voice.active && 0 == this._voice_failed.active && 300 < Date.now() - this._lastCheckTime) {
for (var t = 0; t < this._volume.children.length; ++t) this._volume.children[t].active = !1;
var i = cc.vv.voiceMgr.getVoiceLevel(7);
1 <= i && i <= 7 && (this._volume.children[i - 1].active = !0);
this._lastCheckTime = Date.now();
}
if (this._lastTouchTime) {
var n = Date.now() - this._lastTouchTime;
if (n >= this.MAX_TIME) {
this.onVoiceOK();
this._lastTouchTime = null;
} else {
var a = n / this.MAX_TIME;
this._timeBar.scaleX = 1 - a;
}
}
}
}
});
cc._RF.pop();
}, {
buffer: 47
} ],
WHZ_GameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f2b98yTkR1DRIIZ+gGQmE8Y", "WHZ_GameOver");
cc.Class({
extends: cc.Component,
properties: {
_viewdataList: []
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.initData();
this.initNode();
this.initEventHandler();
this.showBtnReadyLabelByState();
}
},
initData: function() {
this.huCountList = [];
this.itemLableList = [];
this.userList = [];
this.itemCardTag = 1100;
this._maxPlayerNum = 3;
this._handCardSpriteSize = {
width: 56,
height: 62
};
},
initNode: function() {
this._gameOverRoot = this.node.getChildByName("bg");
this._surplusCardsNode = this._gameOverRoot.getChildByName("surplusCardsNode");
this.initHuIcon();
this.initCommonLabels();
this.initHuCountLabels();
this.initUsers();
this.initFanLables();
this.node.active = !1;
},
initCommonLabels: function() {
this.lb_huXi = this._gameOverRoot.getChildByName("lb_huXi").getComponent(cc.Label);
this.lb_fanShu = this._gameOverRoot.getChildByName("lb_fanShu").getComponent(cc.Label);
this.lb_tunShu = this._gameOverRoot.getChildByName("lb_tunShu").getComponent(cc.Label);
this.lb_total = this._gameOverRoot.getChildByName("lb_total").getComponent(cc.Label);
this.lb_huXi.string = "";
this.lb_tunShu.string = "";
this.lb_total.string = "";
},
initHuIcon: function() {
this.icon_huCardSign = this._gameOverRoot.getChildByName("huCardFrame");
this.icon_huCardSign.active = !1;
this.icon_huCardSign.setLocalZOrder(10);
},
initHuCountLabels: function() {
this._huCountNode = this._gameOverRoot.getChildByName("itemCardHuCountNode");
for (var e = 0; e < 8; e++) {
var t = this._huCountNode.getChildByName("huCount" + e), i = this._huCountNode.getChildByName("itemLable" + e);
t.getComponent(cc.Label).string = "";
i.getComponent(cc.Label).string = "";
this.huCountList.push(t);
this.itemLableList.push(i);
}
},
initUsers: function() {
for (var e = this._gameOverRoot.getChildByName("UserNode"), t = 0; t < this._maxPlayerNum; t++) {
var i = {}, n = e.getChildByName("user" + t);
i.frame = n.getChildByName("frame").getComponent(cc.Sprite);
i.icon_winOrLoseTyp = n.getChildByName("icon_winOrLoseType").getComponent(cc.Sprite);
i.icon_winOrLose = n.getChildByName("icon_winOrLose").getComponent(cc.Sprite);
i.lb_score = n.getChildByName("lb_score").getComponent(cc.Label);
i.lb_name = n.getChildByName("lb_name").getComponent(cc.Label);
i.lb_id = n.getChildByName("lb_id").getComponent(cc.Label);
i.image_atavar = n.getChildByName("head").getChildByName("image_Atavar").getComponent("ImageLoader");
this.userList.push(i);
}
},
initFanLables: function() {
var e = this._gameOverRoot.getChildByName("fanLabelNode");
this.Lb_fanTypeList = [];
for (var t = 0; t < 12; t++) {
var i = "lb_fanType" + t, n = e.getChildByName(i).getComponent(cc.Label);
this.Lb_fanTypeList.push(n);
}
},
showBtnReadyLabelByState: function() {
var e = this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label);
cc.vv.gameNetMgr.isOver ? e.string = "总结算" : e.string = "继续";
},
initEventHandler: function() {
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("wp_over", this.call_game_over, this);
this.gameRoot.on("game_result_showLB", this.showLb, this);
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
showLb: function() {
this._gameOverRoot.getChildByName("btnReady").getChildByName("lb").getComponent(cc.Label).string = "总结算";
},
call_game_over: function(e) {
var t = this;
1 != e.detail.force ? this.gameRoot && this.gameRoot.runAction(cc.sequence(cc.delayTime(3.5), cc.callFunc(function(e) {
t.onGameOver();
}))) : this.onGameOver();
},
onGameOver: function() {
this.icon_huCardSign.active = !1;
this.node.active = !0;
var e = cc.vv.gameNetMgr.gameOverData, t = e.end_seats_data, i = (e.force, e.tian_hu, 
e.hu_user_id), n = e.pao_user_id;
this.hu_card = e.hu_card;
e.button;
var a = e.pokers, s = e.hu_details;
this.totalHuCount = 0;
this.hu_index = 0;
this.pick_hu = e.pick_hu;
console.log("log------------fangroup=:", e.fan_group);
this.clear();
this.showSurplusCards(a);
this.showItemsInfo(t, i);
this.showHuDetails(t, s);
this.showFanGroups(e.fan_group);
this.showPlayer(t, i, n);
this.lb_huXi.string = "胡息 +" + e.total_hu_nums;
this.lb_fanShu.string = "番数 +" + e.total_zi_nums;
},
showSurplusCards: function(e) {
for (var t = 0; t < e.length; t++) {
var i = cc.vv.zipai_drawCard.drawCard(e[t], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
i.parent = this._surplusCardsNode;
i.setScale(.6);
i.setPosition((t + .5) * this._handCardSpriteSize.width * .6, 0);
}
},
showItemsInfo: function(e, t) {
for (var i = 0; i < e.length; i++) if (t == e[i].user_id) {
for (var n = 0; n < e[i].items.length; n++) {
var a = n, s = e[i].items[n][0], c = e[i].items[n][1], r = cc.vv.WHZ_Utils.getItemCards(s, c), o = cc.vv.WHZ_Utils.getHuCount(s, r), h = this.getItemType(s);
this.huCountList[n].getComponent(cc.Label).string = o;
this.itemLableList[a].getComponent(cc.Label).string = h;
this.showItemCards(r, a, cc.vv.zipai_drawCard.enumTalbe.cardSort.ITEM, s);
this.totalHuCount += o;
}
this.hu_index = i;
break;
}
},
showHuDetails: function(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i][0], a = t[i][1], s = e[this.hu_index].items.length + i;
this.showItemCards(a, s, cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS, n);
var c = cc.vv.WHZ_Utils.getHuCount(n, a), r = this.getItemType(n);
this.isHuCard && c++;
this.huCountList[s].getComponent(cc.Label).string = c;
this.itemLableList[s].getComponent(cc.Label).string = r;
this.totalHuCount += c;
}
this.huCountList[7].getComponent(cc.Label).string = this.totalHuCount;
this.lb_total.string = this.totalHuCount;
},
showItemCards: function(e, t, i, n) {
this.isHuCard = !1;
for (var a in e) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_GUO_SAO && 2 == a && (s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SAO));
s.parent = this._gameOverRoot;
s.tag = this.itemCardTag;
s.setScale(.5);
var c = this.huCountList[t].getPosition();
s.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
if (i == cc.vv.zipai_drawCard.enumTalbe.cardSort.HOLDS && !this.icon_huCardSign.active && e[a] == this.hu_card) {
this.icon_huCardSign.active = !0;
this.icon_huCardSign.setScale(.8);
this.icon_huCardSign.setPosition(c.x, c.y + 30 + a * this._handCardSpriteSize.height * .5);
this.isHuCard = !0;
}
}
},
getItemType: function(e) {
var t = "";
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
t = "吃";
break;

case cc.vv.globalSetting.ITEM_PENG:
t = "碰";
break;

case cc.vv.globalSetting.ITEM_SAO:
t = "歪";
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
t = "溜";
break;

case cc.vv.globalSetting.ITEM_KAN:
t = "坎";
break;

case cc.vv.globalSetting.ITEM_DUIZI:
t = "对";
break;

case cc.vv.globalSetting.ITEM_SHUNZI:
t = "句";
break;

case cc.vv.globalSetting.ITEM_MENZI:
t = "门";
}
return t;
},
showPlayer: function(e, t, i) {
this.sortByScore(e);
for (var n = 0; n < e.length; n++) {
var a = null, s = null, c = null;
if (0 < e[n].end_score) {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_win");
s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("win");
t == i && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_zimo"));
} else {
a = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("di_lose");
e[n].end_score < 0 && (s = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("lose"));
e[n].user_id == i && this.pick_hu <= 0 && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("fangpao"));
e[n].user_id == i && 0 < this.pick_hu && (c = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("biao_dianpao"));
}
var r = this.getUserNameByID(e[n].user_id);
this.userList[n].frame.spriteFrame = a;
this.userList[n].icon_winOrLose.spriteFrame = s;
this.userList[n].icon_winOrLoseTyp.spriteFrame = c;
this.userList[n].lb_score.string = e[n].end_score;
if (cc.vv.userMgr.isHighDefend) {
this.userList[n].lb_name.string = "已屏蔽";
this.userList[n].lb_id.string = "已屏蔽";
} else {
this.userList[n].lb_name.string = r;
this.userList[n].lb_id.string = e[n].user_id;
}
this.userList[n].image_atavar.setUserID(e[n].user_id);
}
},
sortByScore: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t].end_score < e[i].end_score) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
showFanGroups: function(e) {
this.resetfanLabels();
var t = 0;
for (var i in e) {
this.showSingleFanGroup(t, e[i]);
t++;
}
},
resetfanLabels: function() {
for (var e = 0; e < this.Lb_fanTypeList.length; e++) this.Lb_fanTypeList[e].string = "";
},
showSingleFanGroup: function(e, t) {
var i = "";
switch (t) {
case cc.vv.globalSetting.FAN_TYPE_TIAN_HU:
i = "天胡";
break;

case cc.vv.globalSetting.FAN_TYPE_DI_HU:
i = "地胡";
break;

case cc.vv.globalSetting.FAN_TYPE_TING_HU:
i = "听胡";
break;

case cc.vv.globalSetting.FAN_TYPE_SHI_SAN_HONG:
i = "十三红";
break;

case cc.vv.globalSetting.FAN_TYPE_YI_DIAN_HONG:
i = "一点红";
break;

case cc.vv.globalSetting.FAN_TYPE_HEI_HU:
i = "全黑";
break;

case cc.vv.globalSetting.FAN_TYPE_SHI_BA_DA:
i = "全大";
break;

case cc.vv.globalSetting.FAN_TYPE_SHI_BA_XIAO:
i = "全小";
break;

case cc.vv.globalSetting.FAN_TYPE_NO_HAS_DUIZI:
i = "无对";
break;

case cc.vv.globalSetting.FAN_TYPE_TEN_DUIZI:
i = "十对";
break;

case cc.vv.globalSetting.FAN_TYPE_ONE_DUIZI:
i = "一对";
break;

case cc.vv.globalSetting.FAN_TYPE_NINE_DUIZI:
i = "九对";
break;

case cc.vv.globalSetting.FAN_TYPE_HANG_HANG_XI:
i = "行行息";
break;

case cc.vv.globalSetting.FAN_TYPE_DUIZI_XI:
i = "对子息";
break;

case cc.vv.globalSetting.FAN_TYPE_HAI_LAO:
i = "海捞";
break;

case cc.vv.globalSetting.FAN_TYPE_QUAN_QIU_REN:
i = "全求人";
}
this.Lb_fanTypeList[e].string = i;
},
getUserNameByID: function(e) {
var t = cc.vv.gameNetMgr.seats;
for (var i in t) if (e == t[i].userid) return t[i].name;
},
clear: function() {
this.clearHuCount();
this.clearItemLabels();
this.clearItemCards();
this.clearSurplusCards();
},
clearHuCount: function() {
for (var e in this.huCountList) this.huCountList[e].getComponent(cc.Label).string = "";
},
clearItemLabels: function() {
for (var e in this.itemLableList) this.itemLableList[e].getComponent(cc.Label).string = "";
},
clearItemCards: function() {
for (;this._gameOverRoot.getChildByTag(this.itemCardTag); ) this._gameOverRoot.removeChildByTag(this.itemCardTag);
},
clearSurplusCards: function() {
this._surplusCardsNode.removeAllChildren();
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.gameRoot.emit("show_gameResult"); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.active = !1;
this.gameRoot.emit("fresh_all_score");
},
onDestroy: function() {
this.gameRoot.off("game_over", this.call_game_over, this);
}
});
cc._RF.pop();
}, {} ],
WHZ_GlobalSetting: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f96fbRG9qBMZYsxTvkfvQgK", "WHZ_GlobalSetting");
var n = {
DISMISS_TIME: 12e4,
GAME_TYPE_CLASSIC: 1,
MASK_PC10: 1,
MASK_PC20: 2,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
ITEM_LEFT_CHI: 1,
ITEM_CENTER_CHI: 2,
ITEM_RIGHT_CHI: 3,
ITEM_SMALL_ERQISHI_CHI: 4,
ITEM_BIG_ERQISHI_CHI: 5,
ITEM_PENG: 6,
ITEM_SAO: 7,
ITEM_SAO_CHUAN: 8,
ITEM_SAO_SAO_CHUAN: 9,
ITEM_KAN: 10,
ITEM_DUIZI: 11,
ITEM_SHUNZI: 12,
ITEM_MENZI: 13,
OPERATE_PASS: 1,
OPERATE_LEFT_CHI: 2,
OPERATE_CENTER_CHI: 3,
OPERATE_RIGHT_CHI: 4,
OPERATE_SMALL_ERQISHI_CHI: 5,
OPERATE_BIG_ERQISHI_CHI: 6,
OPERATE_PENG: 7,
OPERATE_SAO: 8,
OPERATE_SAO_CHUAN: 9,
OPERATE_SAO_SAO_CHUAN: 10,
OPERATE_HU: 11,
ACTION_PICK: 1,
ACTION_OUT: 2,
ACTION_LEFT_CHI: 3,
ACTION_CENTER_CHI: 4,
ACTION_RIGHT_CHI: 5,
ACTION_SMALL_ERQISHI_CHI: 6,
ACTION_BIG_ERQISHI_CHI: 7,
ACTION_PENG: 8,
ACTION_SAO: 9,
ACTION_SAO_CHUAN: 11,
ACTION_SAO_SAOCHUAN: 12,
ACTION_HU: 13,
FAN_TYPE_TIAN_HU: 1,
FAN_TYPE_DI_HU: 2,
FAN_TYPE_TING_HU: 3,
FAN_TYPE_SHI_SAN_HONG: 4,
FAN_TYPE_YI_DIAN_HONG: 5,
FAN_TYPE_HEI_HU: 6,
FAN_TYPE_SHI_BA_DA: 7,
FAN_TYPE_SHI_BA_XIAO: 8,
FAN_TYPE_NO_HAS_DUIZI: 9,
FAN_TYPE_TEN_DUIZI: 10,
FAN_TYPE_ONE_DUIZI: 11,
FAN_TYPE_NINE_DUIZI: 12,
FAN_TYPE_HANG_HANG_XI: 13,
FAN_TYPE_DUIZI_XI: 14,
FAN_TYPE_HAI_LAO: 15,
FAN_TYPE_QUAN_QIU_REN: 16,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
MIN_HUXI_NUMS: 7,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
has_rule: function(e, t) {
return 0 != (e & 1 << t);
},
type_check: function(e) {
var t = 0;
n.has_rule(e, n.GAME_TYPE_CLASSIC) && (t += 1);
return 1 == t;
},
rule_check: function(e) {
var t = 0;
n.has_rule(e, n.MASK_PC10) && (t += 1);
n.has_rule(e, n.MASK_PC20) && (t += 1);
if (1 != t) return !1;
var i = 0;
n.has_rule(e, n.MASK_INGOT_GAME) && (i += 1);
n.has_rule(e, n.MASK_GOLD_GAME) && (i += 1);
return 1 == i;
},
get_ingot_value: function(e) {
if (n.has_rule(e, n.MASK_INGOT_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 1;
if (n.has_rule(e, n.MASK_PC20)) return 2;
}
if (n.has_rule(e, n.MASK_GOLD_GAME)) {
if (n.has_rule(e, n.MASK_PC10)) return 1;
if (n.has_rule(e, n.MASK_PC20)) return 2;
}
}
};
i.global = n;
cc._RF.pop();
}, {} ],
WHZ_Msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "136c3xj3itF4o18NvXolT7C", "WHZ_Msgdefine");
var n = {};
n.SC_has_tian_hu_push = JSON.stringify({});
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
button: 0,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
total_hu_nums: 0,
total_zi_nums: 0,
pokers: [],
hu_details: [],
fan_group: []
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.SC_action_mask = JSON.stringify({
action_mask: []
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.CS_card_type_action = JSON.stringify({
action: 0,
action_card: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
WHZ_Replay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9c042fkwjtH7YMeOwoA4QSc", "WHZ_Replay");
cc.Class({
extends: cc.Component,
properties: {
_seats2: [],
_zhuangs: [],
_iconsNodes: [],
_itemNodes: [],
_foldsNodes: [],
_holdsNodes: [],
_playerPos: []
},
onLoad: function() {
if (cc.vv) {
this.replayGameNode = cc.find("Canvas/replayGame");
this.gameNode = cc.find("Canvas/game");
this.peaceNode = this.replayGameNode.getChildByName("peaceNode");
this.replayGameNode.active = !0;
this.peaceNode.active = !1;
this.gameNode.active = !1;
cc.vv.gameNetMgr.dataEventHandler = this.node;
this.initData();
this.initView();
this.initHoldNodes();
this.initSeats();
this.initBigCardBack();
this.initEvent();
this.judgeShowPeace();
} else cc.director.loadScene("loading");
},
initData: function() {
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this._beginThrowCardPos = [ {
x: 0,
y: -50
}, {
x: 100,
y: 100
}, {
x: -100,
y: 100
} ];
this.holdsList = [ [], [], [] ];
this.foldsList = [ [], [], [] ];
this.itemsList = [ [], [], [] ];
this.holdsSpriteList = [ [], [], [] ];
this.actionCount = 0;
this.outPool = [];
this.outCardTag = 10086;
},
initView: function() {
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat");
this._seats2.push(n.getComponent("Seat"));
var a = n.getChildByName("zhuang3"), s = i.getChildByName("icons"), c = i.getChildByName("items"), r = i.getChildByName("folds");
a.active = !1;
this._zhuangs.push(a);
this._iconsNodes.push(s);
this._itemNodes.push(c);
this._foldsNodes.push(r);
this._playerPos.push(i.getPosition());
}
this.cardNode = cc.find("Canvas/replayGame/cardNode");
},
initHoldNodes: function() {
for (var e = [ "selfHandCardNode", "rightHandCardNode", "leftHandCardNode" ], t = 0; t < e.length; t++) {
var i = this.replayGameNode.getChildByName(e[t]);
i && this._holdsNodes.push(i);
}
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) {
this.initSingleSeat(e[t]);
var i = cc.vv.gameNetMgr.getLocalIndex(e[t].seatindex);
this.holdsList[i] = e[t].holds.concat();
this.drawHolds(e[t].holds, i);
}
},
initSingleSeat: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = e.seatindex == cc.vv.gameNetMgr.button, n = this._seats2[t];
n.setInfo(e.name, "");
n.setOffline(!1);
n.setID(e.userid);
n.setZhuang(i);
n.voiceMsg(!1);
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.cardNode;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initEvent: function() {
var t = this;
this.node.on("doReplayAction", function(e) {
t.onDoReplayAction(e);
});
this.node.on("doReplayActionOver", function(e) {
t.onDoReplayActionOver();
});
},
drawHolds: function(e, t) {
var i = e.concat(), n = cc.vv.zipai_cardsSort.cardSort(i), a = 0 == t ? cc.vv.zipai_drawCard.enumTalbe.cardType.BIG : cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL;
this.holdsSpriteList[t] = [];
this._holdsNodes[t].removeAllChildren();
for (var s = 0; s < n.sort.length; s++) {
this.holdsSpriteList[t][s] = {
posx: s * this._outCardSpriteSize.width - 640,
cards: []
};
for (var c = 0; c < Math.ceil(n.sort[s].type); c++) {
2.5 == n.sort[s].type && 2 == c && (10 < n.sort[s].value ? n.sort[s].value -= 10 : n.sort[s].value += 10);
2.3 == n.sort[s].type && 0 < c && n.sort[s].value++;
(r = cc.vv.zipai_drawCard.drawCard(n.sort[s].value, a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(Math.ceil(n.sort[s].type) - c);
r.setLocalZOrder(Math.ceil(n.sort[s].type) - c);
this.holdsSpriteList[t][s].cards.push(r);
}
}
for (s = 0; s < n.single.length; s++) {
s % 3 == 0 && (this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)] = {
posx: (n.sort.length + Math.floor(s / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var r;
(r = cc.vv.zipai_drawCard.drawCard(n.single[s], a)).parent = this._holdsNodes[t];
r.getComponent("zipai_card").setOrder(n.single.length - s);
r.setLocalZOrder(n.single.length - s);
this.holdsSpriteList[t][n.sort.length + Math.floor(s / 3)].cards.push(r);
}
this.replaceCards(t);
},
replaceCards: function(e) {
for (var t = 0; t < this.holdsSpriteList[e].length; t++) for (var i = 0; i < this.holdsSpriteList[e][t].cards.length; i++) {
this.holdsSpriteList[e][t].cards[i].setLocalZOrder(this.holdsSpriteList[e][t].cards.length - i);
this.holdsSpriteList[e][t].cards[i].getComponent("zipai_card").setOrder(Math.ceil(this.holdsSpriteList[e][t].cards.length - i));
if (0 == e) this.holdsSpriteList[e][t].cards[i].setPosition(t * this._outCardSpriteSize.width - 310 + (8 - this.holdsSpriteList[e].length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * i - .1 * this._outCardSpriteSize.height); else {
this.holdsSpriteList[e][t].cards[i].setScale(.75);
this.holdsSpriteList[e][t].cards[i].setPosition(t * this._handCardSpriteSize.width * .75 + (8 - this.holdsSpriteList[e].length) * this._handCardSpriteSize.width / 2 * .75, this._handCardSpriteSize.height * i * .75);
}
}
},
onDoReplayAction: function(e) {
var t = e.detail.action, i = (e.detail.next, t.d_actions), n = i[0], a = i[1], s = i[2], c = i[3], r = cc.vv.gameNetMgr.getLocalIndex(n), o = cc.vv.gameNetMgr.getLocalIndex(c);
console.log("log seat  card  act_type=:", r, s, a);
this.showTurn(r);
if (a != cc.vv.globalSetting.ACTION_HU) this.deleteCard(); else if (n == c) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO, r);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", 1);
} else {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.HU, r);
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PAO, o);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", 1);
}
if (a == cc.vv.globalSetting.ACTION_PICK) {
if (0 < this.outPool.length) {
this.updateFoldsData(this.outPool[0]._card, this.outPool[0]._seat);
this.updateFolds(this.outPool[0]._seat);
this.outPool.pop();
}
if (0 == this.actionCount) this.showFirstPickCardAction(s, r); else {
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
}
} else if (a == cc.vv.globalSetting.ACTION_OUT) {
this.outPool.push({
_card: s,
_seat: r
});
this.showCard(s, r, cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(s, 1);
(l = []).push(s);
this.updateHoldsData(l, r);
this.updateHolds(r);
} else {
this.outPool.pop();
for (var h = cc.vv.WHZ_Utils.getItemCards(a - 2, s), l = h.concat(), d = 0; d < l.length; d++) if (s == l[d]) {
l.splice(d, 1);
break;
}
this.showIconByAction(a, r);
this.updateHoldsData(l, r);
this.updateItemsData(h, r, a);
this.updateHolds(r);
this.updateItems(r);
}
this.actionCount++;
},
onDoReplayActionOver: function() {},
updateHolds: function(e) {
this.drawHolds(this.holdsList[e], e);
},
updateItems: function(e) {
for (var t = 1 == e ? -1 : 1, i = 0; i < this.itemsList[e].length; i++) for (var n = 0; n < this.itemsList[e][i].cards.length; n++) {
var a = null;
if (0 < this.itemsList[e][i].cards[n]) {
a = cc.vv.zipai_drawCard.drawCard(this.itemsList[e][i].cards[n], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
var s = this.itemsList[e][i].act_type;
s == cc.vv.globalSetting.ACTION_SAO && n < 2 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(s == cc.vv.globalSetting.ACTION_SAO_CHUAN || s == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) && n < 3 && (a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (s >= cc.vv.globalSetting.ACTION_LEFT_CHI && s <= cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI && 2 == n) {
a.getComponent("zipai_card").setBlack(!1);
}
} else a = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
a.setScale(.6);
a.parent = this._itemNodes[e];
a.setPosition(t * i * this._handCardSpriteSize.width * .6 + t * this._handCardSpriteSize.width * .6 / 2, .6 * this._handCardSpriteSize.height * n);
}
},
updateFolds: function(e) {
for (var t = 2 == e ? 1 : -1, i = 0; i < this.foldsList[e].length; i++) {
var n = cc.vv.zipai_drawCard.drawCard(this.foldsList[e][i], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n.setScale(.6);
n.parent = this._foldsNodes[e];
n.setPosition(.6 * this._handCardSpriteSize.width * i * t + t * this._handCardSpriteSize.width * .6 / 2, 0);
}
},
updateHoldsData: function(e, t) {
for (var i = 0; i < e.length; i++) for (var n = 0; n < this.holdsList[t].length; n++) if (e[i] == this.holdsList[t][n]) {
this.holdsList[t].splice(n, 1);
break;
}
},
updateItemsData: function(e, t, i) {
var n = this.itemsList[t].length;
this.itemsList[t][n] = {
cards: [],
act_type: i
};
for (var a = 0; a < this.itemsList[t].length; a++) for (var s = 0; s < this.itemsList[t][a].cards.length; s++) if (this.itemsList[t][a].cards[0] == e[0] && this.itemsList[t][a].cards[1] == e[1] && this.itemsList[t][a].cards[2] == e[2] && e[0] == e[1] && e[0] == e[2]) {
this.itemsList[t][a].cards.push(e[0]);
this.itemsList[t].pop();
return;
}
for (a = 0; a < e.length; a++) this.itemsList[t][n].cards.push(e[a]);
},
updateFoldsData: function(e, t) {
this.foldsList[t].push(e);
},
showCard: function(e, t, i) {
(e = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.cardNode;
e.tag = this.outCardTag;
e.setPosition(0, 50);
var n = this;
if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.THROW_CARD) {
e.setPosition(this._beginThrowCardPos[t].x, this._beginThrowCardPos[t].y);
e.runAction(cc.moveTo(.1, cc.p(0, 50)));
} else if (i == cc.vv.zipai_drawCard.enumTalbe.doCardType.PICK_CARD) {
e.active = !1;
e.setPosition(0, 50);
e.setScale(.2, 1);
this.bigCardBack.setScale(1, 1);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.scaleTo(.1, .2, 1), cc.callFunc(function() {
e.active = !0;
e.runAction(cc.scaleTo(.1, 1, 1));
}), cc.callFunc(function() {
n.bigCardBack.active = !1;
})));
}
},
showFirstPickCardAction: function(e, t) {
var i = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG);
i.parent = this.cardNode;
i.tag = this.outCardTag;
i.setPosition(0, 50);
var n = 0 < t ? this._playerPos[t] : {
x: 0,
y: -300
}, a = this;
i.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.1, cc.p(n.x, n.y)), cc.callFunc(function() {
i.destroy();
a.holdsList[t].push(e);
a.updateHolds(t);
})));
},
deleteCard: function() {
for (;this.cardNode.getChildByTag(this.outCardTag); ) this.cardNode.removeChildByTag(this.outCardTag);
},
showTurn: function(e) {
for (var t = 0; t < this._seats2.length; t++) this._seats2[t].hideIconTurn();
this._seats2[e].showIconTurn();
},
judgeShowPeace: function() {
var e = this;
if (cc.vv.gameNetMgr.getIsPeaceGame()) {
var t = cc.vv.gameNetMgr.getActionCount();
this.node.runAction(cc.sequence(cc.delayTime(t + 1), cc.callFunc(function() {
e.peaceNode.active = !0;
})));
}
},
showIconByAction: function(e, t) {
if (e >= cc.vv.globalSetting.ACTION_LEFT_CHI && e <= cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", 1);
} else if (e == cc.vv.globalSetting.ACTION_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("wai", 1);
} else if (e == cc.vv.globalSetting.ACTION_SAO_CHUAN || e == cc.vv.globalSetting.ACTION_SAO_SAOCHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("tiqi", 1);
}
},
showIcon: function(e, t) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wai");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO_SELF_SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("liu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
});
cc._RF.pop();
}, {} ],
WHZ_Room: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5c8a9S0/O9K255abRsPbtjq", "WHZ_Room");
var n;
function a(e, t, i) {
t in e ? Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i;
return e;
}
cc.Class((a(n = {
extends: cc.Component,
properties: {
_seats2: [],
_playerPos: [],
_itemsNodes: [],
_foldsNodes: [],
_iconsNodes: [],
_maxPlayerCount: null,
game_over: null
},
onLoad: function() {
var t = this;
if (cc.vv) if (1 != cc.vv.gameNetMgr.isReplay) {
this.initData();
this.initRes();
this.initView();
this.initComponent();
this.initSplitLine();
this.initOperationBtns();
this.initEatNode();
this.initHuNode();
this.initEventHandlers();
this.resetGame();
this.initBigCardBack();
this.initHoldsEventHandler();
this.initEatNodeEventHandler();
var i = this;
cc.vv.UILoader.loadRes("game/public/prefabs/GameBaseUI", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
e.getComponent("BaseRoom")._seats2 = i._seats2;
e.getComponent("BaseRoom").initBaseRoom();
});
});
} else this.addComponent("WHZ_Replay"); else cc.director.loadScene("loading");
},
initRes: function() {
this.gameNode = cc.find("Canvas/game");
this.outCardPools = this.gameNode.getChildByName("outCardPools");
this.lb_surplusCardNums = this.gameNode.getChildByName("lb_surplusCardNums");
this.lb_surplusCardNums.getComponent(cc.Label).string = "";
this.gameOverHandNode = this.node.getChildByName("gameOverHandNode");
this.selfHandCardNode = this.gameNode.getChildByName("selfHandCardNode");
this.xingNode = this.node.getChildByName("xingNode");
this.surplusCardNode = this.node.getChildByName("surplusCardNode");
},
initData: function() {
this._maxPlayerCount = 3;
this._PlayerItemCount = [ 0, 0, 0 ];
this._playerItems = [ [], [], [] ];
this._outCardCoordinate = {
x: null,
y: null
};
this._handCardSpriteSize = {
width: 56,
height: 62
};
this._outCardSpriteSize = {
width: 88,
height: 242
};
this.recentOutCardValue = null;
this.operation_way = null;
this.eatCardTag = 2222;
this._handcardsInfoList = [];
this.end_seats_data = null;
this.isTianHu = !1;
this.has_action = !1;
this.actionCount = 0;
this.pick_seat = -1;
this.pick_data = -1;
this.out_seat = -1;
this.out_data = -1;
this.tuoGuanNode = null;
this.updateHoldCount = 0;
},
initComponent: function() {
cc.loader.loadRes("game/zipaiGames/whz/prefabs/game_over", cc.Prefab, function(e, t) {
if (!e) {
this.game_over = cc.instantiate(t);
this.node.addChild(this.game_over, 10);
this.initSeats();
}
}.bind(this));
cc.loader.loadRes("game/zipaiGames/prefab/game_result", cc.Prefab, function(e, t) {
e || this.node.addChild(cc.instantiate(t), 10);
}.bind(this));
},
initSplitLine: function() {
this.splitLine = this.gameNode.getChildByName("splitLine");
this.splitWord = this.gameNode.getChildByName("splitWord");
this.handTip = this.gameNode.getChildByName("hand");
},
initBigCardBack: function() {
this.bigCardBack = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG_CARD_BACK);
this.bigCardBack.parent = this.outCardPools;
this.bigCardBack.tag = 1001;
this.bigCardBack.setPosition(0, 50);
this.bigCardBack.active = !1;
},
initOperationBtns: function() {
this.operationBtnsNode = this.gameNode.getChildByName("operationBtnNode");
this.btn_eat = this.operationBtnsNode.getChildByName("btn_chi");
this.btn_peng = this.operationBtnsNode.getChildByName("btn_peng");
this.btn_win = this.operationBtnsNode.getChildByName("btn_win");
this.btn_pass = this.operationBtnsNode.getChildByName("btn_pass");
this.btn_liu = this.operationBtnsNode.getChildByName("btn_liu");
this.icon_win = this.operationBtnsNode.getChildByName("icon_win");
this.icon_peng = this.operationBtnsNode.getChildByName("icon_peng");
this.icon_chi = this.operationBtnsNode.getChildByName("icon_chi");
this.icon_pass = this.operationBtnsNode.getChildByName("icon_pass");
this.icon_liu = this.operationBtnsNode.getChildByName("icon_liu");
this.initOperationBtnsState();
this.initOperationBtnsListener();
},
initOperationBtnsState: function() {
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this.btn_liu.active = !1;
this.icon_win.active = !1;
this.icon_peng.active = !1;
this.icon_chi.active = !1;
this.icon_pass.active = !1;
this.icon_liu.active = !1;
},
initOperationBtnsListener: function() {
var t = this;
this.btn_eat.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnEat();
});
this.btn_peng.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPeng();
});
this.btn_win.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnWin();
});
this.btn_pass.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnPass();
});
this.btn_liu.on(cc.Node.EventType.TOUCH_END, function(e) {
t.OnClickBtnLiu();
});
},
initEatNode: function() {
this.eatNode = this.node.getChildByName("eatNode_waiHuZi");
this.btnCloseEatNode = this.eatNode.getChildByName("btn_close");
this.btnCloseEatNodeIndex = 15e3;
},
initHuNode: function() {
var e = [ "selfHuNode", "rightHuNode", "leftHuNode" ];
this.huNodeList = [];
for (var t = 0; t < e.length; t++) {
var i = this.gameNode.getChildByName(e[t]), n = i.getChildByName("lb_huCount").getComponent(cc.Label);
i.active = !1;
n.string = 0;
this.huNodeList[t] = {
node: i,
lb: n
};
}
},
initView: function() {
this.animworldmap = this.node.getChildByName("animworldmap");
this._sender = this.animworldmap.getChildByName("tubiao");
this._target = this.animworldmap.getChildByName("anim");
for (var e = [ "myself", "right", "left" ], t = 0; t < e.length; ++t) {
var i = this.node.getChildByName(e[t]), n = i.getChildByName("seat"), a = i.getChildByName("folds"), s = i.getChildByName("items"), c = i.getChildByName("icons");
n.getChildByName("zhuang3").active = !1;
this._foldsNodes.push(a);
this._itemsNodes.push(s);
this._iconsNodes.push(c);
this._seats2.push(n.getComponent("Seat"));
this._playerPos.push(i.getPosition());
}
},
initHoldsEventHandler: function() {
new (e("holdsEventHandler"))().init(this, "wp_out");
},
initEatNodeEventHandler: function() {
new (e("WHZ_eatNodeEventHandler"))().init(this);
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var o = this;
this.node.on("new_user", function(e) {
o.initSingleSeat(e.detail);
});
this.node.on("user_state_changed", function(e) {
o.initSingleSeat(e.detail);
cc.vv.gameNetMgr.getLocalIndex(e.detail.seatindex);
});
this.node.on("wp_button_push", function(e) {
o.onGameStart();
o.initBigCardBack();
var t = cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
o._seats2[t].setZhuang(!0);
});
this.node.on("fresh_all_score", function(e) {
for (var t = cc.vv.gameNetMgr.seats, i = 0; i < t.length; ++i) {
var n = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].total_score, a = cc.vv.gameNetMgr.gameOverData.end_seats_data[i].end_score, s = cc.vv.gameNetMgr.getSeatIndexByID(cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id), c = cc.vv.gameNetMgr.getLocalIndex(s);
o._seats2[c].setScore(n, a);
for (var r = 0; r < t.length; r++) cc.vv.gameNetMgr.gameOverData.end_seats_data[i].user_id == cc.vv.gameNetMgr.seats[r].userid && (cc.vv.gameNetMgr.seats[r].score = n);
}
});
this.node.on("wp_state_push", function(e) {
o.canleReady();
});
this.node.on("kick_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("transfer_push", function(e) {});
this.node.on("seq_move_seat_push", function(e) {
o.clearSeats();
o.initSeats();
});
this.node.on("wp_holds_push", function(e) {
var t = cc.vv.gameNetMgr.seats[e.detail.index];
o.OnMsgUpdateSeatHolds(t, t.holds);
});
this.node.on("wp_folds_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id);
o.OnMsgShowFlods(t, e.detail.folds);
o.eatNode.active = !1;
});
this.node.on("wp_out_push_err", function(e) {
o._handcardsInfoList[o._outCardCoordinate.x].cards[o._outCardCoordinate.y].setPosition(o.clickCardPos.x, o.clickCardPos.y);
});
this.node.on("wp_out_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.out_user), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.out_user);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(e.detail.out_card, n.sex);
o.OnMsgShowOutCard(e.detail.out_card, i);
o.out_seat = i;
o.out_data = e.detail.out_card;
});
this.node.on("wp_turn_push", function(e) {
var t = cc.vv.gameNetMgr.turn;
o.OnMsgNoteOperater(t);
});
this.node.on("wp_surplus_push", function(e) {
var t = cc.vv.gameNetMgr.numOfMJ;
o.OnMsgUpdateSurplus(t);
});
this.node.on("wp_action_mask_push", function(e) {
o.actionCount++;
var t = e.detail.action_mask;
o.has_action = 1 < t.length;
o.OnMsgShowOperationTypes(t);
o.has_action && o.hideSplitLine();
});
this.node.on("wp_cancel_action_push", function(e) {});
this.node.on("wp_pick_card_push", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t), n = cc.vv.gameNetMgr.getSeatByID(e.detail.user_id);
o.hideSplitLine();
o.OnMsgShowPickCard(i, e.detail.card, n.sex);
o.pick_seat = i;
o.pick_data = e.detail.card;
});
this.node.on("wp_item_push", function(e) {
var t = e.detail.user_id, i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = e.detail.add_items;
o.OnMsgShowItems(i, t, n);
cc.vv.gameNetMgr.getLocalIndex(i);
o.eatNode.active = !1;
o.operationBtnsNode.active = !1;
o.pick_seat = -1;
o.pick_data = -1;
o.out_seat = -1;
o.out_data = -1;
o.has_action = !1;
});
this.node.on("wp_hu_push", function(e) {
o.OnMsgShowHu(e);
});
this.node.on("wp_over", function(e) {
o.CloseTimer();
o.clearAutoState();
o.OnMsgShowSingleGameOver(e);
o.scheduleOnce(function() {
o.initHuNode();
o.clearHolds();
o.clearFolds();
o.clearItemsCards();
o.clearOutCard();
o.clearSurplusCards();
o.clearGameOverHandCards();
o.initData();
o.initOperationBtnsState();
o.outCardPools.removeAllChildren();
o.lb_surplusCardNums.getComponent(cc.Label).string = "";
}, 3);
});
this.node.on("wp_has_tian_hu_push", function(e) {
o.isTianHu = !0;
o.hideSplitLine();
o.operationBtnsNode.active = !1;
o.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function() {
o.operationBtnsNode.active = !0;
o.isTianHu = !1;
})));
});
this.node.on("wp_lock_cards_push", function(e) {
var t = e.detail.lock_cards;
o.lockCards(t);
});
this.node.on("time_sync", function(e) {
o.on_time_sync(e.detail);
});
this.node.on("auto_push", function(e) {
o.on_auto_push(e.detail);
});
this.node.on("cancel_auto", function(e) {
o.on_cancel_auto(e.detail);
});
},
onGameStart: function() {
this.isGaming = !0;
this.pickCardCount = 0;
this.showHuNode();
},
canleReady: function() {
if (1 != cc.vv.gameNetMgr.gamestate) for (var e = 0; e < this._seats2.length; ++e) this._seats2[e].setReady(!1);
},
initSingleSeat: function(e) {
if (1 != e.watch) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatindex), i = !e.online, n = e.seatindex == cc.vv.gameNetMgr.button;
this._seats2[t].setReady(e.ready);
if (e.ready) this._seats2[t].setInfo(e.name, e.score); else {
null == this._seats2[t]._score && (this._seats2[t]._score = e.score);
this._seats2[t].setInfo(e.name, this._seats2[t]._score);
}
this._seats2[t].setZhuang(n);
this._seats2[t].setOffline(i);
this._seats2[t].setID(e.userid);
this._seats2[t].voiceMsg(!1);
this._seats2[t].refreshXuanPaiState();
e.is_auto && this._seats2[t].setTuoGuan(e.is_auto);
} else 1 == cc.vv.gameNetMgr.getIsWatch() && (this.BtnReady.node.active = !1);
},
initSeats: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; ++t) this.initSingleSeat(e[t]);
},
clearSeats: function() {
for (var e = 0; e < this._seats2.length; ++e) {
this._seats2[e].setReady(!1);
this._seats2[e].setInfo("", "");
}
},
resetGame: function() {
var t = this, e = cc.vv.gameNetMgr.turn, i = cc.vv.gameNetMgr.getLocalIndex(e);
this.isReconnecting = !1;
if (!(e < 0)) {
this.initHuNode();
this.isReconnecting = !0;
this.OnMsgNoteOperater(e);
this.OnMsgUpdateSurplus(cc.vv.gameNetMgr.numOfMJ);
this.canleReady();
for (var n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; a++) {
this.OnMsgUpdateSeatHolds(n[a], n[a].holds);
this.OnMsgShowFlods(n[a].seatindex, n[a].folds);
this.OnMsgShowItems(n[a].seatindex, n[a].userid, n[a].items);
}
for (a = 0; a < n.length; a++) {
if (0 == cc.vv.gameNetMgr.getLocalIndex(n[a].seatindex)) {
n[a].select_action <= 0 && this.OnMsgShowOperationTypes(n[a].action_mask);
this.lockCards(n[a].lock_cards);
n[a].is_auto && 1 == n[a].is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/zipai_tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
t.tuoGuanNode = e;
});
});
}
}
this.drawOutByLocalTurn(i);
2 == cc.vv.gameNetMgr.gamestate && this.showHuNode();
this.isReconnecting = !1;
this.isReconnectGame = !0;
}
},
drawOutByLocalTurn: function(e) {
this.pick_seat = cc.vv.gameNetMgr.syncData.pick_seat;
this.pick_data = cc.vv.gameNetMgr.syncData.pick_data;
this.out_seat = cc.vv.gameNetMgr.syncData.out_seat;
this.out_data = cc.vv.gameNetMgr.syncData.out_data;
this.recentOutCardValue = -1;
0 < this.pick_data && (this.recentOutCardValue = this.pick_data);
0 < this.out_data && (this.recentOutCardValue = this.out_data);
this.clearOutCard();
if (0 < this.recentOutCardValue) {
var t = this.createOutCard(this.recentOutCardValue), i = this.getOutCardPos(e);
t.setPosition(i);
}
this.hideSplitLine();
0 == e && this.recentOutCardValue <= 0 && !cc.vv.gameNetMgr.has_action && this.showSplitLine();
},
OnMsgUpdateSeatHolds: function(e, t) {
if (!(0 < cc.vv.gameNetMgr.getLocalIndex(e.seatindex))) {
cc.vv.gameNetMgr.getLocalIndex(cc.vv.gameNetMgr.button);
var i = [];
i = t.concat();
if (0 < this.updateHoldCount && !this.clickCardPos) this.deleteOutCards(t); else if (0 == this.isReconnecting && 0 < this._handcardsInfoList.length) this.deleteOutCards(t); else {
this.drawHolds(t);
this.dealAction();
}
this.holdstemp = [];
this.holdstemp = i.concat();
this.updateHoldCount++;
this.clickCardPos = null;
}
},
OnMsgUpdateSurplus: function(e) {
this.lb_surplusCardNums.getComponent(cc.Label).string = "牌x" + e;
},
OnMsgNoteOperater: function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e);
this.CloseTimer();
this.ShowTimer(t, 15);
this.hideSplitLine();
0 == t && -1 == this.pick_seat && -1 == this.out_seat && this.showSplitLine();
if (0 == t && 20 == this.getSelfFoldCount() && 0 == this.actionCount) {
this.hideSplitLine();
this.node.runAction(cc.sequence(cc.delayTime(2.3), cc.callFunc(function() {
this.isTianHu || 0 != this.actionCount || this.showSplitLine();
}.bind(this))));
}
},
OnMsgShowOutCard: function(e, t) {
this.recentOutCardValue = e;
this.clearOutCard();
this.hideSplitLine();
var i = this.getOutCardPos(t);
this.clickCardPos || (this.clickCardPos = {
x: 0,
y: -200
});
if (0 == t) {
(n = this.createOutCard(e)).setPosition(this.clickCardPos.x, this.clickCardPos.y);
n.runAction(cc.moveTo(.15, i));
} else {
var n;
(n = this.createOutCard(e)).setPosition(this._playerPos[t].x, this._playerPos[t].y);
n.setScale(.4);
n.runAction(cc.spawn(cc.scaleTo(.15, 1), cc.moveTo(.15, i)));
}
this.CloseTimer();
},
OnMsgShowOperationTypes: function(e) {
this.action_masks = e;
this.decodeOperationValue(e);
this.operationList.length <= 0 || this.scheduleOnce(function() {
this.showOperationBtns();
}, .5);
},
OnMsgUpdateGameCount: function() {
this.lbGameCount.string = "对局:  " + cc.vv.gameNetMgr.numOfGames + "/" + cc.vv.gameNetMgr.maxNumOfGames + "局";
},
OnMsgShowItems: function(e, t, i) {
var n = cc.vv.gameNetMgr.getLocalIndex(e), a = !this.isReconnecting;
this.operationBtnsNode.active = !1;
this.clearOutCard();
for (var s = 0; s < i.length; s++) {
this.showIconByItem(i[s][0], n, t, this.isReconnecting);
this.savePlayersItem(n, i[s]);
this.showItemCards(n, i[s], a);
this.updateHuCount(n);
}
},
OnMsgShowPickCard: function(e, t, i) {
this.recentOutCardValue = t;
this.showPickCard(t, e);
cc.vv.zipai_atlasAndAudioUtils.playCardSound(t, i);
},
OnMsgShowFlods: function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e), n = 2 == i ? 1 : -1;
if (0 == this.isReconnecting) {
var a = t.length - 1;
this.clearOutCard();
var s = this.createOutCard(t[a]);
s.active = !0;
s.parent = this._foldsNodes[i];
var c = this._foldsNodes[i].convertToNodeSpace(cc.v2(640, 370));
s.setPosition(c.x, c.y);
s.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.p(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0)), cc.scaleTo(.2, .55 * this._handCardSpriteSize.width / this._outCardSpriteSize.width, .55 * this._handCardSpriteSize.height / this._outCardSpriteSize.height)), cc.callFunc(function() {
s.destroy();
var e = cc.vv.zipai_drawCard.drawCard(t[a], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
e.parent = this._foldsNodes[i];
e.setScale(.55);
e.setPosition(.55 * this._handCardSpriteSize.width * a * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}.bind(this))));
} else for (var r in t) {
var o = cc.vv.zipai_drawCard.drawCard(t[r], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
o.parent = this._foldsNodes[i];
o.setScale(.55);
o.setPosition(.55 * this._handCardSpriteSize.width * r * n + n * this._handCardSpriteSize.width * .55 / 2, 0);
}
},
OnMsgShowHu: function(e) {
this.CloseTimer();
this.hideSplitLine();
this.eatNode.active = !1;
this.operationBtnsNode.active = !1;
e.detail.card;
var t = cc.vv.gameNetMgr.getSeatByID(e.detail.hu_user_id), i = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.hu_user_id), n = cc.vv.gameNetMgr.getSeatIndexByID(e.detail.pao_user_id), a = cc.vv.gameNetMgr.getLocalIndex(i), s = cc.vv.gameNetMgr.getLocalIndex(n);
if (a == s) {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("zimo", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.ZIMO, a);
} else {
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("hu", t.sex);
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.PAO, s);
this.node.runAction(cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.HU, a);
}.bind(this))));
}
},
OnMsgShowSingleGameOver: function(e) {
var t = e.detail.end_seats_data;
e.detail.hu_user_id, e.detail.pokers.concat();
this.end_seats_data = e.detail.end_seats_data;
for (var i in t) {
var n = cc.vv.gameNetMgr.getSeatIndexByID(t[i].user_id), a = cc.vv.gameNetMgr.getLocalIndex(n);
0 < a && this.showGameOverHandCards(t[i].holds, a);
}
this.clearOutCard();
},
getOutCardPos: function(e) {
switch (e) {
case 0:
return cc.p(0, 70);

case 1:
return cc.p(350, 150);

case 2:
return cc.p(-350, 150);
}
},
savePlayersItem: function(e, t) {
this.doSpecialItem(t, e);
},
doSpecialItem: function(e, t) {
var i = e[0], n = e[1];
e[2];
this.specialItemIndex = -1;
if (i == cc.vv.globalSetting.ITEM_PENG_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_KAI_DUO || i == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var a = 0; a < this._playerItems[t].length; a++) {
if (n == this._playerItems[t][a][1]) {
this._playerItems[t][a] = e;
this.specialItemIndex = a;
return;
}
} else this._playerItems[t].push(e);
},
doChongZhao: function(e, t) {
if (!t) {
this.judgeIsChongZhao(e) && this.showIcon(cc.vv.zipai_cardsSort.enumTalbe.operation.CHONGZHAO, e);
}
},
showIconByItem: function(e, t, i, n) {
if (!n) {
var a = cc.vv.gameNetMgr.getSeatByID(i).sex;
if (e >= cc.vv.globalSetting.ITEM_LEFT_CHI && e <= cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.CHI, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("chi", a);
} else if (e == cc.vv.globalSetting.ITEM_PENG) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.PENG, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("peng", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAO, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("wai", a);
} else if (e == cc.vv.globalSetting.ITEM_SAO_CHUAN || e == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) {
this.showIcon(cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN, t);
cc.vv.zipai_atlasAndAudioUtils.playOpsSound("liuqi", a);
}
}
},
showSplitLine: function() {
this.splitLine.active = !0;
this.splitWord.active = !0;
this.handTip.active = !0;
this.handTip.setPosition(370, -220);
this.handTip.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, cc.p(60, 70)), cc.moveBy(0, cc.p(-60, -70)))));
},
hideSplitLine: function() {
this.splitLine.active = !1;
this.splitWord.active = !1;
this.handTip.active = !1;
this.handTip.stopAllActions();
},
decodeOperationValue: function(e) {
this.operationList = [];
this.operationMaskList = [];
this.operationMaskList = this.decodeEatAcition(e);
0 < this.operationMaskList.length && this.operationList.push(cc.vv.zipai_drawCard.enumTalbe.operationBtn.EAT);
for (var t in e) {
e[t][0] == cc.vv.globalSetting.OPERATE_PASS && this.operationList.push(cc.vv.zipai_drawCard.enumTalbe.operationBtn.PASS);
e[t][0] == cc.vv.globalSetting.OPERATE_PENG && this.operationList.push(cc.vv.zipai_drawCard.enumTalbe.operationBtn.PENG);
e[t][0] == cc.vv.globalSetting.OPERATE_SAO && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_SAO, e[t][1][0]);
}, 2);
e[t][0] != cc.vv.globalSetting.OPERATE_SAO_CHUAN && e[t][0] != cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN || this.operationList.push(cc.vv.zipai_drawCard.enumTalbe.operationBtn.LIU);
e[t][0] == cc.vv.globalSetting.OPERATE_HU && this.operationList.push(cc.vv.zipai_drawCard.enumTalbe.operationBtn.HU);
}
1 == e.length && e[0][0] == cc.vv.globalSetting.OPERATE_PASS && this.scheduleOnce(function() {
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS, e[0][1][0]);
}.bind(this), 2);
},
decodeEatAcition: function(e) {
for (var t = [], i = 0; i < e.length; i++) {
e[i][0] == cc.vv.globalSetting.OPERATE_LEFT_CHI && t.push(cc.vv.globalSetting.OPERATE_LEFT_CHI);
e[i][0] == cc.vv.globalSetting.OPERATE_CENTER_CHI && t.push(cc.vv.globalSetting.OPERATE_CENTER_CHI);
e[i][0] == cc.vv.globalSetting.OPERATE_RIGHT_CHI && t.push(cc.vv.globalSetting.OPERATE_RIGHT_CHI);
e[i][0] == cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI && t.push(cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI);
e[i][0] == cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI && t.push(cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI);
e[i][0] == cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI && t.push(cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI);
e[i][0] == cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI && t.push(cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI);
}
return t;
},
decodeLiuAcition: function(e) {
for (var t = [], i = 0; i < e.length; i++) if (e[i][0] == cc.vv.globalSetting.OPERATE_SAO_CHUAN || e[i][0] == cc.vv.globalSetting.OPERATE_SAO_SAO_CHUAN) {
var n = this.getOperationCardValue(e[i][0]);
for (var i in n) t.push(e[i][0]);
}
return t;
},
showOperationBtns: function() {
this.operationBtnsNode.active = !0;
this.operationBtnList = [];
this.btn_eat.active = !1;
this.btn_peng.active = !1;
this.btn_win.active = !1;
this.btn_pass.active = !1;
this.btn_liu.active = !1;
if (1 != this.action_masks.length || this.action_masks[0][0] != cc.vv.globalSetting.OPERATE_PASS) {
this.checkOperate(cc.vv.zipai_drawCard.enumTalbe.operationBtn.HU) && this.operationBtnList.push(this.btn_win);
this.checkOperate(cc.vv.zipai_drawCard.enumTalbe.operationBtn.PENG) && this.operationBtnList.push(this.btn_peng);
this.checkOperate(cc.vv.zipai_drawCard.enumTalbe.operationBtn.EAT) && this.operationBtnList.push(this.btn_eat);
this.checkOperate(cc.vv.zipai_drawCard.enumTalbe.operationBtn.LIU) && this.operationBtnList.push(this.btn_liu);
this.checkOperate(cc.vv.zipai_drawCard.enumTalbe.operationBtn.PASS) && this.operationBtnList.push(this.btn_pass);
for (var e = -70 * (this.operationBtnList.length - 1), t = 0; t < this.operationBtnList.length; t++) {
this.operationBtnList[t].active = !0;
this.operationBtnList[t].setPosition(e + 140 * t, 0);
}
this.isTianHu && (this.operationBtnsNode.active = !1);
}
},
checkOperate: function(e) {
for (var t = 0; t < this.operationList.length; t++) if (e == this.operationList[t]) return !0;
return !1;
},
showIcon: function(e, t) {
if (1 != this.isReconnecting) {
var i = new cc.Node("New Sprite"), n = i.addComponent(cc.Sprite);
i.parent = this._iconsNodes[t];
switch (e) {
case cc.vv.zipai_drawCard.enumTalbe.operation.SAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("wai");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.SAOCHUAN:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("liu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.KAIZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("run");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHONGZHAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chongdao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PENG:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("peng");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.CHI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("chi");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.HU:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("hu");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.PAO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("pao");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.ZIMO:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("zimo");
break;

case cc.vv.zipai_drawCard.enumTalbe.operation.DANGDI:
n.spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("dangdi");
}
i.setScale(1.5);
i.runAction(cc.sequence(cc.scaleTo(.5, 1), cc.delayTime(1), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
}
},
showItemCards: function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = t[0], a = t[1], s = cc.vv.WHZ_Utils.getItemCards(n, a), c = this._itemsNodes[e].convertToNodeSpace(cc.v2(640, 410)), r = 1 == e ? -1 : 1, o = i ? .2 : 0;
this._PlayerItemCount[e] = 0 <= this.specialItemIndex ? this.specialItemIndex : this._PlayerItemCount[e];
for (var h = 0; h < s.length; h++) {
var l = null;
if (0 < s[h]) {
l = cc.vv.zipai_drawCard.drawCard(s[h], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
n == cc.vv.globalSetting.ITEM_SAO && h < 2 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
(n == cc.vv.globalSetting.ITEM_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN || n == cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN) && h < 3 && (l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK));
if (n >= cc.vv.globalSetting.ITEM_LEFT_CHI && n <= cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI && 2 == h) {
l.getComponent("zipai_card").setBlack(!1);
}
} else l = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BACK);
l.setScale(.55);
l.parent = this._itemsNodes[e];
l.setPosition(c.x, c.y);
l.runAction(cc.moveTo(o, cc.p(r * this._PlayerItemCount[e] * this._handCardSpriteSize.width * .55 + r * this._handCardSpriteSize.width * .55 / 2, .55 * this._handCardSpriteSize.height * h)));
}
this.specialItemIndex < 0 ? this._PlayerItemCount[e]++ : this._PlayerItemCount[e] = this._playerItems[e].length;
},
judgeIsChongZhao: function(e) {
var t = this._playerItems[e].length;
if ((n = this._playerItems[e][t - 1][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) for (var i = 0; i < t - 1; i++) {
var n;
if ((n = this._playerItems[e][i][0]) >= cc.vv.globalSetting.ITEM_SAO_CHUAN && n <= cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN) return !0;
}
return !1;
},
showGameOverHandCards: function(e, t) {
this.gameOverHandNode.active = !0;
var i = this.gameOverHandNode.getChildByName([ "right", "left" ][t - 1]);
i.active = !0;
i.removeAllChildren();
for (var n in e) {
var a = cc.vv.zipai_drawCard.drawCard(e[n], cc.vv.zipai_cardsSort.enumTalbe.cardType.SMALL);
a.parent = i;
a.setScale(.75);
a.setPosition(n % 7 * this._handCardSpriteSize.width * .75 - 126, .75 * this._handCardSpriteSize.height - .75 * this._handCardSpriteSize.height * Math.floor(n / 7));
}
},
deleteOutCards: function(e) {
var t = this.getNeedDeleteCards(e);
console.log("log--------------deletedOutCards---needDeleteCards=:", t);
if (1 != t.length) {
for (var i in t) for (var n = !1, a = 0; a < this._handcardsInfoList.length; a++) {
for (var s = 0; s < this._handcardsInfoList[a].cards.length; s++) {
var c = this._handcardsInfoList[a].cards[s].getComponent("zipai_card").getValue();
if (t[i] == c) {
this.deleteOutCard(a, s);
n = !0;
break;
}
}
if (1 == n) break;
}
this.replaceCards();
} else {
var r = this.getDeletedCardData(t[0]);
console.log("log--------------deletedOutCards---deletedCardData=:", r);
this._outCardCoordinate.x = r.x;
this._outCardCoordinate.y = r.y;
this.deleteOutCard(this._outCardCoordinate.x, this._outCardCoordinate.y);
this.replaceCards();
}
},
deleteOutCard: function(e, t) {
this._handcardsInfoList[e].cards[t].destroy();
1 < this._handcardsInfoList[e].cards.length ? this._handcardsInfoList[e].cards.splice(t, 1) : this._handcardsInfoList.splice(e, 1);
},
getDeletedCardData: function(e) {
for (var t = {
x: -1,
y: -1
}, i = 0; i < this._handcardsInfoList.length; i++) for (var n = 0; n < this._handcardsInfoList[i].cards.length; n++) {
if (e == this._handcardsInfoList[i].cards[n].getComponent("zipai_card").getValue()) {
t.x = i;
t.y = n;
return t;
}
}
},
getNeedDeleteCards: function(e) {
for (var t = [], i = 0; i < this.holdstemp.length; i++) {
var n = e.indexOf(this.holdstemp[i]);
-1 != n ? e.splice(n, 1) : t.push(this.holdstemp[i]);
}
return t;
},
getSelfFoldCount: function() {
for (var e = 0, t = 0; t < this._handcardsInfoList.length; t++) e += this._handcardsInfoList[t].cards.length;
return e;
},
OnClickBtnEat: function() {
cc.vv.audioMgr.playBtnClick();
this.operationCardsList = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.showEatCards(this.operationMaskList);
},
OnClickBtnPeng: function() {
cc.vv.audioMgr.playBtnClick();
var e = this.getOperationCardValue(cc.vv.globalSetting.OPERATE_PENG);
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PENG, e[0]);
},
OnClickBtnWin: function() {
cc.vv.audioMgr.playBtnClick();
var e = this.getOperationCardValue(cc.vv.globalSetting.OPERATE_HU);
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_HU, e[0]);
},
OnClickBtnPass: function() {
cc.vv.audioMgr.playBtnClick();
this.has_action = !1;
var e = this.getOperationCardValue(cc.vv.globalSetting.OPERATE_PASS);
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS, e[0]);
},
OnClickBtnLiu: function() {
this.operationCardsList = [];
this.eatWayCount = 0;
this.eatNode.active = !0;
this.clearShangbiCards();
this.operationMaskList = this.decodeLiuAcition(this.action_masks);
this.showLiuCards();
}
}, "OnClickBtnPass", function() {
cc.vv.audioMgr.playBtnClick();
this.sendMsgOperation(cc.vv.globalSetting.OPERATE_PASS);
}), a(n, "sendMsgOperation", function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
this.operationBtnsNode.active = !1;
this.eatNode.active = !1;
var i = JSON.parse(cc.vv.msgTemp_GLZP.CS_card_type_action);
i.action = e;
i.action_card = t;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("wp_card_type_action", i);
}), a(n, "getOperationCardValue", function(e) {
for (var t = 0; t < this.action_masks.length; t++) if (this.action_masks[t][0] == e) return this.action_masks[t][1];
return -1;
}), a(n, "OnClickCloseEatNode", function() {
if (1 == this.eatNode.active) {
this.eatNode.active = !1;
this.operation_way = null;
}
}), a(n, "showEatCards", function(e) {
if (0 != e.length) for (var t in e) e[t] == cc.vv.globalSetting.OPERATE_LEFT_CHI ? this.showSingleOperationCards([ this.recentOutCardValue, this.recentOutCardValue + 1, this.recentOutCardValue + 2 ], cc.vv.globalSetting.OPERATE_LEFT_CHI, this.recentOutCardValue) : e[t] == cc.vv.globalSetting.OPERATE_CENTER_CHI ? this.showSingleOperationCards([ this.recentOutCardValue - 1, this.recentOutCardValue, this.recentOutCardValue + 1 ], cc.vv.globalSetting.OPERATE_CENTER_CHI, this.recentOutCardValue) : e[t] == cc.vv.globalSetting.OPERATE_RIGHT_CHI ? this.showSingleOperationCards([ this.recentOutCardValue - 2, this.recentOutCardValue - 1, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_RIGHT_CHI, this.recentOutCardValue) : e[t] == cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI ? this.showSingleOperationCards([ 2, 7, 10 ], cc.vv.globalSetting.OPERATE_SMALL_ERQISHI_CHI, this.recentOutCardValue) : e[t] == cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI ? this.showSingleOperationCards([ 12, 17, 20 ], cc.vv.globalSetting.OPERATE_BIG_ERQISHI_CHI, this.recentOutCardValue) : e[t] == cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI ? this.recentOutCardValue <= 10 ? this.showSingleOperationCards([ this.recentOutCardValue, this.recentOutCardValue + 10, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, this.recentOutCardValue) : this.showSingleOperationCards([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue ], cc.vv.globalSetting.OPERATE_TWO_BIG_SMALL_CHI, this.recentOutCardValue) : e[t] == cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI && (this.recentOutCardValue <= 10 ? this.showSingleOperationCards([ this.recentOutCardValue, this.recentOutCardValue, this.recentOutCardValue + 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, this.recentOutCardValue) : this.showSingleOperationCards([ this.recentOutCardValue, this.recentOutCardValue - 10, this.recentOutCardValue - 10 ], cc.vv.globalSetting.OPERATE_TWO_SMALL_BIG_CHI, this.recentOutCardValue));
}), a(n, "showLiuCards", function() {
for (var e = 0; e < this.operationMaskList.length; e++) for (var t = this.getOperationCardValue(this.operationMaskList[e]), i = 0; i < t.length; i++) this.showSingleOperationCards([ t[i], t[i], t[i], t[i] ], this.operationMaskList[e], t[i]);
}), a(n, "showSingleOperationCards", function(e, t, i) {
var n = 4 == e.length ? 0 : 40;
this.eatNode.active = !0;
this.operationCardsList[this.eatWayCount] = {
cardSprites: [],
operation: null,
card: null
};
for (var a in e) {
var s = cc.vv.zipai_drawCard.drawCard(e[a], cc.vv.zipai_drawCard.enumTalbe.cardType.SMALL);
s.parent = this.eatNode;
s.tag = this.eatCardTag;
s.setPosition(this.eatWayCount % this.operationMaskList.length * 80 - 185, 100 - this._handCardSpriteSize.height * a);
this.operationCardsList[this.eatWayCount].cardSprites.push(s);
}
this.operationCardsList[this.eatWayCount].operation = t;
this.operationCardsList[this.eatWayCount].card = i;
var c = new cc.Node("New Sprite");
c.addComponent(cc.Sprite).spriteFrame = cc.vv.zipai_atlasAndAudioUtils.getCommonSpriteFrameByName("jiantou");
c.parent = this.eatNode;
c.tag = this.eatCardTag;
c.setPosition(this.eatWayCount % this.operationMaskList.length * 80 - 185, -140 + n);
c.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.15, cc.p(0, -3.5)), cc.moveBy(.3, cc.p(0, 7)), cc.moveBy(.15, cc.p(0, -3.5)))));
this.eatWayCount++;
}), a(n, "dealAction", function() {
if (!this.isReconnecting) {
var e = 0;
this.node.runAction(cc.repeat(cc.sequence(cc.callFunc(function() {
cc.vv.zipai_atlasAndAudioUtils.playDealCardsSound();
}), cc.delayTime(.55)), 4));
for (var t = 0; t < this._handcardsInfoList.length; t++) for (var i = 0; i < this._handcardsInfoList[t].cards.length; i++) {
e++;
this._handcardsInfoList[t].cards[i].runAction(cc.sequence(cc.hide(), cc.delayTime(.1 * e), cc.show()));
}
}
}), a(n, "CloseTimer", function() {
for (var e in this._seats2) this._seats2[e].closeTimer();
}), a(n, "ShowTimer", function(e, t) {
this._seats2[e].showTimer(t);
}), a(n, "showPickCard", function(e, t) {
var i = null, n = this.getOutCardPos(t);
this.clearOutCard();
if (0 == e) {
(i = cc.vv.zipai_drawCard.drawCard(0, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG_CARD_BACK)).parent = this.outCardPools;
i.tag = 1e3;
} else i = this.createOutCard(e);
i.active = !1;
i.setPosition(n);
this.bigCardBack.setScale(.6);
this.bigCardBack.setPosition(0, 270);
this.bigCardBack.active = !0;
this.bigCardBack.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, n), cc.scaleTo(.3, 1)), cc.callFunc(function() {
this.bigCardBack.active = !1;
i.active = !0;
}.bind(this))));
return i;
}), a(n, "createOutCard", function(e) {
var t = cc.vv.zipai_drawCard.drawCard(e, cc.vv.zipai_cardsSort.enumTalbe.cardType.BIG);
t.parent = this.outCardPools;
t.tag = 1e3;
return t;
}), a(n, "drawHolds", function(e) {
this.selfHandCardNode.removeAllChildren(!1);
this._handcardsInfoList = [];
for (var t = e.concat(), i = cc.vv.WHZ_Utils.cardSort(t), n = 0; n < i.sort.length; n++) {
this._handcardsInfoList[n] = {
posx: n * this._outCardSpriteSize.width - 320,
cards: []
};
for (var a = 0; a < Math.ceil(i.sort[n].type); a++) {
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.threeNotSame && 2 == a && (i.sort[n].value = 10 < i.sort[n].value ? i.sort[n].value - 10 : i.sort[n].value + 10);
i.sort[n].type == cc.vv.zipai_drawCard.enumTalbe.holdTpye.shunZi && 0 < a && i.sort[n].value++;
(s = cc.vv.zipai_drawCard.drawCard(i.sort[n].value, cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.sort[n].value;
s.getComponent("zipai_card").setOrder(Math.ceil(i.sort[n].type) - a);
s.getComponent("zipai_card").setType(i.sort[n].type);
s.setLocalZOrder(Math.ceil(i.sort[n].type) - a);
this._handcardsInfoList[n].cards.push(s);
}
}
for (n = 0; n < i.single.length; n++) {
n % 3 == 0 && (this._handcardsInfoList[i.sort.length + Math.floor(n / 3)] = {
posx: (i.sort.length + Math.floor(n / 3)) * this._outCardSpriteSize.width - 320,
cards: []
});
var s;
(s = cc.vv.zipai_drawCard.drawCard(i.single[n], cc.vv.zipai_drawCard.enumTalbe.cardType.BIG)).parent = this.selfHandCardNode;
s.tag = i.single[n];
s.getComponent("zipai_card").setOrder(i.single.length - n);
s.setLocalZOrder(i.single.length - n);
this._handcardsInfoList[i.sort.length + Math.floor(n / 3)].cards.push(s);
}
this.replaceCards();
}), a(n, "showHuNode", function() {
for (var e = 0; e < this._maxPlayerCount; e++) this.huNodeList[e].node.active = !0;
}), a(n, "updateHuCount", function(e) {
for (var t = 0, i = 0; i < this._playerItems[e].length; i++) {
var n = this._playerItems[e][i][0], a = this._playerItems[e][i][1], s = cc.vv.WHZ_Utils.getItemCards(n, a);
t += cc.vv.WHZ_Utils.getHuCount(n, s);
}
this.huNodeList[e].lb.string = t;
}), a(n, "replaceCards", function() {
for (var e = 0; e < this._handcardsInfoList.length; e++) for (var t = 0; t < this._handcardsInfoList[e].cards.length; t++) {
this._handcardsInfoList[e].cards[t].setPosition(e * this._outCardSpriteSize.width - 310 + (8 - this._handcardsInfoList.length) * this._outCardSpriteSize.width / 2, .35 * this._outCardSpriteSize.height * t - .15 * this._outCardSpriteSize.height);
this._handcardsInfoList[e].cards[t].setLocalZOrder(this._handcardsInfoList[e].cards.length - t);
this._handcardsInfoList[e].cards[t].getComponent("zipai_card").setOrder(Math.ceil(this._handcardsInfoList[e].cards.length - t));
}
}), a(n, "lockCards", function(e) {
for (var t = 0; t < e.length; t++) for (var i = 0; i < this._handcardsInfoList.length; i++) for (var n = 0; n < this._handcardsInfoList[i].cards.length; n++) {
var a = this._handcardsInfoList[i].cards[n].getComponent("zipai_card").getValue(), s = this._handcardsInfoList[i].cards[n].getComponent("zipai_card").getIsBlack();
if (e[t] == a && !s) {
this._handcardsInfoList[i].cards[n].getComponent("zipai_card").setBlack(!0);
}
}
}), a(n, "clearItemsCards", function() {
for (var e = 0; e < this._itemsNodes.length; e++) this._itemsNodes[e].removeAllChildren();
}), a(n, "clearHolds", function() {
this.selfHandCardNode.removeAllChildren();
}), a(n, "clearFolds", function() {
for (var e = 0; e < this._foldsNodes.length; e++) this._foldsNodes[e].removeAllChildren();
}), a(n, "clearSurplusCards", function() {
this.surplusCardNode.removeAllChildren();
}), a(n, "clearOutCard", function() {
for (;this.outCardPools.getChildByTag(1e3); ) this.outCardPools.removeChildByTag(1e3);
}), a(n, "clearGameOverHandCards", function() {
this.gameOverHandNode.active = !1;
for (var e = 1; e < this.gameOverHandNode.children.length; e++) this.gameOverHandNode.children[e].removeAllChildren();
}), a(n, "clearShangbiCards", function() {
for (;this.eatNode.getChildByTag(2222); ) this.eatNode.removeChildByTag(2222);
}), a(n, "clearAutoState", function() {
for (var e = 0; e < this._seats2.length; e++) this._seats2[e].setTuoGuan(!1);
for (e = 0; e < cc.vv.gameNetMgr.seats.length; e++) cc.vv.gameNetMgr.seats[e].is_auto && (cc.vv.gameNetMgr.seats[e].is_auto = !1);
}), a(n, "on_auto_push", function(e) {
var t = this;
console.log("log------------on_auto_push------------this.tuoGuanNode=:", this.tuoGuanNode);
this.tuoGuanNode || e.user_id == cc.vv.userMgr.userId && 1 == e.is_auto && cc.vv.UILoader.loadRes("game/public/prefabs/zipai_tuguan_node", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, t.node, function(e) {
t.tuoGuanNode = e;
});
});
var i = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), n = cc.vv.gameNetMgr.getLocalIndex(i);
this._seats2[n].setTuoGuan(e.is_auto);
}), a(n, "on_cancel_auto", function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e.user_id), i = cc.vv.gameNetMgr.getLocalIndex(t);
this._seats2[i].setTuoGuan(e.is_auto);
if (cc.vv.userMgr.userId == e.user_id) {
this.tuoGuanNode = null;
console.log("log------------on_cancel_auto------------this.tuoGuanNode=:", this.tuoGuanNode);
}
}), a(n, "on_time_sync", function(e) {
var t = Math.floor((e.end - e.sys) / 1e3);
this._turn_time = t;
console.log("服务器倒计时", t);
var i = cc.vv.gameNetMgr.turn;
this.ShowTimer(i, t);
}), a(n, "onDestroy", function() {
cc.vv.voiceMgr.stop();
}), n));
cc._RF.pop();
}, {
WHZ_eatNodeEventHandler: "WHZ_eatNodeEventHandler",
holdsEventHandler: "holdsEventHandler"
} ],
WHZ_Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c47534CkgtN46K7KjFptsvB", "WHZ_Utils");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && (cc.vv.WHZ_Utils = this);
},
getItemCards: function(e, t) {
var i = [];
switch (e) {
case cc.vv.globalSetting.ITEM_LEFT_CHI:
case cc.vv.globalSetting.ACTION_LEFT_CHI_XIABI:
i.push(t + 1);
i.push(t + 2);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_CENTER_CHI:
case cc.vv.globalSetting.ACTION_CENTER_CHI_XIABI:
i.push(t - 1);
i.push(t + 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_RIGHT_CHI:
case cc.vv.globalSetting.ACTION_RIGHT_CHI_XIABI:
i.push(t - 2);
i.push(t - 1);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_SMALL_ERQISHI_CHI_XIABI:
switch (t) {
case 2:
i.push(7);
i.push(10);
i.push(t);
break;

case 7:
i.push(2);
i.push(10);
i.push(t);
break;

case 10:
i.push(2);
i.push(7);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ACTION_BIG_ERQISHI_CHI_XIABI:
switch (t) {
case 12:
i.push(17);
i.push(20);
i.push(t);
break;

case 17:
i.push(12);
i.push(20);
i.push(t);
break;

case 20:
i.push(12);
i.push(17);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_BIG_SMALL_CHI:
case cc.vv.globalSetting.ACTION_TWO_BIG_SMALL_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t);
i.push(t);
} else {
i.push(t + 10);
i.push(t + 10);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_TWO_SMALL_BIG_CHI:
case cc.vv.globalSetting.ACTION_TWO_SMALL_BIG_CHI_XIABI:
if (10 < t) {
i.push(t - 10);
i.push(t - 10);
i.push(t);
} else {
i.push(t + 10);
i.push(t);
i.push(t);
}
break;

case cc.vv.globalSetting.ITEM_PENG:
case cc.vv.globalSetting.ITEM_SAO:
case cc.vv.globalSetting.ITEM_GUO_SAO:
i.push(t);
i.push(t);
i.push(t);
break;

case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_KAI_DUO:
case cc.vv.globalSetting.ITEM_PENG_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_KAI_DUO:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SELF_SAO_CHUAN:
i.push(t);
i.push(t);
i.push(t);
i.push(t);
}
return i;
},
getHuCount: function(e, t) {
for (var i = 0; i < t.length; i++) for (var n = i + 1; n < t.length; n++) if (t[i] > t[n]) {
var a = t[i];
t[i] = t[n];
t[n] = a;
}
if (0 == t[0]) return 0;
switch (e) {
case cc.vv.globalSetting.ITEM_SAO_CHUAN:
case cc.vv.globalSetting.ITEM_SAO_SAO_CHUAN:
return 5;

case cc.vv.globalSetting.ITEM_SAO:
return 4;

case cc.vv.globalSetting.ITEM_KAN:
return 3;

case cc.vv.globalSetting.ITEM_BIG_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_SMALL_ERQISHI_CHI:
case cc.vv.globalSetting.ITEM_PENG:
return 1;
}
return 0;
},
cardSort: function(e) {
this.fourSameCardsList = [];
this.threeSameCardsList = [];
this.twoAndOneCardsList = [];
this.shunZiCardsList = [];
this.twoSameCardsList = [];
this.singleCardsList = [];
this.sortedCardsList = [];
this.notShunZiList = [];
this.bubbleDownArray(e);
this.findFourSameCards(e);
this.findThreeSameCards(e);
this.findShunZiCards(e);
this.findTwoSameCards(e);
this.findSingleCards(e);
this.createSortedCards();
return {
sort: this.sortedCardsList,
single: this.singleCardsList
};
},
bubbleDownArray: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t] < e[i]) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
findFourSameCards: function(e) {
if (!(e.length < 2)) {
for (var t = e[0], i = 0, n = 1; n < e.length; n++) {
if (t == e[n]) i++; else {
i = 0;
t = e[n];
}
3 == i && this.fourSameCardsList.push({
value: t,
bigenIndex: n - 3,
type: cc.vv.zipai_cardsSort.enumTalbe.holdTpye.four
});
}
for (n = 0; n < this.fourSameCardsList.length; n++) e.splice(this.fourSameCardsList[n].bigenIndex - 4 * n, 4);
}
},
findThreeSameCards: function(e) {
if (!(e.length < 2)) {
for (var t = e[0], i = 0, n = 1; n < e.length; n++) {
if (t == e[n]) i++; else {
i = 0;
t = e[n];
}
2 == i && this.threeSameCardsList.push({
value: t,
bigenIndex: n - 2,
type: cc.vv.zipai_cardsSort.enumTalbe.holdTpye.three
});
}
for (n = 0; n < this.threeSameCardsList.length; n++) e.splice(this.threeSameCardsList[n].bigenIndex - 3 * n, 3);
}
},
findShunZiCards: function(e) {
if (e.length < 3) {
for (var t = 0; t < e.length; t++) this.notShunZiList.push(e[t]);
e.splice(0, this.notShunZiList.length);
for (t = 0; t < this.notShunZiList.length; t++) e.push(this.notShunZiList[t]);
} else {
var i = !1, n = -1, a = -1, s = e[0];
for (t = 1; t < e.length; t++) if (12 != s && 11 != s) {
e[t] - s == -1 && (n = t);
e[t] - s == -2 && (a = t);
if (0 <= a && 0 <= n) {
i = !0;
this.shunZiCardsList.push({
value: s - 2,
index: 0,
type: cc.vv.zipai_cardsSort.enumTalbe.holdTpye.shunZi
});
e.splice(0, 1);
e.splice(n - 1, 1);
e.splice(a - 2, 1);
break;
}
}
if (i) this.findShunZiCards(e); else {
this.notShunZiList.push(e[0]);
e.splice(0, 1);
this.findShunZiCards(e);
}
}
},
findTwoSameCards: function(e) {
this.twoSameCardsList.splice(0, this.twoSameCardsList.length);
if (!(e.length < 2)) {
for (var t = e[0], i = 0, n = 1; n < e.length; n++) {
if (t == e[n]) i++; else {
i = 0;
t = e[n];
}
1 == i && this.twoSameCardsList.push({
value: t,
bigenIndex: n - 1,
type: cc.vv.zipai_cardsSort.enumTalbe.holdTpye.double
});
}
for (n = 0; n < this.twoSameCardsList.length; n++) e.splice(this.twoSameCardsList[n].bigenIndex - 2 * n, 2);
}
},
findSingleCards: function(e) {
this.singleCardsList = e.concat();
},
createSortedCards: function() {
for (var e = 0; e < this.fourSameCardsList.length; e++) this.sortedCardsList.push(this.fourSameCardsList[e]);
for (e = 0; e < this.threeSameCardsList.length; e++) this.sortedCardsList.push(this.threeSameCardsList[e]);
for (e = 0; e < this.twoAndOneCardsList.length; e++) this.sortedCardsList.push(this.twoAndOneCardsList[e]);
for (e = 0; e < this.shunZiCardsList.length; e++) this.sortedCardsList.push(this.shunZiCardsList[e]);
for (e = 0; e < this.twoSameCardsList.length; e++) this.sortedCardsList.push(this.twoSameCardsList[e]);
for (e = 0; e < this.sortedCardsList.length; e++) for (var t = e + 1; t < this.sortedCardsList.length; t++) if (this.sortedCardsList[e].type < this.sortedCardsList[t].type) {
var i = this.sortedCardsList[e];
this.sortedCardsList[e] = this.sortedCardsList[t];
this.sortedCardsList[t] = i;
}
}
});
cc._RF.pop();
}, {} ],
WHZ_eatNodeEventHandler: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2e52iJz25JPr0fDN0qPf08", "WHZ_eatNodeEventHandler");
cc.Class({
ctor: function() {
this.root = null;
},
init: function(e) {
this.root = e;
var r = this.root, o = null;
this.eatCardListener = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !0,
onTouchBegan: function(e, t) {
var i = r.btnCloseEatNode.convertToNodeSpace(e.getLocation()), n = r.btnCloseEatNode.getContentSize(), a = cc.rect(0, 0, n.width, n.height);
if (cc.rectContainsPoint(a, i)) {
o = r.btnCloseEatNodeIndex;
return !0;
}
console.log("log---------self.operationCardsList=:", r.operationCardsList);
for (var s = 0; s < r.operationCardsList.length; s++) for (var c = 0; c < r.operationCardsList[s].cardSprites.length; c++) {
i = r.operationCardsList[s].cardSprites[c].getChildByName("frame").convertToNodeSpace(e.getLocation()), 
n = r.operationCardsList[s].cardSprites[c].getChildByName("frame").getContentSize(), 
a = cc.rect(0, 0, n.width, n.height);
if (cc.rectContainsPoint(a, i)) {
o = s;
return !0;
}
}
o = -1;
return !0;
},
onTouchMoved: function(e, t) {},
onTouchEnded: function(e, t) {
if (-1 != o) {
cc.vv.audioMgr.playBtnClick();
if (o != r.btnCloseEatNodeIndex) {
r.operation_way = r.operationCardsList[o].operation;
r.operation_card = r.operationCardsList[o].card;
console.log("eatTouchEventLister---\x3e self.operation_way  self.operation_card：", r.operation_way, r.operation_card);
r.sendMsgOperation(r.operation_way, r.operation_card);
r.OnClickCloseEatNode();
r.operationBtnsNode.active = !1;
} else r.OnClickCloseEatNode();
}
}
});
cc.eventManager.addListener(this.eatCardListener, this.root.eatNode);
},
destroy: function() {
if (this.eatCardListener) {
cc.eventManager.removeListener(this.eatCardListener);
this.eatCardListener = null;
}
}
});
cc._RF.pop();
}, {} ],
WaitingConnection: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "10e32jDstpLhIGHWrQEq2vN", "WaitingConnection");
cc.Class({
extends: cc.Component,
properties: {
target: cc.Node,
_isShow: !1,
lblContent: cc.Label
},
onLoad: function() {
if (null == cc.vv) return null;
(cc.vv.wc = this).node.active = this._isShow;
this.num = 0;
},
update: function(e) {
this.target.rotation = this.target.rotation + 45 * e;
},
show: function(e, t, i) {
if (this.node) {
this.num = i;
this._isShow = !0;
this.node && (this.node.active = this._isShow);
if (this.lblContent) {
null == e && (e = "");
this.lblContent.string = e;
}
if (t) {
this.target.active = !1;
this.lblContent && this.lblContent.node.setPosition(0, 150);
} else {
this.target && (this.target.active = !0);
this.lblContent && this.lblContent.node.setPosition(0, 150);
}
}
},
hide: function(e) {
this._isShow = !1;
e ? e == this.num && (this.node.active = this._isShow) : this.node && (this.node.active = this._isShow);
}
});
cc._RF.pop();
}, {} ],
Wanfa: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bd2b1f4RuJIXZ5FrKfXwGCy", "Wanfa");
cc.Class({
extends: cc.Component,
properties: {
wanfaName: cc.Label,
guize: cc.RichText
},
onLoad: function() {
if (null != cc.vv) {
(cc.vv.wanfa = this)._wanfa = this.node;
this._wanfa.setLocalZOrder(1e3);
}
},
onGuize: function() {
var e = cc.vv.gameType.getWaFaDecs(cc.vv.gameNetMgr.conf.server_type, cc.vv.gameNetMgr.conf.type_index, cc.vv.gameNetMgr.conf.rule_index);
this.wanfaName.string = cc.vv.gameNetMgr.getGameTypeStr();
this.guize.string = "<color=#fcecd1>" + e + "<color=#fcecd1>";
},
onBtnWanfa_close: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
}
});
cc._RF.pop();
}, {} ],
addFriend: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5bab7GPRu5GPa7q2vYcHu5x", "addFriend");
cc.Class({
extends: cc.Component,
onClose: function() {
cc.vv.UILoader.destroy(this.node);
}
});
cc._RF.pop();
}, {} ],
baseActionMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f7d89HhBQlIdbGRpBtiKyn6", "baseActionMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.actionItemList = [];
e.actionNodeList = [];
e.vector2List = [];
e.callback = null;
return e;
}
e.prototype.initView = function(e) {
var i = this;
cc.loader.loadRes("game/3DMahjong/prefabs/Game/self_gang", function(e, t) {
i.actionItemList[0] = cc.instantiate(t);
});
cc.loader.loadRes("game/3DMahjong/prefabs/Game/right_gang", function(e, t) {
i.actionItemList[1] = cc.instantiate(t);
});
cc.loader.loadRes("game/3DMahjong/prefabs/Game/up_gang", function(e, t) {
i.actionItemList[2] = cc.instantiate(t);
});
cc.loader.loadRes("game/3DMahjong/prefabs/Game/left_gang", function(e, t) {
i.actionItemList[3] = cc.instantiate(t);
});
for (var t = [ "myself", "right", "up", "left" ], n = 0; n < t.length; n++) {
this.vector2List[n] = [];
var a = e.getChildByName(t[n]).getChildByName("items");
this.actionNodeList.push(a);
}
for (n = 0; n < this.actionNodeList[0].children.length; n++) {
var s = "p" + n, c = this.actionNodeList[0].getChildByName(s), r = this.actionNodeList[1].getChildByName(s), o = this.actionNodeList[2].getChildByName(s), h = this.actionNodeList[3].getChildByName(s);
this.vector2List[0].push(c);
this.vector2List[1].push(r);
this.vector2List[2].push(o);
this.vector2List[3].push(h);
}
this.clear();
};
e.prototype.clear = function() {
for (var e = 0; e < 4; e++) for (var t = 0; t < this.actionNodeList[e].children.length; t++) {
this.actionNodeList[e].children[t].removeAllChildren();
}
};
e.prototype.getPlayeData = function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e);
return cc.vv.gameNetMgr.seats[t];
};
e.prototype.updateShowAction = function(e) {
this.updateAction(e.seatIndex, e.items);
};
e.prototype.updateShowActionSync = function(e, t) {
this.updateAction(e, t);
};
e.prototype.updateAction = function(e, t) {
this.actionItemList.length < 3 && this.scheduleOnce(function() {
this.updateAction(e, t);
}, .1);
if (4 == this.actionItemList.length) {
for (var i = cc.vv.gameNetMgr.getLocalIndex(e), n = 0; n < this.actionNodeList[i].children.length; n++) {
this.actionNodeList[i].children[n].removeAllChildren();
}
for (var a = 0; a < t.length; a++) {
var s = null, c = t[a];
(s = cc.instantiate(this.actionItemList[i])).parent = this.actionNodeList[i].children[a];
s.setPosition(cc.Vec2.ZERO);
s.getComponent("Hunan_Action").setValueAndColor(c, i);
s.active = !0;
}
}
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
baseEffectMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "081ccVlvpVBbZm5XHjMEJ1x", "baseEffectMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.effNodeArray = [];
e.EffectsList = [];
return e;
}
e.prototype.initView = function(e) {
for (var t = [ "myself", "right", "up", "left" ], i = 0; i < t.length; i++) {
var n = t[i], a = e.getChildByName(n);
this.effNodeArray.push(a.getChildByName("eff_node"));
}
10003 == cc.vv.gameNetMgr.conf.server_type && this.initEffects(e);
};
e.prototype.initEffects = function(s) {
for (var c = this, e = function(a) {
cc.loader.loadRes("game/3DMahjong/csmj/Effects_List", function(e, t) {
var i = cc.instantiate(t);
i.name = "Effects_" + a;
var n = i.getComponent("FCEffects_List");
c.EffectsList.push(n);
s.addChild(i);
});
}, t = 0; t < 4; t++) e(t);
};
e.prototype.operation = function(e) {
cc.vv.MJConfig.operation(this, e);
};
e.prototype.opReplay = function(e) {
cc.vv.MJConfig.mjTxPush(this, e);
};
e.prototype.xiaoHu = function(e) {
this.EffectsList.length < 3 ? this.scheduleOnce(function() {
this.showXiaoHu(e);
}, .1) : this.showXiaoHu(e);
};
e.prototype.showXiaoHu = function(e) {
if (4 == this.EffectsList.length) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatIndex), i = this.effNodeArray[t].getPosition(), n = cc.vv.Event.convertToNodeSpace(i);
this.EffectsList[t].SetPosition(n);
cc.vv.mahjongUtils.has_rule(e.rights, 13) && this.EffectsList[t].setShowSprite("DSX");
cc.vv.mahjongUtils.has_rule(e.rights, 14) && this.EffectsList[t].setShowSprite("BBH");
cc.vv.mahjongUtils.has_rule(e.rights, 15) && this.EffectsList[t].setShowSprite("QYS");
cc.vv.mahjongUtils.has_rule(e.rights, 16) && this.EffectsList[t].setShowSprite("LLS");
cc.vv.mahjongUtils.has_rule(e.rights, 19) && this.EffectsList[t].setShowSprite("ST");
cc.vv.mahjongUtils.has_rule(e.rights, 20) && this.EffectsList[t].setShowSprite("YZH");
cc.vv.mahjongUtils.has_rule(e.rights, 21) && this.EffectsList[t].setShowSprite("JTYN");
cc.vv.mahjongUtils.has_rule(e.rights, 22) && this.EffectsList[t].setShowSprite("BBG");
this.EffectsList[t].onPlay();
}
};
e.prototype.flower = function(e) {
this.EffectsList.length < 3 ? this.scheduleOnce(function() {
this.showflower(e);
}, .1) : this.showflower(e);
};
e.prototype.showflower = function(e) {
if (4 == this.EffectsList.length) for (var t in e) {
var i = cc.vv.gameNetMgr.getSeatIndexByID(t), n = cc.vv.gameNetMgr.getLocalIndex(i), a = this.effNodeArray[n].getPosition(), s = cc.vv.Event.convertToNodeSpace(a);
this.EffectsList[n].SetPosition(s);
this.EffectsList[n].setShowSprite("P" + e[t] + "F");
this.EffectsList[n].onPlay();
}
};
e.prototype.midHu = function(e) {
this.EffectsList.length < 3 ? this.scheduleOnce(function() {
this.showMidHu(e);
}, .1) : this.showMidHu(e);
};
e.prototype.showMidHu = function(e) {
if (4 == this.EffectsList.length) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatIndex), i = this.effNodeArray[t].getPosition(), n = cc.vv.Event.convertToNodeSpace(i);
this.EffectsList[t].SetPosition(n);
cc.vv.mahjongUtils.has_rule(e.rights, 23) && this.EffectsList[t].setShowSprite("DSX");
cc.vv.mahjongUtils.has_rule(e.rights, 24) && this.EffectsList[t].setShowSprite("LLS");
this.EffectsList[t].onPlay();
}
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
baseFoldsMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9b447oqMIlCl569InC6Pkge", "baseFoldsMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var d = e("../game_csene/FCJumping"), n = cc._decorator, a = n.ccclass, s = (n.property, 
function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.jump = null;
e.my_Folds = [];
e.right_Folds = [];
e.up_Folds = [];
e.left_Folds = [];
e.foldsNode = [];
e.recordMyself = 0;
e.recordRight = 0;
e.recordUp = 0;
e.recordLeft = 0;
return e;
}
e.prototype.initView = function(e) {
for (var t = this, i = [ "myself", "right", "up", "left" ], n = 0; n < i.length; n++) {
var a = e.getChildByName(i[n]).getChildByName("folds");
this.foldsNode.push(a);
var s = this.foldsNode[n];
s.active = !0;
for (var c = n + 1, r = 0; r < s.children.length; r++) {
var o = "out_bg_" + c + "_" + (r + 1), h = s.getChildByName(o);
h.active = !1;
switch (n) {
case 0:
this.my_Folds.push(h);
break;

case 1:
this.right_Folds.push(h);
break;

case 2:
this.up_Folds.push(h);
break;

case 3:
this.left_Folds.push(h);
}
}
}
var l = e.getChildByName("point_out");
this.jump = new d.FCJumping();
this.jump.initView(l);
cc.vv.Event.on("mj_over_push", function(e) {
t.jump.setJumpActive(!1);
});
};
e.prototype.clear = function() {
for (var e = 0; e < this.my_Folds.length; e++) {
this.my_Folds[e] && (this.my_Folds[e].active = !1);
this.right_Folds[e] && (this.right_Folds[e].active = !1);
this.up_Folds[e] && (this.up_Folds[e].active = !1);
this.left_Folds[e] && (this.left_Folds[e].active = !1);
}
this.recordMyself = 0;
this.recordRight = 0;
this.recordUp = 0;
this.recordLeft = 0;
};
e.prototype.updateShowFolds = function(e) {
var t = 0;
switch (e.seatIndex) {
case 0:
t = this.recordMyself;
break;

case 1:
t = this.recordRight;
break;

case 2:
t = this.recordUp;
break;

case 3:
t = this.recordLeft;
}
var i = this.updateFolds(e.seatIndex, e.folds, t);
this.setJumpPosition(e.seatIndex, i, e.folds.length);
this.record(e.seatIndex, e.folds.length);
};
e.prototype.updateShowFoldsSync = function(e) {
this.updateFolds(e.seatIndex, e.folds);
this.record(e.seatIndex, e.folds.length);
};
e.prototype.setJumpPosition = function(e, t, i) {
var n = 0;
switch (e) {
case 0:
n = this.recordMyself;
break;

case 1:
n = this.recordRight;
break;

case 2:
n = this.recordUp;
break;

case 3:
n = this.recordLeft;
}
n < i && this.jump.setJumpingPosition(t);
};
e.prototype.setOutCardSprite = function(e, t, i, n) {
var a = cc.vv.gameNetMgr.getLocalIndex(i);
e.getChildByName("item_" + a).getComponent("Hunan_Item").setOutValueAndColor(t);
e.active = !0;
};
e.prototype.getPlayeData = function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e);
return cc.vv.gameNetMgr.seats[t];
};
e.prototype.record = function(e, t) {
switch (e) {
case 0:
this.recordMyself = t;
break;

case 1:
this.recordRight = t;
break;

case 2:
this.recordUp = t;
break;

case 3:
this.recordLeft = t;
}
};
e.prototype.updateFolds = function(e, t, i) {
void 0 === i && (i = 0);
for (var n = null, a = i, s = cc.vv.gameNetMgr.getLocalIndex(e), c = null; a < t.length; a++) switch (s) {
case 0:
c = this.my_Folds[a];
this.setOutCardSprite(c, t[a], e, 1);
n = c;
break;

case 1:
c = this.right_Folds[a];
this.setOutCardSprite(c, t[a], e, 2);
n = c;
break;

case 2:
c = this.up_Folds[a];
this.setOutCardSprite(c, t[a], e, 3);
n = c;
break;

case 3:
c = this.left_Folds[a];
this.setOutCardSprite(c, t[a], e, 4);
n = c;
}
return n;
};
e.prototype.setOutMov = function(e, t) {
if (e) {
var i = cc.vv.gameNetMgr.getLocalIndex(t), n = e.getPosition();
switch (i) {
case 0:
e.setPosition(cc.v2(540, -293));
e.runAction(cc.moveTo(.1, n));
break;

case 1:
e.setPosition(cc.v2(398, 258));
e.runAction(cc.moveTo(.1, n));
break;

case 2:
e.setPosition(cc.v2(251, 334));
e.runAction(cc.moveTo(.1, n));
break;

case 3:
e.setPosition(cc.v2(-526, -153));
e.runAction(cc.moveTo(.1, n));
}
return n;
}
};
e.prototype.onDestroy = function() {
this.jump = null;
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {
"../game_csene/FCJumping": "FCJumping"
} ],
baseGameBirds: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f162c0n291GopjLjSLyNaVX", "baseGameBirds");
cc.Class({
extends: cc.Component,
properties: {
birdsArray: {
default: [],
type: cc.Node
},
destroyTime: 0
},
onLoad: function() {
this.setInterval();
this.updateShowTieBird();
},
setInterval: function() {
this.destroyTime = .5;
},
updateShowTieBird: function() {
for (var e = cc.vv.gameNetMgr.gameBirds, i = this, t = .5, n = null, a = 0; a < e.length; a++) {
t += .5;
(n = e[a]).prefab = this.birdsArray[a];
this.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function(e, t) {
i.ShowTieBird(t);
}, null, n)));
}
this.node.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function(e, t) {
i.addTieBird();
}, null, n)));
this.node.runAction(cc.sequence(cc.delayTime(this.destroyTime += t), cc.callFunc(function() {
i.OnDestroy();
})));
},
ShowTieBird: function(e) {
if (null != e.id) {
this.getCardSprite(e.prefab, e.id, e.is);
var t = cc.v2(e.prefab.x, 0);
e.prefab.runAction(cc.moveTo(.5, t));
this.node.runAction(cc.sequence(cc.delayTime(.4), cc.callFunc(function() {
cc.vv.audioMgr.playSFX("resources/hall/sounds/mj/down.mp3");
}, null, null)));
}
},
getCardSprite: function(e, t, i) {
var n = e.getChildByName("item"), a = e.getChildByName("green");
n.getComponent("Hunan_Item").setHandValueAndColor(t);
a.active = !!i;
e.active = !0;
},
addTieBird: function() {},
OnDestroy: function() {
this.node.dispatchEvent(new cc.Event.EventCustom("mj_over_push", !0));
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
baseGameFanXing: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "06012ESon1MvoL/YGm8hwx7", "baseGameFanXing");
var n = e("baseGameBirds");
cc.Class({
extends: n,
properties: {
str: {
default: null,
type: cc.Label
}
},
setInterval: function() {
var e = cc.vv.gameNetMgr.gameBirds[0], t = e.hit[e.huIndex];
this.destroyTime = 2 + t;
},
addTieBird: function() {
var e = cc.vv.gameNetMgr.gameBirds[0], t = e.hit[e.huIndex], i = .2;
if (0 < t) for (var n = 0; n < t + 1; n++) {
i += .1;
this.gameRunACtion(i, n, this.hitNumShowBig, this.str);
i += .1;
this.gameRunACtion(i, n, this.hitNumShowSmall, this.str);
}
},
hitNumShowBig: function(e, t) {
t.fontSize = 180;
t.string = e;
},
hitNumShowSmall: function(e, t) {
t.fontSize = 100;
t.string = e;
},
gameRunACtion: function(e, t, i, n) {
this.node.runAction(cc.sequence(cc.delayTime(e), cc.callFunc(function(e) {
i(t, n);
}, null)));
}
});
cc._RF.pop();
}, {
baseGameBirds: "baseGameBirds"
} ],
baseGameNetMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1b48VaMPRG5oDs/DHsZNL2", "baseGameNetMgr");
cc.Class({
extends: cc.Component,
properties: {
dataEventHandler: null,
roomId: null,
unions_id: -1,
agent_user_id: -1,
maxNumOfGames: 0,
numOfGames: 0,
numOfMJ: 0,
seatIndex: -1,
seats: null,
turn: -1,
button: -1,
gamestate: 1,
isOver: !1,
dissoveData: null,
mjSyncData: null,
isReplay: !1,
isAuto: !1,
wallData: null,
xiaoHu: [],
mahjongTotal: -1,
gameBeginDice: 0,
gameOverData: null,
isDeBug: !0,
op: null
},
initHandlers: function() {
this.require();
this.baseInitEvent();
},
require: function(e) {
function t() {
return e.apply(this, arguments);
}
t.toString = function() {
return e.toString();
};
return t;
}(function() {
cc.vv.mahjongUtils = e("Hunan_PokerUtils");
cc.vv.msgTemp_Hunan = e("Hunan_msgdefine").msg_templete;
}),
baseInitEvent: function() {
var t = this;
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_finished", function(e) {
t.n_loadScene(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("login_result", function(e) {
t.n_loginResult(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_result", function(e) {
t.n_exitResult(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("exit_notify_push", function(e) {
t.n_exitNotify(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("seq_move_seat_push", function(e) {
t.n_seqMoveSeat(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dispress_push", function(e) {
t.n_dispress(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("disconnect", function(e) {
t.n_disconnect(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("new_user_comes_push", function(e) {
t.n_newUserComes(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("gps", function(e) {
t.n_gps(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_state_push", function(e) {
t.n_userState(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_ready_push", function(e) {
console.log("user_ready_push");
t.n_userReady(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("kick", function(e) {
t.n_kick(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("transfer", function(e) {
t.n_transfer(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("chat_push", function(e) {
t.n_chat(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("quick_chat_push", function(e) {
t.n_quickChat(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_push", function(e) {
t.n_emoji(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("emoji_to_cl", function(e) {
t.n_emojiTo(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_notice_push", function(e) {
t.n_dissolveNotice(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("dissolve_cancel_push", function(e) {
t.n_dissolveCancel(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("voice_msg_push", function(e) {
t.n_voice(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_num_push", function(e) {
t.n_gameNum(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_over", function(e) {
t.n_gameOver(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_result", function(e) {
t.n_gameResult(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_begin", function(e) {
t.n_gameBegin(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_state_push", function(e) {
t.n_gameState(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("holds", function(e) {
t.n_holds(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("turn", function(e) {
t.n_turn(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("out_card", function(e) {
t.n_outCard(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("operation", function(e) {
t.n_operation(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("user_operation", function(e) {
t.n_userOperation(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("proc_operation", function(e) {
t.n_procOperation(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("pick", function(e) {
t.n_pick(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("birds", function(e) {
t.n_birds(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("wall", function(e) {
t.n_wall(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("mj_folds_push", function(e) {
t.n_mjFolds(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("magic", function(e) {
t.n_magic(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("game_sync_push", function(e) {
t.n_gameSync(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("time_sync", function(e) {
t.n_Tg_start(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("auto_push", function(e) {
t.n_Tg_Auto(e);
});
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].addHandler("cancel_auto", function(e) {
t.n_Tg_Cancel(e);
});
},
n_loadScene: function(e) {
this.ShowLog("login_finished", e);
cc.vv.wc.show("正在进入游戏");
cc.director.loadScene("3Dmahjong");
},
n_loginResult: function(e) {
this.ShowLog("login_result", e);
if (0 === e.errcode) {
e = e.data;
this.agent_user_id = e.agent_user_id;
this.roomId = e.roomid;
this.resultRoomId = e.roomid;
this.conf = e.conf;
this.type_index = e.conf.type_index;
this.rule_index = e.conf.rule_index;
this.maxNumOfGames = e.conf.max_games;
this.numOfGames = e.num_of_games;
this.seats = e.seats;
this.unions_id = this.conf.unionid;
this.high_defend = e.conf.high_defend;
this.high_defend ? cc.vv.userMgr.isHighDefend = 1 : cc.vv.userMgr.isHighDefend = 0;
this.mahjongTotal = this.get_poker_nums(this.conf);
var t = this.getSeatByID(cc.vv.userMgr.userId);
1 == t.watch ? this.seatIndex = -1 : this.seatIndex = t.seatindex;
this.isOver = !1;
} else {
console.log(e.errmsg);
var i = cc.vv.error.errorMsg(ret.errcode);
cc.vv.alert.show("提示", i);
}
},
n_exitResult: function(e) {
this.ShowLog("exit_result", e);
this.roomId = null;
this.clearGameData();
},
n_exitNotify: function(e) {
this.ShowLog("exit_notify_push", e);
var t = e, i = this.getSeatByID(t);
if (null != i) {
this.spliceSeatByID(t);
i.userid = 0;
i.name = "";
this.dispatchEvent("user_state_changed", i);
}
},
n_seqMoveSeat: function(e) {
this.ShowLog("seq_move_seat_push", e);
e.leaved;
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = this.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (this.seatIndex = n);
i.push(a);
}
this.seats = i;
this.dispatchEvent("seq_move_seat_push", e);
},
n_dispress: function(e) {
this.ShowLog("dispress_push", e);
cc.vv.gameNetMgr.roomId = null;
this.dispatchEvent("dispress_push", e);
},
n_disconnect: function(e) {
this.ShowLog("disconnect", e);
if (0 == this.isOver) {
cc.vv.userMgr.roomData = this.roomId;
this.dispatchEvent("disconnect");
} else this.roomId = null;
},
n_newUserComes: function(e) {
this.ShowLog("new_user_comes_push", e);
var t = e.seatindex;
cc.vv.userMgr.userId == e.userid && (this.seatIndex = t);
if (null == this.seats[t]) this.seats[t] = e; else {
var i = this.seats[t];
if (i.userid == e.userid) {
this.seats[t].online = !0;
this.seats[t].watch = !1;
this.seats[t].seatindex = t;
} else {
var n = this.getSeatByID(e.userid);
if (n) {
var a = this.seats.indexOf(n);
this.seats[a] = i;
this.seats[t] = n;
this.seats[t].online = !0;
this.seats[t].watch = !1;
this.seats[t].seatindex = t;
} else {
var s = this.seats.splice(t, this.seats.length);
e.online = !0;
e.watch = !1;
this.seats[t] = e;
this.seats.concat(s);
}
}
}
this.dispatchEvent("new_user", this.seats[t]);
},
n_gps: function(e) {
this.ShowLog("gps", e);
this.dispatchEvent("gps_push", e);
},
n_userState: function(e) {
this.ShowLog("user_state_push", e);
var t = e.userid, i = this.getSeatByID(t);
if (i) {
i.online = e.online;
this.dispatchEvent("user_state_changed", i);
}
},
n_userReady: function(e) {
this.ShowLog("user_ready_push", e);
var t = e.userid, i = this.getSeatByID(t);
if (i) {
i.ready = e.ready;
this.dispatchEvent("user_state_changed", i);
}
},
n_kick: function(e) {
this.ShowLog("kick", e);
if (e.kicked == cc.vv.userMgr.userId) {
cc.vv.userMgr.roomData = null;
cc.args.web_args && cc.args.web_args.roomid && (cc.args.web_args.roomid = null);
this.roomId = null;
}
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = this.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (this.seatIndex = n);
i.push(a);
}
this.seats = i;
this.dispatchEvent("kick_push", e);
},
n_transfer: function(e) {
this.ShowLog("transfer", e);
for (var t = e.new_seat, i = [], n = 0; n < t.length; n++) {
var a = this.getSeatByID(t[n]);
a.seatindex = n;
cc.vv.userMgr.userId == t[n] && (this.seatIndex = n);
i.push(a);
}
this.seats = i;
this.dispatchEvent("transfer_push", e);
},
n_chat: function(e) {
this.ShowLog("chat_push", e);
this.dispatchEvent("chat_push", e);
},
n_quickChat: function(e) {
this.ShowLog("quick_chat_push", e);
e.content = parseInt(e.content);
this.dispatchEvent("chat_push", e);
},
n_emoji: function(e) {
this.ShowLog("emoji_push", e);
this.dispatchEvent("emoji_push", e);
},
n_emojiTo: function(e) {
this.ShowLog("emoji_to_cl", e);
this.dispatchEvent("emoji_to_cl", e);
},
n_dissolveNotice: function(e) {
this.ShowLog("dissolve_notice_push", e);
this.dissoveData = e;
this.dispatchEvent("dissolve_notice", e);
},
n_dissolveCancel: function(e) {
this.ShowLog("dissolve_cancel_push", e);
this.dissoveData = null;
this.dispatchEvent("dissolve_cancel", e);
},
n_voice: function(e) {
this.ShowLog("voice_msg_push", e);
this.dispatchEvent("voice_msg", e);
},
n_gameNum: function(e) {
this.ShowLog("game_num_push", e);
this.numOfGames = e;
this.dispatchEvent("game_num", e);
},
n_gameOver: function(e) {
this.ShowLog("game_over", e);
this.gameOverData = e;
null == this.gameBirds && this.dispatchEvent("mj_over_push", e);
},
n_gameResult: function(e) {
this.ShowLog("game_result", e);
this.isOver = !0;
this.resultData = e;
},
n_gameBegin: function(e) {
this.ShowLog("game_begin", e);
this.turn = e.turn;
this.button = e.button;
this.numOfGames = e.game_index;
this.gameBeginDice = e.dice_num;
this.dispatchEvent("game_num", e);
this.dispatchEvent("mj_beign_push");
},
n_gameState: function(e) {
this.ShowLog("game_state_push", e);
this.gamestate = e.state;
this.dispatchEvent("mj_game_state");
},
n_holds: function(e) {
this.ShowLog("holds", e);
var t = this.getSeatIndexByID(e.user_id), i = this.seats[t];
if (i) {
i.folds = e.folds;
i.items = e.items;
i.holds = e.holds;
i.keep = e.keep;
i.py = e.py;
i.lock = e.lock;
var n = {};
n.seatIndex = t;
n.holds = e.holds;
n.userId = e.user_id;
this.dispatchEvent("mj_holds_push", n);
var a = {};
a.seatIndex = t;
a.folds = e.folds;
a.userId = e.user_id;
this.dispatchEvent("mj_folds_push", a);
var s = {};
s.seatIndex = t;
s.items = e.items;
s.userId = e.user_id;
this.dispatchEvent("mj_items_push", s);
}
cc.vv.userMgr.userId == e.user_id && this.dispatchEvent("mj_ting_push", e.ting);
},
n_turn: function(e) {
this.ShowLog("turn", e);
this.turn = e.turn;
this.dispatchEvent("mj_turn_push", e);
},
n_outCard: function(e) {
this.ShowLog("out_card", e);
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
var i = {};
i.userId = e.out_user_id;
i.seatIndex = e.out_seat_index;
i.card = e.out_card;
this.dispatchEvent("mj_out_push", i);
},
n_operation: function(e) {
this.ShowLog("operation", e);
this.op || (this.op = {});
if (65535 != e.op_mask) {
var t = this.seats[e.seat_index], i = cc.vv.userMgr.userId;
if (t.userid == i) {
this.op.index = e.seat_index;
this.op.mask = e.op_mask;
this.op.right = e.op_right;
this.op.provider = e.op_right;
this.op.card = e.card;
this.op.gangCard = e.gang_card;
this.dispatchEvent("mj_action_push", this.op);
}
} else this.dispatchEvent("mj_allow_out_push", !0);
},
n_userOperation: function(e) {
this.ShowLog("user_operation", e);
if (e.error_code && 0 != e.error_code) {
var t = cc.vv.error.errorMsg(e.error_code);
cc.vv.alert.show("提示", t);
}
(0 < e.op_code && e.op_code < 5 || 10 == e.op_code) && this.dispatchEvent("mj_holds_simple_push");
},
n_procOperation: function(e) {
this.ShowLog("proc_operation", e);
this.dispatchEvent("mj_operation_push", e);
},
n_pick: function(e) {
this.ShowLog("pick", e);
this.dispatchEvent("mj_pick_card_push", e);
},
n_birds: function(e) {
this.ShowLog("birds", e);
e.birds <= 0 || this.dispatchEvent("mj_birds_push", e);
},
n_wall: function(e) {
this.ShowLog("wall", e);
if (null == this.wallData) {
this.wallData = {};
this.wallData.dice = e.dice_num;
this.wallData.total = e.total;
this.wallData.head = e.head;
this.wallData.tail = e.tail;
this.dispatchEvent("mj_throw_push", e);
} else this.dispatchEvent("mj_wall_push", e);
},
n_mjFolds: function(e) {
this.ShowLog("mj_folds_push", e);
var t = this.getSeatIndexByID(e.user_id), i = this.seats[t];
if (i) {
i.folds = e.folds;
var n = {};
n.seatIndex = t;
n.folds = e.folds;
n.userId = e.user_id;
this.dispatchEvent("mj_folds_push", n);
}
},
n_magic: function(e) {
this.ShowLog("magic", e);
cc.log("万能牌广播");
cc.log(e);
},
n_gameSync: function(e) {
this.ShowLog("game_sync_push", e);
cc.sys.isNative && (e = JSON.parse(e));
this.button = e.button;
this.numOfMJ = e.num_of_pokers;
this.turn = e.turn;
this.state = e.state;
this.gamestate = e.state;
for (var t = 0; t < e.seats.length; t++) for (var i = e.seats[t], n = 0; n < this.seats.length; n++) {
var a = this.seats[n];
if (i.user_id == a.userid) {
this.seats[n].folds = e.seats[t].folds;
this.seats[n].gang_score = e.seats[t].gang_score;
this.seats[n].holds = e.seats[t].holds;
this.seats[n].hu_score = e.seats[t].hu_score;
this.seats[n].items = e.seats[t].items;
this.seats[n].huright = e.seats[t].huright;
this.seats[n].keep = e.seats[t].keep;
this.seats[n].py = e.seats[t].py;
this.seats[n].lock = e.seats[t].lock;
this.seats[n].seatindex = e.seats[t].seat_index;
this.seats[n].select_action = e.seats[t].select_action;
this.seats[n].start_huright = e.seats[t].start_huright;
this.seats[n].start_score = e.seats[t].start_score;
this.seats[n].ting = e.seats[t].ting;
this.seats[n].userid = e.seats[t].user_id;
this.seats[n].isAuto = e.seats[t].is_auto;
}
}
},
n_Tg_start: function(e) {
this.ShowLog("time_sync", e);
this.dispatchEvent("mj_TgStart_push", e);
},
n_Tg_Auto: function(e) {
this.ShowLog("auto_push", e);
var t = {};
t.userId = e.user_id;
t.isAuto = e.is_auto;
this.dispatchEvent("mj_TgAuto_push", t);
},
n_Tg_Cancel: function(e) {
this.ShowLog("cancel_auto", e);
this.dispatchEvent("mj_TgCancel_push", e);
},
resetGame: function() {
this.dataEventHandler = null;
this.roomId = null;
this.resultRoomId = null;
this.clearGameData();
},
clearGameData: function() {
this.agent_user_id = -1;
this.maxNumOfGames = 0;
this.unions_id = -1;
this.numOfGames = 0;
this.numOfMJ = 0;
this.seatIndex = -1;
this.seats = null;
this.turn = -1;
this.button = -1;
this.gamestate = 1;
this.isOver = !1;
this.dissoveData = null;
this.mjSyncData = null;
},
updateMoney: function() {
this.dispatchEvent("updateMoney");
},
onMWGotoRoom: function(e) {
console.log("gameNetMgr.onMWGotoRoom", e);
this.dispatchEvent("goToRoom", e);
},
updateBaterry: function(e) {
this.dispatchEvent("updateBaterry", e);
},
turnTimerOver: function(e) {
this.dispatchEvent("turnTimerOver", e);
},
dispatchEvent: function(e, t) {
this.dataEventHandler && this.dataEventHandler.emit(e, t);
},
getSeatIndexByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return t;
}
return -1;
},
getSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) return this.seats[t];
}
return null;
},
spliceSeatByID: function(e) {
for (var t = 0; t < this.seats.length; ++t) {
if (this.seats[t].userid == e) {
this.seats.splice(t, 1);
break;
}
}
},
isOwner: function() {
return !(0 < this.agent_user_id) && (!(0 < this.unions_id) && 0 == this.seatIndex);
},
isSelfTurn: function() {
var e = this.turn;
return 0 == this.getLocalIndex(e);
},
getSelfTotaloScore: function() {
return this.seats[this.seatIndex].score;
},
getSelfData: function() {
return this.seats[this.seatIndex];
},
getLocalIndex: function(e) {
this.conf.rule_index, this.conf.rule_index;
return 0 != (32 & this.conf.rule_index) && e != this.seatIndex ? 2 : (e - this.seatIndex + 4) % 4;
},
use58: function() {
return !1;
},
doReplayAction: function(e) {
this.dispatchEvent("doReplayAction", e);
},
doReplayActionOver: function() {
this.dispatchEvent("doReplayActionOver");
},
getGameTypeStr: function() {
return "湖南麻将";
},
getWanfaType: function() {
return "经典玩法";
},
connectGameServer: function(e) {
this.dissoveData = null;
var t = {
token: e.token,
roomid: e.roomid,
time: e.time,
sign: e.sign
};
cc.vv.wc.show("正在连接房间服务器");
cc.vv.netMgr.connectGameServer(e.ip + ":" + e.port, t);
},
reset: function() {
this.turn = -1;
this.gamestate = 1;
this.mjSyncData = null;
for (var e = 0; e < this.seats.length; ++e) {
this.seats[e].holds = [];
this.seats[e].folds = [];
this.seats[e].items = [];
this.seats[e].ting = [];
this.seats[e].action_mask && (this.seats[e].action_mask = []);
this.seats[e].flower_items && (this.seats[e].flower_items = []);
this.seats[e].items && (this.seats[e].items = []);
this.seats[e].action_mask && (this.seats[e].action_mask = []);
}
this.dispatchEvent("mj_reset_push");
},
get_poker_nums: function(e) {
if (cc.vv.mahjongUtils.has_rule(e.type_index, 2)) {
if (cc.vv.mahjongUtils.has_rule(e.rule_index, 3)) return cc.vv.mahjongUtils.has_rule(e.rule_index, 9) ? 112 : 108;
if (cc.vv.mahjongUtils.has_rule(e.rule_index, 4)) return cc.vv.mahjongUtils.has_rule(e.rule_index, 9) ? 112 : 108;
if (cc.vv.mahjongUtils.has_rule(e.rule_index, 5)) return 64;
}
return cc.vv.mahjongUtils.has_rule(e.type_index, 1) ? 108 : cc.vv.mahjongUtils.has_rule(e.type_index, 3) ? 112 : 108;
},
clear: function() {
if ((this.dataEventHandler = null) == this.isOver) {
this.seats = null;
this.roomId = null;
this.maxNumOfGames = 0;
this.numOfGames = 0;
}
},
ShowLog: function(e, t) {
console.log("==========  " + e + "  ==========");
console.log(t);
},
prepareReplay: function(e, t, i) {
this.isReplay = !0;
this.replayData = i;
this.initReplayRoomData(e, t);
this.initReplayGameData(i);
},
initReplayRoomData: function(e, t) {
this.roomId = e.id;
var i = JSON.parse(e.base_info);
this.conf = i;
this.conf.server_type = i.server_type;
this.type_index = i.type_index;
this.rule_index = i.rule_index;
this.maxNumOfGames = i.max_games;
this.numOfGames = t;
this.seats = e.user_data;
},
initReplayGameData: function(e) {
var t = JSON.parse(e[0].change_info);
this.turn = t.turn;
this.button = t.button;
this.gameBeginDice = t.dice_num;
this.wallData = {};
this.wallData.total;
this.wallData.dice = t.dice_num;
var i = JSON.parse(e[0].base_info);
this.creatorid = i.conf.creator;
for (var n = null, a = 0; a < this.seats.length; a++) {
(c = this.seats[a]).userid == cc.vv.userMgr.userId && (n = c.userid);
}
n || (n = this.seats[0].userid);
this.startHoldLength = 13;
for (var s = 0; s < this.seats.length; s++) {
var c;
n == (c = this.seats[s]).userid && (this.seatIndex = s);
c.seatindex = s;
c.score = null;
}
}
});
cc._RF.pop();
}, {
Hunan_PokerUtils: "Hunan_PokerUtils",
Hunan_msgdefine: "Hunan_msgdefine"
} ],
baseGameOver: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2dec3wErNJs4kElivFfFiU", "baseGameOver");
cc.Class({
extends: cc.Component,
properties: {
userNode: {
default: null,
type: cc.Node
},
userPanel: {
default: null,
type: cc.Node
},
win: {
default: null,
type: cc.Node
},
pingju: {
default: null,
type: cc.Node
},
lose: {
default: null,
type: cc.Node
},
btnReadyStr: {
default: null,
type: cc.Label
},
birdsNode: {
default: null,
type: cc.Node
},
birdsArray: {
default: [],
type: cc.Node
}
},
onLoad: function() {
if (null != cc.vv && null != cc.vv.gameNetMgr.conf) {
this.initView();
cc.vv.gameNetMgr.isOver ? this.btnReadyStr.string = "总结算" : this.btnReadyStr.string = "继续";
this.onGameOver();
}
},
initView: function() {
this.btnShare = this.node.getChildByName("btnShare");
this.btnShare && cc.vv.utils.addClickEvent(this.btnShare, this.node, "baseGameOver", "onBtnShareClicked");
},
onActive: function(e) {
this.pingju.active = e;
this.win.active = e;
this.lose.active = e;
},
onGameOver: function() {
this.onActive(!1);
var e = cc.vv.gameNetMgr.gameOverData, t = cc.vv.gameNetMgr.gameBirds, i = e.end_seats_data;
this.installData(i, e);
console.log("《打印 ：endSeatsData》");
console.log(i);
i && this.showPlayerData(i);
t && this.showBirdsData(t);
},
installData: function(e, t) {
e.birds = t.birds;
e.force = t.force;
e.huInfo = t.hu_info;
e.birsdPick = t.birds_pick;
},
showPlayerData: function(e) {
e.birds;
var t = e.huInfo, i = cc.vv.gameNetMgr.seats, n = cc.vv.gameNetMgr.button;
this.userNode.removeAllChildren();
for (var a = 0; a < e.length; a++) {
var s = e[a], c = cc.instantiate(this.userPanel), r = c.getComponent("user_over_item");
if (cc.vv.userMgr.userId == s.user_id) this.mySelfData(r, s); else {
r.setBenRen(!1);
r.setSelfLine(!1);
}
r.setHeadIcon(s.user_id);
this.showHouse(r);
this.showScore(r, s);
this.showHuCard(r, t, i[a].seatindex);
this.showHolds(r, t, s.holds, i[a].seatindex);
this.showAction(r, s.items);
this.showName(r, i[a].name);
this.showId(r, i[a].userid);
this.showLabel(r, s.hu_right);
this.showButton(r, n, i[a].seatindex);
this.showOutcomeType(r, t, s, i[a].seatindex);
c.parent = this.userNode;
}
},
showBirdsData: function(e) {
for (var t = 0; t < e.length; t++) {
var i = e[t];
i.prefab = this.birdsArray[t];
this.ShowTieBird(i);
}
},
ShowTieBird: function(e) {
null != e.id && this.getCardSprite(e.prefab, e.id, e.is);
},
getCardSprite: function(e, t, i) {
var n = e.getChildByName("item"), a = e.getChildByName("green");
n.getComponent("Hunan_Item").setHandValueAndColor(t);
a.active = !!i;
e.active = !0;
},
mySelfData: function(e, t) {
e.setBenRen(!0);
e.setSelfLine(!0);
if (0 < t.hu_score) {
this.win.active = !0;
this.lose.active = !1;
this.pingju.active = !1;
cc.vv.audioMgr.playSFX("resources/game/public/sounds/win.mp3");
} else if (t.hu_score < 0) {
this.win.active = !1;
this.lose.active = !0;
this.pingju.active = !1;
cc.vv.audioMgr.playSFX("resources/game/public/sounds/lose.mp3");
} else if (0 == t.hu_score) {
this.win.active = !1;
this.lose.active = !1;
this.pingju.active = !0;
}
},
showName: function(e, t) {
cc.vv.userMgr.isHighDefend ? e.setName("已屏蔽") : e.setName(t);
},
showId: function(e, t) {
cc.vv.userMgr.isHighDefend ? e.setId("已屏蔽") : e.setId(t);
},
showHuapItem: function(e, t, i, n) {
if (!(t <= 0)) for (var a = 0; a < i.length; a++) {
if (i[a][0] == n) {
e.setBirdsPShow(t);
this.showHuapLabel(e, "抓鸟");
} else {
e.setBirdsPShow(-1);
this.showHuapLabel(e);
}
}
},
showHuapLabel: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "";
e.setHuapDecs(t);
},
showAction: function(e, t) {
e.setActionShow(t);
},
showHolds: function(e, t, i, n) {
for (var a = 0; a < t.length; a++) {
var s = t[a], c = s[0], r = s[1], o = s[2];
if (c == r && c == n) for (var h = 0; h < i.length; h++) if (i[h] == o) {
i.splice(h, 1);
break;
}
}
var l = this.holdsSort(i);
e.setHoldsShow(l);
},
holdsSort: function(e) {
e.sort(function(e, t) {
return e - t;
});
return e;
},
showScore: function(e, t) {
var i = t.start_score + t.hu_score + t.gang_score;
e.setScore(i);
},
showHouse: function(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
e.setHouse(t);
},
showLabel: function(e, t) {
if (0 < t) {
var i = cc.vv.mahjongUtils.Decs(cc.vv.gameNetMgr.conf.server_type, t);
e.setDecs(i);
} else e.setDecs("");
},
showHuCard: function(e, t, i) {
if (0 < t.length) for (var n = 0; n < t.length; n++) {
var a = t[n], s = a[0], c = (a[1], a[2]);
s == i ? e.setHuItem(c) : e.setHuItem(-1);
} else e.setHuItem(-1);
},
showButton: function(e, t, i) {
t == i ? e.setZhuang(!0) : e.setZhuang(!1);
},
showOutcomeType: function(e, t, i, n) {
for (var a = 0; a < t.length; a++) {
var s = t[a], c = s[0], r = s[1];
c == n ? c == r ? e.setOutcomeType("自摸") : e.setOutcomeType("胡") : r == n && c != r ? e.setOutcomeType("炮手") : e.setOutcomeType("");
}
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.anysdkMgr.shareResult(0);
},
onBtnReadyClicked: function() {
cc.vv.audioMgr.playBtnClick();
if (cc.vv.gameNetMgr.isOver) this.node.dispatchEvent(new cc.Event.EventCustom("mj_result_push", !0)); else {
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("ready");
cc.vv.gameNetMgr.reset();
}
this.node.dispatchEvent(new cc.Event.EventCustom("fresh_all_score", !0));
cc.vv.gameNetMgr.wallData = null;
cc.vv.gameNetMgr.gameBirds = null;
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
baseGameResult: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "acf98c6vy1N0oV1iJyrrJwF", "baseGameResult");
cc.Class({
extends: cc.Component,
properties: {
gameName: {
default: null,
type: cc.Label
},
roomID: {
default: null,
type: cc.Label
},
clubID: {
default: null,
type: cc.Label
},
seatNodeList: {
default: [],
type: cc.Node
}
},
onLoad: function() {
null != cc.vv && this.onGameEnd();
},
onGameEnd: function() {
for (var e = cc.vv.gameNetMgr.resultData, t = 0; t < this.seatNodeList.length; t++) this.seatNodeList[t].active = !1;
var i = cc.vv.gameNetMgr.seats, n = 0, a = 0;
for (t = 0; t < e.over_seats_data.length; ++t) {
var s = e.over_seats_data[t].total_score;
n < s && (n = s);
var c = e.over_seats_data[t].pao_counts;
a < c && (a = c);
}
var r = 4 < i.length ? 4 : 0;
for (t = 0; t < i.length; ++t) {
var o = i[t];
this.seatNodeList[r].active = !0;
if (e.over_seats_data[t]) {
var h = !(e.over_seats_data[t].total_score != n || !n);
this.showResult(this.seatNodeList[r], e.over_seats_data[t], o.userid, h, a);
}
r++;
}
},
showResult: function(e, t, i, n, a) {
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var s = e.getChildByName("fangzhu"), c = cc.vv.gameNetMgr.getSeatIndexByID(i);
s.active = 0 == c;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
0 != a && a == t.pao_counts ? e.getChildByName("paoshou").active = !0 : e.getChildByName("paoshou").active = !1;
cc.vv.userMgr.isHighDefend = 0;
var r = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = r.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
this.gameName.string = cc.vv.gameNetMgr.getGameTypeStr();
cc.vv.gameNetMgr.unions_id ? this.clubID.string = "(俱乐部" + cc.vv.gameNetMgr.unions_id + ")" : this.clubID.node.active = !1;
this.roomID.string = cc.vv.gameNetMgr.resultRoomId;
for (var o, h, l = e.getChildByName("labels"), d = e.getChildByName("values"), u = 0; u < 8; u++) {
var v = "lb" + (u + 1);
l.getChildByName(v).getComponent(cc.Label).string = "";
d.getChildByName(v).getComponent(cc.Label).string = "";
}
var g = [];
for (var _ in t.goldflower_type_count) {
g["type_" + _] = t.goldflower_type_count[_];
}
o = [ "", "最高得分", "", "失败局数", "", "胜利局数", "", "流局局数" ];
var f = t.draw_counts ? t.draw_counts : 0;
h = [ "", t.max_score, "", t.lose_counts, "", t.win_counts, "", f ];
for (u = 0; u < 8; u++) {
v = "lb" + (u + 1);
l.getChildByName(v).getComponent(cc.Label).string = o[u];
d.getChildByName(v).getComponent(cc.Label).string = h[u];
}
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("game_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
baseHoldsMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9202cGV2nFAjJP1lqkTdluR", "baseHoldsMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.topaiArray = [];
e.mopaiList = [];
e.vector2List = [];
e.pushItemList = [];
e.holdsNodeList = [];
e.toParentArray = [];
e.outCard = !1;
e.chupaidrag = null;
e.UseSimpleSort = !1;
e.TemporaryCard = null;
return e;
}
e.prototype.initView = function(e) {
var i = this;
cc.loader.loadRes("game/3DMahjong/prefabs/Game/MahJong_myself_D", function(e, t) {
i.topaiArray[0] = cc.instantiate(t);
});
cc.loader.loadRes("game/3DMahjong/prefabs/Game/MahJong_right_D", function(e, t) {
i.topaiArray[1] = cc.instantiate(t);
});
cc.loader.loadRes("game/3DMahjong/prefabs/Game/MahJong_up_D", function(e, t) {
i.topaiArray[2] = cc.instantiate(t);
});
cc.loader.loadRes("game/3DMahjong/prefabs/Game/MahJong_left_D", function(e, t) {
i.topaiArray[3] = cc.instantiate(t);
});
var t = [ "myself", "right", "up", "left" ];
this.chupaidrag = e.getChildByName("chupaidrag");
this.chupaidrag.active = !1;
for (var n = [], a = 0; a < t.length; a++) {
this.vector2List[a] = [];
this.toParentArray[a] = [];
var s = e.getChildByName(t[a]), c = s.getChildByName("holds"), r = s.getChildByName("to_down");
n.push(r);
this.holdsNodeList.push(c);
this.mopaiList[a] = this.holdsNodeList[a].getChildByName("pp");
0 == a || 2 == a ? this.vector2List[a].push(cc.v2(this.mopaiList[a].x, this.mopaiList[a].y)) : this.vector2List[a].push(this.mopaiList[a]);
this.toParentArray[a].push(n[a].getChildByName("pp"));
}
for (a = 0; a < this.holdsNodeList[0].children.length - 1; a++) {
var o = "p" + a, h = this.holdsNodeList[0].getChildByName(o), l = this.holdsNodeList[1].getChildByName(o), d = this.holdsNodeList[2].getChildByName(o), u = this.holdsNodeList[3].getChildByName(o), v = n[0].getChildByName(o), g = n[1].getChildByName(o), _ = n[2].getChildByName(o), f = n[3].getChildByName(o);
this.vector2List[0].push(cc.v2(h.x, h.y));
this.vector2List[1].push(l);
this.vector2List[2].push(cc.v2(d.x, d.y));
this.vector2List[3].push(u);
this.toParentArray[0].push(v);
this.toParentArray[1].push(g);
this.toParentArray[2].push(_);
this.toParentArray[3].push(f);
}
this.clear();
return !0;
};
e.prototype.allowOutCard = function(e) {
this.outCard = e;
};
e.prototype.setUseSimpleSort = function(e) {
this.UseSimpleSort = !0;
};
e.prototype.tgAuto = function(e) {
if (e.userId == cc.vv.userMgr.userId) if (e.isAuto) {
this.chupaidrag.active = !1;
this.chupaidrag.setPosition(500, 500);
} else this.chupaidrag.active = !0;
};
e.prototype.onLoadAnimationData = function(e) {
var t = cc.vv.gameNetMgr.getLocalIndex(e.seatIndex);
if (0 == t || 2 == t) this.holdsNodeList[t].removeAllChildren(); else if (1 == t || 3 == t) for (var i = 0; i < this.vector2List[t].length; i++) this.vector2List[t][i].active = !1;
var n = {
start: 0
};
n.holds = e.holds;
for (i = 0; i < n.holds.length; i++) {
n.start++;
if (0 == t || 2 == t) {
var a = cc.instantiate(this.mopaiList[t]);
0 == t && this.setCardSprite(a, n.holds[i], 0, e.seatIndex);
a.setPosition(this.vector2List[t][n.start]);
a.parent = this.holdsNodeList[t];
a.active = !0;
} else 1 != t && 3 != t || (this.vector2List[t][n.start].active = !0);
}
};
e.prototype.otherCoverCardSprite = function(e, t) {
2 == t && e.setScale(.6, .6);
var i = cc.vv.mahjongmgr.getCoverSprite(t);
e.getComponent(cc.Sprite).spriteFrame = i;
};
e.prototype.setCoverCardSprite = function(e, t) {
var i = e.getChildByName("item"), n = e.getChildByName("bg");
i.getComponent("Hunan_Item").setCoverSprite(n, t);
n.setScale(1.25, 1.25);
i.active = !1;
e.active = !0;
};
e.prototype.clear = function() {
for (var e = 0; e < 4; e++) {
if (0 == e || 2 == e) this.holdsNodeList[e].removeAllChildren(); else if (1 == e || 3 == e) for (var t = 0; t < this.vector2List[e].length; t++) this.vector2List[e][t].active = !1;
this.holdsNodeList[e].active = !0;
}
this.clearToPai();
};
e.prototype.clearToPai = function() {
for (var e = 0; e < this.toParentArray[0].length; e++) {
this.toParentArray[0][e].removeAllChildren();
this.toParentArray[1][e].removeAllChildren();
this.toParentArray[2][e].removeAllChildren();
this.toParentArray[3][e].removeAllChildren();
}
};
e.prototype.updateShowHolds = function(e) {
cc.vv.MJConfig.updateShowHolds(this, e.seatIndex, e.holds);
1 == this.UseSimpleSort && (this.UseSimpleSort = !1);
};
e.prototype.HoldsToPush = function(e) {
this.topaiArray.length < 3 && this.scheduleOnce(function() {
this.updateHoldsToPush(e);
}, .1);
4 == this.topaiArray.length && this.updateHoldsToPush(e.seatIndex, e.holds);
};
e.prototype.updateHoldsToPush = function(e, t) {
if (e || t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
this.holdsNodeList[i].active = !1;
for (var n = 0; n < this.toParentArray[i].length; n++) this.toParentArray[i][n].removeAllChildren();
var a = {};
if (this.UseSimpleSort) {
a.start = -1;
var s = this.simpleSort(t), c = [];
if (s.length % 3 == 2) {
c.push(s.pop());
a.holds = c.concat(s);
}
} else a = this.holdsSort(t);
for (n = 0; n < a.holds.length; n++) {
a.start++;
var r = cc.instantiate(this.topaiArray[i]);
this.setToPushSprite(r, a.holds[n]);
r.parent = this.toParentArray[i][a.start];
}
if (1 == cc.vv.gameNetMgr.isReplay) {
cc.vv.gameNetMgr.seats[e].holds = a.holds;
}
}
};
e.prototype.setToPushSprite = function(e, t) {
var i = e.getChildByName("item").getComponent("Hunan_Item");
cc.vv.MJConfig.clearNode(i);
i.setOutValueAndColor(t);
cc.vv.MJConfig.setToPushSprite(i);
e.active = !0;
};
e.prototype.updateShowHoldsSync = function(e, t) {
null != cc.vv.gameNetMgr.op && 65535 == cc.vv.gameNetMgr.op.mask && (this.outCard = !0);
this.updateHolds(e, t);
};
e.prototype.setCardSprite = function(e, t, i, n) {
cc.vv.MJConfig.setCardSprite(this, e, t, n);
};
e.prototype.getPlayeData = function(e) {
var t = cc.vv.gameNetMgr.getSeatIndexByID(e);
return cc.vv.gameNetMgr.seats[t];
};
e.prototype.updateHolds = function(e, t) {
var i = cc.vv.gameNetMgr.getLocalIndex(e);
if (0 == i || 2 == i) this.holdsNodeList[i].removeAllChildren(); else if (1 == i || 3 == i) for (var n = 0; n < this.vector2List[i].length; n++) this.vector2List[i][n].active = !1;
var a = {
start: -1,
holds: []
};
if (this.UseSimpleSort) {
a.start = -1;
var s = this.simpleSort(t), c = [];
if (s.length % 3 == 2) {
c.push(s.pop());
a.holds = s.concat(c);
}
} else a = this.holdsSort(t);
if (a.holds.length) for (n = 0; n < a.holds.length; n++) {
a.start++;
if (0 == i || 2 == i) {
var r = cc.instantiate(this.mopaiList[i]);
0 == i && this.setCardSprite(r, a.holds[n], 0, e);
r.setPosition(this.vector2List[i][a.start]);
r.parent = this.holdsNodeList[i];
r.active = !0;
} else 1 != i && 3 != i || (this.vector2List[i][a.start].active = !0);
} else console.log("手牌异常值：" + a.holds.length);
};
e.prototype.holdsSort = function(e) {
if (e && !(e.length < 1)) {
var t = e.slice(0);
return cc.vv.MJConfig.holdsSort(this, t);
}
};
e.prototype.simpleSort = function(e) {
return cc.vv.MJConfig.simpleSort(e);
};
e.prototype.onMJtprefabEvent = function(e) {
this.touchEvent(e);
};
e.prototype.touchEvent = function(n) {
if (n) {
var a = null;
n.on(cc.Node.EventType.TOUCH_START, function(e) {
a = e.getLocationY();
if (!this.touchCardRule()) {
this._touchBegin = cc.p(e.getLocationX(), e.getLocationY());
n.interactable = n.getComponent(cc.Button).interactable;
if (n.interactable) {
n.opacity = 255;
this.chupaidrag.active = !1;
var t = this.chupaidrag.getChildByName("item"), i = n.getChildByName("item");
t.getComponent(cc.Sprite).spriteFrame = i.getComponent(cc.Sprite).spriteFrame;
this.chupaidrag.x = e.getLocationX() - cc.director.getVisibleSize().width / 2;
this.chupaidrag.y = e.getLocationY() - cc.director.getVisibleSize().height / 2;
}
}
}.bind(this));
n.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
if (!this.touchCardRule() && !(cc.p(e.getLocationX(), e.getLocationY()).sub(this._touchBegin).mag() < 20) && n.interactable && !(Math.abs(e.getDeltaX()) + Math.abs(e.getDeltaY()) < 1)) {
this.chupaidrag.active = !0;
n.opacity = 150;
this.chupaidrag.opacity = 255;
this.chupaidrag.scaleX = 1;
this.chupaidrag.scaleY = 1;
this.chupaidrag.x = e.getLocationX() - cc.director.getVisibleSize().width / 2;
this.chupaidrag.y = e.getLocationY() - cc.director.getVisibleSize().height / 2;
}
}.bind(this));
n.on(cc.Node.EventType.TOUCH_END, function(e) {
if (!this.touchCardRule() && n.interactable) {
this.chupaidrag.active = !1;
n.opacity = 255;
if (e.getLocationY() >= a + 100) this.pushOut(n, e.getLocation()); else {
if (null == this.TemporaryCard) {
this.TemporaryCard = e.target;
this.TemporaryCard.y += 30;
return;
}
if (this.TemporaryCard.x != e.target.x || this.TemporaryCard.y != e.target.y) {
this.TemporaryCard.y -= 30;
this.TemporaryCard = e.target;
this.TemporaryCard.y += 30;
} else this.TemporaryCard.y == e.target.y && this.pushOut(n, e.getLocation());
}
}
}.bind(this));
n.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
if (!this.touchCardRule() && n.interactable) {
this.chupaidrag.active = !1;
n.opacity = 255;
e.getLocationY() >= a + 100 ? this.pushOut(n, e.getLocation()) : console.log(e.getLocationY());
e.getLocationY();
}
}.bind(this));
}
};
e.prototype.touchCardRule = function() {
return cc.vv.gameNetMgr.turn != cc.vv.gameNetMgr.seatIndex || 1 == this.outCard;
};
e.prototype.pushOut = function(e, t) {
if (e) {
var i = e.getChildByName("item").getComponent("Hunan_Item");
console.log(i.getID());
cc.vv.MJConfig.pushOut(i, i.getID());
this.chupaidrag.active = !1;
this.TemporaryCard = null;
this.outCard = !0;
}
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
baseOperationMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "16eb0n3w7RLBKNfbjlBW6I0", "baseOperationMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.operNode = null;
e.gangNode = null;
e.btnNode = null;
e.chiNode = null;
e.chiNodeArray = [];
e.chiCardArray = [];
return e;
}
e.prototype.initView = function(e) {
var t = this;
this.operNode = e.getChildByName("chaozuo");
this.gangNode = this.operNode.getChildByName("gang_node");
this.btnNode = this.operNode.getChildByName("btn_node");
this.chiNode = this.operNode.getChildByName("chi_node");
for (var i = [ "btn_123", "btn_zhong", "btn_345" ], n = 0; n < i.length; n++) {
var a = this.chiNode.getChildByName(i[n]);
this.chiNodeArray.push(a);
for (var s = [], c = 0; c < 3; c++) {
var r = "p" + c, o = a.getChildByName(r).getChildByName("item");
s.push(o);
}
this.chiCardArray.push(s);
}
this.operNode.active = !0;
this.gangNode.active = !0;
this.btnNode.active = !0;
this.chiNode.active = !1;
this.chiNodeArray[0].on(cc.Node.EventType.TOUCH_END, function() {
t.onClick_chi("btn_123");
});
this.chiNodeArray[1].on(cc.Node.EventType.TOUCH_END, function() {
t.onClick_chi("btn_zhong");
});
this.chiNodeArray[2].on(cc.Node.EventType.TOUCH_END, function() {
t.onClick_chi("btn_345");
});
};
e.prototype.onClick_chi = function(e) {
cc.vv.audioMgr.playBtnClick();
var t = 0, i = cc.vv.gameNetMgr.op.card;
"btn_345" == e ? t = 1 : "btn_zhong" == e ? t = 2 : "btn_123" == e && (t = 3);
this.chiNode.active = !1;
this.userOpreation(t, i);
};
e.prototype.userOpreation = function(e, t) {
void 0 === t && (t = null);
var i = JSON.parse(cc.vv.msgTemp_Hunan.CS_UserOperation);
i.op_code = e;
i.op_card = t;
console.log("send user_operation :");
console.log(i);
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("user_operation", i);
this.closeBtn();
};
e.prototype.closeBtn = function() {
this.btnNode.removeAllChildren();
};
e.prototype.btnNodeAdd = function(e) {
this.btnNode.addChild(e);
};
e.prototype.setChiNode = function(e) {
this.chiNode.active = e;
};
e.prototype.out = function(e) {
this.closeBtn();
};
e.prototype.onBtn = function(e) {
this.closeBtn();
cc.vv.MJConfig.onActionClick(this, e);
};
e.prototype.updateAction = function(e) {
this.closeBtn();
cc.vv.MJConfig.showUpdateAction(this, e);
};
e.prototype.operation = function(e) {
this.closeBtn();
};
e.prototype.tgAuto = function(e) {
e.userId == cc.vv.userMgr.userId && e.isAuto && this.closeBtn();
};
e.prototype.uerOperation = function(e) {
this.closeBtn();
};
e.prototype.showSea = function(e) {
this.closeBtn();
var n = this;
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_noHaiDil", function(e, t) {
var i = cc.instantiate(t);
n.btnNode.addChild(i);
n.show_wantHaiDil(n.btnNode);
});
};
e.prototype.show_wantHaiDil = function(n) {
cc.loader.loadRes("game/3DMahjong/prefabs/UI/btn_wantHaiDil", function(e, t) {
var i = cc.instantiate(t);
n.addChild(i);
});
};
e.prototype.clear = function() {
this.closeBtn();
};
e.prototype.syncData = function() {
cc.vv.MJConfig.syncOperation(this, cc.vv.gameNetMgr.op);
};
e.prototype.updateShowChiPai = function(e) {
var t = cc.vv.gameNetMgr.op.card;
this.chiNode.active = !0;
this.chiNodeArray[0].active = !1;
this.chiNodeArray[1].active = !1;
this.chiNodeArray[2].active = !1;
for (var i = 0; i < e.length; i++) {
var n = e[i];
if (1 == n) {
(a = this.chiCardArray[2])[0].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t);
a[1].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t + 1);
a[2].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t + 2);
this.chiNodeArray[2].active = !0;
this.chiNodeArray[2].card = t;
} else if (2 == n) {
(a = this.chiCardArray[1])[0].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t - 1);
a[1].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t);
a[2].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t + 1);
this.chiNodeArray[1].active = !0;
this.chiNodeArray[1].card = t;
} else if (3 == n) {
var a;
(a = this.chiCardArray[0])[0].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t - 2);
a[1].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t - 1);
a[2].getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getHandSpriteByID(t);
this.chiNodeArray[0].active = !0;
this.chiNodeArray[0].card = t;
}
}
};
e.prototype.operationGang = function(e, t) {
if (5 == e || 6 == e || 10 == e) {
var i = cc.vv.gameNetMgr.op.index, n = cc.vv.gameNetMgr.seats[i], a = n.items, s = n.holds, c = [];
t && cc.vv.gameNetMgr.turn != cc.vv.gameNetMgr.seatIndex && s.push(t);
for (var r = 0; r < a.length; r++) {
var o = a[r];
if (4 == o[0]) {
s.push(o[3]);
s.push(o[3]);
s.push(o[3]);
}
}
s = s.sort(function(e, t) {
return t - e;
});
var h = [];
for (r = 0; r < s.length; r++) h.push(s[r]);
for (r = 0; r < s.length; r++) for (var l = s[r], d = 0, u = 0; u < h.length; u++) {
var v = h[u];
if (l == v) {
d++;
h.splice(u, 1);
u--;
4 == d && c.push(v);
}
}
}
this.updateShowGang(e, c);
};
e.prototype.updateShowGang = function(s, t) {
var c = this;
if (1 < t.length) {
this.chiNode.active = !1;
this.gangNode.removeAllChildren();
for (var e = function(e) {
var a = t[e];
cc.loader.loadRes("game/3DMahjong/prefabs/Game/MahJong_gang", function(e, t) {
var i = cc.instantiate(t), n = i.getComponent("FCGang");
n.setHandValueAndColor(a);
n.setHandAction(s);
c.gangNode.addChild(i);
});
}, i = 0; i < t.length; i++) e(i);
} else this.userOpreation(s, t[0]);
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
baseReplay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f843f0vs41LArEPjHUD6zjX", "baseReplay");
var a = 0, s = 1, n = 2;
cc.Class({
extends: cc.Component,
properties: {
lb_show: {
default: null,
type: cc.Label
},
btn_label: {
default: null,
type: cc.Label
},
btn_speedLabel: {
default: null,
type: cc.Label
},
btn_speedNode: {
default: null,
type: cc.Node
},
_replayMgr: null,
_Canvas: null,
_playS: n,
_nextPlayTime: 1,
_replay: null,
_playSpeed: 0,
_time: 0,
_endTime: 100,
PlaySpeed: {
get: function() {
return this._playSpeed;
},
type: 0,
tooltip: "BO 放 速度！"
}
},
onLoad: function() {
this.replayMgr = cc.vv.gameNetMgr.replayMgr;
this.initData();
this.initView();
this.initEventHandlers();
},
initEventHandlers: function() {
var t = this;
cc.find("Canvas").on("msg_clock_start", function(e) {
t.btn_speedNode.active = !0;
t.replayMgr.setPlayWall(!1);
t.send_replay_update_holds_folds_items();
});
},
initView: function() {
this._Canvas = cc.find("Canvas");
this.setLabel("停止", "播　　放");
this.btn_speedNode.active = !1;
this._playS = n;
},
initData: function() {
this._replayMgr = cc.vv.gameNetMgr.replayData;
cc.vv.gameNetMgr.replayData = null;
var e = JSON.parse(this._replayMgr[0].base_info).poker;
cc.vv.gameNetMgr.mahjongTotal = e.length;
this._playSpeed = 1;
var t = JSON.parse(this._replayMgr[0].actions), i = JSON.parse(this._replayMgr[0].folds);
this._replayMgr.holds = JSON.parse(this._replayMgr[0].holds);
this._replayMgr.actions = [];
for (var n = 0; n < t.length; n++) {
var a = {};
a.actions = t[n];
a.folds = i[n];
this._replayMgr.actions.push(a);
}
this._currentIndex = 0;
this._lastAction = null;
this.initHolds(e);
var s = cc.vv.gameNetMgr.startHoldLength * cc.vv.gameNetMgr.seats.length;
this.setWallData(e.length, s, 0);
},
initHolds: function(e) {
for (var t = cc.vv.gameNetMgr.startHoldLength, i = 0, n = 0; i < cc.vv.gameNetMgr.seats.length; i++) {
var a = cc.vv.gameNetMgr.seats[i];
a.folds = [];
a.holds = [];
a.items = [];
for (var s = 0; s < t; s++) {
a.holds.push(e[n]);
n++;
}
}
},
update: function(e) {
if (this._playS == s) {
this._time += this._playSpeed;
if (this._time > this._endTime) {
if (this._currentIndex >= this._replayMgr.actions.length) {
this._playS = a;
return -1;
}
var t = this._replayMgr.actions[this._currentIndex];
this._currentIndex++;
if (null == (this._lastAction = t)) return -1;
var i = this._currentIndex, n = this._replayMgr.actions[i];
this._time = this.updateReplay(t, n);
}
}
},
updateReplay: function(e, t) {
var i = t, n = e.actions, a = n[0], s = n[1], c = n[2], r = (n[3], cc.vv.gameNetMgr.seats[a]), o = 0;
switch (s) {
case 1:
r.holds.push(c);
this.send_replay_wall();
break;

case 2:
this.setOutCard(c, a);
this.removeHolds(a, c);
if (i) {
1 == i.actions[1] && r.folds.push(c);
}
break;

case 3:
r.holds.push(c);
break;

case 4:
var h = c + (o = 1), l = c + 2;
r.items.push([ o, h, 0, c ]);
this.removeHolds(a, l);
this.removeHolds(a, h);
break;

case 5:
o = 2;
h = c - 1, l = c + 1;
r.items.push([ o, c, 0, c ]);
this.removeHolds(a, l);
this.removeHolds(a, h);
break;

case 6:
o = 3;
l = c - 2, h = c - 1;
r.items.push([ o, h, 0, c ]);
this.removeHolds(a, l);
this.removeHolds(a, h);
break;

case 7:
o = 4;
r.items.push([ o, c, 0, c ]);
this.removeHolds(a, c);
this.removeHolds(a, c);
break;

case 8:
o = 6;
r.items.push([ o, c, 0, c, 2 ]);
this.removeHolds(a, c);
this.removeHolds(a, c);
this.removeHolds(a, c);
this.removeHolds(a, c);
this.send_replay_wall(!1);
break;

case 9:
o = 6;
for (var d = 0; d < r.items.length; d++) if (r.items[d][1] == c) {
r.items.splice(d, 1);
break;
}
r.items.push([ o, c, 0, c, 3 ]);
this.removeHolds(a, c);
this.send_replay_wall(!1);
break;

case 10:
o = 6;
var u = [];
u.push(c);
u.push(c);
u.push(c);
u.push(c);
r.items.push([ o, c, 0, c, 1 ]);
this.tempRemove(u, c, a);
this.send_replay_wall(!1);
break;

case 11:
case 12:
o = 8;
cc.vv.gameNetMgr.getLocalIndex(a);
break;

case 13:
cc.vv.gameNetMgr.getLocalIndex(a);
break;

case 14:
o = 10;
r.items.push([ o, c, 0, c, 2 ]);
this.removeHolds(a, c);
this.removeHolds(a, c);
this.removeHolds(a, c);
}
0 < o && this.setEffect(o, a);
this.send_replay_update_holds_folds_items();
return 0;
},
setOutCard: function(e, t) {
var i = {};
i.seatIndex = t;
i.card = e;
cc.vv.Event.emit("mj_out_push", i);
},
removeHolds: function(e, t) {
for (var i = cc.vv.gameNetMgr.seats[e], n = i.holds, a = 0; a < n.length; a++) if (n[a] == t) {
i.holds.splice(a, 1);
break;
}
},
setEffect: function(e, t) {
var i = {};
i.op_code = e;
i.seat_index = t;
this.replayMgr.GAMEBase.opReplay(i);
},
setWallData: function(e, t, i) {
cc.vv.gameNetMgr.wallData.total = e;
cc.vv.gameNetMgr.wallData.head = t;
cc.vv.gameNetMgr.wallData.tail = i;
},
setPlaySpeed: function() {
this._playS == s && this._playSpeed++;
5 < this._playSpeed && (this._playSpeed = 1);
this.btn_speedLabel.string = "快进 （×" + this._playSpeed + "）";
},
send_replay_begin: function() {
this.replayMgr.begin();
this.replayMgr.throw(cc.vv.gameNetMgr.wallData);
cc.vv.Event.emit("mj_turn_push");
},
send_replay_update_holds_folds_items: function() {
for (var e = cc.vv.gameNetMgr.seats, t = 0; t < e.length; t++) {
var i = e[t], n = {};
n.seatIndex = i.seatindex;
n.holds = i.holds;
n.userId = i.userid;
this.replayMgr.down(n);
var a = {};
a.seatIndex = i.seatindex;
a.folds = i.folds;
a.userId = i.userid;
this.replayMgr.folds(a);
var s = {};
s.seatIndex = i.seatindex;
s.items = i.items;
s.userId = i.userid;
this.replayMgr.items(s);
}
},
send_replay_wall: function() {
!(0 < arguments.length && void 0 !== arguments[0]) || arguments[0] ? cc.vv.gameNetMgr.wallData.head += 1 : cc.vv.gameNetMgr.wallData.tail += 1;
this.replayMgr.wall(cc.vv.gameNetMgr.wallData);
},
onBtnBackHall: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.replayMgr.clear();
cc.vv.gameNetMgr.resetGame();
this.node.destroy();
cc.director.loadScene("hall");
},
onBtnPlay: function() {
switch (this._playS) {
case a:
this._playS = s;
this.setLabel("播放中", "暂　　停");
break;

case s:
this._playS = a;
this.setLabel("已暂停", "播　　放");
break;

case n:
this.setLabel("播放中", "暂　　停");
this.send_replay_begin();
this._playS = s;
}
},
setLabel: function(e, t) {
this.lb_show.string = e;
this.btn_label.string = t;
},
tempRemove: function(e, t, i) {
for (var n = 0; n < e.length; n++) e[n] == t && this.removeHolds(i, e[n]);
},
onDoReplayActionOver: function() {},
onDestroy: function() {
this.replayMgr = null;
}
});
cc._RF.pop();
}, {} ],
baseWallMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0804c3M3ztNeZuD6C6QyDZD", "baseWallMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, s = (n.property, function(t) {
__extends(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.walls = [];
e.wallsNodeList = [];
e.headWallLArray = [];
e.tailWallLArray = [];
e.headNextIndex = 0;
return e;
}
e.prototype.begin = function(e, t) {
var i = cc.vv.gameNetMgr.mahjongTotal;
if (i < 0) console.error("麻将总数不正确 mahjongTotal " + i); else {
for (var n = [ "myself", "right", "up", "left" ], a = i / 2 / 4, s = 0, c = 0, r = this.isDot(a), o = 0; o < n.length; o++) {
var h = e.getChildByName(n[o]).getChildByName("wall");
this.wallsNodeList.push(h);
}
var l = this, d = function(e, t, i) {
void 0 === i && (i = null);
for (var n = l.wallsNodeList[e], a = [], s = 0; s < n.children.length; s++) if (s < (null == i ? t : 0 == e || 2 == e ? t : i)) {
var c = "p" + (s + 1), r = n.getChildByName(c);
r.active = !0;
var o = r.getChildByName("pp1");
o.active = !0;
var h = [ o, r ];
a.push(h);
} else {
c = "p" + (s + 1);
n.getChildByName(c).active = !1;
}
l.walls.push(a);
};
if (r) {
s = Math.floor(a);
c = Math.floor(a);
c += 1;
for (var u = 0; u < 4; u++) d(u, s, c);
} else for (u = 0; u < 4; u++) d(u, a);
}
};
e.prototype.syncData = function() {
this.syncInitWall(cc.vv.gameNetMgr.wallData);
};
e.prototype.syncInitWall = function(e) {
if (e) {
this.onThrowDice(e);
this.WallSurplus(e);
}
};
e.prototype.isDot = function(e) {
return -1 != e.toString().indexOf(".");
};
e.prototype.throw = function(e, t, i) {
this.onThrowDice(i);
return this.wallAnimation(e, t, i, cc.vv.gameNetMgr.button, cc.vv.gameNetMgr.seats, .1);
};
e.prototype.onThrowDice = function(e) {
for (var t = e.dice, i = e.dice, n = cc.vv.gameNetMgr.button, a = t + i, s = t <= i ? t : i, c = cc.vv.gameNetMgr.seats, r = n, o = n; o < a; o++) ++r > c.length && (r = 0);
var h = cc.vv.gameNetMgr.getLocalIndex(r);
this.headWallLArray = [];
for (o = 0; o < 4; o++) for (var l = h - o, d = l < 0 ? l + 4 : l, u = this.walls[d], v = 0; v < u.length; v++) if (!(l == h && v < s)) for (var g = u[v], _ = 0; _ < g.length; _++) this.headWallLArray.push(g[_]);
if (0 < s) {
var f = this.walls[h];
for (o = 0; o < s; o++) for (g = f[o], _ = 0; _ < g.length; _++) this.headWallLArray.push(g[_]);
}
for (o = cc.vv.gameNetMgr.wallData.total - 1; 0 < o; o -= 2) {
var p = o, m = o;
p--;
this.tailWallLArray.push(this.headWallLArray[p]);
this.tailWallLArray.push(this.headWallLArray[m]);
}
};
e.prototype.wallAnimation = function(i, e, t, n, a, s) {
void 0 === s && (s = 0);
var c = this;
this.headNextIndex = 0;
for (var r = a.length, o = 0, h = 0, l = -1, d = 0; d < 4; d++) {
l++;
for (var u = n; u < n + r; u++) {
h = o * s;
o++;
var v = {
idex: 0,
idx: 0,
len: 0
};
v.idex = l;
v.idx = u;
v.len = r;
if (0 == s) this.showMj(i, v); else {
e.runAction(cc.sequence(cc.delayTime(h), cc.callFunc(function(e, t) {
c.showMj(i, t);
}, null, v)));
}
}
}
e.runAction(cc.sequence(cc.delayTime(h), cc.callFunc(function() {
if (cc.vv.gameNetMgr.isReplay) {
c.WallSurplus(cc.vv.gameNetMgr.wallData);
cc.vv.Event.emit("msg_clock_start");
} else c.actionAfter(i);
})));
return !0;
};
e.prototype.showMj = function(e, t) {
var i;
i = 3 <= t.idex ? 1 : 4;
for (var n = this.headNextIndex + i, a = this.headNextIndex; a < this.headWallLArray.length && !(n <= a); a++) this.headWallLArray[a].active = !1;
this.headNextIndex = n;
cc.vv.Event.emit("show_lbPainum", cc.vv.gameNetMgr.mahjongTotal - this.headNextIndex);
for (var s = t.idx > t.len - 1 ? t.idx - t.len : t.idx, c = cc.vv.gameNetMgr.seats[s].holds, r = [], o = 4 * t.idex, h = 0; h < o; h++) r.push(c[h]);
var l = {};
l.seatIndex = s;
l.holds = r;
e.onLoadAnimationData(l);
};
e.prototype.WallSurplus = function(e) {
if (e) {
0 < e.head && this.headFeel(e.head);
0 < e.tail && this.tailFeel(e.tail);
}
};
e.prototype.headFeel = function(e) {
for (var t = 0; t < this.headWallLArray.length && e != t; t++) this.headWallLArray[t].active = !1;
};
e.prototype.tailFeel = function(e) {
e -= 1;
for (var t = 0; t < this.tailWallLArray.length && !(e < t); t++) this.tailWallLArray[t].active = !1;
};
e.prototype.actionAfter = function(e) {
cc.vv.Event.emit("msg_clock_start");
var t = cc.vv.gameNetMgr.wallData, i = {
total: 0,
head: 0,
tail: 0
};
i.total = t.total;
i.head = t.head + 1;
i.tail = t.tail;
this.WallSurplus(i);
for (var n = cc.vv.gameNetMgr.seats, a = 0; a < n.length; a++) {
var s = n[a], c = {};
c.seatIndex = s.seatindex;
c.holds = s.holds;
e.updateShowHolds(c);
}
cc.vv.Event.emit("mj_wall_after_push", i);
};
e.prototype.wall = function(e) {
this.WallSurplus(e);
};
e.prototype.clear = function() {
for (var e = 0; e < this.headWallLArray.length; e++) this.headWallLArray[e].active = !1;
this.walls = [];
this.tailWallLArray = [];
this.headNextIndex = 0;
};
return e = __decorate([ a ], e);
}(cc.Component));
i.default = s;
cc._RF.pop();
}, {} ],
chatMsgItem: [ function(l, e, t) {
"use strict";
cc._RF.push(e, "9a2e2ZXy+ZBEIr5vlN11eps", "chatMsgItem");
cc.Class({
extends: cc.Component,
properties: {
failSprite: cc.Node,
quanSprite: cc.Node,
headSpr: cc.Node,
userName: cc.Label,
timeLabel: cc.Label,
yuyinPao: cc.Node,
_voiseMsg: null,
hong: cc.Node,
yuyinTime: cc.Node
},
onLoad: function() {
this.initMsgHandler();
},
start: function() {},
onBtnClickPlayVoise: function() {
if (null != this._voiseMsg) {
var h = this;
if (this._msg) this.playVoice(); else {
cc.vv.http.sendRequest("/get_voice", {
voice_msg_id: this._voiseMsg.chat_msg
}, function(e) {
if (e.errcode) console.log("语音下载失败，错误码", e.errcode); else {
for (var t = l("buffer").Buffer, i = e.voice_msg; -1 != i.indexOf("."); ) i = i.replace(".", "+");
var n = new t(i, "base64").toString();
h._msg = n;
h.playVoice();
var a = cc.sys.localStorage.getItem("voiceReadArr");
if (a = JSON.parse(a)) {
for (var s = !1, c = 0; c < a.length; c++) if (a[c] == h._voiseMsg.chat_id) {
s = !0;
break;
}
if (0 == s) {
a.push(h._voiseMsg.chat_id);
var r = JSON.stringify(a);
cc.sys.localStorage.setItem("voiceReadArr", r);
}
} else {
var o = [];
o.push(h._voiseMsg.chat_id);
r = JSON.stringify(o);
cc.sys.localStorage.setItem("voiceReadArr", r);
}
h.setReadStatu();
}
}, cc.vv.userMgr.voice_chat_addr);
}
}
},
playVoice: function() {
var e = this._msg, t = "voicemsg.amr";
cc.vv.voiceMgr.writeVoice(t, e);
cc.vv.voiceMgr.play(t);
var i = this._voiseMsg.time, n = new Date(i).getSeconds(), a = cc.fadeOut(.2), s = cc.fadeIn(.2), c = cc.repeat(cc.sequence(a, s), parseInt(n / .4));
this.yuyinPao.runAction(c);
this.yuyinPao.runAction(cc.sequence(cc.delayTime(n + .3), cc.callFunc(function(e) {
cc.vv.audioMgr.resumeAll();
})));
},
setVoiceMsg: function(e) {
this._voiseMsg = e;
},
setReadStatu: function() {
var e = cc.sys.localStorage.getItem("voiceReadArr");
if (e = JSON.parse(e)) for (var t = 0; t < e.length; t++) if (e[t] == this._voiseMsg.chat_id) {
this.hong.active = !1;
break;
}
},
setUserInfo: function(e) {
e.user_id == cc.vv.userMgr.userId ? this.initAtavar(cc.vv.userMgr.headimg) : this.initAtavar(e.headimg);
this.userName.string = e.user_name;
},
initAtavar: function(e) {
if (null != e) {
this.headSpr.getComponent("Atavar").load(e);
}
},
showSendTime: function(e) {
this.timeLabel.string = this.dateFormat(e);
},
showVoiceTime: function(e) {
this.hong.active = !0;
this.yuyinTime.active = !0;
e = new Date(e);
this.yuyinTime.getComponent("cc.Label").string = e.getSeconds();
},
dateFormat: function(e) {
var t = "{0}月{1}日 {2}:{3}", i = ((e = new Date(1e3 * e)).getFullYear(), e.getMonth() + 1);
i = 10 <= i ? i : "0" + i;
var n = e.getDate();
n = 10 <= n ? n : "0" + n;
var a = e.getHours();
a = 10 <= a ? a : "0" + a;
var s = e.getMinutes();
s = 10 <= s ? s : "0" + s;
return t = t.format(i, n, a, s);
},
update: function(e) {
this.quanSprite.rotation = this.quanSprite.rotation + 45 * e;
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_voice", this.onMsgGetVoice.bind(this));
},
onMsgGetVoice: function(e) {
if ((e = e.detail).errcode) console.log("语音下载失败，错误码", e.errcode); else {
for (var t = l("buffer").Buffer, i = e.voice_msg; -1 != i.indexOf("."); ) i = i.replace(".", "+");
var n = new t(i, "base64").toString();
this._msg = n;
this.playVoice();
var a = cc.sys.localStorage.getItem("voiceReadArr");
if (a = JSON.parse(a)) {
for (var s = !1, c = 0; c < a.length; c++) if (a[c] == this._voiseMsg.chat_id) {
s = !0;
break;
}
if (0 == s) {
a.push(this._voiseMsg.chat_id);
var r = JSON.stringify(a);
cc.sys.localStorage.setItem("voiceReadArr", r);
}
} else {
var o = [];
o.push(this._voiseMsg.chat_id);
r = JSON.stringify(o);
cc.sys.localStorage.setItem("voiceReadArr", r);
}
this.setReadStatu();
}
},
onDestroy: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_voice");
}
});
cc._RF.pop();
}, {
buffer: 47
} ],
chipsAtlasUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ec702gWlhtGx6rm8fuD+uGk", "chipsAtlasUtils");
cc.Class({
extends: cc.Component,
properties: {
chipsAtlas: {
default: null,
type: cc.SpriteAtlas
}
},
onLoad: function() {
cc.vv.chipsAtlasUtils = this;
},
getSpriteFrame: function(e) {
return this.chipsAtlas.getSpriteFrame(e);
}
});
cc._RF.pop();
}, {} ],
clubEmail: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1447aqijMBPvZ0u2ttxFOb7", "clubEmail");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {}
});
cc._RF.pop();
}, {} ],
clubEnter: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "70846lQlYdHEIgs85lvmuV+", "clubEnter");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this._radioArr = [];
cc.vv.UILoader.retainScene(this.node);
this.initMsgHandler();
},
start: function() {
var e = this.node.getChildByName("btnTog").getChildByName("toggle1").getComponent(cc.Toggle);
this._radioArr.push(e);
var t = this.node.getChildByName("btnTog").getChildByName("toggle2").getComponent(cc.Toggle);
this._radioArr.push(t);
this.node.getChildByName("kuangbg").getChildByName("unionEdit");
this.union_name1 = this.node.getChildByName("btnTog").getChildByName("toggle1").getChildByName("checkmark").getChildByName("unionEdit").getComponent(cc.EditBox);
this.union_name2 = this.node.getChildByName("btnTog").getChildByName("toggle2").getChildByName("checkmark").getChildByName("unionEdit").getComponent(cc.EditBox);
cc.vv.wc.hide();
},
onBtnBackClick: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
onBtnSure: function() {
var e = "";
if (this._radioArr[0].isChecked && "" == this.union_name1.string) cc.vv.alert.show(" ", "请输入俱乐部名称"); else {
this._radioArr[0].isChecked && "" != this.union_name1.string && (e = this.union_name1.string);
if (this._radioArr[1].isChecked && "" == this.union_name2.string) cc.vv.alert.show("", "请输入俱乐部ID"); else {
this._radioArr[1].isChecked && "" != this.union_name2.string && (e = this.union_name2.string);
var t = {
account: cc.vv.userMgr.account,
union_name: e
}, i = {
account: cc.vv.userMgr.account,
unionid: e
};
if (this._radioArr[0].isChecked) {
cc.vv.wc.show("正在创建俱乐部");
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_union", t);
} else this._radioArr[1].isChecked && cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("join_union", i);
}
}
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("create_union", this.onMsgCreateUnion.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("join_union", this.onMsgJoinUnion.bind(this));
},
onMsgCreateUnion: function(e) {
e = e.detail;
var t = this.node.parent, i = this;
if (0 !== e.errcode) {
cc.vv.wc.hide();
var n = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", n);
} else {
console.log("创建俱乐部", e);
cc.vv.userMgr.update_unions(function(e) {
cc.vv.UILoader.loadRes("club/profabs/clubMain", cc.Prefab, function(e) {
cc.vv.wc.hide();
cc.vv.UILoader.destroy(i.node);
cc.vv.UILoader.instantiate(e, t, function(e) {});
});
});
}
},
onMsgJoinUnion: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
console.log("加入俱乐部", e);
cc.vv.alert.show(" ", "申请成功,等待对方同意");
}
},
onDestroy: function() {
cc.vv.netMgr.hallIEventDispatcher.off("create_union");
cc.vv.netMgr.hallIEventDispatcher.off("join_union");
}
});
cc._RF.pop();
}, {} ],
clubMain: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "9e55eAqT9tInJ4WsrWcbKGQ", "clubMain");
cc.Class({
extends: cc.Component,
properties: {
alert: {
default: null,
type: cc.Prefab
},
clubNameItem: {
default: null,
type: cc.Prefab
},
club_qun_item: {
default: null,
type: cc.Prefab
},
club_room_item: {
default: null,
type: cc.Prefab
},
club_mail: {
default: null,
type: cc.Prefab
},
club_friend: {
default: null,
type: cc.Prefab
},
club_setting: {
default: null,
type: cc.Prefab
},
club_ChangeName: {
default: null,
type: cc.Prefab
},
club_selectGame: {
default: null,
type: cc.Prefab
},
WaitingConnection: {
default: null,
type: cc.Prefab
},
clubChatPre: cc.Prefab,
clubAutoPre: cc.Prefab,
deleteRoomBtn: cc.Node,
_clubNameList: [],
_clubItem: [],
_nowClubID: 0,
_nowCreator: 0,
_clubChatMsg: [],
_deleteRoomStatu: !1,
menuContent: {
default: null,
type: cc.Node
}
},
onLoad: function() {
this.initMsgHandler();
this._dataEventHandler = this.node;
this._nowClubName = this.node.getChildByName("top").getChildByName("name").getComponent(cc.Label);
this._nowClubName.string = cc.vv.userMgr.unions[0].union_name + "(ID:" + cc.vv.userMgr.unions[0].union_id + ")";
this._nowClubID = cc.vv.userMgr.nowClubID = cc.vv.userMgr.unions[0].union_id;
this._nowCreator = cc.vv.userMgr.unions[0].creator;
this.bottomClubMember = this.node.getChildByName("main").getChildByName("bottom").getChildByName("members").getComponent(cc.Label);
this.chatRedNode = this.node.getChildByName("top_right").getChildByName("btn_chat").getChildByName("redTip");
this.mailTip = this.node.getChildByName("top_right").getChildByName("btn_mes").getChildByName("redTip");
this.initClubList();
var t = this;
this.node.on("click_change_club", function(e) {
t.ChangeClub(e.detail);
});
this.node.on("update_unions", function(e) {
t.update_unions(e);
});
this.node.on("no_mail", function(e) {
t.getApply(e.detail);
});
this.node.on("close_mail_node", function(e) {
t.openClubMail();
});
this.node.on("close_setting_node", function(e) {
t.openClubSetting();
});
this.node.on("close_friend_node", function(e) {
t.openClubFriend();
});
this.node.on("no_delete", function(e) {
t.noDeleteRoom();
});
this.adaptScreen();
cc.vv.userMgr.inClub = !0;
this.timer = 0;
},
start: function() {
this.node.addChild(cc.instantiate(this.club_mail), 50);
this.node.addChild(cc.instantiate(this.club_friend), 50);
this.node.addChild(cc.instantiate(this.club_setting), 50);
this.node.addChild(cc.instantiate(this.club_ChangeName), 50);
this.node.addChild(cc.instantiate(this.clubChatPre), 50);
this.node.addChild(cc.instantiate(this.clubAutoPre));
cc.vv.wc.hide();
},
adaptScreen: function() {
var e = cc.view.getFrameSize(), t = 1440 * e.height / 720, i = e.width / t;
cc.find("Canvas/clubMain/main/bottom").setScale(1 * i);
},
initEventHandlers: function() {
var t = this;
if (cc.vv.gameNetMgr) {
cc.vv.gameNetMgr.dataEventHandler = cc.find("Canvas");
cc.vv.gameNetMgr.chatEventHandle = t.node;
}
this.node.on("get_chat_msg", function(e) {
cc.log("get_chat_msg", e);
t.dealChatMsg(e);
});
this.node.on("duanxian", function(e) {
cc.log("duanxian", e);
cc.vv.clubChat.dealDisConnect();
});
this.node.on("get_history_chat", function(e) {
cc.log("get_history_chat", e);
t.dealHistoryChatMsg(e);
});
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
initClubList: function() {
this.menuContent.removeAllChildren();
this._clubItem = [];
this.getApply(this._nowClubID);
for (var e = 0; e < cc.vv.userMgr.unions.length; e++) this.addOneClubMenu(cc.vv.userMgr.unions[e], this.menuContent);
},
addOneClubMenu: function(e, t) {
var i = t.getComponent("cc.ToggleGroup"), n = e, a = cc.instantiate(this.club_qun_item);
this._clubItem.push(a);
var s = a.getComponent("club_qun_item"), c = !1;
if (this._nowClubID == n.union_id) {
e.creator != cc.vv.userMgr.userId ? this.deleteRoomBtn.active = !1 : this.deleteRoomBtn.active = !0;
c = !0;
}
var r = {
unionData: n,
toggleG: i,
isCheck: c
};
s.init(r);
t.addChild(a);
this.getUnionRoom(e.union_id);
this.getmumber(e.union_id);
},
initRoomList: function() {
var e = this.node.getChildByName("main").getChildByName("center").getChildByName("roomsScrollView").getChildByName("view").getChildByName("content");
e.removeAllChildren();
for (var t = 0; t < cc.vv.userMgr.unions.length; t++) if (cc.vv.userMgr.unions[t].union_id == this._nowClubID) {
for (var i = cc.vv.userMgr.unions[t], n = 0; n < i.rooms.length; n++) {
var a = cc.instantiate(this.club_room_item), s = a.getComponent("club_room_item");
s.index = n + 1;
var c = i.rooms[n];
c.delRoomStatu = this._deleteRoomStatu;
s.init(c);
e.addChild(a);
}
var r = this.node.getChildByName("main").getChildByName("bottom").getChildByName("btn_creatroom").getChildByName("tip_create");
i.rooms.length ? r.active = !1 : r.active = !0;
}
},
ChangeClub: function(e) {
cc.log("当前俱乐部", e);
this._nowClubID = cc.vv.userMgr.nowClubID = e;
for (var t = 0; t < cc.vv.userMgr.unions.length; t++) if (cc.vv.userMgr.unions[t].union_id == this._nowClubID) {
cc.vv.userMgr.unions[t].creator != cc.vv.userMgr.userId ? this.deleteRoomBtn.active = !1 : this.deleteRoomBtn.active = !0;
this._nowClubName.string = cc.vv.userMgr.unions[t].union_name + "(ID:" + cc.vv.userMgr.unions[t].union_id + ")";
this._nowCreator = cc.vv.userMgr.unions[t].creator;
cc.vv.userMgr.unions[t].members ? this.bottomClubMember.string = "俱乐部成员(" + cc.vv.userMgr.unions[t].members.length + ")" : this.bottomClubMember.string = "俱乐部成员(0)";
this.getApply(e);
}
var i = {
account: cc.vv.userMgr.account,
unionid: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_union_rooms", i);
},
getUnionRoom: function(e) {
cc.log("当前俱乐部", e);
var t = this.getClubItemByUnionid(e).getChildByName("lb_roomNum").getComponent("cc.Label");
cc.vv.userMgr.unions[i].rooms ? t.string = cc.vv.userMgr.unions[i].rooms.length : t.string = 0;
this._nowClubID;
var n = {
account: cc.vv.userMgr.account,
unionid: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_union_rooms", n);
},
getmumber: function(e) {
cc.log("当前俱乐部", e);
var t = {
account: cc.vv.userMgr.account,
unionid: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_members", t);
},
getApply: function(e) {
var t = {
account: cc.vv.userMgr.account,
unionid: e
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_applys", t);
},
getClubItemByUnionid: function(e) {
for (var t = 0; t < cc.vv.userMgr.unions.length; t++) {
if (e == this._clubItem[t].getComponent("club_qun_item").returnClubid()) return this._clubItem[t];
}
},
onBtnHighDefend: function(e, t) {
this.highDefendNode = this.node.getChildByName("main").getChildByName("bottom").getChildByName("addframe1");
var i = this.node.getChildByName("main").getChildByName("bottom").getChildByName("addframe2");
if (1 == t) if (this._nowCreator == cc.vv.userMgr.userId) {
this.highDefendNode.active = !1;
i.active = !0;
} else {
i.active = !1;
this.highDefendNode.active = !0;
} else if (2 == t) {
this.highDefendNode.active = !1;
i.active = !1;
}
},
onBtnDeleteRoom: function(e, t) {
for (var i = this.node.getChildByName("main").getChildByName("center").getChildByName("roomsScrollView").getChildByName("view").getChildByName("content").children, n = 0; n < i.length; n++) {
i[n].getChildByName("maskBtn").active = !0;
}
this._deleteRoomStatu = !0;
},
noDeleteRoom: function() {
for (var e = this.node.getChildByName("main").getChildByName("center").getChildByName("roomsScrollView").getChildByName("view").getChildByName("content").children, t = 0; t < e.length; t++) {
e[t].getChildByName("maskBtn").active = !1;
}
this._deleteRoomStatu = !1;
},
onBtnCreatRoom: function(e, t) {
var i = this, n = this.node.getChildByName("main").getChildByName("bottom").getChildByName("addframe1"), a = this.node.getChildByName("main").getChildByName("bottom").getChildByName("addframe2");
cc.vv.userMgr.isHighDefend = 0;
1 == t && (cc.vv.userMgr.isHighDefend = 1);
if (2 != t) if (3 != t) {
cc.vv.userMgr.isClubRoom = !0;
cc.vv.UILoader.loadRes("hall/prefabs/SelectGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, i.node.parent, function(e) {
e.getComponent("SelectGame").isPrefabMode = !0;
});
});
n.active = !1;
a.active = !1;
} else {
this.openAutoCreate();
n.active = !1;
a.active = !1;
} else {
n.active = !1;
a.active = !1;
}
},
onBtnOpenCreatClub: function(e, t) {
var i = this.node.getChildByName("left").getChildByName("center").getChildByName("list_club"), n = this.node.getChildByName("left").getChildByName("center").getChildByName("creat_club"), a = this.node.getChildByName("left").getChildByName("center").getChildByName("addclub");
this.node.getChildByName("left").getChildByName("addframe").active = !1;
if (1 == t) {
i.active = !1;
n.active = !0;
a.active = !1;
} else if (2 == t) {
i.active = !1;
n.active = !1;
a.active = !0;
} else if (3 == t) {
i.active = !0;
n.active = !1;
a.active = !1;
} else if (4 == t) {
this.node.getChildByName("left").getChildByName("addframe").active = !0;
} else if (5 == t) {
this.node.getChildByName("left").getChildByName("addframe").active = !1;
}
},
onBtnCreatClub: function() {
cc.vv.wc.show("正在创建俱乐部");
var e = this.node.getChildByName("left").getChildByName("center").getChildByName("creat_club").getChildByName("kuangbg").getChildByName("unionEdit").getComponent(cc.EditBox);
if ("" != e.string) {
var t = e.string, i = {
account: cc.vv.userMgr.account,
union_name: t
};
console.log(i);
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("create_union", i);
} else cc.vv.alert.show("", "请输入俱乐部名称");
},
onBtnAddClub: function() {
var e = this.node.getChildByName("left").getChildByName("center").getChildByName("addclub").getChildByName("kuangbg").getChildByName("unionEdit").getComponent(cc.EditBox);
"" == e.string && cc.vv.alert.show("", "请输入俱乐ID");
var t = e.string, i = {
account: cc.vv.userMgr.account,
unionid: t
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("join_union", i);
},
openClubMail: function() {
cc.vv.audioMgr.playBtnClick();
if (1 == cc.vv.clubMail.node.active) cc.vv.clubMail.closeNode(); else {
cc.vv.clubMail.openNode(this._nowClubID, this._nowCreator);
cc.vv.clubFriend.closeNode();
cc.vv.clubSetting.closeNode();
}
},
openAutoCreate: function() {
cc.vv.audioMgr.playBtnClick();
if (1 == cc.vv.clubAutoPre.node.active) cc.vv.clubAutoPre.closeNode(); else {
for (var e = {}, t = 0; t < cc.vv.userMgr.unions.length; t++) if (cc.vv.userMgr.unions[t].union_id == this._nowClubID) {
e.create_conf = cc.vv.userMgr.unions[t].create_conf;
e.auto_create = cc.vv.userMgr.unions[t].auto_create;
e.auto_high_defend = cc.vv.userMgr.unions[t].auto_high_defend;
break;
}
cc.vv.clubAutoPre.openNode(this._nowClubID, this._nowCreator, e);
cc.vv.clubFriend.closeNode();
cc.vv.clubSetting.closeNode();
cc.vv.clubMail.closeNode();
cc.vv.clubChat.closeNode();
}
},
openClubFriend: function() {
cc.vv.audioMgr.playBtnClick();
if (1 == cc.vv.clubFriend.node.active) cc.vv.clubFriend.closeNode(); else {
cc.vv.clubFriend.openNode(this._nowClubID, this._nowCreator);
cc.vv.clubMail.closeNode();
cc.vv.clubSetting.closeNode();
}
},
openClubSetting: function() {
cc.vv.audioMgr.playBtnClick();
if (1 == cc.vv.clubSetting.node.active) cc.vv.clubSetting.closeNode(); else {
cc.vv.clubSetting.openNode(this._nowClubID, this._nowCreator);
cc.vv.clubMail.closeNode();
cc.vv.clubFriend.closeNode();
}
},
openClubChat: function() {
cc.vv.audioMgr.playBtnClick();
if (1 == cc.vv.clubChat.node.active) cc.vv.clubChat.closeNode(); else {
cc.vv.clubChat.openNode(this._nowClubID, this._nowCreator);
cc.vv.clubChat.init();
cc.vv.clubMail.closeNode();
cc.vv.clubFriend.closeNode();
cc.vv.clubSetting.closeNode();
console.log(this.xx);
for (var e = 0; e < this._clubChatMsg.length; e++) if (this._clubChatMsg[e].union_id == this._nowClubID) for (var t = 0; t < this._clubChatMsg[e].union_mess.length; ) {
cc.log(this._clubChatMsg[e].union_mess[t]);
cc.vv.clubChat.dealGetChatMsg(this._clubChatMsg[e].union_mess[t], -1, !0);
t++;
}
this.dealWatchChat();
this.checkChatIsWatch();
}
},
update_unions: function(e) {
var t = this;
e.detail && (t._deleteRoomStatu = e.detail.delRoomStatu);
cc.vv.userMgr.update_unions(function(e) {
cc.vv.userMgr.unions.length ? t.initClubList() : cc.vv.UILoader.destroy(t.node);
});
},
dealChatMsg: function(e) {
e.detail.user_id == cc.vv.userMgr.userId ? e.detail.isWatch = !0 : e.detail.isWatch = !1;
for (var t = !1, i = 0; i < this._clubChatMsg.length; i++) if (this._clubChatMsg[i].union_id == e.detail.unionid) {
this._clubChatMsg[i].union_mess.splice(0, 0, e.detail);
t = !0;
}
if (!t) {
var n = [];
n.push(e.detail);
var a = {
union_id: e.detail.unionid,
union_mess: n
};
this._clubChatMsg.push(a);
}
if (1 == cc.vv.clubChat.node.active) {
this.dealWatchChat();
cc.vv.clubChat.dealGetChatMsg(e.detail);
} else this.checkChatIsWatch();
},
dealHistoryChatMsg: function(e) {
cc.log(e);
if (0 == e.detail.chats.length) ; else {
for (var t = 0; t < e.detail.chats.length; t++) e.detail.chats[t].isWatch = !0;
var i = {
union_id: e.detail.union_id,
union_mess: e.detail.chats
}, n = !1;
for (t = 0; t < this._clubChatMsg.length; t++) if (this._clubChatMsg[t].union_id == e.detail.union_id) {
for (var a = 0; a < e.detail.chats.length; a++) this._clubChatMsg[t].union_mess.push(e.detail.chats[a]);
n = !0;
}
n || this._clubChatMsg.push(i);
cc.vv.clubChat.last_chat_id = i.union_mess[i.union_mess.length - 1].chat_id;
if ((this.xx = 1) == cc.vv.clubChat.node.active && e.detail.union_id == this._nowClubID) for (t = 0; t < e.detail.chats.length; t++) cc.vv.clubChat.dealGetChatMsg(e.detail.chats[t], !0);
}
},
chatArrOrder: function(e) {
for (var t = 0; t < e.length - 1; t++) for (var i = 0; i < e.length - 1 - t; i++) if (e[i].chat_id > e[i + 1].chat_id) {
var n = e[i];
e[i] = e[i + 1];
e[i + 1] = n;
}
return e;
},
dealWatchChat: function() {
for (var e = 0; e < this._clubChatMsg.length; e++) if (this._clubChatMsg[e].union_id == this._nowClubID) {
for (var t = 0; t < this._clubChatMsg[e].union_mess.length; t++) this._clubChatMsg[e].union_mess[t].isWatch = !0;
break;
}
},
checkChatIsWatch: function() {
for (var e = 0, t = 0; t < this._clubChatMsg.length; t++) {
var i = 0;
if (this._clubChatMsg[t].union_mess) {
for (var n = 0; n < this._clubChatMsg[t].union_mess.length; n++) if (!this._clubChatMsg[t].union_mess[n].isWatch) {
e++;
i++;
}
for (var a = 0; a < this._clubItem.length; a++) {
if (this._clubItem[a].getComponent("club_qun_item")._unionID == this._clubChatMsg[t].union_id) {
var s = this._clubItem[a].getChildByName("redNode"), c = s.getChildByName("chatNum").getComponent("cc.Label");
if (i) {
s.active = !0;
c.string = i;
} else {
s.active = !1;
c.string = 0;
}
break;
}
}
}
}
this.chatRedNode.active = !!e;
},
onBackClick: function() {
cc.vv.UILoader.destroy(this.node);
cc.vv.userMgr.inClub = !1;
},
onHistoryClick: function() {
var t = this;
cc.vv.UILoader.loadRes("hall/prefabs/History", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, cc.find("Canvas"), function(e) {
e.getComponent("History").setClubID(t._nowClubName.string, t._nowClubID);
});
});
},
update: function(e) {
this.timer += e;
if (8 <= this.timer) {
var t = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_unions_nums", t);
this.getUnionRoom(this._nowClubID);
this.timer = 0;
this.freshMailTip();
}
},
freshMailTip: function() {
var e = {
account: cc.vv.userMgr.account,
unionid: this._nowClubID
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_applys", e);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_union_rooms", this.onMsgGetUnionRooms.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_members", this.onMsgGetMembers.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_applys", this.onMsgGetApplys.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("create_union", this.onMsgCreateUnion.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("join_union", this.onMsgJoinUnion.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("query_union", this.onMsgQueryUnion.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_unions_nums", this.onMsgGetUnionNums.bind(this));
},
onMsgGetUnionRooms: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("获取俱乐部房间信息失败", t);
} else {
cc.log("房间列表", e);
for (var i = 0; i < cc.vv.userMgr.unions.length; i++) if (cc.vv.userMgr.unions[i].union_id == e.unionid) {
cc.vv.userMgr.unions[i].rooms = e.rooms;
this.getClubItemByUnionid(e.unionid).getChildByName("lb_roomNum").getComponent("cc.Label").string = cc.vv.userMgr.unions[i].rooms.length;
this.initRoomList();
}
}
},
onMsgGetMembers: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.log("成员列表", e);
var i = 0, n = null;
for (i = 0; i < cc.vv.userMgr.unions.length; i++) {
if (cc.vv.userMgr.unions[i].union_id == this._nowClubID) {
n = e.members.length;
this.bottomClubMember.string = "俱乐部成员(" + n + ")";
}
if (cc.vv.userMgr.unions[i].union_id == e.unionid) {
cc.vv.userMgr.unions[i].members = e.members;
this.getClubItemByUnionid(cc.vv.userMgr.unions[i].union_id).getChildByName("lb_member").getComponent("cc.Label").string = cc.vv.userMgr.unions[i].members.length;
break;
}
}
}
},
onMsgGetApplys: function(e) {
if (0 !== (e = e.detail).errcode) {
console.log(e.errmsg);
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
e.applys.length ? this.mailTip.active = !0 : this.mailTip.active = !1;
this.mailTip.active = 0 != e.applys.length;
}
},
onMsgCreateUnion: function(e) {
e = e.detail;
var t = this;
if (0 !== e.errcode) {
cc.vv.wc.hide();
var i = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", i);
} else {
console.log("创建俱乐部", e);
cc.vv.userMgr.update_unions(function(e) {
t.initClubList();
t.onBtnOpenCreatClub(null, 3);
cc.vv.alert.show("提示", "俱乐部创建成功");
cc.vv.wc.hide();
});
}
},
onMsgJoinUnion: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
console.log("加入俱乐部", e);
cc.vv.alert.show(" ", "申请成功,等待对方同意");
}
},
onMsgQueryUnion: function(e) {
if (!(e = e.detail).errcode) {
cc.vv.userMgr.unions.push(e.union);
this.addOneClubMenu(e.union, this.menuContent);
}
},
onMsgGetUnionNums: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
console.log("刷新俱乐部人数,房间人数", e);
for (var n = [], a = Object.keys(e.unions_nums), s = 0; s < a.length; s++) {
var c = !0;
for (i = 0; i < cc.vv.userMgr.unions.length; i++) {
var r = parseInt(a[s]);
if (cc.vv.userMgr.unions[i].union_id == r) {
c = !1;
cc.vv.userMgr.unions[i].members = e.unions_nums[r].member_nums;
var o = this.getClubItemByUnionid(r);
o.getChildByName("lb_member").getComponent("cc.Label").string = cc.vv.userMgr.unions[i].members;
o.getChildByName("lb_roomNum").getComponent("cc.Label").string = e.unions_nums[r].room_nums;
r == this._nowClubID && (this.bottomClubMember.string = "俱乐部成员(" + e.unions_nums[r].member_nums + ")");
break;
}
}
c && n.push(parseInt(a[s]));
}
console.log(n);
for (var h = 0; h < n.length; h++) cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("query_union", {
account: cc.vv.userMgr.account,
unionid: n[h]
});
}
},
onDestroy: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_union_rooms");
cc.vv.netMgr.hallIEventDispatcher.off("get_members");
cc.vv.netMgr.hallIEventDispatcher.off("get_applys");
cc.vv.netMgr.hallIEventDispatcher.off("create_union");
cc.vv.netMgr.hallIEventDispatcher.off("join_union");
cc.vv.netMgr.hallIEventDispatcher.off("query_union");
cc.vv.netMgr.hallIEventDispatcher.off("get_unions_nums");
cc.vv.userMgr.inClub = !1;
}
});
cc._RF.pop();
}, {} ],
clubNamePre: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2a727dfsRtALby7Ptexe3cQ", "clubNamePre");
cc.Class({
extends: cc.Component,
properties: {
toggle: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
this._unionID = 0;
this._toggleGrop = null;
},
start: function() {},
init: function(e) {
cc.log(e);
var t = this.node.getChildByName("Background").getChildByName("nameLab").getComponent("cc.Label"), i = this.node.getChildByName("checkmark").getChildByName("nameLab").getComponent("cc.Label");
t.string = e.unionN;
i.string = e.unionN;
this._unionID = e.unionID;
this.toggle.isChecked = e.isCheck;
this.toggle.toggleGroup = e.toggleG;
}
});
cc._RF.pop();
}, {} ],
club_qun_item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "820d9HQmhZOwqANS09TBPt1", "club_qun_item");
cc.Class({
extends: cc.Component,
properties: {
toggle: {
default: null,
type: cc.Toggle
}
},
onLoad: function() {
this._toggleGrop = null;
this._dataEventHandler = cc.find("Canvas/clubMain");
},
start: function() {},
onBtnChickClub: function() {
this.dispatchEvent("click_change_club", this._unionID);
},
init: function(e) {
cc.log("俱乐部信息", e);
this.node.getChildByName("name").getComponent("cc.Label").string = e.unionData.union_name;
this._unionID = e.unionData.union_id;
this.toggle.isChecked = e.isCheck;
this.toggle.toggleGroup = e.toggleG;
this.headImgUrl = e.unionData.creator_headimg;
this.rooms = this.node.getChildByName("lb_member").getComponent("cc.Label");
e.unionData.rooms && (this.rooms.string = e.unionData.rooms.length);
this.initAtavar();
},
returnClubid: function() {
return this._unionID;
},
initAtavar: function() {
this.node.getChildByName("mask").getChildByName("head").getComponent("Atavar").load(this.headImgUrl);
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
}
});
cc._RF.pop();
}, {} ],
club_room_item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bddf0P03HVM84RwiwuREoKZ", "club_room_item");
cc.Class({
extends: cc.Component,
properties: {
high_sp: cc.SpriteFrame,
_roomMess: null
},
onLoad: function() {
this._toggleGrop = null;
this._dataEventHandler = cc.find("Canvas/clubMain");
this.initMsgHandler();
},
start: function() {},
init: function(e) {
cc.log("房间", e);
this._roomMess = e;
this.lb_state = this.node.getChildByName("lb_state");
this.lb_name = this.node.getChildByName("lb_name").getComponent("cc.Label");
this.lb_wanfa = this.node.getChildByName("lb_wanfa").getComponent("cc.Label");
this.lb_renshu = this.node.getChildByName("lb_renshu").getComponent("cc.Label");
this.lb_jushu = this.node.getChildByName("lb_jushu").getComponent("cc.Label");
this.lb_roomnum = this.node.getChildByName("lb_roomnum").getComponent("cc.Label");
this.roomBg = this.node.getChildByName("bg").getComponent("cc.Sprite");
this.maskBtn = this.node.getChildByName("maskBtn");
this.maskBtn.active = e.delRoomStatu;
var t = JSON.parse(e.base_info);
this.lb_jushu.string = e.num_of_turns + "/" + t.max_games;
this.lb_roomnum.string = e.roomid;
if (0 != e.num_of_turns) {
this.lb_state.color = cc.Color.GREEN;
this.lb_state = this.lb_state.getComponent("cc.Label");
this.lb_state.string = "游戏中...";
} else {
this.lb_state.color = cc.Color.RED;
this.lb_state = this.lb_state.getComponent("cc.Label");
this.lb_state.string = "等待中...";
}
this.lb_renshu.string = JSON.parse(e.seat_info).length + "/" + cc.vv.gameType.getMaxPlayer(t.server_type, t.type_index, t.rule_index);
if (t.high_defend) {
this.roomBg.spriteFrame = this.high_sp;
this._high_defend = 1;
} else this._high_defend = 0;
var i = this._high_defend ? "高防" : "普通";
this.lb_name.string = this.index + ":" + cc.vv.gameType.getGameTypeStr(t.server_type) + "(" + i + ")";
this.lb_wanfa.string = cc.vv.gameType.getWaFaDecs(t.server_type, t.type_index, t.rule_index);
},
JoinRoom: function() {
var e = this._roomMess.roomid;
cc.vv.netMgr.connectlist[cc.vv.netMgr.VOICE].close(!0);
cc.vv.userMgr.enterRoom(e, function(e) {
if (0 == e.errcode) {
this._high_defend && (cc.vv.userMgr.isHighDefend = 1);
cc.vv.userMgr.inClub = !1;
} else {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
}
}.bind(this));
},
onBtnDel: function(e, t) {
if (1 == t) this.dispatchEvent("no_delete"); else {
var i = {
account: cc.vv.userMgr.account,
roomid: this._roomMess.roomid
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("delete_union_room", i);
}
},
dispatchEvent: function(e, t) {
this._dataEventHandler && this._dataEventHandler.emit(e, t);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("delete_union_room", this.onMsgDeleteUnionRoom.bind(this));
},
onMsgDeleteUnionRoom: function(e) {
if (0 !== (e = e.detail).errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
console.log("删除房间", e);
e = {
delRoomStatu: !1
};
this.dispatchEvent("update_unions", e);
}
},
onDestroy: function() {
cc.vv.netMgr.hallIEventDispatcher.off("delete_union_room");
}
});
cc._RF.pop();
}, {} ],
dhrc: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "965bb5kr5ZL4oW/TTWC6etI", "dhrc");
var o = e("buffer").Buffer;
function h(e, t, i) {
return e ^ t % i;
}
function n(e, t) {
for (var i, n = [], a = 0, s = "", c = 0; c < 256; c++) n[c] = c;
for (c = 0; c < 256; c++) {
a = (a + n[c] + t.charCodeAt(c % t.length)) % 256;
i = n[c];
n[c] = n[a];
n[a] = i;
}
for (var r = a = c = 0; r < e.length; r++) {
a = (a + n[c = (c + 1) % 256]) % 256;
i = n[c];
n[c] = n[a];
n[a] = i;
s += String.fromCharCode(e.charCodeAt(r) ^ n[(n[c] + n[a]) % 256]);
}
return s;
}
t.exports = {
gen_key: function() {
for (var e = "", t = "", i = 0; i < 36; ++i) {
var n = Math.floor(37 * Math.random()), a = h(35, n, 37);
e += String.fromCharCode(n);
t += String.fromCharCode(a);
}
e = new o(e, "utf8").toString("base64");
return {
public_key: t = new o(t, "utf8").toString("base64"),
private_key: e
};
},
secret: function(e, t) {
for (var i = "", n = new o(e, "base64").toString("utf8"), a = new o(t, "base64").toString("utf8"), s = 0; s < 36; ++s) {
var c = n.charCodeAt(s), r = h(a.charCodeAt(s), c, 37);
i += String.fromCharCode(r);
}
return i = new o(i, "utf8").toString("base64");
},
encrypto: function(e, t) {
return i = function(e) {
for (var t, i = 0, n = e.length, a = ""; i < n; ++i) a += (t = e.charCodeAt(i).toString(16)).length < 2 ? "0" + t : t;
return a;
}(n(e, t)), new o(i, "hex").toString("base64");
var i;
},
decrypto: function(e, t) {
return n(function(e) {
for (var t = [], i = 0; i < e.length - 1; i += 2) t.push(parseInt(e.substr(i, 2), 16));
return String.fromCharCode.apply(String, t);
}(new o(e, "base64").toString("hex")), t);
}
};
cc._RF.pop();
}, {
buffer: 47
} ],
dropChip: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fb41feBShVBHb/NowPkkAZy", "dropChip");
cc.Class({
extends: cc.Component,
properties: {
_chipNodeList: [],
_flyChips: [],
_bet: null
},
onLoad: function() {},
initEnumChipName: function() {
this.chipNameList = [ "chip_01a", "chip_02a", "chip_03a", "chip_04a", "chip_05a" ];
},
createChip: function(e) {
this.initEnumChipName();
if (!(this.chipNameList.length <= 0)) {
var t = cc.vv.chipsAtlasUtils.getSpriteFrame(this.chipNameList[e]), i = new cc.Node("Sprite");
i.addComponent(cc.Sprite).spriteFrame = t;
i.parent = this.node;
return i;
}
},
dropBet: function(e) {
var t = .5;
!(1 < arguments.length && void 0 !== arguments[1]) || arguments[1] || (t = 0);
this.clear();
this._bet = e;
for (var i = this.getChipList(this._bet), n = 1, a = 0; a < i.length; a++) for (var s = 0; s < i[a]; s++) {
var c = this.createChip(a);
1 == n ? c.setPosition(0, 14) : c.setPosition(0, 14 + 20 * (n - 1));
this._chipNodeList.push(c);
c.runAction(cc.moveBy(t, cc.p(0, -14 * n)));
n++;
}
},
getChipList: function(e) {
var t = Math.floor(e / 500);
e %= 500;
var i = Math.floor(e / 100);
e %= 100;
var n = Math.floor(e / 50);
e %= 50;
var a = Math.floor(e / 20);
e %= 20;
var s = Math.floor(e / 10);
if (2500 < e) {
t = 6;
s = a = n = i = 0;
}
var c = [];
c.push(s);
c.push(a);
c.push(n);
c.push(i);
c.push(t);
return c;
},
clear: function() {
for (var e in this._chipNodeList) this._chipNodeList[e].destroy();
this._chipNodeList = [];
},
clearFlyChips: function() {
for (var e in this._flyChips) this._flyChips[e].destroy();
this._flyChips = [];
},
hide: function() {
for (var e in this._chipNodeList) this._chipNodeList[e].active = !1;
},
flyToPlayer: function(e, t) {
var i = this;
i.initFlyChips(t);
i.dropBet(this._bet, !1);
for (var n = this._flyChips.length - 1; 0 <= n; n--) this._flyChips[n].runAction(cc.sequence(cc.delayTime(.03 * (this._flyChips.length - n)), cc.moveTo(1, cc.p(e.x, e.y))));
var a = 1 + .03 * this._flyChips.length;
this.node.runAction(cc.sequence(cc.delayTime(a), cc.callFunc(function() {
i.clearFlyChips();
i.ChipLabelBubble(e, t);
cc.vv.audioMgr.playSFX("resources/game/public/sounds/bet_allin.mp3");
})));
},
getFlyChipsCount: function() {
return this._flyChips.length;
},
initFlyChips: function(e) {
e == this._bet && this.clear();
this._bet -= e;
for (var t = this.getChipList(e), i = 1, n = 0; n < t.length; n++) for (var a = 0; a < t[n]; a++) {
var s = this.createChip(n);
1 == i ? s.setPosition(0, 14) : s.setPosition(0, 14 + 20 * (i - 1));
this._flyChips.push(s);
s.runAction(cc.moveBy(0, cc.p(0, -14 * i)));
i++;
}
},
ChipLabelBubble: function(e, t) {
var i = new cc.Node();
i.parent = this.node;
i.setColor(cc.color(248, 204, 50));
var n = i.addComponent(cc.Label);
n.string = "+" + t;
n.fontSize = 28;
i.setPosition(e.x, e.y + 55);
i.runAction(cc.sequence(cc.moveBy(.5, cc.p(0, 50)), cc.delayTime(.9), cc.fadeOut(.5), cc.callFunc(function() {
i.destroy();
})));
},
onDestroy: function() {
for (var e in this._chipNodeList) this._chipNodeList[e].destroy();
}
});
cc._RF.pop();
}, {} ],
eatNodeEventHandler: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7110fCUxOZGk6jR46dUSO6R", "eatNodeEventHandler");
cc.Class({
ctor: function() {
this.root = null;
},
init: function(e) {
this.root = e;
var r = this.root, o = null;
this.eatCardListener = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !0,
onTouchBegan: function(e, t) {
var i = r.btnCloseEatNode.convertToNodeSpace(e.getLocation()), n = r.btnCloseEatNode.getContentSize(), a = cc.rect(0, 0, n.width, n.height);
if (cc.rectContainsPoint(a, i)) {
o = r.btnCloseEatNodeIndex;
return !0;
}
for (var s = 0; s < r.eatlist.length; s++) for (var c = 0; c < r.eatlist[s].cardSprites.length; c++) {
i = r.eatlist[s].cardSprites[c].getChildByName("frame").convertToNodeSpace(e.getLocation()), 
n = r.eatlist[s].cardSprites[c].getChildByName("frame").getContentSize(), a = cc.rect(0, 0, n.width, n.height);
if (cc.rectContainsPoint(a, i)) {
o = s;
return !0;
}
}
o = -1;
return !0;
},
onTouchMoved: function(e, t) {},
onTouchEnded: function(e, t) {
if (-1 != o) {
cc.vv.audioMgr.playBtnClick();
if (o != r.btnCloseEatNodeIndex) {
if (o < r.shangbi_List.length) {
r.xiabi_way = null;
r.clearXiabiCards();
r.shangbi_way = r.eatlist[o].operation;
if (r.xiabi_actions && r.xiabi_actions[r.shangbi_List[o]]) r.showXiabiCards(r.shangbi_List[o]); else {
r.sendMsgOperation(r.shangbi_way);
r.OnClickCloseEatNode();
r.operationBtnsNode.active = !1;
}
} else r.xiabi_way = r.eatlist[o].operation;
if (r.xiabi_way && r.shangbi_way) {
r.sendMsgOperation(r.shangbi_way, r.xiabi_way);
r.OnClickCloseEatNode();
r.operationBtnsNode.active = !1;
}
} else r.OnClickCloseEatNode();
}
}
});
cc.eventManager.addListener(this.eatCardListener, this.root.eatNode);
},
destroy: function() {
if (this.eatCardListener) {
cc.eventManager.removeListener(this.eatCardListener);
this.eatCardListener = null;
}
}
});
cc._RF.pop();
}, {} ],
global_setting_DCZB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "08159iKc2RPCb7gX4rnXILs", "global_setting_DCZB");
var n = {
DISMISS_TIME: 12e4,
MJ_BASE_VALUE: [ 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 29, 29 ],
MJ_FENG_VALUE: [ 31, 31, 31, 31, 32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35, 36, 36, 36, 36, 37, 37, 37, 37 ],
MJ_HZ_VALUE: [ 35, 35, 35, 35 ],
MJ_FLOWER_VALUE: [ 41, 42, 43, 44, 45, 46, 47, 48 ],
GAME_TYPE_CLASSIC: 1,
MASK_PC8: 1,
MASK_PC16: 2,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
NO_WIN: 0,
BANKER_WIN: 1,
OTHER_WIN: 2,
ITEM_PENG: 1,
ITEM_DIAN_GANG: 2,
ITEM_BA_GANG: 3,
ITEM_AN_GANG: 4,
OPERATE_PASS: 1,
OPERATE_PENG: 2,
OPERATE_GANG: 3,
OPERATE_SELF_HU: 4,
ACTION_PENG: 1,
ACTION_DIAN_GANG: 2,
ACTION_BA_GANG: 3,
ACTION_AN_GANG: 4,
ACTION_SELF_HU: 5,
ACTION_PICK: 6,
ACTION_PICK_GANG: 7,
ACTION_OUT: 8,
ACTION_FLOWER: 9,
HU_TYPE_SEVEN_DUIZI: 1,
HU_TYPE_LAN_PAI: 2,
HU_TYPE_DUIDUI_HU: 3,
HU_TYPE_YAO_JIU_PAI: 4,
HU_TYPE_DANDIAO: 5,
RET_DETAIL_MING_GANG: 1,
RET_DETAIL_AN_GANG: 2,
RET_DETAIL_ZAI_BAO: 3,
RET_DETAIL_NO_GOD_WEALTH: 4,
RET_DETAIL_SELF_HU: 5,
RET_DETAIL_NORMAL_HU: 6,
RET_DETAIL_SEVEN_DUIZI_HU: 7,
RET_DETAIL_LAN_PAI_HU: 8,
RET_DETAIL_DUIDUI_HU: 9,
RET_DETAIL_YAO_JIU_PAI_HU: 10,
MJ_BASE_SCORE: 1,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2
};
i.global_DCZB = n;
cc._RF.pop();
}, {} ],
global_setting_DNN: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "43f60fpdAlIZbwCRAbOq2SC", "global_setting_DNN");
var n = {
DISMISS_TIME: 12e4,
START_PLAY_TIME: 3e4,
OX_GAME_TYPE_CLASSIC: 1,
OX_GAME_TYPE_NONE_COLOR: 2,
OX_GAME_TYPE_OX: 3,
OX_GAME_TYPE_OX_NONE_COLOR: 4,
MASK_PC10: 1,
MASK_PC20: 2,
ONE_CIRCLE_BANKER: 1,
TWO_CIRCLE_BANKER: 2,
MAX_PLAYER_5: 3,
MAX_PLAYER_8: 4,
UNLIMITED: 5,
GRAB_BANKER: 6,
TURN_BANKER: 7,
OXOX_BANKER: 8,
MAX_BANKER: 9,
OVERLORD_BANKER: 10,
NO_BANKER: 17,
OXOX_5TIMES: 16,
NEW_ENTER: 11,
OPEN_EFFECTS: 12,
OPNE_CARD_NUM_THREE: 13,
OPNE_CARD_NUM_FOUR: 14,
OPEN_CARD_NUM_0: 15,
BASE_SCORE_20: 18,
BASE_SCORE_40: 23,
BASE_SCORE_60: 24,
BASE_SCORE_80: 25,
BASE_SCORE_100: 26,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
MASK_SPE_SEQ: 21,
MASK_SPE_SAME_COLOR: 21,
MASK_SPE_HULU: 21,
MASK_SPE_SEQ_SAME_COLOR: 21,
MASK_SPE_SILVER: 22,
MASK_SPE_GOLD: 22,
MASK_SPE_BOOM: 22,
MASK_SPE_SMALL: 22,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
GAME_STATE_CALL_BANKER: 3,
GAME_STATE_BETTING: 4,
GAME_STATE_END: 5,
GAME_STATE_OVER: 6,
GAME_STATE_BANKER_BASE: 7,
GAME_STATE_SHOW: 8,
PLAYER_STATE_FREE: 1,
PLAYER_STATE_READY: 2,
PLAYER_STATE_PLAY: 3,
PLAYER_STATE_OFFLINE: 4,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
OX_NONE: 1,
OX_ONE: 2,
OX_DOUBLE: 3,
OX_SEQ: 4,
OX_SILVER: 5,
OX_GOLD: 6,
OX_SAME_COLOR: 7,
OX_HULU: 8,
OX_BOOM: 9,
OX_SEQ_SAME_COLOR: 10,
OX_SMALL: 11,
OX_NONE_VALUE: 1,
OX_ONE_BASE_VALUE: 1,
OX_DOUBLE_VALUE: 4,
OX_SEQ_VALUE: 5,
OX_SILVER_VALUE: 5,
OX_GOLD_VALUE: 6,
OX_SAME_COLOR_VALUE: 6,
OX_HULU_VALUE: 7,
OX_BOOM_VALUE: 8,
OX_SEQ_SAME_COLOR_VALUE: 9,
OX_SMALL_VALUE: 10,
OX_OX_BANKER_SCORE: 10,
OX_OX_OFF_MAX_SCORE: 30,
OX_OX_BANKER_BASE: [ 20, 40, 60 ],
bet_array: [ 20, 40, 60, 80, 100 ],
has_rule: function(e, t) {
return 0 != (e & 1 << t);
}
};
i.dnn_seetting = n;
cc._RF.pop();
}, {} ],
global_setting_PPL: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3263fLMVbxAbLZiESvJo5Jf", "global_setting_PPL");
var n = {
MASK_PC10: 1,
MASK_PC20: 2,
MASK_INGOT_GAME: 19,
MASK_GOLD_GAME: 20,
GAME_STATE_FREE: 1,
GAME_STATE_PLAYING: 2,
ROOM_ACHIVE_DIS: 1,
ROOM_ACHIVE_OVER: 2,
CARD_TYPE_FIVE_SMALL: 6,
CARD_TYPE_FIVE_FLOWER: 5,
CARD_TYPE_FOUR_BOOM: 4,
CARD_TYPE_DOUBLE_TEN: 3,
CARD_TYPE_TEN_DAI_JI: 2,
CARD_TYPE_SAN_PAI: 1,
SCORE_FIVE_SMALL: 35,
SCORE_FIVE_FLOWER: 35,
SCORE_FOUR_BOOM: 30,
SCORE_DOUBLE_TEN: 20,
SOCRE_TEN_DAI_SEVEN_NINE: 10,
SOCRE_TEN_DAI_ONE_SIX: 5,
SOCRE_SAN_PAI: 0,
SCORE_SINGLE_WIN: 10,
SOCRE_THREE_WIN: 20
};
i.global_PPL = n;
cc._RF.pop();
}, {} ],
gold_info: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fa9014coS5E7pV/UfRAAUIO", "gold_info");
cc.Class({
extends: cc.Component,
properties: {
_diamond: null,
_roomCard: null
},
onLoad: function() {
var t = this;
this._diamond = this.node.getChildByName("diamond").getChildByName("Label").getComponent(cc.Label);
this._roomCard = this.node.getChildByName("roomCard").getChildByName("Label").getComponent(cc.Label);
this.node.on("freshUserInfo", function(e) {
t.refreshInfo();
});
this.refreshInfo();
},
refreshInfo: function() {
this._roomCard.string = cc.vv.userMgr.gems;
this._diamond.string = cc.vv.userMgr.coins;
}
});
cc._RF.pop();
}, {} ],
holdsEventHandler: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e3cdeNa90NGzqnMAqHg0ncv", "holdsEventHandler");
cc.Class({
ctor: function() {
this.root = null;
this.outCardProtoCal = null;
this.reOrderHandCardsHandler = null;
},
init: function(e, t) {
this.root = e;
this.outCardProtoCal = t;
this.initReOrderHandCardsHandler();
this.initHoldsEventListener();
},
initReOrderHandCardsHandler: function() {
var e = t("zipai_reOrderHandCards");
this.reOrderHandCardsHandler = new e();
this.reOrderHandCardsHandler.init(this.root);
},
initHoldsEventListener: function() {
var a = this, r = this.root, o = null, h = null;
this.root.handCardslistener = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !0,
onTouchBegan: function(e, t) {
for (var i = 0; i < r._handcardsInfoList.length; i++) for (var n = 0; n < r._handcardsInfoList[i].cards.length; n++) {
var a = r._handcardsInfoList[i].cards[n].getChildByName("frame").convertToNodeSpace(e.getLocation()), s = r._handcardsInfoList[i].cards[n].getChildByName("frame").getContentSize(), c = cc.rect(0, 0, s.width, s.height);
if (cc.rectContainsPoint(c, a)) {
if (r._handcardsInfoList[i].cards[n].getComponent("zipai_card").getIsBlack()) return !1;
o = i;
h = n;
r._handcardsInfoList[o].cards[h].setLocalZOrder(100);
r.clickCardPos = r._handcardsInfoList[o].cards[h].getPosition();
return !0;
}
}
return !(h = o = -1);
},
onTouchMoved: function(e, t) {
if (-1 != o) {
var i = e.getDelta();
r._handcardsInfoList[o].cards[h].x += i.x;
r._handcardsInfoList[o].cards[h].y += i.y;
}
},
onTouchEnded: function(e, t) {
if (-1 != o) {
cc.vv.audioMgr.playBtnClick();
r._handcardsInfoList[o].cards[h].setLocalZOrder(r._handcardsInfoList[o].cards[h].getComponent("zipai_card").getOrder());
if (r.selfHandCardNode.convertToWorldSpace(cc.v2(r._handcardsInfoList[o].cards[h].x - 640, r._handcardsInfoList[o].cards[h].y - 320)).y > r.splitLine.y) {
var i = JSON.parse(cc.vv.msgTemp_GLZP.CS_out_card);
i.out_card = r._handcardsInfoList[o].cards[h].getComponent("zipai_card").getValue();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send(a.outCardProtoCal, i);
r._outCardCoordinate.x = o;
r._outCardCoordinate.y = h;
0 == r.splitLine.active && r._handcardsInfoList[r._outCardCoordinate.x].cards[r._outCardCoordinate.y].setPosition(r.clickCardPos.x, r.clickCardPos.y);
} else {
var n = r._handcardsInfoList[o].cards[h].getPosition();
a.reOrderHandCardsHandler.work(o, h, r.clickCardPos, n);
}
}
}
});
cc.eventManager.addListener(this.root.handCardslistener, this.root.selfHandCardNode);
},
destroy: function() {
if (this.root.handCardslistener) {
cc.eventManager.removeListener(this.root.handCardslistener);
this.root.handCardslistener = null;
}
}
});
cc._RF.pop();
}, {
zipai_reOrderHandCards: "zipai_reOrderHandCards"
} ],
matchAllTop: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b6d95ppJBVCAL4hKIQOPCr2", "matchAllTop");
var c = e("buffer").Buffer;
cc.Class({
extends: cc.Component,
properties: {
topLanPre: cc.Prefab,
chibangPre: cc.Prefab,
listContent: cc.Node
},
onLoad: function() {},
init: function(e) {
for (var t = e, i = 0; i < t.length; i++) {
var n = cc.instantiate(this.topLanPre);
this.listContent.addChild(n);
n.getChildByName("nameLb").getComponent(cc.Label).string = new c(t[i].name, "base64").toString();
n.getChildByName("sexLb").getComponent(cc.Label).string = 1 == t[i].sex ? "男" : "女";
n.getChildByName("IDLb").getComponent(cc.Label).string = t[i].user_id;
(s = n.getChildByName("rankLb")).getComponent(cc.Label).string = t[i].top_index;
n.getChildByName("allScoreLb").getComponent(cc.Label).string = t[i].score;
n.getChildByName("head");
4 <= i && (this.listContent.height += 100);
}
this.chibangNode = new cc.Node("chibang");
this.chibangNode.parent = this.node;
this.chibangNode.setPosition(0, 0);
var a = cc.instantiate(this.chibangPre);
this.chibangNode.addChild(a);
var s = a.getChildByName("rank");
this.chibangBtn = a.getChildByName("closeBtn");
cc.vv.utils.addClickEvent(this.chibangBtn, this.node, "matchAllTop", "onChibangClick");
for (i = 0; i < e.length; i++) e[i].user_id == cc.vv.userMgr.userId && (s.getComponent(cc.Label).string = i + 1);
},
onChibangClick: function(e) {
this.chibangNode.active = !1;
},
onSureBtnClick: function(e) {
cc.vv.userMgr.inMatch = !1;
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.vv.userMgr.isHighDefend = 0;
cc.director.loadScene("hall");
},
onDestroy: function(e) {}
});
cc._RF.pop();
}, {
buffer: 47
} ],
matchInfo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3e73e3YhxJCPofGn1U3CVwg", "matchInfo");
cc.Class({
extends: cc.Component,
properties: {
matchMess: null,
nowMatch: !1,
matchWillBegin: !1,
matchAllEnd: !1
},
onLoad: function() {},
matchClear: function() {
this.matchMess = null;
this.nowMatch = !1;
this.matchWillBegin = !1;
}
});
cc._RF.pop();
}, {} ],
matchPre: [ function(a, e, t) {
"use strict";
cc._RF.push(e, "082bbRAdNJAlpvWSY8st+YG", "matchPre");
cc.Class({
extends: cc.Component,
properties: {
titleLab: cc.Label,
littleTitleLab: cc.Label,
matchTimeLab: cc.Label,
peopleNumLab: cc.Label,
costLab: cc.Label,
detailBtn: cc.Button,
matchNum: 0,
signUpSprite: cc.Sprite,
match_Atlas: cc.SpriteAtlas
},
onLoad: function() {
this.gameID = "PDK";
cc.vv.eventMgr.on(cc.vv.event.MATCH_COUNTS, this.setMatchCounts, this);
},
init: function(e) {
var t = Object.keys(cc.vv.match.matchMess), i = parseInt(t[e]);
this.matchNum = i;
if (cc.vv.match.matchMess[this.matchNum][0].token) {
var n = "match_2_6";
this.signUpSprite.spriteFrame = this.getFrameByName(n);
} else {
n = "match_0_2";
this.signUpSprite.spriteFrame = this.getFrameByName(n);
}
var a = new Date(1e3 * parseInt(cc.vv.match.matchMess[this.matchNum][0].start_time)), s = a.getMonth() + 1;
s = 10 <= s ? s : "0" + s;
var c = a.getDate(), r = a.getHours();
r = r < 10 ? "0" + r : r;
var o = a.getMinutes();
o = o < 10 ? "0" + o : o;
var h = new Date().getDate();
1 == cc.vv.match.matchMess[this.matchNum][0].match_type ? this.matchTimeLab.string = "满" + cc.vv.match.matchMess[this.matchNum][0].max_user + "人开赛" : this.matchTimeLab && (this.matchTimeLab.string = c == h ? "今天\n" + r + ":" + o : s + ":" + c + "\n" + r + ":" + o);
this.peopleNumLab.string = "报名人数:" + cc.vv.match.matchMess[this.matchNum][0].load;
},
onBtnDetailClick: function() {
this.dispatchEvent("lookDeatail", this.matchNum);
},
setMatchCounts: function(e) {
this.peopleNumLab.string = "报名人数：" + e;
},
onBtnJoinClick: function() {
var n = this;
if (cc.vv.match.matchMess[n.matchNum][0].token) {
e = {
match_type: n.matchNum,
account: cc.vv.userMgr.account
};
cc.vv.http.sendRequest("/match/cancel", e, function(e) {
if (0 !== e.errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
cc.vv.match.matchMess[n.matchNum][0].token = 0;
n.showSignUp();
cc.vv.net.close();
cc.vv.userMgr.match_info = null;
}
});
} else {
var e = {
match_type: n.matchNum,
account: cc.vv.userMgr.account
};
cc.vv.http.sendRequest("/match/join", e, function(e) {
if (0 !== e.errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
var i = {
account: cc.vv.userMgr.account
};
console.log(i);
cc.vv.http.sendRequest("/match/info", i, function(e) {
if (0 !== e.errcode) {
cc.vv.wc.hide();
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
} else {
delete (cc.vv.match.matchMess = e).errcode;
delete e.errmsg;
cc.vv.match.nowMatch = !0;
var i = a("GameNetMgr80001");
cc.vv.gameNetMgr = new i();
cc.vv.gameNetMgr.initHandlers();
cc.vv.gameNetMgr.connectGameServer(e);
n.showSignUp();
}
});
}
});
}
},
showSignUp: function() {
cc.log();
if (cc.vv.match.matchMess[this.matchNum][0].token) {
e = "match_2_6";
this.signUpSprite.spriteFrame = this.getFrameByName(e);
} else {
var e = "match_0_2";
this.signUpSprite.spriteFrame = this.getFrameByName(e);
}
},
getFrameByName: function(e) {
return this.match_Atlas.getSpriteFrame(e);
},
dispatchEvent: function(e, t) {
this.node.emit(e, t);
},
onDestroy: function() {
cc.vv.eventMgr.off(cc.vv.event.MATCH_COUNTS, this.setMatchCounts, this);
}
});
cc._RF.pop();
}, {
GameNetMgr80001: "GameNetMgr80001"
} ],
matchRLPre: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "185f5xDm91CLJ/7xx5EhozD", "matchRLPre");
cc.Class({
extends: cc.Component,
properties: {
timeLab: cc.Label,
detailLab: cc.Label,
awardLab: cc.Label,
isRecive: cc.Label
},
onLoad: function() {},
init: function(e) {
console.log(e);
this.timeLab.string = this.dateFormat(1e3 * e[0]);
this.detailLab.string = "您在本场比赛中,获得" + e[2] + "分,荣获" + e[3] + "名！祝您在以后的比赛中获得好成绩,加油哟！";
this.awardLab.string = "奖品:" + e[4];
e[4] ? this.isRecive.string = 1 == e[5] ? "已领取" : "未领取" : this.isRecive.string = "未获得";
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
}
});
cc._RF.pop();
}, {} ],
matchTop: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "437a1xs575MoJ2RiAz8j+wZ", "matchTop");
cc.Class({
extends: cc.Component,
properties: {
matchRLPre: cc.Prefab,
listContent: cc.Node
},
onLoad: function() {},
init: function(e) {
for (var t = e[1], i = 0; i < t.length; i++) {
var n = cc.instantiate(this.matchRLPre);
this.listContent.addChild(n);
for (var a = 0; a < cc.vv.gameNetMgr.seats.length; a++) {
if (cc.vv.gameNetMgr.seats[a].user_id == t[i][0]) {
n.getChildByName("name").getComponent(cc.Label).string = cc.vv.gameNetMgr.seats[a].name;
n.getChildByName("cardNum").getComponent(cc.Label).string = t[i][1];
n.getChildByName("score").getComponent(cc.Label).string = t[i][1];
n.getChildByName("kuang").getChildByName("head");
}
}
}
},
onSureBtnClick: function(e) {
cc.vv.eventMgr.emit(cc.vv.event.MATCH_TOP_CLICK, e);
cc.vv.eventMgr.emit(cc.vv.event.MATCH_WAITING_PIPEI, e);
cc.vv.gameNetMgr.clearGameData();
},
onDestroy: function(e) {
cc.vv.gameNetMgr.clearGameData();
}
});
cc._RF.pop();
}, {} ],
msgdefine_10DB: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "18289/8I6tPO7yZNhJVF2R7", "msgdefine_10DB");
var n = {};
n.CS_UserAction = JSON.stringify({
action_type: -1,
action_target: -1
});
n.SC_UserAction = JSON.stringify({
error_code: -1,
action_type: -1,
action_target: -1,
seat_index: -1,
card_data: 0
});
n.SC_Point21State = JSON.stringify({
seat_index: -1,
type: [],
value: [],
status_mask: 0
});
n.CS_Betting = JSON.stringify({
betting_type: 0,
coin: 0
});
n.SC_Betting = JSON.stringify({
error_code: 0,
betting_type: 0,
seat_index: 0,
coin: 0,
total_coin: 0
});
n.CS_UserBuy = JSON.stringify({
seat_index: -1,
buy: !1
});
n.SC_UserBuy = JSON.stringify({
error_code: -1,
seat_index: -1,
buy: !1
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
msgdefine_21d: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b0c03n+oUpHpptk0ZZwLIAU", "msgdefine_21d");
var n = {};
n.CS_UserAction = JSON.stringify({
action_type: -1,
action_target: -1
});
n.SC_UserAction = JSON.stringify({
error_code: -1,
action_type: -1,
action_target: -1,
seat_index: -1,
card_data: 0
});
n.SC_Point21State = JSON.stringify({
seat_index: -1,
type: [],
value: [],
status_mask: 0
});
n.CS_Betting = JSON.stringify({
betting_type: 0,
coin: 0
});
n.SC_Betting = JSON.stringify({
error_code: 0,
betting_type: 0,
seat_index: 0,
coin: 0,
total_coin: 0
});
n.CS_UserBuy = JSON.stringify({
seat_index: -1,
buy: !1
});
n.SC_UserBuy = JSON.stringify({
error_code: -1,
seat_index: -1,
buy: !1
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
msgdefine_3DH: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d67eb3EfuZLMJX4K/2K06k9", "msgdefine_3DH");
var n = {};
n.CS_out_card = JSON.stringify({
card_type: 0,
cards_data: []
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card_type: 0,
out_cards_data: [],
rate: 0
});
n.CS_CallBanker = JSON.stringify({
call: 0
});
n.SC_CallBanker = JSON.stringify({
user_id: 0,
seat_index: 0,
call: 0
});
n.SC_CallBankerEnd = JSON.stringify({
button: 0,
call_score: 0
});
n.SC_CallBankTurnPush = JSON.stringify({
turn: -1,
current_min_value: 0
});
n.CS_DecideMainColor = JSON.stringify({
color: -1
});
n.SC_DecideMainColor = JSON.stringify({
color: -1
});
n.CS_BuryCard = JSON.stringify({
cards: []
});
n.SC_BuryCard = JSON.stringify({});
n.CS_GiveUp = JSON.stringify({});
n.SC_GiveUp = JSON.stringify({});
n.SC_DigCard = JSON.stringify({
dig_card: []
});
n.SC_Turn_Result = JSON.stringify({
max_index: 0,
score_card: [],
score_value: 0,
score: 0
});
n.SC_turn = JSON.stringify({
turn: 0,
max_index: 0,
now_card_type: 0,
now_card_data: []
});
n.SC_game_end = JSON.stringify({
force: !1,
has_dig: !1,
give_up: !1,
bury_card: [],
dig_score_cards: [],
dig_score_value: 0,
dig_score_rate: 1,
score_card: [],
call_score: 0,
game_score: 0,
winner: 0,
end_seats_data: [],
win_lose_state: 3
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.SC_Deputy = JSON.stringify({
user_id: 0,
deputy: 0
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
msgdefine_PAGUO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c3b8fuNqCFGU4jjDziVkprd", "msgdefine_PAGUO");
var n = {};
n.CS_out_card = JSON.stringify({
card_type: 0,
cards_data: []
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card_type: 0,
out_cards_data: []
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0,
max_index: 0,
now_card_type: 0,
now_card_data: []
});
n.SC_out_push = JSON.stringify({
card_type: 0,
card_data: []
});
n.SC_room_info = JSON.stringify({
room_id: 0
});
n.SC_user_info = JSON.stringify({
seat_index: 0,
user_id: 0
});
n.SC_game_end = JSON.stringify({
force: !1,
has_dig: !1,
give_up: !1,
all_give_up_call: !1,
bury_card: [],
dig_score_cards: [],
dig_score_value: 0,
dig_score_rate: 1,
score_card: [],
call_score: 0,
game_score: 0,
winner: 0,
end_seats_data: [],
win_lose_state: 3
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.CS_rollback = JSON.stringify({
uuid: 0,
index: 0
});
n.SC_rollback = JSON.stringify({});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_CallBanker = JSON.stringify({
call: 0
});
n.SC_CallBanker = JSON.stringify({
user_id: 0,
seat_index: 0,
call: 0
});
n.CS_CallBankerAtDispatch = JSON.stringify({
call: 0
});
n.SC_DigCard = JSON.stringify({
dig_card: []
});
n.CS_BuryCard = JSON.stringify({
cards: []
});
n.SC_BuryCard = JSON.stringify({});
n.CS_GiveUp = JSON.stringify({});
n.SC_Turn_Result = JSON.stringify({
max_index: 0,
score_card: [],
score_value: 0,
score: 0
});
n.SC_can_call_banker = JSON.stringify({
can_call_banker: []
});
n.SC_CallBankTurnPush = JSON.stringify({
turn: -1
});
n.SC_BuyDouble7Push = JSON.stringify({
turn: -1
});
n.CS_buy_double7 = JSON.stringify({
buy: 0
});
n.SC_buy_double7 = JSON.stringify({
user_id: 0,
buy: 0
});
n.SC_change_card = JSON.stringify({
change_list: []
});
n.CS_change_card = JSON.stringify({
change_list: []
});
n.SC_Deputy = JSON.stringify({
user_id: 0
});
n.SC_ButtonFuCards = JSON.stringify({
counts: 0
});
n.SC_ChangeCardsData = JSON.stringify({
cards: 0
});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
msgdefine_dczb: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "20232Rd8zRCLZ90IyUjgCp+", "msgdefine_dczb");
var n = {};
n.CS_out_card = JSON.stringify({
out_card: 0
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card: 0
});
n.SC_game_state = JSON.stringify({
state: 1
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1,
hu_user_id: 0,
pao_user_id: 0,
hu_card: 0,
button: 0
});
n.SC_game_over = JSON.stringify({
over_seats_data: []
});
n.SC_throw = JSON.stringify({
throw_dice: []
});
n.SC_light_card = JSON.stringify({
light_card: 0,
god_wealth: 0
});
n.SC_poker_count = JSON.stringify({
gang_card_num: 0,
surplus_card_num: 0
});
n.SC_action_mask = JSON.stringify({
action_mask: []
});
n.SC_cancel_action = JSON.stringify({});
n.SC_pick_card = JSON.stringify({
user_id: 0,
card: 0
});
n.SC_pick_gang = JSON.stringify({
user_id: 0,
card: 0
});
n.SC_card_type_action = JSON.stringify({
action: 0,
action_card: 0
});
n.SC_item = JSON.stringify({
user_id: 0,
add_items: [],
remove_items: []
});
n.SC_flower_item = JSON.stringify({
user_id: 0,
flower_item: []
});
n.SC_hu = JSON.stringify({
hu_user_id: 0,
pao_user_id: 0,
card: 0
});
n.SC_holds_push = JSON.stringify({
user_id: 0,
holds: []
});
n.SC_folds_push = JSON.stringify({
user_id: 0,
folds: []
});
n.SC_ting_cards_push = JSON.stringify({
cards: []
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
msgdefine_dzpk: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8fdf4eNd91OKKMoTC6wueti", "msgdefine_dzpk");
var n = {};
n.SC_Betting = JSON.stringify({
error_code: 0,
seat_index: 0,
type: 0,
coin: 0,
total_coin: 0
});
n.CS_Betting = JSON.stringify({
type: 0,
coin: 0
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
msgdefine_pinpinle: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e0981yB2AFB4o9VvOXnQb8W", "msgdefine_pinpinle");
var n = {};
n.SC_public_cards = JSON.stringify({
public_cards: []
});
n.SC_random_cards = JSON.stringify({
random_cards: []
});
n.SC_new_turn_push = JSON.stringify({
count_down: 0
});
n.CS_card_pose = JSON.stringify({
from_index: 0,
to_index: 0
});
n.SC_card_pose = JSON.stringify({
to_index: 0,
card: 0
});
n.SC_pose_result = JSON.stringify({
user_id: 0,
row: 0,
card_type: 0,
card_value: 0,
win: 0
});
n.SC_pose_finish = JSON.stringify({
user_id: 0
});
n.CS_Dismiss = JSON.stringify({});
n.SC_Dismiss = JSON.stringify({});
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.SC_SeqMoveSeat = JSON.stringify({
new_seat: []
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
msgdefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41342rOd6dGqZocH7Nhg3G1", "msgdefine");
var n = {};
n.CS_Transfer = JSON.stringify({
target: 0
});
n.SC_Transfer = JSON.stringify({
new_seat: []
});
n.CS_Kick = JSON.stringify({
target: 0
});
n.SC_Kick = JSON.stringify({
kicked: 0,
new_seat: []
});
n.CS_out_card = JSON.stringify({
card_type: 0,
cards_data: []
});
n.SC_out_card = JSON.stringify({
error_code: 0,
out_user: 0,
out_card_type: 0,
out_cards_data: []
});
n.SC_turn = JSON.stringify({
turn: 0
});
n.SC_room_info = JSON.stringify({
room_id: 0
});
n.SC_user_info = JSON.stringify({
seat_index: 0,
user_id: 0
});
n.SC_game_end = JSON.stringify({
end_seats_data: [],
force: !1
});
n.SC_game_over = JSON.stringify({
over_seats_data: [],
off_banker: !1
});
n.CS_CallLandLord = JSON.stringify({
call: 0
});
n.SC_CallLandLord = JSON.stringify({
user_id: 0,
seat_index: 0,
call: 0,
rate: 0
});
n.SC_CallLandLordEnd = JSON.stringify({
button: 0,
rate: 0,
cards: []
});
n.SC_CallBankTurnPush = JSON.stringify({
turn: -1,
begin_call: -1,
rate: 0
});
n.CS_StartPlay = JSON.stringify({});
n.SC_StartPlay = JSON.stringify({
start_user_id: 0,
start_index: 0
});
n.CS_StartPlay_Choice = JSON.stringify({
agree: 0
});
n.SC_StartPlay_Choice = JSON.stringify({
choice_index: 0,
user_id: 0,
user_index: 0,
agree_list: {}
});
n.CS_Betting = JSON.stringify({
coin: 0
});
n.SC_Betting = JSON.stringify({
error_code: 0,
seat_index: 0,
coin: 0,
total_coin: 0
});
n.CS_CallBanker = JSON.stringify({
call: 0
});
n.SC_CallBanker = JSON.stringify({
call: 0,
seat_index: 0
});
n.SC_StartPlay_End = JSON.stringify({
success: 0,
seat_index: 0
});
n.CS_OffBanker = JSON.stringify({
off_index: 0
});
n.SC_OffBanker = JSON.stringify({
off_index: 0
});
n.SC_OffBankerState = JSON.stringify({
off_index: 0
});
n.SC_BankerBaseStatus = JSON.stringify({
chose_index: 0,
base_score: []
});
n.CS_BankerBase = JSON.stringify({
base_score: 0
});
n.SC_BankerBase = JSON.stringify({
banker_index: 0,
base_score: 0
});
n.SC_BankerStatus = JSON.stringify({
base_score: 0,
banker_count: 0,
current_score: 0,
banker_total_score: 0
});
n.SC_GoldFlowerState = JSON.stringify({
base_score: 0,
current_turn: 0,
see_min_coin: 0,
see_max_coin: 0,
unsee_min_coin: 0,
unsee_max_coin: 0,
user_state: []
});
n.CS_OpenCard = JSON.stringify({
open_index: 0
});
n.SC_OpenCard = JSON.stringify({
user_index: 0,
user_id: 0,
open_card: []
});
n.CS_Compare = JSON.stringify({
watch_index: 0,
compare_index: 0
});
n.SC_Compare = JSON.stringify({
watch_index: 0,
compare_index: 0,
result: 0,
watch_card: [],
compare_card: []
});
n.CS_GiveUp = JSON.stringify({
giveup_index: 0
});
n.SC_GiveUp = JSON.stringify({
user_index: 0
});
n.CS_Join = JSON.stringify({});
n.SC_Join = JSON.stringify({
watch_index: 0,
join: !1
});
n.SC_Betting = JSON.stringify({
error_code: 0,
seat_index: 0,
type: 0,
coin: 0,
total_coin: 0
});
n.CS_Chose = JSON.stringify({
out_type: -1,
stage: []
});
n.SC_Chose = JSON.stringify({
error_code: -1,
seat_index: -1
});
n.SC_emoji = JSON.stringify({
target: [],
content: []
});
i.msg_templete = n;
cc._RF.pop();
}, {} ],
op13: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ee9f4vQ3CpJXLy+wlEYpxcT", "op13");
cc.Class({
extends: cc.Component,
properties: {
pk_prefab: {
default: null,
type: cc.Prefab
},
outType_prefab: {
default: null,
type: cc.Prefab
},
build_prefab: {
default: null,
type: cc.Prefab
},
da: {
default: null,
type: cc.SpriteFrame
},
xiao: {
default: null,
type: cc.SpriteFrame
},
_my: null,
_btnOut: null,
holdsNode: {
default: null,
type: cc.Node
},
buildNode: {
default: null,
type: cc.Node
},
_chuPaiTempArr: [],
_daoArr: [],
_daoTypeArr: [],
_compareArr: [],
btn_gao: {
default: null,
type: cc.Button
},
btn_1dui: {
default: null,
type: cc.Button
},
btn_2dui: {
default: null,
type: cc.Button
},
btn_3tiao: {
default: null,
type: cc.Button
},
btn_shunzi: {
default: null,
type: cc.Button
},
btn_tonghua: {
default: null,
type: cc.Button
},
btn_hulu: {
default: null,
type: cc.Button
},
btn_4tiao: {
default: null,
type: cc.Button
},
btn_tonghuashun: {
default: null,
type: cc.Button
},
allType: null,
index: 0,
index2: 0
},
onLoad: function() {
this._my = this.node.getChildByName("my");
this._btnOut = this.node.getChildByName("btn_out");
this._btnOut.active = !1;
this._daoArr[0] = this._my.getChildByName("holds1");
this._daoArr[1] = this._my.getChildByName("holds2");
this._daoArr[2] = this._my.getChildByName("holds3");
for (var e = 0; e < 3; e++) {
this._compareArr[e] = {};
var t = "lb" + (e + 1);
this._compareArr[e].lb2 = this._my.getChildByName(t).getComponent(cc.Label);
this._compareArr[e].lb2.string = "";
}
},
initViews: function() {
for (var e = 0; e < 3; e++) {
this._daoArr[e].removeAllChildren();
this._btnOut.active = !1;
this._compareArr[e].lb2.string = "";
}
this.initHolds();
},
initHolds: function() {
var t = this, e = cc.vv.gameNetMgr.seats[cc.vv.gameNetMgr.seatIndex].holds, i = this.holdsNode, n = [];
i.removeAllChildren();
for (var a = 0; a < e.length; a++) {
var s = e[a], c = cc.instantiate(this.pk_prefab);
n.push(c);
c.poker_id = s;
c.pokerIndex = a;
var r = this.get_poker_display_value(s);
c.val = this.get_poker_value(s);
c.col = s % 4;
c.getComponent("MyPoker").setValueAndColor(r, c.col);
this.onMJtprefabEvent(c);
}
if (0 < n.length) {
256 & cc.vv.gameNetMgr.conf.rule_index && this.scheduleOnce(function() {
var e = t.check_global_type(n);
1 < e.type && cc.vv.alert.show("恭喜你", "你组成了超级牌型《" + e.name + "》 ,是否要按此牌型出牌?", function() {
t.chuPai(e);
}, !0);
}, .2);
var o = this.auto_build(n);
this.initAutoBuild(o);
for (var h = 0; h < n.length; h++) n[h].parent = i;
this.resetTipButton();
} else this.node.active = !1;
},
initAllTypes: function(e) {
this.allType = {};
this.index = 0;
this.index2 = 0;
var t = this.check_repeat_all(e, 2);
0 < t.length && (this.allType.repeat2 = t);
0 < (t = this.check_repeat_all(e, 3)).length && (this.allType.repeat3 = t);
0 < (t = this.check_repeat_all(e, 4)).length && (this.allType.repeat4 = t);
0 < (t = this.check_shunzi_all(e, 5)).length && (this.allType.shunzi = t);
0 < (t = this.check_tonghua_all(e, 5)).length && (this.allType.tonghua = t);
},
initAutoBuild: function(e) {
this.buildNode.removeAllChildren(!1);
for (var t = 0; t < e.length; t++) {
var i = e[t], n = cc.instantiate(this.build_prefab);
n.getComponent(cc.Toggle).toggleGroup = this.buildNode.getComponent(cc.ToggleGroup);
n.getChildByName("num").getComponent(cc.Label).string = t + 1;
n.getChildByName("lb1").getComponent(cc.Label).string = i[0].type.name;
n.getChildByName("lb2").getComponent(cc.Label).string = i[1].type.name;
n.getChildByName("lb3").getComponent(cc.Label).string = i[2].type.name;
n.dao1 = i[0].arr;
n.dao2 = i[1].arr;
n.dao3 = i[2].arr;
this.buildNode.addChild(n);
cc.vv.utils.addClickEvent(n, this.node, "op13", "onQuickBuildClick");
}
},
sortHolds: function(e) {
e && e.sort(function(e, t) {
return t - e;
});
return e;
},
onQuickBuildClick: function(e, t) {
console.log(e.target);
this.holdsNode.removeAllChildren(!1);
this._daoArr[0].removeAllChildren(!1);
this._daoArr[1].removeAllChildren(!1);
this._daoArr[2].removeAllChildren(!1);
for (var i = 0; i < e.target.dao1.length; i++) {
(n = e.target.dao1[i]).daoIndex = 0;
n.getComponent("MyPoker").setDown();
this._daoArr[0].addChild(n);
}
for (i = 0; i < e.target.dao2.length; i++) {
(n = e.target.dao2[i]).daoIndex = 1;
n.getComponent("MyPoker").setDown();
this._daoArr[1].addChild(n);
}
for (i = 0; i < e.target.dao3.length; i++) {
var n;
(n = e.target.dao3[i]).daoIndex = 2;
n.getComponent("MyPoker").setDown();
this._daoArr[2].addChild(n);
}
this._chuPaiTempArr = [];
this.setDaoType(0);
this.setDaoType(1);
this.setDaoType(2);
this.checkFinish();
this.resetTipButton();
},
onMJtprefabEvent: function(r) {
r.on("touchstart", function(e) {
if (r.parent == this.holdsNode) {
r.getComponent("MyPoker").setBlack(!0);
this.selectNode = null;
}
}.bind(this));
r.on("touchmove", function(e) {
if (r.parent == this.holdsNode) {
var t = this.holdsNode.convertToNodeSpace(e.touch.getLocation());
console.log(t);
for (var i = 0; i < this.holdsNode.getChildren().length; i++) {
var n = this.holdsNode.getChildren()[i], a = n.width * n.scaleX, s = n.height * n.scaleX, c = cc.rect(n.x - a / 2, n.y, a, s);
cc.rectContainsPoint(c, t) && n.getComponent("MyPoker").setBlack(!0);
}
}
}.bind(this));
var t = this;
r.on("touchcancel", function(e) {
t.freshAllBlack();
console.log("------------touchcancel:");
}.bind(this));
r.on("touchend", function(e) {
console.log("------------touchend:");
}.bind(this));
cc.vv.utils.addClickEvent(r, this.node, "op13", "onMJClicked");
},
onMJClicked: function(e) {
console.log("------------touchclick:");
cc.vv.audioMgr.playBtnClick();
if (!this.isTouchMove) {
var t = e.target;
if (t.parent == this.holdsNode) this.freshAllBlack(); else {
t.removeFromParent(!1);
this.holdsNode.addChild(t);
this.checkFinish();
this.resetTipButton();
this.setDaoType(t.daoIndex);
}
}
},
updateMJPrefabNode: function(e) {
var t = e.getComponent("MyPoker");
console.log("node.poker_id:" + e.poker_id);
for (var i = !1, n = 0; n < this._chuPaiTempArr.length; ++n) if (e == this._chuPaiTempArr[n] && 1 == t.isShowUp) {
i = !0;
this._chuPaiTempArr.splice(n, 1);
break;
}
if (i) t.setDown(); else {
t.setUp();
this._chuPaiTempArr.push(e);
}
},
freshAllBlack: function() {
for (var e in this.holdsNode.getChildren()) {
var t = this.holdsNode.getChildren()[e];
if (t.getComponent("MyPoker").isBlack()) {
this.updateMJPrefabNode(t);
t.getComponent("MyPoker").setBlack(!1);
}
}
},
onDaoClick: function(e, t) {
cc.vv.audioMgr.playBtnClick();
var i = 5;
0 == t && (i = 3);
var n = this._daoArr[t];
if (n.getChildren().length + this._chuPaiTempArr.length <= i) {
for (var a = 0; a < this._chuPaiTempArr.length; ++a) {
var s = this._chuPaiTempArr[a];
s.removeFromParent(!1);
s.daoIndex = t;
n.addChild(s);
s.getComponent("MyPoker").setDown();
}
this._chuPaiTempArr = [];
this.checkAutoFillPoker();
this.checkFinish();
this.resetTipButton();
this.setDaoType(t);
}
},
onCancelClick: function(e, t) {
cc.vv.audioMgr.playBtnClick();
for (;0 < this._daoArr[t].getChildren().length; ) {
var i = this._daoArr[t].getChildren()[0];
i.removeFromParent(!1);
this.holdsNode.addChild(i);
}
this.resetTipButton();
this.checkFinish();
this.setDaoType(t);
},
setDaoType: function(e) {
if (0 == e || e) {
var t = this._daoArr[e].getChildren(), i = 5;
0 == e && (i = 3);
if (t.length == i) {
var n = this.check_dao_type(t);
this._compareArr[e].lb2.string = n.name;
this._daoTypeArr[e] = n.type;
} else {
this._compareArr[e].lb2.string = "";
this._daoTypeArr[e] = 0;
}
}
},
onTipClick: function(e) {
this.resetHolds();
cc.vv.audioMgr.playBtnClick();
var t = e.target.name, i = this.holdsNode.getChildren(), n = [];
switch (t) {
case "btn_gao":
n = this.check_gao(i);
break;

case "btn_1dui":
this.index++;
this.index > this.allType.repeat2.length - 1 && (this.index = 0);
n = this.allType.repeat2[this.index];
break;

case "btn_2dui":
this.index++;
this.index > this.allType.repeat2.length - 2 && (this.index = 0);
n = this.allType.repeat2[this.index].concat(this.allType.repeat2[this.index + 1]);
break;

case "btn_3tiao":
this.index++;
this.index > this.allType.repeat3.length - 1 && (this.index = 0);
n = this.allType.repeat3[this.index];
break;

case "btn_shunzi":
this.index++;
this.index > this.allType.shunzi.length - 1 && (this.index = 0);
n = this.allType.shunzi[this.index];
break;

case "btn_tonghua":
this.index++;
this.index > this.allType.tonghua.length - 1 && (this.index = 0);
n = this.allType.tonghua[this.index];
break;

case "btn_hulu":
this.index++;
this.index > this.allType.repeat2.length - 1 && (this.index = 0);
this.index2++;
this.index2 > this.allType.repeat3.length - 1 && (this.index2 = 0);
n = this.allType.repeat2[this.index].concat(this.allType.repeat3[this.index2]);
if (this.checkNodeRepeat(n)) {
this.index++;
this.index > this.allType.repeat2.length - 1 && (this.index = 0);
n = this.allType.repeat2[this.index].concat(this.allType.repeat3[this.index2]);
}
break;

case "btn_4tiao":
this.index++;
this.index > this.allType.repeat4.length - 1 && (this.index = 0);
n = this.allType.repeat4[this.index];
break;

case "btn_tonghuashun":
n = this.check_tonghua_shun(i, 5);
}
for (var a = 0; a < n.length; a++) {
var s = n[a];
s.getComponent("MyPoker").setUp();
this._chuPaiTempArr.push(s);
}
},
checkNodeRepeat: function(e) {
e.sort(function(e, t) {
return e.poker_id - t.poker_id;
});
var t = -1;
for (var i in e) {
if (e[i].poker_id == t) return !0;
t = e[i].poker_id;
}
},
onSortClick: function(e, t) {
cc.vv.audioMgr.playBtnClick();
var i = [];
this._chuPaiTempArr = [];
for (var n = 0; n < this.holdsNode.getChildren().length; n++) {
var a = this.holdsNode.getChildren()[n];
i.push(a);
a.getComponent("MyPoker").setDown();
}
this.holdsNode.removeAllChildren(!1);
"1" == t ? i.sort(function(e, t) {
return t.val - e.val;
}) : i.sort(function(e, t) {
return e.col != t.col ? e.col - t.col : t.val - e.val;
});
for (n = 0; n < i.length; n++) {
var s = i[n];
this.holdsNode.addChild(s);
}
},
resetHolds: function() {
for (var e = 0; e < this.holdsNode.getChildren().length; e++) {
this.holdsNode.getChildren()[e].getComponent("MyPoker").setDown();
}
this._chuPaiTempArr = [];
},
resetTipButton: function() {
var e = this.holdsNode.getChildren(), t = [];
t = t.concat(e);
this.initAllTypes(t);
this.btn_gao.interactable = 0 < this.holdsNode.getChildren().length;
this.btn_1dui.interactable = 0 < this.check_repeat(e, 2).length;
this.btn_2dui.interactable = 0 < this.check_2_pair(e).length;
this.btn_3tiao.interactable = 0 < this.check_repeat(e, 3).length;
this.btn_shunzi.interactable = 0 < this.check_shunzi(e, 5).length;
this.btn_tonghua.interactable = 0 < this.check_tonghua(e, 5).length;
this.btn_hulu.interactable = 0 < this.check_hulu(e).length;
this.btn_4tiao.interactable = 0 < this.check_repeat(e, 4).length;
this.btn_tonghuashun.interactable = 0 < this.check_tonghua_shun(e, 5).length;
},
checkFinish: function() {
3 == this._daoArr[0].getChildren().length && 5 == this._daoArr[1].getChildren().length && 5 == this._daoArr[2].getChildren().length ? this._btnOut.active = !0 : this._btnOut.active = !1;
},
checkAutoFillPoker: function() {
if (3 == this._daoArr[0].getChildren().length && 5 == this._daoArr[1].getChildren().length) {
for (;0 < this.holdsNode.getChildren().length; ) {
(e = this.holdsNode.getChildren()[0]).removeFromParent(!1);
this._daoArr[2].addChild(e);
}
this.setDaoType(2);
}
if (5 == this._daoArr[1].getChildren().length && 5 == this._daoArr[2].getChildren().length) {
for (;0 < this.holdsNode.getChildren().length; ) {
(e = this.holdsNode.getChildren()[0]).removeFromParent(!1);
this._daoArr[0].addChild(e);
}
this.setDaoType(0);
}
if (3 == this._daoArr[0].getChildren().length && 5 == this._daoArr[2].getChildren().length) {
for (;0 < this.holdsNode.getChildren().length; ) {
var e;
(e = this.holdsNode.getChildren()[0]).removeFromParent(!1);
this._daoArr[1].addChild(e);
}
this.setDaoType(1);
}
},
onChuPaiClick: function() {
this.chuPai();
},
chuPai: function(e) {
var t = [], i = JSON.parse(cc.vv.msgTemp.CS_Chose);
i.stage = t;
if (e) {
i.out_type = e.type;
var n = e.arr;
(a = {
type: 1
}).card_data = [ n[0].poker_id, n[1].poker_id, n[2].poker_id ];
t.push(a);
(s = {
type: 1
}).card_data = [ n[3].poker_id, n[4].poker_id, n[5].poker_id, n[6].poker_id, n[7].poker_id ];
t.push(s);
(c = {
type: 1
}).card_data = [ n[8].poker_id, n[9].poker_id, n[10].poker_id, n[11].poker_id, n[12].poker_id ];
t.push(c);
} else {
i.out_type = 1;
var a, s, c;
(a = {}).type = this._daoTypeArr[0];
a.card_data = this.getCardData(this._daoArr[0].getChildren());
t.push(a);
(s = {}).type = this._daoTypeArr[1];
s.card_data = this.getCardData(this._daoArr[1].getChildren());
t.push(s);
(c = {}).type = this._daoTypeArr[2];
c.card_data = this.getCardData(this._daoArr[2].getChildren());
t.push(c);
}
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("chose", i);
},
getCardData: function(e) {
for (var t = [], i = 0; i < e.length; i++) {
var n = e[i].poker_id;
t.push(n);
}
return t;
},
get_poker_display_value: function(e) {
return e < 4 ? 15 : Math.floor(e / 4) + 2;
},
get_poker_value: function(e) {
return Math.floor(e / 4);
},
check_di: function(e) {
var t = [];
e.sort(function(e, t) {
return e.val - t.val;
});
t.push(e[0]);
return t;
},
check_gao: function(e) {
var t = [];
e.sort(function(e, t) {
return t.val - e.val;
});
t.push(e[0]);
return t;
},
check_repeat: function(e, t) {
for (var i = [ [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [] ], n = 0; n < e.length; n++) {
var a = e[n];
a.val < 0 && console.log("xxxxxxxxxxxxxxxx");
i[a.val].push(a);
}
for (n = 0; n < i.length; n++) {
if (i[n].length != t) {
i.splice(n, 1);
n--;
}
}
if (0 < i.length) {
i.sort(function(e, t) {
return t[0].val - e[0].val;
});
return i[0];
}
return [];
},
check_2_pair: function(e) {
for (var t = [ [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [] ], i = 0; i < e.length; i++) {
var n = e[i];
t[n.val].push(n);
}
for (i = 0; i < t.length; i++) {
if (2 != t[i].length) {
t.splice(i, 1);
i--;
}
}
if (1 < t.length) {
t.sort(function(e, t) {
return t[0].val - e[0].val;
});
return t[0].concat(t[1]);
}
return [];
},
check_hulu: function(e) {
var t = [], i = this.check_repeat_all(e, 3);
if (0 < i.length) {
i.sort(function(e, t) {
return t[0].val - e[0].val;
});
var n = this.check_repeat(e, 2);
0 < n.length ? t = i[0].concat(n) : 1 < (n = this.check_repeat_all(e, 2)).length && (t = -1 == i[0].indexOf(n[0][0]) ? i[0].concat(n[0]) : i[0].concat(n[1]));
}
return t;
},
check_shunzi: function(e, t) {
var i = [], n = function(e, t) {
return t.val != e.val ? t.val - e.val : t.col - e.col;
};
e.sort(n);
for (var a = 0, s = 0; s < e.length; s++) {
if ((c = e[s]).val != a - 1) {
if (c.val == a) continue;
i = [];
}
a = c.val;
i.push(c);
if (i.length >= t) return i;
}
i = [];
this.changeAto_1(e);
e.sort(n);
for (s = a = 0; s < e.length; s++) {
var c;
if ((c = e[s]).val != a - 1) {
if (c.val == a) continue;
i = [];
}
a = c.val;
i.push(c);
if (i.length >= t) {
this.change_1ToA(e);
return i;
}
}
this.change_1ToA(e);
return [];
},
changeAto_1: function(e) {
for (var t = 0; t < e.length; t++) {
var i = e[t];
12 == i.val && (i.val = -1);
}
},
change_1ToA: function(e) {
for (var t = 0; t < e.length; t++) {
var i = e[t];
-1 == i.val && (i.val = 12);
}
},
check_tonghua: function(e, t) {
e.sort(function(e, t) {
return t.val - e.val;
});
for (var i = [], n = [], a = [], s = [], c = 0; c < e.length; c++) {
var r = e[c];
0 == r.col && i.push(r);
1 == r.col && n.push(r);
2 == r.col && a.push(r);
3 == r.col && s.push(r);
}
var o = [];
if (i.length >= t) {
i.splice(t, i.length - t);
o.push(i);
}
if (n.length >= t) {
n.splice(t, n.length - t);
o.push(n);
}
if (a.length >= t) {
a.splice(t, a.length - t);
o.push(a);
}
if (s.length >= t) {
s.splice(t, s.length - t);
o.push(s);
}
var h = this;
if (0 < o.length) {
o.sort(function(e, t) {
return h.compareEveryPK(e, t) ? -1 : 1;
});
return o[0];
}
return [];
},
check_tonghua_shun: function(e, t) {
e.sort(function(e, t) {
return t.val - e.val;
});
for (var i = [], n = [], a = [], s = [], c = 0; c < e.length; c++) {
var r = e[c];
r || console.log("xxxxxxx");
0 == r.col && i.push(r);
1 == r.col && n.push(r);
2 == r.col && a.push(r);
3 == r.col && s.push(r);
}
var o = this.check_shunzi(i, t);
if (i.length >= t && o.length >= t) {
o.splice(t, o.length - t);
return o;
}
var h = this.check_shunzi(n, t);
if (n.length >= t && h.length >= t) {
h.splice(t, n.length - t);
return h;
}
var l = this.check_shunzi(a, t);
if (a.length >= t && l.length >= t) {
l.splice(t, a.length - t);
return l;
}
var d = this.check_shunzi(s, t);
if (s.length >= t && d.length >= t) {
d.splice(t, s.length - t);
return d;
}
return [];
},
check_dao_type: function(e) {
if (0 < this.check_tonghua_shun(e, 5).length) {
var t = this.check_tonghua_shun(e, 5);
(i = {
type: 9,
name: "同花顺"
}).maxValue = t[0].val;
i.maxColor = t[0].col;
return i;
}
if (0 < this.check_repeat(e, 4).length) {
t = this.check_repeat(e, 4);
(i = {
type: 8,
name: "四条"
}).maxValue = t[0].val;
i.maxColor = t[0].col;
return i;
}
if (0 < this.check_hulu(e).length) {
t = this.check_hulu(e);
(i = {
type: 7,
name: "葫芦"
}).maxValue = t[0].val;
i.maxColor = t[0].col;
return i;
}
if (0 < this.check_tonghua(e, 5).length) {
(i = {
type: 6,
name: "同花",
maxValue: 0,
maxColor: 0
}).arr = e;
return i;
}
if (0 < this.check_shunzi(e, 5).length) {
t = this.check_shunzi(e, 5);
(i = {
type: 5,
name: "顺子"
}).maxValue = t[0].val;
i.maxColor = t[0].col;
i.arr = t;
return i;
}
if (0 < this.check_repeat(e, 3).length) {
t = this.check_repeat(e, 3);
(i = {
type: 4,
name: "三条"
}).maxValue = t[0].val;
i.maxColor = t[0].col;
return i;
}
if (0 < this.check_2_pair(e).length) {
(t = this.check_2_pair(e)).sort(function(e, t) {
return t.val - e.val;
});
(i = {
type: 3,
name: "两对"
}).maxValue = t[0].val;
i.maxColor = t[0].col;
i.maxValue2 = t[3].val;
i.maxColor2 = t[3].col;
i.arr = e;
return i;
}
if (0 < this.check_repeat(e, 2).length) {
t = this.check_repeat(e, 2);
(i = {
type: 2,
name: "一对"
}).maxValue = t[0].val;
i.maxColor = t[0].col;
i.arr = e;
return i;
}
var i;
(i = {
type: 1,
name: "乌龙",
maxValue: 0,
maxColor: 0
}).arr = e;
return i;
},
compare: function(e, t) {
return e.type != t.type ? e.type > t.type : 6 == e.type ? this.compareEveryPK(e.arr, t.arr) : 5 == e.type ? e.maxValue != t.maxValue ? e.maxValue > t.maxValue : this.compareEveryPK(e.arr, t.arr) : 3 == e.type ? e.maxValue != t.maxValue ? e.maxValue > t.maxValue : e.maxValue2 != t.maxValue2 ? e.maxValue2 > t.maxValue2 : e.maxColor != e.maxColor ? e.maxColor > e.maxColor : e.maxColor2 != e.maxColor2 ? e.maxColor2 > e.maxColor2 : this.compareEveryPK(e.arr, t.arr) : 2 == e.type ? e.maxValue != t.maxValue ? e.maxValue > t.maxValue : e.maxColor != t.maxColor ? e.maxColor > t.maxColor : this.compareEveryPK(e.arr, t.arr) : 1 == e.type ? this.compareEveryPK(e.arr, t.arr) : e.maxValue != t.maxValue ? e.maxValue > t.maxValue : e.maxColor > t.maxColor;
},
compareEveryPK: function(e, t) {
e.sort(function(e, t) {
return t.val - e.val;
});
t.sort(function(e, t) {
return t.val - e.val;
});
if (e.length != t.length) return e.length > t.length;
for (var i = 0; i < e.length; i++) if (e[i].val != t[i].val) return e[i].val > t[i].val;
return e[0].col > t[0].col;
},
check_global_type: function(e) {
var t = {
type: 1,
name: "无类型",
arr: e
};
if (0 < this.check_global_15(e).length) {
t.type = 15;
t.name = "至尊青龙";
return t;
}
if (0 < this.check_global_14(e).length) {
t.type = 14;
t.name = "一条龙";
t.arr = this.check_global_14(e);
return t;
}
if (0 < this.check_global_13(e).length) {
t.type = 13;
t.name = "12皇族";
return t;
}
if (0 < this.check_global_12(e).length) {
t.type = 12;
t.name = "三同花顺";
t.arr = this.check_global_12(e);
return t;
}
if (0 < this.check_global_11(e).length) {
t.type = 11;
t.name = "三分天下";
return t;
}
if (0 < this.check_global_10(e).length) {
t.type = 10;
t.name = "全大";
return t;
}
if (0 < this.check_global_9(e).length) {
t.type = 9;
t.name = "全小";
return t;
}
if (0 < this.check_global_8(e).length) {
t.type = 8;
t.name = "凑一色";
return t;
}
if (0 < this.check_global_7(e).length) {
t.type = 7;
t.name = "双怪冲三";
return t;
}
if (0 < this.check_global_6(e).length) {
t.type = 6;
t.name = "四炸三条";
return t;
}
if (0 < this.check_global_5(e).length) {
t.type = 5;
t.name = "五对三条";
return t;
}
if (0 < this.check_global_4(e).length) {
t.type = 4;
t.name = "六对半";
return t;
}
if (0 < this.check_global_3(e).length) {
t.type = 3;
t.name = "三顺子";
t.arr = this.check_global_3(e);
return t;
}
if (0 < this.check_global_2(e).length) {
t.type = 2;
t.name = "三同花";
t.arr = this.check_global_2(e);
return t;
}
return t;
},
check_global_15: function(e) {
e.sort(function(e, t) {
return e.val - t.val;
});
return 13 == this.check_tonghua_shun(e, 13).length ? e : [];
},
check_global_14: function(e) {
e.sort(function(e, t) {
return e.val - t.val;
});
return 13 == this.check_shunzi(e, 13).length ? e : [];
},
check_global_13: function(e) {
for (var t = [], i = 0; i < e.length; i++) {
var n = e[i];
if (n.val < 8) return [];
t.push(n);
}
return t;
},
check_global_12: function(e) {
var t = this.find_shunzi(e, 3), i = this.find_shunzi(t.noArr, 5), n = this.find_shunzi(i.noArr, 5);
if (0 < t.yesArr.length && 0 < this.check_tonghua(t.yesArr).length && 0 < i.yesArr.length && 0 < this.check_tonghua(i.yesArr).length && 0 < n.yesArr.length && 0 < this.check_tonghua(n.yesArr).length) return t.yesArr.concat(i.yesArr).concat(n.yesArr);
t = this.find_shunzi(e, 5);
i = this.find_shunzi(t.noArr, 3);
n = this.find_shunzi(i.noArr, 5);
if (0 < t.yesArr.length && 0 < this.check_tonghua(t.yesArr).length && 0 < i.yesArr.length && 0 < this.check_tonghua(i.yesArr).length && 0 < n.yesArr.length && 0 < this.check_tonghua(n.yesArr).length) return i.yesArr.concat(t.yesArr).concat(n.yesArr);
t = this.find_shunzi(e, 5);
i = this.find_shunzi(t.noArr, 5);
n = this.find_shunzi(i.noArr, 3);
return 0 < t.yesArr.length && 0 < this.check_tonghua(t.yesArr).length && 0 < i.yesArr.length && 0 < this.check_tonghua(i.yesArr).length && 0 < n.yesArr.length && 0 < this.check_tonghua(n.yesArr).length ? n.yesArr.concat(t.yesArr).concat(i.yesArr) : [];
},
check_global_11: function(e) {
for (var t = [ [], [], [], [], [], [], [], [], [], [], [], [], [] ], i = 0; i < e.length; i++) {
var n = e[i];
t[n.val].push(n);
}
for (i = 0; i < t.length; i++) {
if (4 != t[i].length) {
t.splice(i, 1);
i--;
}
}
return 3 == t.length ? e : [];
},
check_global_10: function(e) {
for (var t = [], i = 0; i < e.length; i++) {
var n = e[i];
if (n.val < 6) return [];
t.push(n);
}
return t;
},
check_global_9: function(e) {
for (var t = [], i = 0; i < e.length; i++) {
var n = e[i];
if (6 < n.val) return [];
t.push(n);
}
return t;
},
check_global_8: function(e) {
return 13 == this.check_tonghua(e, 13).length ? e : [];
},
check_global_7: function(e) {
for (var t = [ [], [], [], [], [], [], [], [], [], [], [], [], [] ], i = 0; i < e.length; i++) {
var n = e[i];
t[n.val].push(n);
}
var a = 0, s = 0;
for (i = 0; i < t.length; i++) {
var c = t[i];
3 == c.length && a++;
2 == c.length && s++;
}
return 3 == a && 2 == s ? e : [];
},
check_global_6: function(e) {
for (var t = [ [], [], [], [], [], [], [], [], [], [], [], [], [] ], i = 0; i < e.length; i++) {
var n = e[i];
t[n.val].push(n);
}
for (i = 0; i < t.length; i++) {
if (3 != t[i].length) {
t.splice(i, 1);
i--;
}
}
return 4 == t.length ? e : [];
},
check_global_5: function(e) {
for (var t = [ [], [], [], [], [], [], [], [], [], [], [], [], [] ], i = 0; i < e.length; i++) {
var n = e[i];
t[n.val].push(n);
}
var a = 0, s = 0;
for (i = 0; i < t.length; i++) {
var c = t[i];
3 == c.length && a++;
2 == c.length && s++;
}
return 1 == a && 5 == s ? e : [];
},
check_global_4: function(e) {
for (var t = [ [], [], [], [], [], [], [], [], [], [], [], [], [] ], i = 0; i < e.length; i++) {
var n = e[i];
t[n.val].push(n);
}
for (i = 0; i < t.length; i++) {
if (2 != t[i].length) {
t.splice(i, 1);
i--;
}
}
return 6 == t.length ? e : [];
},
check_global_3: function(e) {
var t = this.find_shunzi(e, 3), i = this.find_shunzi(t.noArr, 5), n = this.find_shunzi(i.noArr, 5);
if (0 < t.yesArr.length && 0 < i.yesArr.length && 0 < n.yesArr.length) return t.yesArr.concat(i.yesArr).concat(n.yesArr);
t = this.find_shunzi(e, 5);
i = this.find_shunzi(t.noArr, 3);
n = this.find_shunzi(i.noArr, 5);
if (0 < t.yesArr.length && 0 < i.yesArr.length && 0 < n.yesArr.length) return i.yesArr.concat(t.yesArr).concat(n.yesArr);
t = this.find_shunzi(e, 5);
i = this.find_shunzi(t.noArr, 5);
n = this.find_shunzi(i.noArr, 3);
return 0 < t.yesArr.length && 0 < i.yesArr.length && 0 < n.yesArr.length ? n.yesArr.concat(t.yesArr).concat(i.yesArr) : [];
},
check_global_2: function(e) {
e.sort(function(e, t) {
return e.col - t.col;
});
return e[0].col == e[1].col && e[0].col == e[2].col && e[3].col == e[4].col && e[3].col == e[5].col && e[3].col == e[6].col && e[3].col == e[7].col && e[8].col == e[9].col && e[8].col == e[10].col && e[8].col == e[11].col && e[8].col == e[12].col ? e : e[0].col == e[1].col && e[0].col == e[2].col && e[0].col == e[3].col && e[0].col == e[4].col && e[5].col == e[6].col && e[5].col == e[7].col && e[8].col == e[9].col && e[8].col == e[10].col && e[8].col == e[11].col && e[8].col == e[12].col ? [ e[5], e[6], e[7], e[0], e[1], e[2], e[3], e[4], e[8], e[9], e[10], e[11], e[12] ] : e[0].col == e[1].col && e[0].col == e[2].col && e[0].col == e[3].col && e[0].col == e[4].col && e[5].col == e[6].col && e[5].col == e[7].col && e[5].col == e[8].col && e[5].col == e[9].col && e[10].col == e[11].col && e[10].col == e[12].col ? [ e[10], e[11], e[12], e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9] ] : [];
},
find_shunzi: function(e, t) {
var i = {
yesArr: [],
noArr: []
}, n = this.check_shunzi(e, t);
i.yesArr = n;
for (var a = 0; a < e.length; a++) {
var s = e[a];
-1 == n.indexOf(s) && i.noArr.push(s);
}
return i;
},
auto_build: function(e) {
for (var t = [], i = 9; 1 < i; i--) {
var n = [];
n = n.concat(e);
var a = this.auto_build_dao(n, i, 5);
n = this.getDifferent(n, a);
var s = this.auto_build_dao(n, i, 5);
n = this.getDifferent(n, s);
var c = this.auto_build_dao(n, i, 3);
n = this.getDifferent(n, c);
5 == i && console.log("xxxxx");
n.sort(function(e, t) {
return t.val - e.val;
});
for (;a.length < 5; ) {
var r = n.shift();
a.push(r);
}
for (;s.length < 5; ) {
r = n.shift();
s.push(r);
}
for (;c.length < 3; ) {
r = n.shift();
c.push(r);
}
var o = [ {
type: this.check_dao_type(c),
arr: c
}, {
type: this.check_dao_type(s),
arr: s
}, {
type: this.check_dao_type(a),
arr: a
} ];
if (0 == t.length) t.push(o); else {
var h = t[t.length - 1];
h[0].type.type == o[0].type.type && h[1].type.type == o[1].type.type && h[2].type.type == o[2].type.type || o[0].type.type <= o[1].type.type && o[1].type.type <= o[2].type.type && t.push(o);
}
}
return t;
},
getDifferent: function(e, t) {
for (var i = [], n = 0; n < e.length; n++) {
var a = e[n];
-1 == t.indexOf(a) && i.push(a);
}
return i;
},
auto_build_dao: function(e, t, i) {
var n = [];
if (9 <= t && 0 == n.length && 3 < i) {
if (0 < (a = this.check_tonghua_shun(e, i)).length) return n = n.concat(a);
}
if (8 <= t && 0 == n.length && 3 < i) {
if (0 < (a = this.check_repeat(e, 4)).length) return n = n.concat(a);
}
if (7 <= t && 0 == n.length && 3 < i) {
if (0 < (a = this.check_hulu(e)).length) return n = n.concat(a);
}
if (6 <= t && 0 == n.length && 3 < i) {
if (0 < (a = this.check_tonghua(e, i)).length) return n = n.concat(a);
}
if (5 <= t && 0 == n.length && 3 < i) {
if (0 < (a = this.check_shunzi(e, i)).length) return n = n.concat(a);
}
if (4 <= t && 0 == n.length) {
if (0 < (a = this.check_repeat(e, 3)).length) return n = n.concat(a);
}
if (3 <= t && 0 == n.length && 3 < i) {
if (0 < (a = this.check_2_pair(e)).length) return n = n.concat(a);
}
if (2 <= t && 0 == n.length) {
var a;
if (0 < (a = this.check_repeat(e, 2)).length) return n = n.concat(a);
}
return n;
},
check_repeat_all: function(e, t) {
for (var i = [ [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [] ], n = 0; n < e.length; n++) {
var a = e[n];
a.val < 0 && console.log("xxxxxxxxxxxxxxxx");
i[a.val].length < t && i[a.val].push(a);
}
for (n = 0; n < i.length; n++) {
if (i[n].length < t) {
i.splice(n, 1);
n--;
}
}
return i;
},
check_shunzi_all: function(e, t) {
var i = [], n = [], a = function(e, t) {
return t.val != e.val ? t.val - e.val : t.col - e.col;
};
e.sort(a);
for (var s = 0, c = 0; c < e.length; c++) {
var r = e[c];
console.log(r.val);
if (r.val != s - 1) {
if (r.val == s) continue;
n.length >= t && i.push(n);
n = [];
}
s = r.val;
n.push(r);
}
if (0 < i.length) {
var o = [];
for (var h in i) o = o.concat(this.find_shunzi_from_arr(i[h]));
return o;
}
n = [];
this.changeAto_1(e);
e.sort(a);
for (c = s = 0; c < e.length; c++) {
if ((r = e[c]).val != s - 1) {
if (r.val == s) continue;
n.length >= t && i.push(n);
n = [];
}
s = r.val;
n.push(r);
}
if (n.length >= t) {
this.change_1ToA(e);
return this.find_shunzi_from_arr(n);
}
if (0 < i.length) {
this.change_1ToA(e);
o = [];
for (var h in i) o = o.concat(this.find_shunzi_from_arr(i[h]));
return o;
}
this.change_1ToA(e);
return [];
},
find_shunzi_from_arr: function(e) {
for (var t = [], i = 0; i < e.length - 4; i++) {
var n = [];
n[0] = e[i];
n[1] = e[i + 1];
n[2] = e[i + 2];
n[3] = e[i + 3];
n[4] = e[i + 4];
t.push(n);
}
return t;
},
check_tonghua_all: function(e, t) {
e.sort(function(e, t) {
return t.val - e.val;
});
for (var i = [], n = [], a = [], s = [], c = 0; c < e.length; c++) {
var r = e[c];
0 == r.col && i.push(r);
1 == r.col && n.push(r);
2 == r.col && a.push(r);
3 == r.col && s.push(r);
}
var o = [];
i.length >= t && (o = o.concat(this.find_tonghua_from_arr(i)));
n.length >= t && (o = o.concat(this.find_tonghua_from_arr(n)));
a.length >= t && (o = o.concat(this.find_tonghua_from_arr(a)));
s.length >= t && (o = o.concat(this.find_tonghua_from_arr(s)));
return 0 < o.length ? o : [];
},
find_tonghua_from_arr: function(e) {
for (var t = [], i = 0; i < e.length - 4; i++) {
var n = [];
n[0] = e[i];
n[1] = e[i + 1];
n[2] = e[i + 2];
n[3] = e[i + 3];
n[4] = e[i + 4];
t.push(n);
}
return t;
}
});
cc._RF.pop();
}, {} ],
param_createRoom: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7af8ed7CL9CV6A07xpjbGFM", "param_createRoom");
cc.Class({
ctor: function() {
cc.vv.param_creatRoom = [];
},
init: function() {
var e = cc.RawAsset;
cc.loader.loadRes("hall/jsons/createRoom", e, function(e, t) {
for (var i = 0; i < t.length; i++) cc.vv.param_creatRoom.push(t[i]);
});
}
});
cc._RF.pop();
}, {} ],
params_init: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4903oNiKVDVasBKoJMLc/J", "params_init");
cc.Class({
init: function() {
new (e("param_createRoom"))().init();
}
});
cc._RF.pop();
}, {
param_createRoom: "param_createRoom"
} ],
poker_util_3g: [ function(e, t, M) {
"use strict";
cc._RF.push(t, "42b4dy7gxtBzLV2P+BGyCo/", "poker_util_3g");
M.get_poker_value = function(e) {
return 0 == cc.vv.gameNetMgr.use58() ? Math.floor(e / 4) + 3 : e < 8 ? Math.floor(e / 4) + 14 : Math.floor(e / 4) + 1;
};
M.get_poker_color = function(e) {
return e % 4;
};
function p(e) {
var t = [];
for (var i in e) t.push(M.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}
function s(e) {
for (var t = e.length, i = 0; i < t - 1; ++i) {
if (15 == e[i] || 16 == e[i] || 15 == e[i + 1] || 16 == e[i + 1]) return !1;
if (e[i] != e[i + 1] - 1) return !1;
}
return !0;
}
function c(e) {
for (var t = e.length, i = [], n = 0; n < t; ) {
if (e[n] != e[n + 1]) return !1;
i.push(e[n]);
n += 2;
}
return s(i);
}
function m(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
for (var a = 0, s = n + 1; s < e.length; ++s) {
e[n] == e[s] && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
return i;
}
function r(e) {
for (var t = m(e), i = [], n = 0; n < e.length; n++) e[n] != t && i.push(e[n]);
return i[0] == i[1];
}
function o(e) {
for (var t = [], i = 0; i < e.length; i++) for (var n = 0, a = i + 1; a < e.length; ++a) {
e[i] == e[a] && n++;
2 == n && -1 == t.indexOf(e[i]) && t.push(e[i]);
}
t.sort(function(e, t) {
return e - t;
});
return t;
}
function h(e) {
for (var t = !0, i = M.get_poker_color(e[0]), n = 0; n < e.length; n++) {
var a = e[n];
if (i != M.get_poker_color(a)) {
t = !1;
break;
}
}
return t;
}
function l(e) {
for (var t = !0, i = e[0], n = 0; n < e.length; n++) if (i != e[n]) {
t = !1;
break;
}
return t;
}
function u(e) {
for (var t = [], i = 0; i < e.length; i++) {
for (var n = M.get_poker_value(e[i]), a = 0, s = i + 1; s < e.length; ++s) {
n == M.get_poker_value(e[s]) && a++;
}
if (3 <= a) {
for (var c = 0; c < a + 1; c++) t.push(e[i + c]);
break;
}
}
return t;
}
function d(e) {
if (e.length < 4) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 4 == t.length ? t : [];
}
function v(e) {
if (e.length < 2) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 2 == t.length ? t[0] == t[1] ? [] : t : [];
}
function g(e, t) {
for (var i = M.get_poker_value(e[0]), n = e.length, a = [], s = 0; s < t.length; s++) {
for (var c = M.get_poker_value(t[s]), r = 1, o = s + 1; o < t.length; ++o) {
c == M.get_poker_value(t[o]) && r++;
}
console.log("count:", r, "base_boom_len:", n, "id_a:", c);
if (!(r == n && c <= i) && n <= r) {
for (var h = 0; h < r; h++) a.push(t[s + h]);
break;
}
}
return a;
}
function _(e, t) {
if (1 < e.length) {
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
if (1 < a.length) return null;
}
var i = e[0];
if (1 == cc.vv.gameNetMgr.isSingle()) {
return null == i ? t[t.length - 1] : M.get_poker_value(t[t.length - 1]) > M.get_poker_value(i) ? t[t.length - 1] : null;
}
var n = cc.vv.gameNetMgr.now_card_data;
if (53 == i && n[0] == i) return null;
if (52 == i) {
if (53 == t[t.length - 1]) return t[t.length - 1];
if (n[0] == i) return null;
}
if (M.get_poker_value(i) >= M.get_poker_value(t[t.length - 1])) {
var a;
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
}
var s = null == i ? 0 : M.get_poker_value(i), c = 0;
for (c = 0; c < t.length; ++c) {
if (1 != f(r = M.get_poker_value(t[c]), t) && (1 != C(r, t) && s < r)) return t[c];
}
for (c = 0; c < t.length; ++c) {
if (1 != C(r = M.get_poker_value(t[c]), t) && s < r) return t[c];
}
for (c = 0; c < t.length; ++c) {
var r;
if (s < (r = M.get_poker_value(t[c]))) return t[c];
}
return null;
}
function f(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (2 == i) return !0;
}
return !1;
}
function C(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (3 == i) return !0;
}
return !1;
}
function y(e, t) {
if (t.length < 2) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) for (var c = M.get_poker_value(t[s]), r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r])) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
n[n.length - 1] == e[0] && (e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
for (var o = [], h = 0; h < i.length; ++h) if (1 != C(i[h], t) && i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
if (0 == o.length) for (h = 0; h < i.length; ++h) if (i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
52 != o[0] && 53 != o[0] || o[0] != o[1] && (o = []);
return o;
}
function b(e, t) {
if (t.length < 4 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) {
var c = M.get_poker_value(t[s]);
if (15 != c && 16 != c) for (var r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r]) && -1 == i.indexOf(c)) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
}
if (n.length < 2) return [];
var o = S(n, e[0], e.length / 2);
if (0 == o.length) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
o = S(n, e[0], e.length / 2);
}
for (var h = [], l = 0; l < o.length; ++l) for (var d = M.get_poker_value(o[l]), u = 0; u < a.length; ++u) {
if (d == M.get_poker_value(a[u])) {
h.push(o[l]);
h.push(a[u]);
}
}
return h;
}
function N(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = 0; a < t.length; ++a) {
var s = M.get_poker_value(t[a]);
if (-1 == i.indexOf(s) && s < 15) {
i.push(s);
n.push(t[a]);
}
}
if (i.length < 5 || i.length < e.length) return [];
var c = S(n, e[0], e.length);
if (e[e.length - 1] == c[c.length - 1]) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
c = S(n, e[0], e.length);
}
return c;
}
function S(e, t, i) {
e.sort(function(e, t) {
return e - t;
});
for (var n = [], a = [], s = 0; s < e.length; ++s) {
var c = M.get_poker_value(e[s]);
if (c > M.get_poker_value(t)) {
n.push(c);
a.push(e[s]);
}
}
if (n.length < i) return [];
for (var r = 0; r < n.length - i + 1; ++r) {
for (var o = 0, h = [], l = r; l < r + i; ++l) {
var d = n[l], u = n[l + 1];
o++;
h.push(a[l]);
if (u && u - d != 1) break;
}
if (o == i) return h;
}
return [];
}
function A(e, t) {
if (t.length < 5 || t.length < e.length) return [];
var i = function(e, t) {
for (var i = [], n = 0; n < t.length; n++) {
var a = M.get_poker_color(t[n]);
e == a && i.push(t[n]);
}
return i;
}(M.get_poker_color(e[0]), t);
return i.length < 5 || i.length < e.length ? [] : N(e, i);
}
function I(e, t) {
if (t.length < 3 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
return l;
}
function E(e, t) {
if (t.length < 4 || t.length < e.length) return [];
var i = I(e, t);
if (0 < i.length) {
for (var n = !1, a = 0; a < t.length; ++a) {
if (M.get_poker_value(t[a]) != M.get_poker_value(i[0])) {
i.push(t[a]);
n = !0;
break;
}
}
0 == n && (i = []);
}
return i;
}
function B(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
if (0 < l.length) for (var v = 0, g = 0; g < t.length; ++g) {
if (M.get_poker_value(t[g]) != M.get_poker_value(l[0])) {
l.push(t[g]);
v++;
}
if (2 == v) break;
}
return l;
}
function w(e, t) {
if (t.length < 5) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
if (0 < l.length) {
for (var v = [], g = 0; g < t.length; ++g) {
M.get_poker_value(t[g]) != M.get_poker_value(l[0]) && v.push(t[g]);
}
for (c = 0; c < v.length; ++c) {
var _ = !1, f = M.get_poker_value(v[c]);
for (h = c + 1; h < v.length; ++h) {
if (f == M.get_poker_value(v[h])) {
_ = !0;
l.push(v[c]);
l.push(v[h]);
break;
}
}
if (_) break;
}
}
return 5 == l.length ? l : [];
}
function k(e, t) {
if (t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (15 != r && 16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = function(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
var a = 0, s = M.get_poker_value(e[n]);
if (16 != s) {
for (var c = n + 1; c < e.length; ++c) {
var r = M.get_poker_value(e[c]);
s == r && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
}
return i;
}(e), u = e.length / 5;
if (i.length < u) return [];
var v = S(n, d, u);
if (0 == v.length) return [];
for (var g = S(a, d, u), _ = S(s, d, u), f = 0; f < u; ++f) {
l.push(v[f]);
l.push(g[f]);
l.push(_[f]);
}
for (var p = 0, m = 0; m < t.length; ++m) {
for (var C = M.get_poker_value(t[m]), y = !1, b = 0; b < v.length; ++b) {
if (C == M.get_poker_value(v[b])) {
y = !0;
break;
}
}
if (0 == y) {
l.push(t[m]);
p++;
}
if (p == 2 * u) break;
}
return l;
}
function T(e, t) {
if (t.length < e.length) return [];
var i = u(e);
if (i.length < 4) return [];
for (var n = M.get_poker_value(i[0]), a = [], s = !1, c = 0; c < t.length; c++) {
var r = M.get_poker_value(t[c]);
if (n < r) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (3 == o) {
s = !0;
a.push(val_list[c]);
a.push(val_list[c + 1]);
a.push(val_list[c + 2]);
a.push(val_list[c + 3]);
break;
}
}
if (s) break;
}
if (0 < a.length) for (var l = 0, d = 0; d < t.length; ++d) {
if (M.get_poker_value(t[d]) != M.get_poker_value(a[0])) {
a.push(t[d]);
l++;
}
if (2 == l) break;
}
return a;
}
M.check_out_type = function(e) {
var t = p(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2;
break;
}
if (2 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < m(t)) {
i = 5;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
var n = o(t);
n.length == t.length / 5 && s(n) && (i = 6);
break;
}
} while (0);
return i;
};
M.getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带二";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
}
return t;
};
M.check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (4 == d(a).length) return !0;
if (42 == d(s).length) return !1;
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
var o = _(a, s);
null != o && n.push(o);
break;

case 2:
n = y(a, s);
break;

case 3:
n = b(a, s);
break;

case 4:
n = N(a, s);
break;

case 5:
n = B(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
}
}
return !(0 < n.length);
};
M.check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var n = u(i);
if (0 < n.length) {
var a = u(t);
0 == t.length || n.length > a.length || n.length == a.length && M.get_poker_value(n[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = n : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = d(i);
if (4 == s.length) {
cc.vv.gameNetMgr.tishi_card_data = s;
return;
}
}
}
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
var n = d(i);
if (4 != n.length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
}
} else cc.vv.gameNetMgr.tishi_card_data = n;
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.ddz_check_out_type = function(e) {
var t = p(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (6 == t.length && 4 == u(e).length) {
i = 11;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2 == v(e).length ? 7 : 2;
break;
}
if (5 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < m(t)) {
3 == t.length ? i = 9 : 4 == t.length ? i = 10 : r(t) && (i = 5);
break;
}
if (6 <= t.length && 1 < o(t).length) {
i = 6;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
var n = o(t);
n.length == t.length / 5 && s(n) && (i = 6);
break;
}
if (8 <= t.length && t.length % 4 == 0) {
var a = o(t);
a.length == t.length / 4 && s(a) && (i = 6);
break;
}
} while (0);
return i;
};
M.ddz_getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带一对";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
break;

case 9:
t = "三不带";
break;

case 10:
t = "三带一";
break;

case 11:
t = "四带二";
}
return t;
};
M.ddz_check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(a).length) return !0;
if (4 == d(s).length) return !1;
} else {
if (2 == v(a).length) return !0;
if (2 == v(s).length) return !1;
}
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
null != _(a, s) && n.push(_(a, s));
break;

case 2:
n = y(a, s);
break;

case 3:
n = b(a, s);
break;

case 4:
n = N(a, s);
break;

case 5:
n = w(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
break;

case 9:
n = I(a, s);
break;

case 10:
n = E(a, s);
break;

case 11:
n = T(a, s);
}
}
return !(0 < n.length);
};
M.ddz_check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = cc.vv.gameNetMgr.conf.rule_index, a = [];
if (8192 & n) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
} else if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = w(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = u(i);
if (0 < s.length) {
var c = u(t);
0 == t.length || s.length > c.length || s.length == c.length && M.get_poker_value(s[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = s : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) if (8192 & n) {
if (4 == (a = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
} else if (2 == (a = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
}
};
M.ddz_check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = [];
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (4 == (n = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
} else {
if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (2 == (n = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
}
};
M.dnnCardTypeSre = function(e, t) {
var i = "";
switch (e) {
case 1:
i = "无牛";
break;

case 2:
i = "牛" + function(e) {
var t = "一";
switch (e) {
case 1:
t = "一";
break;

case 2:
t = "二";
break;

case 3:
t = "三";
break;

case 4:
t = "四";
break;

case 5:
t = "五";
break;

case 6:
t = "六";
break;

case 7:
t = "七";
break;

case 8:
t = "八";
break;

case 9:
t = "九";
}
return t;
}(t);
break;

case 3:
i = "牛牛";
break;

case 4:
i = "银花牛";
break;

case 5:
i = "金花牛";
break;

case 6:
i = "炸弹牛";
break;

case 7:
i = "五小牛";
}
return i;
};
M.dnn_check_card_type = function(e) {
var t = {
type: 0,
max_value: 0,
max_color: 0,
card_value: []
};
e.sort(function(e, t) {
return t - e;
});
for (var i, n = e.length, a = 0, s = !1, c = 0, r = null, o = [], h = !1, l = null, d = 0, u = !0, v = 0; v < n; ++v) {
var g = (i = e[v], Math.floor(i / 4) + 1);
o.push(g);
5 <= g + 1 && (u = !1);
d += g + 1;
10 < g ? a += 1 : 10 == g && (s = !0);
if (null == r) {
r = g;
c = 1;
} else if (r != g) {
if (4 == c) {
h = !0;
l = r;
} else if (3 == c) {
!0;
l = r;
}
r = g;
c = 1;
} else c += 1;
}
if (4 == c) {
h = !0;
l = r;
}
if (3 == c) {
!0;
l = r;
}
if (u && d <= 10) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SMALL;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (h) {
t.type = cc.vv.gameType.GAME_TYPE.OX_BOOM;
t.max_value = l;
return t;
}
if (5 == a) {
t.type = cc.vv.gameType.GAME_TYPE.OX_GOLD;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (4 == a && s) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SILVER;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
var _, f = [];
for (v = 0; v < 5; ++v) f.push(9 < (_ = o[v]) ? 10 : _);
var p = 0;
for (v = 0; v < 3; ++v) for (var m = v + 1; m < 4; ++m) for (var C = m + 1; C < 5; ++C) {
if (0 == (f[v] + f[m] + f[C]) % 10) {
for (var y = 0, b = 0; b < 5; ++b) b != v && b != m && b != C && (y += f[b]);
if (0 == (y %= 10)) {
t.type = cc.vv.gameType.GAME_TYPE.OX_DOUBLE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
p < y && (p = y);
}
}
if (0 != p) {
t.type = cc.vv.gameType.GAME_TYPE.OX_ONE;
t.max_value = p;
} else t.type = cc.vv.gameType.GAME_TYPE.OX_NONE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
};
M.zjhCardTypeSre = function(e) {
var t = "未看牌";
switch (e) {
case 1:
t = "散牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "连子";
break;

case 4:
t = "金花";
break;

case 5:
t = "金花顺";
break;

case 6:
t = "三个头";
}
return t;
};
M.zjh_check_card_type = function(e) {
e.sort(function(e, t) {
return t - e;
});
var t = p(e);
return t[0] == t[1] == t[2] ? 6 : t[0] == t[1] || t[1] == t[2] || t[0] == t[2] ? 2 : s(t) ? h(e) ? 5 : 3 : 1;
};
M.dzpkCardTypeSre = function(e) {
var t = "高牌";
switch (e) {
case 1:
t = "高牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "两对";
break;

case 4:
t = "三个";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "4个";
break;

case 9:
t = "同花顺";
break;

case 10:
t = "皇家同花顺";
}
return t;
};
M.sangongCardTypeSre = function(e, t) {
var i = "";
switch (e) {
case 1:
i = function(e) {
var t = "0";
switch (e) {
case 1:
t = "一";
break;

case 2:
t = "二";
break;

case 3:
t = "三";
break;

case 4:
t = "四";
break;

case 5:
t = "五";
break;

case 6:
t = "六";
break;

case 7:
t = "七";
break;

case 8:
t = "八";
break;

case 9:
t = "九";
}
return t;
}(t) + "点";
break;

case 2:
i = "三公";
break;

case 3:
case 4:
i = "三条";
break;

case 5:
i = "至尊九";
}
return i;
};
function L(e) {
return Math.floor(e / 4) + 1;
}
M.check3g_card_type = function(e) {
var t = {
type: 0,
max_value: 0,
max_color: 0,
card_value: []
};
e.sort(function(e, t) {
return t - e;
});
for (var i = e.length, n = 0, a = 0, s = null, c = [], r = !1, o = null, h = 0; h < i; ++h) {
var l = L(e[h]);
c.push(l);
10 < l && (n += 1);
if (null == s) {
s = l;
a = 1;
} else if (s != l) {
if (4 == a) {
is_four = !0;
o = s;
} else if (3 == a) {
r = !0;
o = s;
}
s = l;
a = 1;
} else a += 1;
}
if (3 == a) {
r = !0;
o = s;
}
if (r && 3 == o) {
t.type = 5;
t.max_value = o;
return t;
}
if (r) {
t.type = 3;
t.max_value = o;
return t;
}
if (3 == n) {
t.type = 2;
t.max_value = L(e[0]);
t.max_color = M.get_poker_color(e[0]);
t.card_value = c;
return t;
}
t.type = 1;
t.card_value = c;
t.max_color = L(e[0]);
t.max_value = function(e) {
for (var t = 0, i = 0; i < e.length; i++) t += (n = e[i], 9 < n ? 10 : n);
var n;
return t % 10;
}(c);
return t;
};
cc._RF.pop();
}, {} ],
poker_utils_13S: [ function(e, t, M) {
"use strict";
cc._RF.push(t, "276bfToJzZPKIMb/lQg/vru", "poker_utils_13S");
M.get_poker_value = function(e) {
return 1 == cc.vv.gameNetMgr.isGamesDZPK() ? e < 4 ? Math.floor(e / 4) + 15 : Math.floor(e / 4) + 2 : 0 == cc.vv.gameNetMgr.use58() ? Math.floor(e / 4) + 3 : e < 8 ? Math.floor(e / 4) + 14 : Math.floor(e / 4) + 1;
};
M.get_poker_display_value = function(e) {
return -1 == e ? -1 : e < 4 ? 15 : Math.floor(e / 4) + 2;
};
M.getOutTypeName = function(e) {
var t = "无类型";
switch (e) {
case 2:
t = "三同花";
break;

case 3:
t = "三顺子";
break;

case 4:
t = "六对半";
break;

case 5:
t = "五对三条";
break;

case 6:
t = "四炸三条";
break;

case 7:
t = "双怪冲三";
break;

case 8:
t = "凑一色";
break;

case 9:
t = "全小";
break;

case 10:
t = "全大";
break;

case 11:
t = "三分天下";
break;

case 12:
t = "三同花顺";
break;

case 13:
t = "十二皇族";
break;

case 14:
t = "一条龙";
break;

case 15:
t = "至尊青龙";
}
return t;
};
M.getDaoTypeName = function(e) {
var t = "无类型";
switch (e) {
case 1:
t = "乌龙";
break;

case 2:
t = "一对";
break;

case 3:
t = "两对";
break;

case 4:
t = "三条";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "炸弹";
break;

case 9:
t = "同花顺";
}
return t;
};
M.get_poker_color = function(e) {
return e % 4;
};
function p(e) {
var t = [];
for (var i in e) t.push(M.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}
function s(e) {
for (var t = e.length, i = 0; i < t - 1; ++i) {
if (15 == e[i] || 16 == e[i] || 15 == e[i + 1] || 16 == e[i + 1]) return !1;
if (e[i] != e[i + 1] - 1) return !1;
}
return !0;
}
function c(e) {
for (var t = e.length, i = [], n = 0; n < t; ) {
if (e[n] != e[n + 1]) return !1;
i.push(e[n]);
n += 2;
}
return s(i);
}
function m(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
for (var a = 0, s = n + 1; s < e.length; ++s) {
e[n] == e[s] && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
return i;
}
function r(e) {
for (var t = m(e), i = [], n = 0; n < e.length; n++) e[n] != t && i.push(e[n]);
return i[0] == i[1];
}
function o(e) {
for (var t = [], i = 0; i < e.length; i++) for (var n = 0, a = i + 1; a < e.length; ++a) {
e[i] == e[a] && n++;
2 == n && -1 == t.indexOf(e[i]) && t.push(e[i]);
}
t.sort(function(e, t) {
return e - t;
});
return t;
}
function h(e) {
for (var t = !0, i = M.get_poker_color(e[0]), n = 0; n < e.length; n++) {
var a = e[n];
if (i != M.get_poker_color(a)) {
t = !1;
break;
}
}
return t;
}
function l(e) {
for (var t = !0, i = e[0], n = 0; n < e.length; n++) if (i != e[n]) {
t = !1;
break;
}
return t;
}
function u(e) {
for (var t = [], i = 0; i < e.length; i++) {
for (var n = M.get_poker_value(e[i]), a = 0, s = i + 1; s < e.length; ++s) {
n == M.get_poker_value(e[s]) && a++;
}
if (3 <= a) {
for (var c = 0; c < a + 1; c++) t.push(e[i + c]);
break;
}
}
return t;
}
function d(e) {
if (e.length < 4) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 4 == t.length ? t : [];
}
function v(e) {
if (e.length < 2) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 2 == t.length ? t[0] == t[1] ? [] : t : [];
}
function g(e, t) {
for (var i = M.get_poker_value(e[0]), n = e.length, a = [], s = 0; s < t.length; s++) {
for (var c = M.get_poker_value(t[s]), r = 1, o = s + 1; o < t.length; ++o) {
c == M.get_poker_value(t[o]) && r++;
}
console.log("count:", r, "base_boom_len:", n, "id_a:", c);
if (!(r == n && c <= i) && n <= r) {
for (var h = 0; h < r; h++) a.push(t[s + h]);
break;
}
}
return a;
}
function _(e, t) {
if (1 < e.length) {
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
if (1 < a.length) return null;
}
var i = e[0];
if (1 == cc.vv.gameNetMgr.isSingle()) {
return null == i ? t[t.length - 1] : M.get_poker_value(t[t.length - 1]) > M.get_poker_value(i) ? t[t.length - 1] : null;
}
var n = cc.vv.gameNetMgr.now_card_data;
if (53 == i && n[0] == i) return null;
if (52 == i) {
if (53 == t[t.length - 1]) return t[t.length - 1];
if (n[0] == i) return null;
}
if (M.get_poker_value(i) >= M.get_poker_value(t[t.length - 1])) {
var a;
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
}
var s = null == i ? 0 : M.get_poker_value(i), c = 0;
for (c = 0; c < t.length; ++c) {
if (1 != f(r = M.get_poker_value(t[c]), t) && (1 != C(r, t) && s < r)) return t[c];
}
for (c = 0; c < t.length; ++c) {
if (1 != C(r = M.get_poker_value(t[c]), t) && s < r) return t[c];
}
for (c = 0; c < t.length; ++c) {
var r;
if (s < (r = M.get_poker_value(t[c]))) return t[c];
}
return null;
}
function f(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (2 == i) return !0;
}
return !1;
}
function C(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (3 == i) return !0;
}
return !1;
}
function y(e, t) {
if (t.length < 2) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) for (var c = M.get_poker_value(t[s]), r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r])) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
n[n.length - 1] == e[0] && (e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
for (var o = [], h = 0; h < i.length; ++h) if (1 != C(i[h], t) && i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
if (0 == o.length) for (h = 0; h < i.length; ++h) if (i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
52 != o[0] && 53 != o[0] || o[0] != o[1] && (o = []);
return o;
}
function b(e, t) {
if (t.length < 4 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) {
var c = M.get_poker_value(t[s]);
if (15 != c && 16 != c) for (var r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r]) && -1 == i.indexOf(c)) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
}
if (n.length < 2) return [];
var o = S(n, e[0], e.length / 2);
if (0 == o.length) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
o = S(n, e[0], e.length / 2);
}
for (var h = [], l = 0; l < o.length; ++l) for (var d = M.get_poker_value(o[l]), u = 0; u < a.length; ++u) {
if (d == M.get_poker_value(a[u])) {
h.push(o[l]);
h.push(a[u]);
}
}
return h;
}
function N(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = 0; a < t.length; ++a) {
var s = M.get_poker_value(t[a]);
if (-1 == i.indexOf(s) && s < 15) {
i.push(s);
n.push(t[a]);
}
}
if (i.length < 5 || i.length < e.length) return [];
var c = S(n, e[0], e.length);
if (e[e.length - 1] == c[c.length - 1]) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
c = S(n, e[0], e.length);
}
return c;
}
function S(e, t, i) {
e.sort(function(e, t) {
return e - t;
});
for (var n = [], a = [], s = 0; s < e.length; ++s) {
var c = M.get_poker_value(e[s]);
if (c > M.get_poker_value(t)) {
n.push(c);
a.push(e[s]);
}
}
if (n.length < i) return [];
for (var r = 0; r < n.length - i + 1; ++r) {
for (var o = 0, h = [], l = r; l < r + i; ++l) {
var d = n[l], u = n[l + 1];
o++;
h.push(a[l]);
if (u && u - d != 1) break;
}
if (o == i) return h;
}
return [];
}
function A(e, t) {
if (t.length < 5 || t.length < e.length) return [];
var i = function(e, t) {
for (var i = [], n = 0; n < t.length; n++) {
var a = M.get_poker_color(t[n]);
e == a && i.push(t[n]);
}
return i;
}(M.get_poker_color(e[0]), t);
return i.length < 5 || i.length < e.length ? [] : N(e, i);
}
function I(e, t) {
if (t.length < 3 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
return l;
}
function E(e, t) {
if (t.length < 4 || t.length < e.length) return [];
var i = I(e, t);
if (0 < i.length) {
for (var n = !1, a = 0; a < t.length; ++a) {
if (M.get_poker_value(t[a]) != M.get_poker_value(i[0])) {
i.push(t[a]);
n = !0;
break;
}
}
0 == n && (i = []);
}
return i;
}
function B(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
if (0 < l.length) for (var v = 0, g = 0; g < t.length; ++g) {
if (M.get_poker_value(t[g]) != M.get_poker_value(l[0])) {
l.push(t[g]);
v++;
}
if (2 == v) break;
}
return l;
}
function w(e, t) {
if (t.length < 5) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
if (0 < l.length) {
for (var v = [], g = 0; g < t.length; ++g) {
M.get_poker_value(t[g]) != M.get_poker_value(l[0]) && v.push(t[g]);
}
for (c = 0; c < v.length; ++c) {
var _ = !1, f = M.get_poker_value(v[c]);
for (h = c + 1; h < v.length; ++h) {
if (f == M.get_poker_value(v[h])) {
_ = !0;
l.push(v[c]);
l.push(v[h]);
break;
}
}
if (_) break;
}
}
return 5 == l.length ? l : [];
}
function k(e, t) {
if (t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (15 != r && 16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = function(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
var a = 0, s = M.get_poker_value(e[n]);
if (16 != s) {
for (var c = n + 1; c < e.length; ++c) {
var r = M.get_poker_value(e[c]);
s == r && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
}
return i;
}(e), u = e.length / 5;
if (i.length < u) return [];
var v = S(n, d, u);
if (0 == v.length) return [];
for (var g = S(a, d, u), _ = S(s, d, u), f = 0; f < u; ++f) {
l.push(v[f]);
l.push(g[f]);
l.push(_[f]);
}
for (var p = 0, m = 0; m < t.length; ++m) {
for (var C = M.get_poker_value(t[m]), y = !1, b = 0; b < v.length; ++b) {
if (C == M.get_poker_value(v[b])) {
y = !0;
break;
}
}
if (0 == y) {
l.push(t[m]);
p++;
}
if (p == 2 * u) break;
}
return l;
}
function T(e, t) {
if (t.length < e.length) return [];
var i = u(e);
if (i.length < 4) return [];
for (var n = M.get_poker_value(i[0]), a = [], s = !1, c = 0; c < t.length; c++) {
var r = M.get_poker_value(t[c]);
if (n < r) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (3 == o) {
s = !0;
a.push(val_list[c]);
a.push(val_list[c + 1]);
a.push(val_list[c + 2]);
a.push(val_list[c + 3]);
break;
}
}
if (s) break;
}
if (0 < a.length) for (var l = 0, d = 0; d < t.length; ++d) {
if (M.get_poker_value(t[d]) != M.get_poker_value(a[0])) {
a.push(t[d]);
l++;
}
if (2 == l) break;
}
return a;
}
M.check_out_type = function(e) {
var t = p(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2;
break;
}
if (2 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < m(t)) {
i = 5;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
var n = o(t);
n.length == t.length / 5 && s(n) && (i = 6);
break;
}
} while (0);
return i;
};
M.getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带二";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
}
return t;
};
M.check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (4 == d(a).length) return !0;
if (42 == d(s).length) return !1;
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
var o = _(a, s);
null != o && n.push(o);
break;

case 2:
n = y(a, s);
break;

case 3:
n = b(a, s);
break;

case 4:
n = N(a, s);
break;

case 5:
n = B(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
}
}
return !(0 < n.length);
};
M.check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var n = u(i);
if (0 < n.length) {
var a = u(t);
0 == t.length || n.length > a.length || n.length == a.length && M.get_poker_value(n[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = n : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = d(i);
if (4 == s.length) {
cc.vv.gameNetMgr.tishi_card_data = s;
return;
}
}
}
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
var n = d(i);
if (4 != n.length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
}
} else cc.vv.gameNetMgr.tishi_card_data = n;
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.ddz_check_out_type = function(e) {
var t = p(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (6 == t.length && 4 == u(e).length) {
i = 11;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2 == v(e).length ? 7 : 2;
break;
}
if (5 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < m(t)) {
3 == t.length ? i = 9 : 4 == t.length ? i = 10 : r(t) && (i = 5);
break;
}
if (6 <= t.length && 1 < o(t).length) {
i = 6;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
var n = o(t);
n.length == t.length / 5 && s(n) && (i = 6);
break;
}
if (8 <= t.length && t.length % 4 == 0) {
var a = o(t);
a.length == t.length / 4 && s(a) && (i = 6);
break;
}
} while (0);
return i;
};
M.ddz_getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带一对";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
break;

case 9:
t = "三不带";
break;

case 10:
t = "三带一";
break;

case 11:
t = "四带二";
}
return t;
};
M.ddz_check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(a).length) return !0;
if (4 == d(s).length) return !1;
} else {
if (2 == v(a).length) return !0;
if (2 == v(s).length) return !1;
}
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
null != _(a, s) && n.push(_(a, s));
break;

case 2:
n = y(a, s);
break;

case 3:
n = b(a, s);
break;

case 4:
n = N(a, s);
break;

case 5:
n = w(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
break;

case 9:
n = I(a, s);
break;

case 10:
n = E(a, s);
break;

case 11:
n = T(a, s);
}
}
return !(0 < n.length);
};
M.ddz_check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = cc.vv.gameNetMgr.conf.rule_index, a = [];
if (8192 & n) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
} else if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = w(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = u(i);
if (0 < s.length) {
var c = u(t);
0 == t.length || s.length > c.length || s.length == c.length && M.get_poker_value(s[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = s : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) if (8192 & n) {
if (4 == (a = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
} else if (2 == (a = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
}
};
M.ddz_check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = [];
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (4 == (n = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
} else {
if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (2 == (n = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
}
};
M.dnnCardTypeSre = function(e, t) {
var i = "";
switch (e) {
case 1:
i = "无牛";
break;

case 2:
i = "牛" + function(e) {
var t = "一";
switch (e) {
case 1:
t = "一";
break;

case 2:
t = "二";
break;

case 3:
t = "三";
break;

case 4:
t = "四";
break;

case 5:
t = "五";
break;

case 6:
t = "六";
break;

case 7:
t = "七";
break;

case 8:
t = "八";
break;

case 9:
t = "九";
}
return t;
}(t);
break;

case 3:
i = "牛牛";
break;

case 4:
i = "银花牛";
break;

case 5:
i = "金花牛";
break;

case 6:
i = "炸弹牛";
break;

case 7:
i = "五小牛";
}
return i;
};
M.dnn_check_card_type = function(e) {
var t = {
type: 0,
max_value: 0,
max_color: 0,
card_value: []
};
e.sort(function(e, t) {
return t - e;
});
for (var i, n = e.length, a = 0, s = !1, c = 0, r = null, o = [], h = !1, l = null, d = 0, u = !0, v = 0; v < n; ++v) {
var g = (i = e[v], Math.floor(i / 4) + 1);
o.push(g);
5 <= g + 1 && (u = !1);
d += g + 1;
10 < g ? a += 1 : 10 == g && (s = !0);
if (null == r) {
r = g;
c = 1;
} else if (r != g) {
if (4 == c) {
h = !0;
l = r;
} else if (3 == c) {
!0;
l = r;
}
r = g;
c = 1;
} else c += 1;
}
if (4 == c) {
h = !0;
l = r;
}
if (3 == c) {
!0;
l = r;
}
if (u && d <= 10) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SMALL;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (h) {
t.type = cc.vv.gameType.GAME_TYPE.OX_BOOM;
t.max_value = l;
return t;
}
if (5 == a) {
t.type = cc.vv.gameType.GAME_TYPE.OX_GOLD;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (4 == a && s) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SILVER;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
var _, f = [];
for (v = 0; v < 5; ++v) f.push(9 < (_ = o[v]) ? 10 : _);
var p = 0;
for (v = 0; v < 3; ++v) for (var m = v + 1; m < 4; ++m) for (var C = m + 1; C < 5; ++C) {
if (0 == (f[v] + f[m] + f[C]) % 10) {
for (var y = 0, b = 0; b < 5; ++b) b != v && b != m && b != C && (y += f[b]);
if (0 == (y %= 10)) {
t.type = cc.vv.gameType.GAME_TYPE.OX_DOUBLE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
p < y && (p = y);
}
}
if (0 != p) {
t.type = cc.vv.gameType.GAME_TYPE.OX_ONE;
t.max_value = p;
} else t.type = cc.vv.gameType.GAME_TYPE.OX_NONE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
};
M.zjhCardTypeSre = function(e) {
var t = "未看牌";
switch (e) {
case 1:
t = "散牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "连子";
break;

case 4:
t = "金花";
break;

case 5:
t = "金花顺";
break;

case 6:
t = "三个头";
}
return t;
};
M.zjh_check_card_type = function(e) {
e.sort(function(e, t) {
return t - e;
});
var t = p(e);
return t[0] == t[1] == t[2] ? 6 : t[0] == t[1] || t[1] == t[2] || t[0] == t[2] ? 2 : s(t) ? h(e) ? 5 : 3 : 1;
};
M.dzpkCardTypeSre = function(e) {
var t = "高牌";
switch (e) {
case 1:
t = "高牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "两对";
break;

case 4:
t = "三个";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "4个";
break;

case 9:
t = "同花顺";
break;

case 10:
t = "皇家同花顺";
}
return t;
};
cc._RF.pop();
}, {} ],
poker_utils_21d: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bbc5b9crqhLnaZVUzbGdXtW", "poker_utils_21d");
o.get_poker_value = function(e) {
return e < 8 ? Math.floor(e / 4) + 14 : 51 < e ? 16 : Math.floor(e / 4) + 1;
};
o.get_poker_color = function(e) {
return e % 4;
};
o.get_value_total = function(e) {
for (var t = 0, i = !1, n = !1, a = 0; a < e.length; a++) {
var s = e[a];
if (-1 == s) {
n = !0;
break;
}
var c = 0, r = o.get_poker_value(s);
15 === r && (r = 2);
if (11 == r || 12 == r || 13 == r) c = 10; else if (14 === r) {
c = 1;
i = !0;
} else c = r;
t += c;
}
if (1 == n) return "";
i && t < 12 && (t += 10);
return t;
};
o.get_value_total_chatA = function(e) {
for (var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], i = 0, n = !1, a = 0; a < e.length; a++) {
var s = e[a];
if (-1 != s) {
var c = 0, r = o.get_poker_value(s);
15 === r && (r = 2);
if (11 == r || 12 == r || 13 == r) c = 10; else if (14 === r) {
c = 1;
n = !0;
} else c = r;
i += c;
} else !0;
}
1 == t && n && (i += 10);
return i;
};
o.d21_CardTypeSre = function(e, t) {
var i = "爆牌";
switch (e) {
case 1:
i = "爆牌";
break;

case 2:
i = cc.vv.poker_util.get_value_total(t) + "点";
break;

case 3:
i = "21点";
break;

case 4:
i = "五龙";
break;

case 5:
i = "黑杰克";
}
return i;
};
o.d21_CardType = function(e) {
var t = o.get_value_total(e);
return 21 < t ? "爆牌" : 21 == t ? 2 == e.length ? "黑杰克" : "21点" : t < 21 ? t + "点" : "五龙";
};
cc._RF.pop();
}, {} ],
poker_utils_3DH: [ function(e, t, l) {
"use strict";
cc._RF.push(t, "8d955i7hXNHfrosPZXki15J", "poker_utils_3DH");
l.get_poker_value = function(e) {
return e < 8 ? Math.floor(e / 4) + 5 : 7 < e && e < 40 ? Math.floor(e / 4) + 6 : 39 < e && e < 44 ? 7 : 16;
};
l.get_poker_value_server = function(e) {
return Math.floor(e / 4);
};
l.get_poker_color = function(e) {
return e % 4;
};
l.pokerSort = function(e, t) {
var i = [], n = t;
(n < 0 || 3 < n) && (n = 0);
for (var a = [ [ 4, 3, 2, 1 ], [ 1, 4, 3, 2 ], [ 2, 1, 4, 3 ], [ 3, 2, 1, 4 ] ][n], s = 0; s < e.length; s++) {
var c = e[s], r = l.get_poker_color(c), o = l.get_poker_value(c), h = {};
h.cid = c;
h.color = r;
h.valueID = o;
h.index = a[r];
h.c_index = a[r];
h.isMain = !1;
r == t && (h.isMain = !0);
if (15 == o) {
h.isMain = !0;
h.index = 6;
r == t && (h.index = 7);
} else if (7 == o) {
h.isMain = !0;
h.index = 8;
r == t && (h.index = 9);
} else if (16 == o) {
h.isMain = !0;
h.index = 44 == c ? 10 : 11;
}
i.push(h);
}
i.sort(function(e, t) {
return t.index == e.index ? t.valueID == e.valueID ? t.c_index - e.c_index : t.valueID - e.valueID : t.index - e.index;
});
return i;
};
l.check_out_type = function(e, t) {
if (1 == e.length) return 1;
e.sort(function(e, t) {
return e - t;
});
var i = function(e) {
var t = [];
for (var i in e) t.push(l.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}(e);
if (2 == i.length) {
if (i[0] == i[1] && l.get_poker_color(e[0]) == l.get_poker_color(e[1])) return 2;
} else if (2 < e.length && e.length % 2 == 0 && function(e, s) {
var t = e.length;
if (t < 4 || t % 2 != 0) return !1;
for (var i = [], n = 0; n < t; ++n) i.push(e[n]);
i.sort(function(e, t) {
if (e == t) return e - t;
if (-1 == s) return e - t;
var i = l.get_poker_value_server(e), n = l.get_poker_value_server(t);
if (8 < i && i < 11 && i == n) {
var a = l.get_poker_color(e);
l.get_poker_color(t);
return a == s ? 1 : -1;
}
return e - t;
});
var a = -1, c = -1;
for (n = 0; n < t; ) {
if (i[n] != i[n + 1]) return !1;
var r = l.get_poker_value_server(i[n]), o = l.get_poker_color(i[n]);
if (-1 != a && -1 != c) if (r <= 8) {
if (r != a + 1 || o != c) return !1;
} else {
if (a <= 7) return !1;
if (8 == a) {
if (r != a + 1) return !1;
if (c != s) return !1;
if (c == o) return !1;
} else if (11 == r && 1 == o) {
if (r != a) return !1;
} else if (11 == r && 0 == o) {
if (r != a + 1 || c != s) return !1;
} else if (o == s) {
if (c == s || r != a) return !1;
} else if (c != s || r == a) return !1;
}
a = r;
c = o;
n += 2;
}
return !0;
}(e, t)) return 3;
return 4;
};
l.getCardTypeName = function(e) {
var t = "";
switch (e) {
case 1:
case 2:
t = "";
break;

case 3:
t = "拖拉机";
}
return t;
};
cc._RF.pop();
}, {} ],
poker_utils_DDZ: [ function(e, t, M) {
"use strict";
cc._RF.push(t, "cd8180XYXZDGK5g+YsUoEOy", "poker_utils_DDZ");
var o = 0, h = 1, l = 2, d = 3, u = 4, v = 5, g = 6, _ = 7, r = 8, f = 9, p = 10, m = 11, C = 12, y = 20;
M.OUT_CARD_TYPE = {
PASS: 0,
SINGLE: 1,
DOUBLE: 2,
SEQUNECE: 3,
MORE_DOUBLE: 4,
THREE_PICK: 5,
THREE_PICK_ONE: 6,
THREE_PICK_DOUBLE: 7,
MORE_THREE_PICK: 8,
MORE_THREE_PICK_ONE: 9,
MORE_THREE_PICK_DOUBLE: 10,
FOUR_PICK_TWO: 11,
FOUR_PICK_DOUBLE: 12,
BOOM: 20
};
M.get_poker_value = function(e) {
return Math.floor(e / 4) + 3;
};
M.get_poker_cid = function(e) {
e < 3 && (e = 3);
return 4 * (e - 3);
};
M.get_poker_color = function(e) {
return e % 4;
};
function N(e) {
var t = [];
for (var i in e) t.push(M.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}
function s(e) {
for (var t = e.length, i = 0; i < t - 1; ++i) {
if (15 == e[i] || 16 == e[i] || 15 == e[i + 1] || 16 == e[i + 1]) return !1;
if (e[i] != e[i + 1] - 1) return !1;
}
return !0;
}
function c(e) {
for (var t = e.length, i = [], n = 0; n < t; ) {
if (e[n] != e[n + 1]) return !1;
i.push(e[n]);
n += 2;
}
return s(i);
}
function b(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
for (var a = 0, s = n + 1; s < e.length; ++s) {
e[n] == e[s] && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
return i;
}
function S(e) {
for (var t = b(e), i = [], n = 0; n < e.length; n++) e[n] != t && i.push(e[n]);
return i[0] == i[1];
}
function A(e) {
for (var t = [], i = 0; i < e.length; i++) for (var n = 0, a = i + 1; a < e.length; ++a) {
e[i] == e[a] && n++;
2 == n && -1 == t.indexOf(e[i]) && t.push(e[i]);
}
t.sort(function(e, t) {
return e - t;
});
return t;
}
function I(e) {
for (var t = !0, i = e[0], n = 0; n < e.length; n++) if (i != e[n]) {
t = !1;
break;
}
return t;
}
function E(e) {
for (var t = [], i = 0; i < e.length; i++) {
for (var n = M.get_poker_value(e[i]), a = 0, s = i + 1; s < e.length; ++s) {
n == M.get_poker_value(e[s]) && a++;
}
if (3 <= a) {
for (var c = 0; c < a + 1; c++) t.push(e[i + c]);
break;
}
}
return t;
}
function B(e) {
if (e.length < 4) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 4 == t.length ? t : [];
}
function w(e) {
if (e.length < 2) return [];
for (var t = [], i = 0; i < e.length; i++) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 2 == t.length ? t[0] == t[1] ? [] : t : [];
}
function k(e, t) {
for (var i = M.get_poker_value(e[0]), n = e.length, a = [], s = 0; s < t.length; s++) {
for (var c = M.get_poker_value(t[s]), r = 1, o = s + 1; o < t.length; ++o) {
c == M.get_poker_value(t[o]) && r++;
}
console.log("count:", r, "base_boom_len:", n, "id_a:", c);
if (!(r == n && c <= i) && n <= r) {
for (var h = 0; h < r; h++) a.push(t[s + h]);
break;
}
}
return a;
}
function T(e, t) {
var i = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards;
if (1 < e.length) {
i.sort(function(e, t) {
return e - t;
});
n = i[0];
if (1 < i.length) return null;
}
var n = e[0];
if (1 == cc.vv.gameNetMgr.isSingle()) {
return null == n ? t[t.length - 1] : M.get_poker_value(t[t.length - 1]) > M.get_poker_value(n) ? t[t.length - 1] : null;
}
if (53 == n && i[0] == n) return null;
if (52 == n) {
if (53 == t[t.length - 1]) return t[t.length - 1];
if (i[0] == n) return null;
}
if (M.get_poker_value(n) >= M.get_poker_value(t[t.length - 1])) {
i.sort(function(e, t) {
return e - t;
});
n = i[0];
}
var a = null == n ? 0 : M.get_poker_value(n), s = 0;
for (s = 0; s < t.length; ++s) {
if (1 != L(c = M.get_poker_value(t[s]), t) && (1 != O(c, t) && a < c)) return t[s];
}
for (s = 0; s < t.length; ++s) {
if (1 != O(c = M.get_poker_value(t[s]), t) && a < c) return t[s];
}
for (s = 0; s < t.length; ++s) {
var c;
if (a < (c = M.get_poker_value(t[s]))) return t[s];
}
return null;
}
function L(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (2 == i) return !0;
}
return !1;
}
function O(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (3 == i) return !0;
}
return !1;
}
function x(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (3 < i) return !0;
}
return !1;
}
function R(e, t) {
if (t.length < 2) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) for (var c = M.get_poker_value(t[s]), r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r])) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
for (var o = [], h = 0; h < i.length; ++h) if (i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
return o;
}
function P(e, t) {
if (t.length < 2) return [];
var i = cc.vv.gameNetMgr.check_out_double_data, n = M.get_poker_value(e[0]), a = 2;
if (i) {
a = i.type;
n = i.base_cid;
}
for (var s = [], c = [], r = [], o = 0; o < t.length; ++o) for (var h = M.get_poker_value(t[o]), l = o + 1; l < t.length; ++l) {
if (h == M.get_poker_value(t[l])) {
s.push(h);
c.push(t[o]);
r.push(t[l]);
}
}
for (var d = [], u = [], v = [], g = [], _ = 0; _ < s.length; ++_) if (1 != x(s[_], t)) if (1 != O(s[_], t)) {
if (3 != a && s[_] > n) {
d.push(c[_]);
d.push(r[_]);
n = s[_];
break;
}
} else {
u.push(s[_]);
v.push(c[_]);
g.push(r[_]);
}
var f = 0, p = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards;
if (0 == u.length) {
f = c[c.length - 1];
if (M.get_poker_value(f) == n) {
p.sort(function(e, t) {
return e - t;
});
n = M.get_poker_value(p[0]);
}
} else f = v[v.length - 1];
var m = !1;
if (0 == d.length) {
if (2 == a) {
p.sort(function(e, t) {
return e - t;
});
n = M.get_poker_value(p[0]);
}
a = 3;
for (_ = 0; _ < u.length; ++_) {
if (u[_] > n) {
d.push(v[_]);
d.push(g[_]);
n = u[_];
break;
}
u[_] < M.get_poker_value(p[0]) && (m = !0);
}
}
if (0 == d.length && 0 == m && 0 < u.length) {
var C = cc.vv.gameNetMgr.getSelfData().holds, y = {
type: 2
};
y.base_cid = M.get_poker_value(p[0]);
cc.vv.gameNetMgr.check_out_double_data = y;
return P(cc.vv.gameNetMgr.tishi_card_data = p, C);
}
var b = {};
b.type = a;
b.base_cid = n;
cc.vv.gameNetMgr.check_out_double_data = b;
return d;
}
function D(e, t) {
if (t.length < 4 || t.length < e.length) return [];
x(M.get_poker_value(e[0]), e) && (e = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards);
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) {
var c = M.get_poker_value(t[s]);
if (15 != c && 16 != c) for (var r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r]) && -1 == i.indexOf(c)) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
}
if (n.length < 2) return [];
var o = G(n, e[0], e.length / 2);
if (0 == o.length) {
(e = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards).sort(function(e, t) {
return e - t;
});
o = G(n, e[0], e.length / 2);
}
for (var h = [], l = 0; l < o.length; ++l) for (var d = M.get_poker_value(o[l]), u = 0; u < a.length; ++u) {
if (d == M.get_poker_value(a[u])) {
h.push(o[l]);
h.push(a[u]);
}
}
return h;
}
function H(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = 0; a < t.length; ++a) {
var s = M.get_poker_value(t[a]);
if (-1 == i.indexOf(s) && s < 15) {
i.push(s);
n.push(t[a]);
}
}
if (i.length < 5 || i.length < e.length) return [];
var c = G(n, e[0], e.length);
if (e[e.length - 1] == c[c.length - 1]) {
(e = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards).sort(function(e, t) {
return e - t;
});
c = G(n, e[0], e.length);
}
return c;
}
function G(e, t, i) {
e.sort(function(e, t) {
return e - t;
});
for (var n = [], a = [], s = 0; s < e.length; ++s) {
var c = M.get_poker_value(e[s]);
if (c > M.get_poker_value(t)) {
n.push(c);
a.push(e[s]);
}
}
if (n.length < i) return [];
for (var r = 0; r < n.length - i + 1; ++r) {
for (var o = 0, h = [], l = r; l < r + i; ++l) {
var d = n[l], u = n[l + 1];
o++;
h.push(a[l]);
if (u && u - d != 1) break;
}
if (o == i) return h;
}
return [];
}
function j(e, t) {
if (t.length < 3 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == M.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = b(N(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards).sort(function(e, t) {
return e - t;
});
g = b(N(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
return v;
}
function F(e, t) {
if (t.length < 4 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == M.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = b(N(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards).sort(function(e, t) {
return e - t;
});
g = b(N(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
if (0 < v.length) for (var f = 0; f < t.length; ++f) {
var p = M.get_poker_value(t[f]);
if (1 != x(p, t) && (1 != O(p, t) && 1 != L(p, t) && p != M.get_poker_value(v[0]))) {
v.push(t[f]);
!0;
break;
}
}
return v;
}
function U(e, t) {
if (t.length < 5) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == M.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = b(N(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards).sort(function(e, t) {
return e - t;
});
g = b(N(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
if (0 < v.length) {
for (var f = [], p = 0; p < t.length; ++p) {
var m = M.get_poker_value(t[p]);
for (d = !1, u = 0; u < c.length; u++) if (c[u] == m) {
d = !0;
break;
}
0 == d && m != M.get_poker_value(v[0]) && f.push(t[p]);
}
for (r = 0; r < f.length; ++r) {
var C = !1, y = M.get_poker_value(f[r]);
for (l = r + 1; l < f.length; ++l) {
if (y == M.get_poker_value(f[l])) {
C = !0;
v.push(f[r]);
v.push(f[l]);
break;
}
}
if (C) break;
}
}
return 5 == v.length ? v : [];
}
function z(e, t) {
if (t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (15 != r && 16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = M.get_poker_cid(K(A(N(e)))[0]), u = e.length / 5;
if (i.length < u) return [];
var v = G(n, d, u);
if (0 == v.length) return [];
for (var g = G(a, d, u), _ = G(s, d, u), f = 0; f < u; ++f) {
l.push(v[f]);
l.push(g[f]);
l.push(_[f]);
}
for (var p = 0, m = 0; m < t.length; ++m) {
for (var C = M.get_poker_value(t[m]), y = !1, b = 0; b < v.length; ++b) {
if (C == M.get_poker_value(v[b])) {
y = !0;
break;
}
}
if (0 == y) {
l.push(t[m]);
p++;
}
if (p == 2 * u) break;
}
return l;
}
function J(e, t) {
if (t.length < e.length) return [];
var i = E(e);
if (i.length < 4) return [];
for (var n = M.get_poker_value(i[0]), a = [], s = !1, c = 0; c < t.length; c++) {
var r = M.get_poker_value(t[c]);
if (n < r) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (3 == o) {
s = !0;
a.push(val_list[c]);
a.push(val_list[c + 1]);
a.push(val_list[c + 2]);
a.push(val_list[c + 3]);
break;
}
}
if (s) break;
}
if (0 < a.length) for (var l = 0, d = 0; d < t.length; ++d) {
if (M.get_poker_value(t[d]) != M.get_poker_value(a[0])) {
a.push(t[d]);
l++;
}
if (2 == l) break;
}
return a;
}
M.ddz_isCall_three = function(e) {
if (2 == w(e).length) return !0;
for (var t = N(e), i = 0; i < t.length; i++) {
var n = t[i];
if (15 == n) {
for (var a = 1, s = i + 1; s < t.length; ++s) {
n == t[s] && a++;
}
if (4 == a) return !0;
}
}
return !1;
};
M.ddz_check_out_type = function(e) {
var t = N(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (6 == t.length && 4 == E(e).length) {
i = 11;
break;
}
if (4 == B(e).length || 4 <= t.length && 1 == I(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2 == w(e).length ? 7 : 2;
break;
}
if (5 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < b(t)) {
if (3 == t.length) {
i = 9;
break;
}
if (4 == t.length) {
i = 10;
break;
}
if (S(t)) {
i = 5;
break;
}
}
if (6 <= t.length && 1 < A(t).length) {
i = 6;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
if (K(A(t)) == t.length / 5) {
i = 6;
break;
}
}
if (8 <= t.length && t.length % 4 == 0) {
if (K(A(t)).length + 1 == t.length / 4) {
i = 6;
break;
}
}
} while (0);
return i;
};
function K(e) {
for (var t = e.length, i = [], n = [], a = 0; a < t - 1; ++a) if (15 != e[a]) if (e[a + 1] && e[a] == e[a + 1] - 1) {
i.push(e[a]);
n.push(e[a + 1]);
} else if (0 < i.length) break;
return i;
}
M.ddz_getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带一对";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
break;

case 9:
t = "三不带";
break;

case 10:
t = "三带一";
break;

case 11:
t = "四带二";
}
return t;
};
M.ddz_check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == B(a).length) return !0;
if (4 == B(s).length) return !1;
} else {
if (2 == w(a).length) return !0;
if (2 == w(s).length) return !1;
}
var c = E(s);
if (0 < c.length) {
var r = E(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : k(a, s);
} else switch (t) {
case 1:
null != T(a, s) && n.push(T(a, s));
break;

case 2:
n = R(a, s);
break;

case 3:
n = D(a, s);
break;

case 4:
n = H(a, s);
break;

case 5:
n = U(a, s);
break;

case 6:
n = z(a, s);
break;

case 7:
n = k(a, s);
break;

case 9:
n = j(a, s);
break;

case 10:
n = F(a, s);
break;

case 11:
n = J(a, s);
}
cc.vv.gameNetMgr.check_out_double_data = null;
return !(0 < n.length);
};
M.ddz_check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = cc.vv.gameNetMgr.conf.rule_index, a = [];
if (8192 & n) {
if (4 == B(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
} else if (2 == w(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != T(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(T(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = P(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = D(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = H(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = U(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = z(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = j(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = F(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = J(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = E(i);
if (0 < s.length) {
var c = E(t);
0 == t.length || s.length > c.length || s.length == c.length && M.get_poker_value(s[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = s : cc.vv.gameNetMgr.tishi_card_data = k(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) if (8192 & n) {
if (4 == (a = B(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
} else if (2 == (a = w(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
}
};
M.ddz_check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = [];
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == B(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (4 == (n = B(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
} else {
if (2 == w(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (2 == (n = w(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = E(i);
if (0 < a.length) {
var s = E(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = k(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != T(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(T(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = P(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = D(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = H(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = function(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) o == M.get_poker_value(t[l]) && h++;
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = b(N(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data || cc.vv.gameNetMgr.last_card_data.cards).sort(function(e, t) {
return e - t;
});
g = b(N(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
if (0 < v.length) for (var f = 0, p = 0; p < t.length; ++p) {
var m = M.get_poker_value(t[p]);
if (1 != x(m, t) && 1 != O(m, t) && 1 != L(m, t)) {
if (m != M.get_poker_value(v[0])) {
v.push(t[p]);
f++;
}
if (2 == f) break;
}
}
return v;
}(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = z(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = j(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = F(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = J(t, i);
}
}
};
M.match_ddz_check_out_type = function(e) {
var t = N(e), i = o;
do {
if (1 == t.length) {
i = h;
break;
}
if (6 == t.length && 4 == E(e).length) {
i = m;
break;
}
if (8 == t.length && 4 == E(e).length && 3 === cc.vv.utils.makeSet(t).length) {
i = C;
break;
}
if (4 == B(e).length || 4 <= t.length && 1 == I(t)) {
i = y;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2 == w(e).length ? y : l;
break;
}
if (5 < t.length && t.length % 2 == 0 && c(t)) {
i = u;
break;
}
if (5 <= t.length && s(t)) {
i = d;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < b(t)) {
if (3 == t.length) {
i = v;
break;
}
if (4 == t.length) {
i = g;
break;
}
if (S(t)) {
i = _;
break;
}
}
var n = A(t), a = n.length;
if (6 <= t.length && t.length % 3 == 0 && 1 < a) {
if (K(n).length + 1 == t.length / 3) {
i = r;
break;
}
}
if (10 <= t.length && t.length % 5 == 0) {
if (K(A(t)).length + 1 == t.length / 5) {
i = p;
break;
}
}
if (8 <= t.length && t.length % 4 == 0) {
if (K(A(t)).length + 1 == t.length / 4) {
i = f;
break;
}
}
} while (0);
return i;
};
M.match_ddz_getCardTypeName = function(e) {
var t;
switch (e) {
case o:
t = "要不起";
break;

case h:
t = "";
break;

case l:
t = "对子";
break;

case u:
t = "连对儿";
break;

case d:
t = "顺子";
break;

case _:
t = "三带一对";
break;

case r:
case f:
case p:
t = "飞机";
break;

case y:
t = "炸弹";
break;

case v:
t = "三不带";
break;

case g:
t = "三带一";
break;

case m:
case C:
t = "四带二";
}
return t;
};
M.compareCard = function(e, t) {
t.cards.sort(function(e, t) {
return e - t;
});
return e.type == t.type ? t.type == y && 2 == t.cards.length ? 1 : t.cards.length != e.cards.length ? -200 : function(e, t, i) {
switch (e) {
case h:
case l:
return function(e, t) {
if (13 == q(e[0])) return e[0] > t ? e[0] : -402;
if (q(e[0]) > q(t)) return e[0];
return -401;
}(t, i);

case d:
case u:
return V(t, i);

case v:
case g:
case _:
return s = i, c = Y(t, 3), s < c ? c : -405;

case r:
case f:
case p:
return function(e, t) {
var i = W(e), n = Z(i), a = [];
for (var s in n) 3 == n[s] && a.push(s);
if (Math.floor(i.length / 4) != a.length) return a[a.length - 1] - a[1] == a.length - 2 ? 4 * a[a.length - 1] : 4 * a[a.length - 2];
var c = Y(e, 3);
return t < c ? c : -406;
}(t, i);

case m:
case C:
return n = i, a = Y(t, 4), n < a ? a : -407;

case y:
return V(t, i);

default:
return -400;
}
var n, a;
var s, c;
}(t.type, t.cards, e.big_card) : t.type != y ? -300 : 2;
};
function V(e, t) {
var i = e.length - 1;
return q(e[i]) > q(t) ? e[i] : -403;
}
function Y(e, t) {
var i = Z(W(e)), n = [];
for (var a in i) i[a] == t && n.push(4 * a);
return n[n.length - 1];
}
function W(e) {
var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], i = [], n = !0, a = !1, s = void 0;
try {
for (var c, r = e[Symbol.iterator](); !(n = (c = r.next()).done); n = !0) {
var o = c.value, h = q(o);
t && 13 == h ? i.push(o) : i.push(h);
}
} catch (e) {
a = !0;
s = e;
} finally {
try {
!n && r.return && r.return();
} finally {
if (a) throw s;
}
}
i.sort(function(e, t) {
return e - t;
});
return i;
}
function Z(e) {
var t = {};
e.map(function(e) {
t[e] ? t[e] += 1 : t[e] = 1;
});
return t;
}
function q(e) {
return Math.floor(e / 4);
}
M.match_ddz_check_out_tishi = function() {
var e = cc.vv.gameNetMgr.last_card_data.type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = cc.vv.gameNetMgr.conf.rule_index, a = [];
if (8192 & n) {
if (4 == B(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
} else if (2 == w(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
e == o && (e = h);
switch (e) {
case h:
var s = T(t, i);
null != s && cc.vv.gameNetMgr.tishi_card_data.push(s);
break;

case l:
cc.vv.gameNetMgr.tishi_card_data = P(t, i);
break;

case u:
cc.vv.gameNetMgr.tishi_card_data = D(t, i);
break;

case d:
cc.vv.gameNetMgr.tishi_card_data = H(t, i);
break;

case _:
cc.vv.gameNetMgr.tishi_card_data = U(t, i);
break;

case p:
cc.vv.gameNetMgr.tishi_card_data = z(t, i);
break;

case y:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case v:
cc.vv.gameNetMgr.tishi_card_data = j(t, i);
break;

case g:
cc.vv.gameNetMgr.tishi_card_data = F(t, i);
break;

case m:
cc.vv.gameNetMgr.tishi_card_data = J(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var c = E(i);
if (0 < c.length) {
var r = E(t);
0 == t.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = c : cc.vv.gameNetMgr.tishi_card_data = k(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) if (8192 & n) {
if (4 == (a = B(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
} else if (2 == (a = w(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
}
};
M.match_ddz_check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == B(a).length) return !0;
if (4 == B(s).length) return !1;
} else {
if (2 == w(a).length) return !0;
if (2 == w(s).length) return !1;
}
var c = E(s);
if (0 < c.length) {
var r = E(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : k(a, s);
} else switch (t) {
case h:
null != T(a, s) && n.push(T(a, s));
break;

case l:
n = R(a, s);
break;

case u:
n = D(a, s);
break;

case d:
n = H(a, s);
break;

case _:
n = U(a, s);
break;

case p:
n = z(a, s);
break;

case y:
n = k(a, s);
break;

case v:
n = j(a, s);
break;

case g:
n = F(a, s);
break;

case m:
n = J(a, s);
}
cc.vv.gameNetMgr.check_out_double_data = null;
return !(0 < n.length);
};
cc._RF.pop();
}, {} ],
poker_utils_DNN: [ function(e, t, B) {
"use strict";
cc._RF.push(t, "cec97nq5HdNWaMTXq6OvF24", "poker_utils_DNN");
B.get_poker_value = function(e) {
return e < 8 ? Math.floor(e / 4) + 14 : Math.floor(e / 4) + 1;
};
B.get_poker_color = function(e) {
return e % 4;
};
B.dnnCardTypeSre = function(e, t) {
var i = "";
switch (e) {
case 1:
i = "无牛";
break;

case 2:
i = "牛" + function(e) {
var t = "一";
switch (e) {
case 1:
t = "一";
break;

case 2:
t = "二";
break;

case 3:
t = "三";
break;

case 4:
t = "四";
break;

case 5:
t = "五";
break;

case 6:
t = "六";
break;

case 7:
t = "七";
break;

case 8:
t = "八";
break;

case 9:
t = "九";
}
return t;
}(t);
break;

case 3:
i = "牛牛";
break;

case 4:
i = "顺子牛";
break;

case 5:
i = "银花牛";
break;

case 6:
i = "金花牛";
break;

case 7:
i = "同花牛";
break;

case 8:
i = "葫芦牛";
break;

case 9:
i = "炸弹牛";
break;

case 10:
i = "顺花牛";
break;

case 11:
i = "五小牛";
}
return i;
};
function w(e, t) {
return 0 != (e & 1 << t);
}
B.dnn_check_card_type = function(e) {
var t = {
type: 0,
max_value: 0,
max_color: 0,
card_value: []
}, i = cc.vv.gameNetMgr.conf.rule_index;
e.sort(function(e, t) {
return t - e;
});
for (var n = e.length, a = 0, s = !1, c = 0, r = null, o = [], h = !1, l = !1, d = !1, u = null, v = !0, g = !0, _ = null, f = 0, p = !0, m = 0; m < n; ++m) {
var C = B.get_poker_value(e[m]), y = B.get_poker_color(e[m]);
o.push(C);
5 <= C && (p = !1);
f += C + 1;
9 < C ? a += 1 : 9 == C && (s = !0);
if (null == r) {
r = C;
c = 1;
} else if (r != C) {
if (4 == c) {
h = !0;
u = r;
} else if (3 == c) {
l = !0;
u = r;
} else 2 == c && (d = !0);
r - 1 != C && (v = !1);
r = C;
c = 1;
} else {
c += 1;
v = !1;
}
null == _ ? _ = y : _ != y && (g = !1);
}
if (4 == c) {
h = !0;
u = r;
}
if (3 == c) {
l = !0;
u = r;
}
2 == c && (d = !0);
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_SMALL, i) && p && f <= 10) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_SMALL;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
}
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_SEQ_SAME_COLOR, i) && v && g) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_XIAOSHUAI;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
}
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_BOOM, i) && h) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_BOOM;
t.max_value = u;
return t;
}
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_HULU, i) && d && l) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_HULU;
t.card_value = o;
t.max_value = u;
return t;
}
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_SAME_COLOR, i) && g) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_SAME_COLOR;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
}
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_GOLD, i) && 5 == a) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_GOLD;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
}
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_SILVER, i) && 4 == a && s) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_SILVER;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
}
if (w(cc.vv.global_dnn.dnn_seetting.MASK_SPE_SEQ, i) && v) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_SEQ;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
}
var b, M = [];
for (m = 0; m < 5; ++m) M.push(9 < (b = o[m]) ? 10 : b);
var N = 0;
for (m = 0; m < 3; ++m) for (var S = m + 1; S < 4; ++S) for (var A = S + 1; A < 5; ++A) {
if (0 == (M[m] + M[S] + M[A]) % 10) {
for (var I = 0, E = 0; E < 5; ++E) E != m && E != S && E != A && (I += M[E]);
if (0 == (I %= 10)) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_DOUBLE;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
}
N < I && (N = I);
}
}
if (0 != N) {
t.type = cc.vv.global_dnn.dnn_seetting.OX_ONE;
t.max_value = N;
} else t.type = cc.vv.global_dnn.dnn_seetting.OX_NONE;
t.card_value = o;
t.max_color = B.get_poker_color(e[0]);
return t;
};
cc._RF.pop();
}, {} ],
poker_utils_FLY: [ function(e, t, M) {
"use strict";
cc._RF.push(t, "fded3Kx9qZJ5JvyOYUbcHBM", "poker_utils_FLY");
M.get_poker_value = function(e) {
return 1 == cc.vv.gameNetMgr.isGamesDZPK() ? e < 4 ? Math.floor(e / 4) + 15 : Math.floor(e / 4) + 2 : 0 == cc.vv.gameNetMgr.use58() ? Math.floor(e / 4) + 3 : e < 8 ? Math.floor(e / 4) + 14 : Math.floor(e / 4) + 1;
};
M.get_poker_display_value = function(e) {
return -1 == e ? -1 : e < 4 ? 15 : Math.floor(e / 4) + 2;
};
M.getOutTypeName = function(e) {
var t = "无类型";
switch (e) {
case 2:
t = "三同花";
break;

case 3:
t = "三顺子";
break;

case 4:
t = "六对半";
break;

case 5:
t = "五对三条";
break;

case 6:
t = "四炸三条";
break;

case 7:
t = "双怪冲三";
break;

case 8:
t = "凑一色";
break;

case 9:
t = "全小";
break;

case 10:
t = "全大";
break;

case 11:
t = "三分天下";
break;

case 12:
t = "三同花顺";
break;

case 13:
t = "十二皇族";
break;

case 14:
t = "一条龙";
break;

case 15:
t = "至尊青龙";
}
return t;
};
M.getDaoTypeName = function(e) {
var t = "无类型";
switch (e) {
case 1:
t = "乌龙";
break;

case 2:
t = "一对";
break;

case 3:
t = "两对";
break;

case 4:
t = "三条";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "炸弹";
break;

case 9:
t = "同花顺";
}
return t;
};
M.get_poker_color = function(e) {
return e % 4;
};
function p(e) {
var t = [];
for (var i in e) t.push(M.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}
function s(e) {
for (var t = e.length, i = 0; i < t - 1; ++i) {
if (15 == e[i] || 16 == e[i] || 15 == e[i + 1] || 16 == e[i + 1]) return !1;
if (e[i] != e[i + 1] - 1) return !1;
}
return !0;
}
function c(e) {
for (var t = e.length, i = [], n = 0; n < t; ) {
if (e[n] != e[n + 1]) return !1;
i.push(e[n]);
n += 2;
}
return s(i);
}
function m(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
for (var a = 0, s = n + 1; s < e.length; ++s) {
e[n] == e[s] && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
return i;
}
function r(e) {
for (var t = m(e), i = [], n = 0; n < e.length; n++) e[n] != t && i.push(e[n]);
return i[0] == i[1];
}
function o(e) {
for (var t = [], i = 0; i < e.length; i++) for (var n = 0, a = i + 1; a < e.length; ++a) {
e[i] == e[a] && n++;
2 == n && -1 == t.indexOf(e[i]) && t.push(e[i]);
}
t.sort(function(e, t) {
return e - t;
});
return t;
}
function h(e) {
for (var t = !0, i = M.get_poker_color(e[0]), n = 0; n < e.length; n++) {
var a = e[n];
if (i != M.get_poker_color(a)) {
t = !1;
break;
}
}
return t;
}
function l(e) {
for (var t = !0, i = e[0], n = 0; n < e.length; n++) if (i != e[n]) {
t = !1;
break;
}
return t;
}
function u(e) {
for (var t = [], i = 0; i < e.length; i++) {
for (var n = M.get_poker_value(e[i]), a = 0, s = i + 1; s < e.length; ++s) {
n == M.get_poker_value(e[s]) && a++;
}
if (3 <= a) {
for (var c = 0; c < a + 1; c++) t.push(e[i + c]);
break;
}
}
return t;
}
function d(e) {
if (e.length < 4) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 4 == t.length ? t : [];
}
function v(e) {
if (e.length < 2) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 2 == t.length ? t[0] == t[1] ? [] : t : [];
}
function g(e, t) {
for (var i = M.get_poker_value(e[0]), n = e.length, a = [], s = 0; s < t.length; s++) {
for (var c = M.get_poker_value(t[s]), r = 1, o = s + 1; o < t.length; ++o) {
c == M.get_poker_value(t[o]) && r++;
}
console.log("count:", r, "base_boom_len:", n, "id_a:", c);
if (!(r == n && c <= i) && n <= r) {
for (var h = 0; h < r; h++) a.push(t[s + h]);
break;
}
}
return a;
}
function _(e, t) {
if (1 < e.length) {
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
if (1 < a.length) return null;
}
var i = e[0];
if (1 == cc.vv.gameNetMgr.isSingle()) {
return null == i ? t[t.length - 1] : M.get_poker_value(t[t.length - 1]) > M.get_poker_value(i) ? t[t.length - 1] : null;
}
var n = cc.vv.gameNetMgr.now_card_data;
if (53 == i && n[0] == i) return null;
if (52 == i) {
if (53 == t[t.length - 1]) return t[t.length - 1];
if (n[0] == i) return null;
}
if (M.get_poker_value(i) >= M.get_poker_value(t[t.length - 1])) {
var a;
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
}
var s = null == i ? 0 : M.get_poker_value(i), c = 0;
for (c = 0; c < t.length; ++c) {
if (1 != f(r = M.get_poker_value(t[c]), t) && (1 != C(r, t) && s < r)) return t[c];
}
for (c = 0; c < t.length; ++c) {
if (1 != C(r = M.get_poker_value(t[c]), t) && s < r) return t[c];
}
for (c = 0; c < t.length; ++c) {
var r;
if (s < (r = M.get_poker_value(t[c]))) return t[c];
}
return null;
}
function f(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (2 == i) return !0;
}
return !1;
}
function C(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (3 == i) return !0;
}
return !1;
}
function y(e, t) {
if (t.length < 2) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) for (var c = M.get_poker_value(t[s]), r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r])) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
n[n.length - 1] == e[0] && (e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
for (var o = [], h = 0; h < i.length; ++h) if (1 != C(i[h], t) && i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
if (0 == o.length) for (h = 0; h < i.length; ++h) if (i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
52 != o[0] && 53 != o[0] || o[0] != o[1] && (o = []);
return o;
}
function b(e, t) {
if (t.length < 4 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) {
var c = M.get_poker_value(t[s]);
if (15 != c && 16 != c) for (var r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r]) && -1 == i.indexOf(c)) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
}
if (n.length < 2) return [];
var o = S(n, e[0], e.length / 2);
if (0 == o.length) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
o = S(n, e[0], e.length / 2);
}
for (var h = [], l = 0; l < o.length; ++l) for (var d = M.get_poker_value(o[l]), u = 0; u < a.length; ++u) {
if (d == M.get_poker_value(a[u])) {
h.push(o[l]);
h.push(a[u]);
}
}
return h;
}
function N(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = 0; a < t.length; ++a) {
var s = M.get_poker_value(t[a]);
if (-1 == i.indexOf(s) && s < 15) {
i.push(s);
n.push(t[a]);
}
}
if (i.length < 5 || i.length < e.length) return [];
var c = S(n, e[0], e.length);
if (e[e.length - 1] == c[c.length - 1]) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
c = S(n, e[0], e.length);
}
return c;
}
function S(e, t, i) {
e.sort(function(e, t) {
return e - t;
});
for (var n = [], a = [], s = 0; s < e.length; ++s) {
var c = M.get_poker_value(e[s]);
if (c > M.get_poker_value(t)) {
n.push(c);
a.push(e[s]);
}
}
if (n.length < i) return [];
for (var r = 0; r < n.length - i + 1; ++r) {
for (var o = 0, h = [], l = r; l < r + i; ++l) {
var d = n[l], u = n[l + 1];
o++;
h.push(a[l]);
if (u && u - d != 1) break;
}
if (o == i) return h;
}
return [];
}
function A(e, t) {
if (t.length < 5 || t.length < e.length) return [];
var i = function(e, t) {
for (var i = [], n = 0; n < t.length; n++) {
var a = M.get_poker_color(t[n]);
e == a && i.push(t[n]);
}
return i;
}(M.get_poker_color(e[0]), t);
return i.length < 5 || i.length < e.length ? [] : N(e, i);
}
function I(e, t) {
if (t.length < 3 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
return l;
}
function E(e, t) {
if (t.length < 4 || t.length < e.length) return [];
var i = I(e, t);
if (0 < i.length) {
for (var n = !1, a = 0; a < t.length; ++a) {
if (M.get_poker_value(t[a]) != M.get_poker_value(i[0])) {
i.push(t[a]);
n = !0;
break;
}
}
0 == n && (i = []);
}
return i;
}
function B(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
if (0 < l.length) for (var v = 0, g = 0; g < t.length; ++g) {
if (M.get_poker_value(t[g]) != M.get_poker_value(l[0])) {
l.push(t[g]);
v++;
}
if (2 == v) break;
}
return l;
}
function w(e, t) {
if (t.length < 5) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = m(p(e));
if (i[i.length - 1] == d) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
d = m(p(e));
}
for (var u in i) if (i[u] > d) {
l.push(n[u]);
l.push(a[u]);
l.push(s[u]);
break;
}
if (0 < l.length) {
for (var v = [], g = 0; g < t.length; ++g) {
M.get_poker_value(t[g]) != M.get_poker_value(l[0]) && v.push(t[g]);
}
for (c = 0; c < v.length; ++c) {
var _ = !1, f = M.get_poker_value(v[c]);
for (h = c + 1; h < v.length; ++h) {
if (f == M.get_poker_value(v[h])) {
_ = !0;
l.push(v[c]);
l.push(v[h]);
break;
}
}
if (_) break;
}
}
return 5 == l.length ? l : [];
}
function k(e, t) {
if (t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (15 != r && 16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = function(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
var a = 0, s = M.get_poker_value(e[n]);
if (16 != s) {
for (var c = n + 1; c < e.length; ++c) {
var r = M.get_poker_value(e[c]);
s == r && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
}
return i;
}(e), u = e.length / 5;
if (i.length < u) return [];
var v = S(n, d, u);
if (0 == v.length) return [];
for (var g = S(a, d, u), _ = S(s, d, u), f = 0; f < u; ++f) {
l.push(v[f]);
l.push(g[f]);
l.push(_[f]);
}
for (var p = 0, m = 0; m < t.length; ++m) {
for (var C = M.get_poker_value(t[m]), y = !1, b = 0; b < v.length; ++b) {
if (C == M.get_poker_value(v[b])) {
y = !0;
break;
}
}
if (0 == y) {
l.push(t[m]);
p++;
}
if (p == 2 * u) break;
}
return l;
}
function T(e, t) {
if (t.length < e.length) return [];
var i = u(e);
if (i.length < 4) return [];
for (var n = M.get_poker_value(i[0]), a = [], s = !1, c = 0; c < t.length; c++) {
var r = M.get_poker_value(t[c]);
if (n < r) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (3 == o) {
s = !0;
a.push(val_list[c]);
a.push(val_list[c + 1]);
a.push(val_list[c + 2]);
a.push(val_list[c + 3]);
break;
}
}
if (s) break;
}
if (0 < a.length) for (var l = 0, d = 0; d < t.length; ++d) {
if (M.get_poker_value(t[d]) != M.get_poker_value(a[0])) {
a.push(t[d]);
l++;
}
if (2 == l) break;
}
return a;
}
M.check_out_type = function(e) {
var t = p(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2;
break;
}
if (2 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < m(t)) {
i = 5;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
var n = o(t);
n.length == t.length / 5 && s(n) && (i = 6);
break;
}
} while (0);
return i;
};
M.getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带二";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
}
return t;
};
M.check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (4 == d(a).length) return !0;
if (42 == d(s).length) return !1;
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
var o = _(a, s);
null != o && n.push(o);
break;

case 2:
n = y(a, s);
break;

case 3:
n = b(a, s);
break;

case 4:
n = N(a, s);
break;

case 5:
n = B(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
}
}
return !(0 < n.length);
};
M.check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var n = u(i);
if (0 < n.length) {
var a = u(t);
0 == t.length || n.length > a.length || n.length == a.length && M.get_poker_value(n[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = n : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = d(i);
if (4 == s.length) {
cc.vv.gameNetMgr.tishi_card_data = s;
return;
}
}
}
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
var n = d(i);
if (4 != n.length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
}
} else cc.vv.gameNetMgr.tishi_card_data = n;
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.ddz_check_out_type = function(e) {
var t = p(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (6 == t.length && 4 == u(e).length) {
i = 11;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2 == v(e).length ? 7 : 2;
break;
}
if (5 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < m(t)) {
3 == t.length ? i = 9 : 4 == t.length ? i = 10 : r(t) && (i = 5);
break;
}
if (6 <= t.length && 1 < o(t).length) {
i = 6;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
var n = o(t);
n.length == t.length / 5 && s(n) && (i = 6);
break;
}
if (8 <= t.length && t.length % 4 == 0) {
var a = o(t);
a.length == t.length / 4 && s(a) && (i = 6);
break;
}
} while (0);
return i;
};
M.ddz_getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带一对";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
break;

case 9:
t = "三不带";
break;

case 10:
t = "三带一";
break;

case 11:
t = "四带二";
}
return t;
};
M.ddz_check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(a).length) return !0;
if (4 == d(s).length) return !1;
} else {
if (2 == v(a).length) return !0;
if (2 == v(s).length) return !1;
}
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
null != _(a, s) && n.push(_(a, s));
break;

case 2:
n = y(a, s);
break;

case 3:
n = b(a, s);
break;

case 4:
n = N(a, s);
break;

case 5:
n = w(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
break;

case 9:
n = I(a, s);
break;

case 10:
n = E(a, s);
break;

case 11:
n = T(a, s);
}
}
return !(0 < n.length);
};
M.ddz_check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = cc.vv.gameNetMgr.conf.rule_index, a = [];
if (8192 & n) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
} else if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = w(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = u(i);
if (0 < s.length) {
var c = u(t);
0 == t.length || s.length > c.length || s.length == c.length && M.get_poker_value(s[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = s : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) if (8192 & n) {
if (4 == (a = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
} else if (2 == (a = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
}
};
M.ddz_check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = [];
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (4 == (n = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
} else {
if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (2 == (n = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = b(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = N(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
}
};
M.dnnCardTypeSre = function(e, t) {
var i = "";
switch (e) {
case 1:
i = "无牛";
break;

case 2:
i = "牛" + function(e) {
var t = "一";
switch (e) {
case 1:
t = "一";
break;

case 2:
t = "二";
break;

case 3:
t = "三";
break;

case 4:
t = "四";
break;

case 5:
t = "五";
break;

case 6:
t = "六";
break;

case 7:
t = "七";
break;

case 8:
t = "八";
break;

case 9:
t = "九";
}
return t;
}(t);
break;

case 3:
i = "牛牛";
break;

case 4:
i = "银花牛";
break;

case 5:
i = "金花牛";
break;

case 6:
i = "炸弹牛";
break;

case 7:
i = "五小牛";
}
return i;
};
M.dnn_check_card_type = function(e) {
var t = {
type: 0,
max_value: 0,
max_color: 0,
card_value: []
};
e.sort(function(e, t) {
return t - e;
});
for (var i, n = e.length, a = 0, s = !1, c = 0, r = null, o = [], h = !1, l = null, d = 0, u = !0, v = 0; v < n; ++v) {
var g = (i = e[v], Math.floor(i / 4) + 1);
o.push(g);
5 <= g + 1 && (u = !1);
d += g + 1;
10 < g ? a += 1 : 10 == g && (s = !0);
if (null == r) {
r = g;
c = 1;
} else if (r != g) {
if (4 == c) {
h = !0;
l = r;
} else if (3 == c) {
!0;
l = r;
}
r = g;
c = 1;
} else c += 1;
}
if (4 == c) {
h = !0;
l = r;
}
if (3 == c) {
!0;
l = r;
}
if (u && d <= 10) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SMALL;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (h) {
t.type = cc.vv.gameType.GAME_TYPE.OX_BOOM;
t.max_value = l;
return t;
}
if (5 == a) {
t.type = cc.vv.gameType.GAME_TYPE.OX_GOLD;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (4 == a && s) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SILVER;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
var _, f = [];
for (v = 0; v < 5; ++v) f.push(9 < (_ = o[v]) ? 10 : _);
var p = 0;
for (v = 0; v < 3; ++v) for (var m = v + 1; m < 4; ++m) for (var C = m + 1; C < 5; ++C) {
if (0 == (f[v] + f[m] + f[C]) % 10) {
for (var y = 0, b = 0; b < 5; ++b) b != v && b != m && b != C && (y += f[b]);
if (0 == (y %= 10)) {
t.type = cc.vv.gameType.GAME_TYPE.OX_DOUBLE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
p < y && (p = y);
}
}
if (0 != p) {
t.type = cc.vv.gameType.GAME_TYPE.OX_ONE;
t.max_value = p;
} else t.type = cc.vv.gameType.GAME_TYPE.OX_NONE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
};
M.zjhCardTypeSre = function(e) {
var t = "未看牌";
switch (e) {
case 1:
t = "散牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "连子";
break;

case 4:
t = "金花";
break;

case 5:
t = "金花顺";
break;

case 6:
t = "三个头";
}
return t;
};
M.zjh_check_card_type = function(e) {
e.sort(function(e, t) {
return t - e;
});
var t = p(e);
return t[0] == t[1] == t[2] ? 6 : t[0] == t[1] || t[1] == t[2] || t[0] == t[2] ? 2 : s(t) ? h(e) ? 5 : 3 : 1;
};
M.dzpkCardTypeSre = function(e) {
var t = "高牌";
switch (e) {
case 1:
t = "高牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "两对";
break;

case 4:
t = "三个";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "4个";
break;

case 9:
t = "同花顺";
break;

case 10:
t = "皇家同花顺";
}
return t;
};
cc._RF.pop();
}, {} ],
poker_utils_PAGUO: [ function(e, t, h) {
"use strict";
cc._RF.push(t, "a302bRnOZNJirOPlCcWuCGy", "poker_utils_PAGUO");
h.get_poker_value = function(e) {
return e < 8 ? Math.floor(e / 4) + 5 : 7 < e && e < 40 ? Math.floor(e / 4) + 6 : 39 < e && e < 44 ? 7 : 16;
};
h.get_poker_value_server = function(e) {
return Math.floor(e / 4);
};
h.get_call_score = function() {
return 80;
};
h.get_shuang7_score = function() {
return 25;
};
h.get_poker_color = function(e) {
return e % 4;
};
h.pokerSort = function(e, t) {
var i = [];
(t < 0 || 3 < t) && (t = 0);
for (var n = [ [ 4, 3, 2, 1 ], [ 1, 4, 3, 2 ], [ 2, 1, 4, 3 ], [ 3, 2, 1, 4 ] ][t], a = 0; a < e.length; a++) {
var s = e[a], c = h.get_poker_color(s), r = h.get_poker_value(s), o = {};
o.cid = s;
o.color = c;
o.valueID = r;
o.index = n[c];
o.c_index = n[c];
o.isMain = !1;
c == t && (o.isMain = !0);
if (15 == r) {
o.isMain = !0;
o.index = 6;
c == t && (o.index = 7);
} else if (7 == r) {
o.isMain = !0;
o.index = 8;
c == t && (o.index = 9);
} else if (16 == r) {
o.isMain = !0;
o.index = 44 == s ? 10 : 11;
}
i.push(o);
}
i.sort(function(e, t) {
return t.index == e.index ? t.valueID == e.valueID ? t.c_index - e.c_index : t.valueID - e.valueID : t.index - e.index;
});
return i;
};
h.check_out_type = function(e, t) {
if (1 == e.length) return 1;
e.sort(function(e, t) {
return e - t;
});
var i = function(e) {
var t = [];
for (var i in e) t.push(h.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}(e);
if (2 == i.length) {
if (i[0] == i[1] && h.get_poker_color(e[0]) == h.get_poker_color(e[1])) return 2;
} else if (2 < e.length && e.length % 2 == 0 && function(e, s) {
var t = e.length;
if (t < 4 || t % 2 != 0) return !1;
for (var i = [], n = 0; n < t; ++n) i.push(e[n]);
i.sort(function(e, t) {
if (e == t) return e - t;
if (-1 == s) return e - t;
var i = h.get_poker_value_server(e), n = h.get_poker_value_server(t);
if (8 < i && i < 11 && i == n) {
var a = h.get_poker_color(e);
h.get_poker_color(t);
return a == s ? 1 : -1;
}
return e - t;
});
var a = -1, c = -1;
for (n = 0; n < t; ) {
if (i[n] != i[n + 1]) return !1;
var r = h.get_poker_value_server(i[n]), o = h.get_poker_color(i[n]);
if (-1 != a && -1 != c) if (r <= 8) {
if (r != a + 1 || o != c) return !1;
} else {
if (a <= 7) return !1;
if (8 == a) {
if (r != a + 1) return !1;
if (c != s) return !1;
if (c == o) return !1;
} else if (11 == r && 1 == o) {
if (r != a) return !1;
} else if (11 == r && 0 == o) {
if (r != a + 1 || c != s) return !1;
} else if (o == s) {
if (c == s || r != a) return !1;
} else if (c != s || r == a) return !1;
}
a = r;
c = o;
n += 2;
}
return !0;
}(e, t)) return 3;
return 4;
};
h.getCardTypeName = function(e) {
var t = "";
switch (e) {
case 1:
case 2:
t = "";
break;

case 3:
t = "拖拉机";
break;

case 4:
t = "甩主";
}
return t;
};
cc._RF.pop();
}, {} ],
poker_utils_PDK: [ function(e, t, N) {
"use strict";
cc._RF.push(t, "e8cf5ih2/xNX76hgfHDVoHe", "poker_utils_PDK");
N.get_poker_value = function(e) {
return Math.floor(e / 4) + 3;
};
N.get_poker_cid = function(e) {
e < 3 && (e = 3);
return 4 * (e - 3);
};
N.get_poker_color = function(e) {
return e % 4;
};
function M(e) {
var t = [];
for (var i in e) t.push(N.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}
function s(e) {
for (var t = e.length, i = 0; i < t - 1; ++i) {
if (15 == e[i] || 16 == e[i] || 15 == e[i + 1] || 16 == e[i + 1]) return !1;
if (e[i] != e[i + 1] - 1) return !1;
}
return !0;
}
function c(e) {
for (var t = e.length, i = [], n = 0; n < t; ) {
if (e[n] != e[n + 1]) return !1;
i.push(e[n]);
n += 2;
}
return s(i);
}
function C(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
for (var a = 0, s = n + 1; s < e.length; ++s) {
e[n] == e[s] && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
return i;
}
function S(e) {
for (var t = [], i = 0; i < e.length; i++) for (var n = 0, a = i + 1; a < e.length; ++a) {
e[i] == e[a] && n++;
2 == n && -1 == t.indexOf(e[i]) && t.push(e[i]);
}
t.sort(function(e, t) {
return e - t;
});
return t;
}
function r(e) {
for (var t = !0, i = e[0], n = 0; n < e.length; n++) if (i != e[n]) {
t = !1;
break;
}
return t;
}
function h(e) {
for (var t = [], i = 0; i < e.length; i++) {
for (var n = N.get_poker_value(e[i]), a = 0, s = i + 1; s < e.length; ++s) {
n == N.get_poker_value(e[s]) && a++;
}
if (3 <= a) {
for (var c = 0; c < a + 1; c++) t.push(e[i + c]);
break;
}
}
return t;
}
function l(e) {
if (e.length < 4) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 4 == t.length ? t : [];
}
function d(e, t) {
for (var i = N.get_poker_value(e[0]), n = e.length, a = [], s = 0; s < t.length; s++) {
for (var c = N.get_poker_value(t[s]), r = 1, o = s + 1; o < t.length; ++o) {
c == N.get_poker_value(t[o]) && r++;
}
console.log("count:", r, "base_boom_len:", n, "id_a:", c);
if (!(r == n && c <= i) && n <= r) {
for (var h = 0; h < r; h++) a.push(t[s + h]);
break;
}
}
return a;
}
function u(e, t) {
if (1 < e.length) {
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
if (1 < a.length) return null;
}
var i = e[0];
if (1 == cc.vv.gameNetMgr.isSingle()) {
return null == i ? t[t.length - 1] : N.get_poker_value(t[t.length - 1]) > N.get_poker_value(i) ? t[t.length - 1] : null;
}
var n = cc.vv.gameNetMgr.now_card_data;
if (53 == i && n[0] == i) return null;
if (52 == i) {
if (53 == t[t.length - 1]) return t[t.length - 1];
if (n[0] == i) return null;
}
if (N.get_poker_value(i) >= N.get_poker_value(t[t.length - 1])) {
var a;
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
}
var s = null == i ? 0 : N.get_poker_value(i), c = 0;
for (c = 0; c < t.length; ++c) {
if (1 != y(r = N.get_poker_value(t[c]), t) && (1 != A(r, t) && s < r)) return t[c];
}
for (c = 0; c < t.length; ++c) {
if (1 != A(r = N.get_poker_value(t[c]), t) && s < r) return t[c];
}
for (c = 0; c < t.length; ++c) {
var r;
if (s < (r = N.get_poker_value(t[c]))) return t[c];
}
return null;
}
function y(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
N.get_poker_value(t[n]) == e && i++;
if (2 == i) return !0;
}
return !1;
}
function A(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
N.get_poker_value(t[n]) == e && i++;
if (3 == i) return !0;
}
return !1;
}
function I(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
N.get_poker_value(t[n]) == e && i++;
if (3 < i) return !0;
}
return !1;
}
function v(e, t) {
if (t.length < 4 || t.length < e.length) return [];
I(N.get_poker_value(e[0]), e) && (e = cc.vv.gameNetMgr.now_card_data);
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) {
var c = N.get_poker_value(t[s]);
if (15 != c && 16 != c) for (var r = s + 1; r < t.length; ++r) {
if (c == N.get_poker_value(t[r]) && -1 == i.indexOf(c)) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
}
if (n.length < 2) return [];
var o = E(n, e[0], e.length / 2);
if (0 == o.length) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
o = E(n, e[0], e.length / 2);
}
for (var h = [], l = 0; l < o.length; ++l) for (var d = N.get_poker_value(o[l]), u = 0; u < a.length; ++u) {
if (d == N.get_poker_value(a[u])) {
h.push(o[l]);
h.push(a[u]);
}
}
return h;
}
function g(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = 0; a < t.length; ++a) {
var s = N.get_poker_value(t[a]);
if (-1 == i.indexOf(s) && s < 15) {
i.push(s);
n.push(t[a]);
}
}
if (i.length < 5 || i.length < e.length) return [];
var c = E(n, e[0], e.length);
if (e[e.length - 1] == c[c.length - 1]) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
c = E(n, e[0], e.length);
}
return c;
}
function E(e, t, i) {
e.sort(function(e, t) {
return e - t;
});
for (var n = [], a = [], s = 0; s < e.length; ++s) {
var c = N.get_poker_value(e[s]);
if (c > N.get_poker_value(t)) {
n.push(c);
a.push(e[s]);
}
}
if (n.length < i) return [];
for (var r = 0; r < n.length - i + 1; ++r) {
for (var o = 0, h = [], l = r; l < r + i; ++l) {
var d = n[l], u = n[l + 1];
o++;
h.push(a[l]);
if (u && u - d != 1) break;
}
if (o == i) return h;
}
return [];
}
function _(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = N.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == N.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = C(M(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
g = C(M(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
if (0 < v.length) for (var f = 0, p = 0; p < t.length; ++p) {
var m = N.get_poker_value(t[p]);
if (1 != I(m, t) && (1 != A(m, t) && 1 != y(m, t))) {
if (m != N.get_poker_value(v[0])) {
v.push(t[p]);
f++;
}
if (2 == f) break;
}
}
return v;
}
function f(e, t) {
if (t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = N.get_poker_value(t[c]);
if (15 != r && 16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == N.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = N.get_poker_cid(B(S(M(e)))[0]), u = e.length / 5;
if (i.length < u) return [];
var v = E(n, d, u);
if (0 == v.length) return [];
for (var g = E(a, d, u), _ = E(s, d, u), f = 0; f < u; ++f) {
l.push(v[f]);
l.push(g[f]);
l.push(_[f]);
}
for (var p = 0, m = 0; m < t.length; ++m) {
for (var C = N.get_poker_value(t[m]), y = !1, b = 0; b < v.length; ++b) {
if (C == N.get_poker_value(v[b])) {
y = !0;
break;
}
}
if (0 == y) {
l.push(t[m]);
p++;
}
if (p == 2 * u) break;
}
return l;
}
N.check_out_type = function(e) {
var t = M(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (4 == l(e).length || 4 <= t.length && 1 == r(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2;
break;
}
if (2 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < C(t)) {
i = 5;
break;
}
if (6 <= t.length) {
var n = B(S(t)).length + 1, a = 5 * n;
if (2 <= n && t.length <= a || 3 * n == t.length) {
i = 6;
break;
}
}
} while (0);
return i;
};
function B(e) {
for (var t = e.length, i = [], n = [], a = 0; a < t - 1; ++a) if (15 != e[a]) if (e[a + 1] && e[a] == e[a + 1] - 1) {
i.push(e[a]);
n.push(e[a + 1]);
} else if (0 < i.length) break;
return i;
}
N.pdk_check_has_boom = function(e) {
for (var t = [], i = 0; i < e.length; i++) {
for (var n = N.get_poker_value(e[i]), a = 0, s = i + 1; s < e.length; ++s) {
n == N.get_poker_value(e[s]) && a++;
}
if (3 <= a) {
for (var c = 0; c < a + 1; c++) t.push(e[i + c]);
break;
}
}
return 0 != t.length;
};
N.getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带二";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
}
return t;
};
N.check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (4 == l(a).length) return !0;
if (42 == l(s).length) return !1;
var c = h(s);
if (0 < c.length) {
var r = h(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && N.get_poker_value(c[0]) > N.get_poker_value(a[0]) ? c : d(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
var o = u(a, s);
null != o && n.push(o);
break;

case 2:
n = function(e, t) {
if (t.length < 2) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) for (var c = N.get_poker_value(t[s]), r = s + 1; r < t.length; ++r) if (c == N.get_poker_value(t[r])) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
for (var o = [], h = 0; h < i.length; ++h) if (i[h] > N.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
return o;
}(a, s);
break;

case 3:
n = v(a, s);
break;

case 4:
n = g(a, s);
break;

case 5:
n = _(a, s);
break;

case 6:
n = f(a, s);
break;

case 7:
n = d(a, s);
}
}
cc.vv.gameNetMgr.check_out_double_data = null;
return !(0 < n.length);
};
N.check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != l(t).length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != u(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(u(t, i));
break;

case 2:
var n = function e(t, i) {
if (i.length < 2) return [];
var n = cc.vv.gameNetMgr.check_out_double_data, a = N.get_poker_value(t[0]), s = 2;
if (n) {
s = n.type;
a = n.base_cid;
}
for (var c = [], r = [], o = [], h = 0; h < i.length; ++h) for (var l = N.get_poker_value(i[h]), d = h + 1; d < i.length; ++d) if (l == N.get_poker_value(i[d])) {
c.push(l);
r.push(i[h]);
o.push(i[d]);
}
for (var u = [], v = [], g = [], _ = [], f = 0; f < c.length; ++f) if (1 != I(c[f], i)) if (1 != A(c[f], i)) {
if (3 != s && c[f] > a) {
u.push(r[f]);
u.push(o[f]);
a = c[f];
break;
}
} else {
v.push(c[f]);
g.push(r[f]);
_.push(o[f]);
}
var p = 0;
if (0 == v.length) {
p = r[r.length - 1];
if (N.get_poker_value(p) == a) {
(C = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
a = N.get_poker_value(C[0]);
}
} else p = g[g.length - 1];
var m = !1;
if (0 == u.length) {
if (2 == s) {
var C;
(C = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
a = N.get_poker_value(C[0]);
}
s = 3;
for (f = 0; f < v.length; ++f) {
if (v[f] > a) {
u.push(g[f]);
u.push(_[f]);
a = v[f];
break;
}
v[f] < N.get_poker_value(cc.vv.gameNetMgr.now_card_data[0]) && (m = !0);
}
}
if (0 == u.length && 0 == m && 0 < v.length) {
var y = cc.vv.gameNetMgr.getSelfData().holds, b = {
type: 2
};
b.base_cid = N.get_poker_value(cc.vv.gameNetMgr.now_card_data[0]);
cc.vv.gameNetMgr.check_out_double_data = b;
cc.vv.gameNetMgr.tishi_card_data = cc.vv.gameNetMgr.now_card_data;
return e(cc.vv.gameNetMgr.now_card_data, y);
}
var M = {};
M.type = s;
M.base_cid = a;
cc.vv.gameNetMgr.check_out_double_data = M;
return u;
}(t, i);
cc.vv.gameNetMgr.tishi_card_data = n;
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = v(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = _(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = f(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = d(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var a = h(i);
if (0 < a.length) {
var s = h(t);
0 == t.length || a.length > s.length || a.length == s.length && N.get_poker_value(a[0]) > N.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = d(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var c = l(i);
if (4 == c.length) {
cc.vv.gameNetMgr.tishi_card_data = c;
return;
}
}
}
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
cc._RF.pop();
}, {} ],
poker_utils_SDB: [ function(e, t, c) {
"use strict";
cc._RF.push(t, "655e90T/3VHOpe2uo9ePKTG", "poker_utils_SDB");
c.get_poker_value = function(e) {
return e < 8 ? Math.floor(e / 4) + 14 : 51 < e ? 16 : Math.floor(e / 4) + 1;
};
c.get_poker_color = function(e) {
return e % 4;
};
c.get_value_total_10 = function(e) {
for (var t = 0, i = !1, n = 0; n < e.length; n++) {
var a = e[n];
if (-1 == a) {
i = !0;
break;
}
var s = c.get_poker_value(a);
15 === s && (s = 2);
t += 11 == s || 12 == s || 13 == s || 16 == s ? .5 : 14 === s ? 1 : s;
}
return 1 == i ? "" : t;
};
c.d10_CardTypeSre = function(e, t) {
var i = "爆牌";
switch (e) {
case 1:
i = "爆牌";
break;

case 2:
i = cc.vv.poker_util.get_value_total_10(t) + "点";
break;

case 3:
i = "十点半";
break;

case 4:
i = "五小";
break;

case 5:
i = "人五小";
break;

case 6:
i = "天王";
break;

case 7:
i = "六小";
break;

case 8:
i = "七小";
break;

case 9:
case 10:
i = "九小";
break;

case 11:
i = "大天王";
}
return i;
};
cc._RF.pop();
}, {} ],
poker_utils_ZJH: [ function(e, t, M) {
"use strict";
cc._RF.push(t, "f1741w9+bBDZJfRyGkhTsuE", "poker_utils_ZJH");
M.get_poker_value = function(e) {
return e < 4 ? 15 : Math.floor(e / 4) + 2;
};
M.get_poker_color = function(e) {
return e % 4;
};
function b(e) {
var t = [];
for (var i in e) t.push(M.get_poker_value(e[i]));
t.sort(function(e, t) {
return e - t;
});
return t;
}
function s(e) {
for (var t = e.length, i = 0; i < t - 1; ++i) {
if (15 == e[i] || 16 == e[i] || 15 == e[i + 1] || 16 == e[i + 1]) return !1;
if (e[i] != e[i + 1] - 1) return !1;
}
return !0;
}
function c(e) {
for (var t = e.length, i = [], n = 0; n < t; ) {
if (e[n] != e[n + 1]) return !1;
i.push(e[n]);
n += 2;
}
return s(i);
}
function N(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
for (var a = 0, s = n + 1; s < e.length; ++s) {
e[n] == e[s] && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
return i;
}
function r(e) {
for (var t = N(e), i = [], n = 0; n < e.length; n++) e[n] != t && i.push(e[n]);
return i[0] == i[1];
}
function o(e) {
for (var t = [], i = 0; i < e.length; i++) for (var n = 0, a = i + 1; a < e.length; ++a) {
e[i] == e[a] && n++;
2 == n && -1 == t.indexOf(e[i]) && t.push(e[i]);
}
t.sort(function(e, t) {
return e - t;
});
return t;
}
function h(e) {
for (var t = !0, i = M.get_poker_color(e[0]), n = 0; n < e.length; n++) {
var a = e[n];
if (i != M.get_poker_color(a)) {
t = !1;
break;
}
}
return t;
}
function l(e) {
for (var t = !0, i = e[0], n = 0; n < e.length; n++) if (i != e[n]) {
t = !1;
break;
}
return t;
}
function u(e) {
for (var t = [], i = 0; i < e.length; i++) {
for (var n = M.get_poker_value(e[i]), a = 0, s = i + 1; s < e.length; ++s) {
n == M.get_poker_value(e[s]) && a++;
}
if (3 <= a) {
for (var c = 0; c < a + 1; c++) t.push(e[i + c]);
break;
}
}
return t;
}
function d(e) {
if (e.length < 4) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 4 == t.length ? t : [];
}
function v(e) {
if (e.length < 2) return [];
for (var t = [], i = e.length - 1; i > e.length - 5; i--) 52 != e[i] && 53 != e[i] || t.push(e[i]);
return 2 == t.length ? t[0] == t[1] ? [] : t : [];
}
function g(e, t) {
for (var i = M.get_poker_value(e[0]), n = e.length, a = [], s = 0; s < t.length; s++) {
for (var c = M.get_poker_value(t[s]), r = 1, o = s + 1; o < t.length; ++o) {
c == M.get_poker_value(t[o]) && r++;
}
console.log("count:", r, "base_boom_len:", n, "id_a:", c);
if (!(r == n && c <= i) && n <= r) {
for (var h = 0; h < r; h++) a.push(t[s + h]);
break;
}
}
return a;
}
function _(e, t) {
if (1 < e.length) {
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
if (1 < a.length) return null;
}
var i = e[0];
if (1 == cc.vv.gameNetMgr.isSingle()) {
return null == i ? t[t.length - 1] : M.get_poker_value(t[t.length - 1]) > M.get_poker_value(i) ? t[t.length - 1] : null;
}
var n = cc.vv.gameNetMgr.now_card_data;
if (53 == i && n[0] == i) return null;
if (52 == i) {
if (53 == t[t.length - 1]) return t[t.length - 1];
if (n[0] == i) return null;
}
if (M.get_poker_value(i) >= M.get_poker_value(t[t.length - 1])) {
var a;
(a = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
i = a[0];
}
var s = null == i ? 0 : M.get_poker_value(i), c = 0;
for (c = 0; c < t.length; ++c) {
if (1 != f(r = M.get_poker_value(t[c]), t) && (1 != p(r, t) && s < r)) return t[c];
}
for (c = 0; c < t.length; ++c) {
if (1 != p(r = M.get_poker_value(t[c]), t) && s < r) return t[c];
}
for (c = 0; c < t.length; ++c) {
var r;
if (s < (r = M.get_poker_value(t[c]))) return t[c];
}
return null;
}
function f(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (2 == i) return !0;
}
return !1;
}
function p(e, t) {
for (var i = 0, n = 0; n < t.length; ++n) {
M.get_poker_value(t[n]) == e && i++;
if (3 == i) return !0;
}
return !1;
}
function m(e, t) {
if (t.length < 2) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) for (var c = M.get_poker_value(t[s]), r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r])) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
n[n.length - 1] == e[0] && (e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
for (var o = [], h = 0; h < i.length; ++h) if (1 != p(i[h], t) && i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
if (0 == o.length) for (h = 0; h < i.length; ++h) if (i[h] > M.get_poker_value(e[0])) {
o.push(n[h]);
o.push(a[h]);
break;
}
52 != o[0] && 53 != o[0] || o[0] != o[1] && (o = []);
return o;
}
function C(e, t) {
if (t.length < 4 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = 0; s < t.length; ++s) {
var c = M.get_poker_value(t[s]);
if (15 != c && 16 != c) for (var r = s + 1; r < t.length; ++r) {
if (c == M.get_poker_value(t[r]) && -1 == i.indexOf(c)) {
i.push(c);
n.push(t[s]);
a.push(t[r]);
}
}
}
if (n.length < 2) return [];
var o = S(n, e[0], e.length / 2);
if (0 == o.length) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
o = S(n, e[0], e.length / 2);
}
for (var h = [], l = 0; l < o.length; ++l) for (var d = M.get_poker_value(o[l]), u = 0; u < a.length; ++u) {
if (d == M.get_poker_value(a[u])) {
h.push(o[l]);
h.push(a[u]);
}
}
return h;
}
function y(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = 0; a < t.length; ++a) {
var s = M.get_poker_value(t[a]);
if (-1 == i.indexOf(s) && s < 15) {
i.push(s);
n.push(t[a]);
}
}
if (i.length < 5 || i.length < e.length) return [];
var c = S(n, e[0], e.length);
if (e[e.length - 1] == c[c.length - 1]) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
c = S(n, e[0], e.length);
}
return c;
}
function S(e, t, i) {
e.sort(function(e, t) {
return e - t;
});
for (var n = [], a = [], s = 0; s < e.length; ++s) {
var c = M.get_poker_value(e[s]);
if (c > M.get_poker_value(t)) {
n.push(c);
a.push(e[s]);
}
}
if (n.length < i) return [];
for (var r = 0; r < n.length - i + 1; ++r) {
for (var o = 0, h = [], l = r; l < r + i; ++l) {
var d = n[l], u = n[l + 1];
o++;
h.push(a[l]);
if (u && u - d != 1) break;
}
if (o == i) return h;
}
return [];
}
function A(e, t) {
if (t.length < 5 || t.length < e.length) return [];
var i = function(e, t) {
for (var i = [], n = 0; n < t.length; n++) {
var a = M.get_poker_color(t[n]);
e == a && i.push(t[n]);
}
return i;
}(M.get_poker_color(e[0]), t);
return i.length < 5 || i.length < e.length ? [] : y(e, i);
}
function I(e, t) {
if (t.length < 3 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == M.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = N(b(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
g = N(b(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
return v;
}
function E(e, t) {
if (t.length < 4 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == M.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = N(b(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
g = N(b(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
if (0 < v.length) {
for (var f = !1, p = 0; p < t.length; ++p) {
var m = M.get_poker_value(t[p]);
for (d = !1, u = 0; u < c.length; u++) if (c[u] == m) {
d = !0;
break;
}
if (0 == d && m != M.get_poker_value(v[0])) {
v.push(t[p]);
f = !0;
break;
}
}
0 == f && (v = []);
}
return v;
}
function B(e, t) {
if (t.length < 5 || t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == M.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = N(b(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
g = N(b(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
if (0 < v.length) for (var f = 0, p = 0; p < t.length; ++p) {
var m = M.get_poker_value(t[p]);
for (d = !1, u = 0; u < c.length; u++) if (c[u] == m) {
d = !0;
break;
}
if (0 == m && m != M.get_poker_value(v[0])) {
v.push(t[p]);
f++;
}
if (2 == f) break;
}
return v;
}
function w(e, t) {
if (t.length < 5) return [];
for (var i = [], n = [], a = [], s = [], c = [], r = 0; r < t.length; ++r) {
var o = M.get_poker_value(t[r]);
if (16 != o && -1 == i.indexOf(o)) {
for (var h = 0, l = r + 1; l < t.length; ++l) {
o == M.get_poker_value(t[l]) && h++;
}
3 == h && c.push(o);
if (2 == h) {
for (var d = !1, u = 0; u < c.length; u++) if (c[u] == o) {
d = !0;
break;
}
if (0 == d) {
i.push(o);
n.push(t[r]);
a.push(t[r + 1]);
s.push(t[r + 2]);
}
}
}
}
var v = [], g = N(b(e));
if (i[i.length - 1] == g) {
(e = cc.vv.gameNetMgr.now_card_data).sort(function(e, t) {
return e - t;
});
g = N(b(e));
}
for (var _ in i) if (i[_] > g) {
v.push(n[_]);
v.push(a[_]);
v.push(s[_]);
break;
}
if (0 < v.length) {
for (var f = [], p = 0; p < t.length; ++p) {
var m = M.get_poker_value(t[p]);
for (d = !1, u = 0; u < c.length; u++) if (c[u] == m) {
d = !0;
break;
}
0 == d && m != M.get_poker_value(v[0]) && f.push(t[p]);
}
for (r = 0; r < f.length; ++r) {
var C = !1, y = M.get_poker_value(f[r]);
for (l = r + 1; l < f.length; ++l) {
if (y == M.get_poker_value(f[l])) {
C = !0;
v.push(f[r]);
v.push(f[l]);
break;
}
}
if (C) break;
}
}
return 5 == v.length ? v : [];
}
function k(e, t) {
if (t.length < e.length) return [];
for (var i = [], n = [], a = [], s = [], c = 0; c < t.length; ++c) {
var r = M.get_poker_value(t[c]);
if (15 != r && 16 != r && -1 == i.indexOf(r)) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (2 == o) {
i.push(r);
n.push(t[c]);
a.push(t[c + 1]);
s.push(t[c + 2]);
break;
}
}
}
var l = [], d = function(e) {
for (var t = !1, i = 0, n = 0; n < e.length; n++) {
var a = 0, s = M.get_poker_value(e[n]);
if (16 != s) {
for (var c = n + 1; c < e.length; ++c) {
var r = M.get_poker_value(e[c]);
s == r && a++;
if (2 == a) {
t = !0;
i = e[n];
break;
}
}
if (t) break;
}
}
return i;
}(e), u = e.length / 5;
if (i.length < u) return [];
var v = S(n, d, u);
if (0 == v.length) return [];
for (var g = S(a, d, u), _ = S(s, d, u), f = 0; f < u; ++f) {
l.push(v[f]);
l.push(g[f]);
l.push(_[f]);
}
for (var p = 0, m = 0; m < t.length; ++m) {
for (var C = M.get_poker_value(t[m]), y = !1, b = 0; b < v.length; ++b) {
if (C == M.get_poker_value(v[b])) {
y = !0;
break;
}
}
if (0 == y) {
l.push(t[m]);
p++;
}
if (p == 2 * u) break;
}
return l;
}
function T(e, t) {
if (t.length < e.length) return [];
var i = u(e);
if (i.length < 4) return [];
for (var n = M.get_poker_value(i[0]), a = [], s = !1, c = 0; c < t.length; c++) {
var r = M.get_poker_value(t[c]);
if (n < r) for (var o = 0, h = c + 1; h < t.length; ++h) {
r == M.get_poker_value(t[h]) && o++;
if (3 == o) {
s = !0;
a.push(val_list[c]);
a.push(val_list[c + 1]);
a.push(val_list[c + 2]);
a.push(val_list[c + 3]);
break;
}
}
if (s) break;
}
if (0 < a.length) for (var l = 0, d = 0; d < t.length; ++d) {
if (M.get_poker_value(t[d]) != M.get_poker_value(a[0])) {
a.push(t[d]);
l++;
}
if (2 == l) break;
}
return a;
}
M.check_out_type = function(e) {
var t = b(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2;
break;
}
if (2 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < N(t)) {
i = 5;
break;
}
if (6 <= t.length) {
var n = o(t), a = 5 * n.length;
2 <= n.length && t.length <= a && s(n) && (i = 6);
break;
}
} while (0);
return i;
};
M.pdk_check_has_boom = function(e) {
return l(e);
};
M.getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带二";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
}
return t;
};
M.check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (4 == d(a).length) return !0;
if (42 == d(s).length) return !1;
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
var o = _(a, s);
null != o && n.push(o);
break;

case 2:
n = m(a, s);
break;

case 3:
n = C(a, s);
break;

case 4:
n = y(a, s);
break;

case 5:
n = B(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
}
}
return !(0 < n.length);
};
M.check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = m(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = C(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var n = u(i);
if (0 < n.length) {
var a = u(t);
0 == t.length || n.length > a.length || n.length == a.length && M.get_poker_value(n[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = n : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = d(i);
if (4 == s.length) {
cc.vv.gameNetMgr.tishi_card_data = s;
return;
}
}
}
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
if (4 != d(t).length) {
var n = d(i);
if (4 != n.length) {
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = m(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = C(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
}
}
} else cc.vv.gameNetMgr.tishi_card_data = n;
} else cc.vv.gameNetMgr.tishi_card_data = [];
};
M.ddz_check_out_type = function(e) {
var t = b(e), i = 0;
do {
if (1 == t.length) {
i = 1;
break;
}
if (6 == t.length && 4 == u(e).length) {
i = 11;
break;
}
if (4 == d(e).length || 4 <= t.length && 1 == l(t)) {
i = 7;
break;
}
if (2 == t.length && t[0] == t[1]) {
i = 2 == v(e).length ? 7 : 2;
break;
}
if (5 < t.length && t.length % 2 == 0 && c(t)) {
i = 3;
break;
}
if (5 <= t.length && s(t)) {
i = h(e) ? 8 : 4;
break;
}
if (3 <= t.length && t.length <= 5 && 0 < N(t)) {
3 == t.length ? i = 9 : 4 == t.length ? i = 10 : r(t) && (i = 5);
break;
}
if (6 <= t.length && 1 < o(t).length) {
i = 6;
break;
}
if (10 <= t.length && t.length % 5 == 0) {
var n = o(t);
n.length == t.length / 5 && s(n) && (i = 6);
break;
}
if (8 <= t.length && t.length % 4 == 0) {
var a = o(t);
a.length == t.length / 4 && s(a) && (i = 6);
break;
}
} while (0);
return i;
};
M.ddz_getCardTypeName = function(e) {
var t;
switch (e) {
case 0:
t = "要不起";
break;

case 1:
t = "";
break;

case 2:
t = "对子";
break;

case 3:
t = "连对儿";
break;

case 4:
t = "顺子";
break;

case 5:
t = "三带一对";
break;

case 6:
t = "飞机";
break;

case 7:
t = "炸弹";
break;

case 8:
t = "同花顺";
break;

case 9:
t = "三不带";
break;

case 10:
t = "三带一";
break;

case 11:
t = "四带二";
}
return t;
};
M.ddz_check_must = function(e, t, i) {
if (0 == t) return !1;
var n = [], a = i, s = e;
a.sort(function(e, t) {
return e - t;
});
s.sort(function(e, t) {
return e - t;
});
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(a).length) return !0;
if (4 == d(s).length) return !1;
} else {
if (2 == v(a).length) return !0;
if (2 == v(s).length) return !1;
}
var c = u(s);
if (0 < c.length) {
var r = u(i);
n = 0 == a.length || c.length > r.length || c.length == r.length && M.get_poker_value(c[0]) > M.get_poker_value(a[0]) ? c : g(a, s);
} else {
0 == t && (t = 1);
switch (t) {
case 1:
null != _(a, s) && n.push(_(a, s));
break;

case 2:
n = m(a, s);
break;

case 3:
n = C(a, s);
break;

case 4:
n = y(a, s);
break;

case 5:
n = w(a, s);
break;

case 6:
n = k(a, s);
break;

case 7:
n = g(a, s);
break;

case 8:
n = A(a, s);
break;

case 9:
n = I(a, s);
break;

case 10:
n = E(a, s);
break;

case 11:
n = T(a, s);
}
}
return !(0 < n.length);
};
M.ddz_check_out_tishi = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = cc.vv.gameNetMgr.conf.rule_index, a = [];
if (8192 & n) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
} else if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = m(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = C(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = w(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) {
var s = u(i);
if (0 < s.length) {
var c = u(t);
0 == t.length || s.length > c.length || s.length == c.length && M.get_poker_value(s[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = s : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
}
if (0 == cc.vv.gameNetMgr.tishi_card_data.length) if (8192 & n) {
if (4 == (a = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
} else if (2 == (a = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = a;
return;
}
}
};
M.ddz_check_out_tishi_joker = function() {
var e = cc.vv.gameNetMgr.now_card_type, t = cc.vv.gameNetMgr.tishi_card_data, i = cc.vv.gameNetMgr.getSelfData().holds;
cc.vv.gameNetMgr.tishi_card_data = [];
var n = [];
if (8192 & cc.vv.gameNetMgr.conf.rule_index) {
if (4 == d(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (4 == (n = d(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
} else {
if (2 == v(t).length) {
cc.vv.gameNetMgr.tishi_card_data = [];
return;
}
if (2 == (n = v(i)).length) {
cc.vv.gameNetMgr.tishi_card_data = n;
return;
}
}
t.sort(function(e, t) {
return e - t;
});
i.sort(function(e, t) {
return e - t;
});
var a = u(i);
if (0 < a.length) {
var s = u(t);
0 == t.length || a.length > s.length || a.length == s.length && M.get_poker_value(a[0]) > M.get_poker_value(t[0]) ? cc.vv.gameNetMgr.tishi_card_data = a : cc.vv.gameNetMgr.tishi_card_data = g(t, i);
} else {
0 == e && (e = 1);
switch (e) {
case 1:
null != _(t, i) && cc.vv.gameNetMgr.tishi_card_data.push(_(t, i));
break;

case 2:
cc.vv.gameNetMgr.tishi_card_data = m(t, i);
break;

case 3:
cc.vv.gameNetMgr.tishi_card_data = C(t, i);
break;

case 4:
cc.vv.gameNetMgr.tishi_card_data = y(t, i);
break;

case 5:
cc.vv.gameNetMgr.tishi_card_data = B(t, i);
break;

case 6:
cc.vv.gameNetMgr.tishi_card_data = k(t, i);
break;

case 7:
cc.vv.gameNetMgr.tishi_card_data = g(t, i);
break;

case 8:
cc.vv.gameNetMgr.tishi_card_data = A(t, i);
break;

case 9:
cc.vv.gameNetMgr.tishi_card_data = I(t, i);
break;

case 10:
cc.vv.gameNetMgr.tishi_card_data = E(t, i);
break;

case 11:
cc.vv.gameNetMgr.tishi_card_data = T(t, i);
}
}
};
M.dnnCardTypeSre = function(e, t) {
var i = "";
switch (e) {
case 1:
i = "无牛";
break;

case 2:
i = "牛" + function(e) {
var t = "一";
switch (e) {
case 1:
t = "一";
break;

case 2:
t = "二";
break;

case 3:
t = "三";
break;

case 4:
t = "四";
break;

case 5:
t = "五";
break;

case 6:
t = "六";
break;

case 7:
t = "七";
break;

case 8:
t = "八";
break;

case 9:
t = "九";
}
return t;
}(t);
break;

case 3:
i = "牛牛";
break;

case 4:
i = "金花牛";
break;

case 5:
i = "炸弹牛";
break;

case 6:
i = "五小牛";
}
return i;
};
M.dnn_check_card_type = function(e) {
var t = {
type: 0,
max_value: 0,
max_color: 0,
card_value: []
};
e.sort(function(e, t) {
return t - e;
});
for (var i, n = e.length, a = 0, s = !1, c = 0, r = null, o = [], h = !1, l = null, d = 0, u = !0, v = 0; v < n; ++v) {
var g = (i = e[v], Math.floor(i / 4) + 1);
o.push(g);
5 <= g + 1 && (u = !1);
d += g + 1;
10 < g ? a += 1 : 10 == g && (s = !0);
if (null == r) {
r = g;
c = 1;
} else if (r != g) {
if (4 == c) {
h = !0;
l = r;
} else if (3 == c) {
!0;
l = r;
}
r = g;
c = 1;
} else c += 1;
}
if (4 == c) {
h = !0;
l = r;
}
if (3 == c) {
!0;
l = r;
}
if (u && d <= 10) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SMALL;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (h) {
t.type = cc.vv.gameType.GAME_TYPE.OX_BOOM;
t.max_value = l;
return t;
}
if (5 == a) {
t.type = cc.vv.gameType.GAME_TYPE.OX_GOLD;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
if (4 == a && s) {
t.type = cc.vv.gameType.GAME_TYPE.OX_SILVER;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
var _, f = [];
for (v = 0; v < 5; ++v) f.push(9 < (_ = o[v]) ? 10 : _);
var p = 0;
for (v = 0; v < 3; ++v) for (var m = v + 1; m < 4; ++m) for (var C = m + 1; C < 5; ++C) {
if (0 == (f[v] + f[m] + f[C]) % 10) {
for (var y = 0, b = 0; b < 5; ++b) b != v && b != m && b != C && (y += f[b]);
if (0 == (y %= 10)) {
t.type = cc.vv.gameType.GAME_TYPE.OX_DOUBLE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
}
p < y && (p = y);
}
}
if (0 != p) {
t.type = cc.vv.gameType.GAME_TYPE.OX_ONE;
t.max_value = p;
} else t.type = cc.vv.gameType.GAME_TYPE.OX_NONE;
t.card_value = o;
t.max_color = M.get_poker_color(e[0]);
return t;
};
M.zjhCardTypeSre = function(e) {
var t = "暗牌";
switch (e) {
case 1:
t = "散牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "连子";
break;

case 4:
t = "金花";
break;

case 5:
t = "金花顺";
break;

case 6:
t = "三个头";
}
return t;
};
M.zjh_check_card_type = function(e) {
e.sort(function(e, t) {
return t - e;
});
var t = b(e);
return t[0] == t[1] == t[2] ? 6 : t[0] == t[1] || t[1] == t[2] || t[0] == t[2] ? 2 : s(t) ? h(e) ? 5 : 3 : 1;
};
M.dzpkCardTypeSre = function(e) {
var t = "高牌";
switch (e) {
case 1:
t = "高牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "两对";
break;

case 4:
t = "三个";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "4个";
break;

case 9:
t = "同花顺";
break;

case 10:
t = "皇家同花顺";
}
return t;
};
cc._RF.pop();
}, {} ],
poker_utils_dzpk: [ function(e, t, m) {
"use strict";
cc._RF.push(t, "0f18e8XJmpOTIPiXBRjNOJK", "poker_utils_dzpk");
m.get_poker_value = function(e) {
return e < 4 ? Math.floor(e / 4) + 15 : Math.floor(e / 4) + 2;
};
m.get_poker_color = function(e) {
return e % 4;
};
m.dzpkCardTypeSre = function(e) {
var t = "高牌";
switch (e) {
case 1:
t = "高牌";
break;

case 2:
t = "对子";
break;

case 3:
t = "两对";
break;

case 4:
t = "三个";
break;

case 5:
t = "顺子";
break;

case 6:
t = "同花";
break;

case 7:
t = "葫芦";
break;

case 8:
t = "4个";
break;

case 9:
t = "同花顺";
break;

case 10:
t = "皇家同花顺";
}
return t;
};
m.dzpk_checkCard = function(e) {
var t = {
type: 0,
card_check: [],
card_value: []
};
e.sort(function(e, t) {
return t - e;
});
var i = [], n = function(e) {
for (var t = [], i = 0; i < 3; i++) {
for (var n = m.get_poker_color(e[i]), a = [], s = 0; s < e.length; s++) {
var c = m.get_poker_color(e[s]);
n == c && a.push(e[s]);
}
if (4 < a.length) {
t = a;
break;
}
}
return t;
}(e);
if (0 < n.length) {
var a = h(n);
if (0 < a.length) {
if (0 < (i = o(a)).length) {
t.type = 10;
t.card_check = i;
} else if (0 < (i = h(a)).length) {
t.type = 9;
t.card_check = i;
}
} else {
n.sort(function(e, t) {
return t - e;
});
if (5 < n.length) for (var s = 0; s < 5; s++) i.push(n[s]); else i = n;
t.type = 6;
t.card_check = i;
}
}
if (0 < i.length) {
t.card_value = e;
return t;
}
if (0 < (i = function(e) {
e.sort(function(e, t) {
return t - e;
});
for (var t = [], i = 0; i < e.length; i++) {
var n = m.get_poker_value(e[i]), a = 1;
(t = []).push(e[i]);
for (var s = i + 1; s < e.length; ++s) {
var c = m.get_poker_value(e[s]);
if (n == c) {
t.push(e[s]);
a++;
}
}
if (4 == a) break;
}
if (4 == t.length) {
for (var r = m.get_poker_value(t[0]), o = 0; o < e.length; o++) {
var h = m.get_poker_value(e[o]);
if (r != h) {
t.push(e[o]);
break;
}
}
return t;
}
return [];
}(e)).length) {
t.type = 8;
t.card_check = i;
t.card_value = e;
return t;
}
if (0 < (i = function(e) {
e.sort(function(e, t) {
return t - e;
});
for (var t = [], i = [], n = [], a = [], s = 0; s < e.length; ++s) {
var c = m.get_poker_value(e[s]);
if (-1 == t.indexOf(c)) for (var r = 0, o = s + 1; o < e.length; ++o) {
var h = m.get_poker_value(e[o]);
c == h && r++;
if (2 == r) {
t.push(c);
i.push(e[s]);
n.push(e[s + 1]);
a.push(e[s + 2]);
break;
}
}
}
var l = [];
for (var d in t) {
l.push(i[d]);
l.push(n[d]);
l.push(a[d]);
}
if (0 < l.length) {
for (var u = [], v = 0; v < e.length; ++v) {
var g = m.get_poker_value(e[v]);
g != m.get_poker_value(l[0]) && u.push(e[v]);
}
for (var s = 0; s < u.length; ++s) {
for (var _ = !1, f = m.get_poker_value(u[s]), o = s + 1; o < u.length; ++o) {
var p = m.get_poker_value(u[o]);
if (f == p) {
_ = !0;
l.push(u[s]);
l.push(u[o]);
break;
}
}
if (_) break;
}
}
if (5 == l.length) return l;
return [];
}(e)).length) {
t.type = 7;
t.card_check = i;
t.card_value = e;
return t;
}
if (0 < (i = o(e)).length) {
t.type = 5;
t.card_check = i;
t.card_value = e;
return t;
}
if (0 < (i = h(e)).length) {
t.type = 5;
t.card_check = i;
t.card_value = e;
return t;
}
if (0 < (i = function(e) {
e.sort(function(e, t) {
return t - e;
});
for (var t = [], i = [], n = [], a = [], s = 0; s < e.length; ++s) {
var c = m.get_poker_value(e[s]);
if (-1 == t.indexOf(c)) for (var r = 0, o = s + 1; o < e.length; ++o) {
var h = m.get_poker_value(e[o]);
c == h && r++;
if (2 == r) {
t.push(c);
i.push(e[s]);
n.push(e[s + 1]);
a.push(e[s + 2]);
break;
}
}
}
var l = [];
if (0 < t.length) {
l.push(i[0]);
l.push(n[0]);
l.push(a[0]);
for (var d = t[0], r = 0, u = 0; u < e.length; ++u) {
var v = m.get_poker_value(e[u]);
if (d != v) {
l.push(e[u]);
r++;
}
if (2 == r) break;
}
}
return l;
}(e)).length) {
t.type = 4;
t.card_check = i;
t.card_value = e;
return t;
}
var c = function(e) {
for (var t = [], i = [], n = [], a = 0; a < e.length; ++a) for (var s = m.get_poker_value(e[a]), c = a + 1; c < e.length; ++c) {
var r = m.get_poker_value(e[c]);
if (s == r) {
t.push(s);
i.push(e[a]);
n.push(e[c]);
}
}
var o = [];
if (1 == t.length) {
var h = t[0];
o.push(i[0]);
o.push(n[0]);
for (var l = 0, a = 0; a < e.length; ++a) {
var s = m.get_poker_value(e[a]);
if (s != h) {
o.push(e[a]);
l++;
}
if (3 == l) break;
}
return {
type: 1,
cards: o
};
}
if (0 < t.length) {
i.sort(function(e, t) {
return t - e;
});
n.sort(function(e, t) {
return t - e;
});
o.push(i[0]);
o.push(n[0]);
o.push(i[1]);
o.push(n[1]);
for (var d = m.get_poker_value(i[0]), u = m.get_poker_value(i[1]), a = 0; a < e.length; ++a) {
var s = m.get_poker_value(e[a]);
if (s != d && s != u) {
o.push(e[a]);
break;
}
}
return {
type: 2,
cards: o
};
}
return null;
}(e);
if (null == c) {
e.sort(function(e, t) {
return t - e;
});
t.type = 1;
i = [ e[0], e[1], e[2], e[3], e[4] ];
t.card_check = i;
t.card_value = e;
return t;
}
var r = c.type;
t.type = 1 == r ? 2 : 3;
t.card_check = c.cards;
t.card_value = e;
return t;
};
function o(e) {
for (var t = [], i = [], n = 0; n < e.length; n++) {
var a = e[n], s = m.get_poker_value(e[n]);
if (-1 == t.indexOf(s)) {
t.push(s);
i.push(a);
}
}
if (t.length < 5) return [];
var c = [];
for (t.length, n = 0; n < t.length; n++) if (14 == t[n]) {
c.push(i[n]);
t[n + 1] && 13 == t[n + 1] && c.push(i[n + 1]);
t[n + 2] && 12 == t[n + 2] && c.push(i[n + 2]);
t[n + 3] && 11 == t[n + 3] && c.push(i[n + 3]);
t[n + 4] && 10 == t[n + 4] && c.push(i[n + 4]);
break;
}
return 5 == c.length ? c : [];
}
function h(e) {
for (var t = [], i = [], n = 0; n < e.length; n++) {
var a = e[n], s = m.get_poker_value(e[n]);
if (-1 == t.indexOf(s)) {
t.push(s);
i.push(a);
}
}
if (t.length < 5) return [];
t.sort(function(e, t) {
return t - e;
});
var c = [], r = t.length;
for (n = 0; n < r; n++) if (15 == t[n]) {
if (t[n + 1] && 14 == t[n + 1]) {
c.push(i[n]);
c.push(i[r - 1]);
t[r - 1] && 3 == t[r - 1] && c.push(i[r - 2]);
t[r - 2] && 4 == t[r - 2] && c.push(i[r - 3]);
t[r - 3] && 5 == t[r - 3] && c.push(i[r - 4]);
} else {
c.push(i[r - 1]);
t[r - 1] && 3 == t[r - 1] && c.push(i[r - 2]);
t[r - 2] && 4 == t[r - 2] && c.push(i[r - 3]);
t[r - 3] && 5 == t[r - 3] && c.push(i[r - 4]);
t[r - 4] && 6 == t[r - 4] && c.push(i[r - 5]);
}
break;
}
if (5 == c.length) return c;
c = [];
for (var o = 0; o < t.length - 4; ++o) {
(c = []).push(i[o]);
for (var h = o + 1, l = 1; l < 5; l++) {
if (t[h - 1] == t[h] + 1) {
c.push(i[h]);
h++;
}
}
if (5 == c.length) return c;
}
return [];
}
cc._RF.pop();
}, {} ],
poker_utils_pinpinle: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "65c16idzndPa7B8r4uy3Kzm", "poker_utils_pinpinle");
i.get_poker_value = function(e) {
return e < 8 ? Math.floor(e / 4) + 14 : Math.floor(e / 4) + 1;
};
i.get_poker_color = function(e) {
return e % 4;
};
i.get_poker_value_server = function(e) {
return Math.floor(e / 4);
};
i.poker_row_decs = function(e, t) {
var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n = "散牌";
switch (e) {
case 6:
n = 1 == i ? "五小+35" : "五小";
break;

case 5:
n = 1 == i ? "五花+35" : "五花";
break;

case 4:
n = 1 == i ? "四炸+30" : "四炸";
break;

case 3:
n = 1 == i ? "双十+20" : "双十";
break;

case 2:
n = t < 7 ? 1 == i ? "十带" + a(t) + "+5" : "十带" + a(t) : 1 == i ? "十带" + a(t) + "+10" : "十带" + a(t);
break;

case 1:
n = 1 == i ? "散牌+0" : "散牌";
}
return n;
};
i.poker_row_decs_win = function(e, t) {
var i = "";
switch (e) {
case 6:
i = "五小+45";
break;

case 5:
i = "五花+45";
break;

case 4:
i = "四炸+40";
break;

case 3:
i = "双十+30";
break;

case 2:
i = t < 7 ? "十带" + a(t) + "+15" : "十带" + a(t) + "+20";
break;

case 1:
i = "散牌+10";
}
return i;
};
i.poker_row_score_win = function(e, t) {
var i = 0;
switch (e) {
case 6:
case 5:
i = 45;
break;

case 4:
i = 40;
break;

case 3:
i = 30;
break;

case 2:
i = t < 7 ? 15 : 20;
break;

case 1:
i = 10;
}
return i;
};
i.poker_row_score = function(e, t) {
var i = 0;
switch (e) {
case 6:
case 5:
i = 35;
break;

case 4:
i = 30;
break;

case 3:
i = 20;
break;

case 2:
i = t < 7 ? 5 : 10;
break;

case 1:
i = 0;
}
return i;
};
function a(e) {
var t = "一";
switch (e) {
case 1:
t = "一";
break;

case 2:
t = "二";
break;

case 3:
t = "三";
break;

case 4:
t = "四";
break;

case 5:
t = "五";
break;

case 6:
t = "六";
break;

case 7:
t = "七";
break;

case 8:
t = "八";
break;

case 9:
t = "九";
}
return t;
}
cc._RF.pop();
}, {} ],
ppl_Item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bd4cdB9FmdJ7IQPIyHLaVFF", "ppl_Item");
cc.Class({
extends: cc.Component,
properties: {
pk_img: {
default: null,
type: cc.Sprite
},
pk_node: cc.Node,
pk_id: -1,
isShowUp: !1,
nodeY: 0
},
onLoad: function() {},
setValueAndColor: function(e) {
this.nodeY = this.node.y;
this.isShowUp = !1;
this.pk_id = e;
this.pk_node.active = !0;
var t = cc.vv.poker_util.get_poker_value(e), i = cc.vv.poker_util.get_poker_color(e);
if (-1 != e) if (16 == t) {
console.log("pkid:", e);
var n = i % 2 == 0 ? "card_joker_small" : "card_joker_big";
this.pk_img.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName(n);
} else this.pk_img.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_" + i + "_" + t); else {
var a = cc.vv.userMgr.poker_color;
this.pk_img.spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_bg" + a);
}
},
setUp: function() {
this.node.y = this.nodeY + 20;
this.isShowUp = !0;
},
setDown: function() {
this.node.y = this.nodeY;
this.isShowUp = !1;
},
clearNode: function() {
this.pk_img.spriteFrame = null;
this.pk_node.active = !1;
this.pk_id = -1;
},
getID: function() {
return this.pk_id;
}
});
cc._RF.pop();
}, {} ],
qiepai: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "79100wBp/pEFJn1JGkCcWhR", "qiepai");
cc.Class({
extends: cc.Component,
properties: {
pks: {
default: [],
type: cc.Node
},
slider: {
default: null,
type: cc.Slider
},
cover: {
default: null,
type: cc.Node
},
lb: {
default: null,
type: cc.Label
},
handler: {
default: null,
type: cc.Button
},
btn: {
default: null,
type: cc.Node
},
lbTime: {
default: null,
type: cc.Label
}
},
onLoad: function() {
var e = this.node.getChildByName("pks").getChildren(), t = cc.vv.userMgr.poker_color;
for (var i in e) {
var n = e[i];
n.getComponent(cc.Sprite).spriteFrame = cc.vv.mahjongmgr.getPokerFrameByName("card_bg" + t);
n.iniX = n.getPositionX();
n.iniY = n.getPositionY();
this.pks.push(n);
n.setPositionX(-415);
}
},
reset: function(e) {
this.slider.progress = 0;
this.cover.width = 60;
this.cover.active = !0;
this.lbTime.string = 5;
for (var t in this.pks) {
var i = this.pks[t];
i.setPosition(-415, i.iniY);
var n = cc.p(i.iniX, i.iniY);
i.runAction(cc.moveTo(.3, n));
}
cc.eventManager.resumeTarget(this.slider.node, !0);
this.btn.active = !0;
if (e) {
this.lb.string = "请等待玩家 " + e + " 切牌...";
cc.eventManager.pauseTarget(this.slider.node, !0);
this.btn.active = !1;
} else this.lb.string = "请拖动箭头切牌...";
this.lbTime.node.runAction(cc.repeat(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
var t = e.getComponent(cc.Label).string;
t--;
e.getComponent(cc.Label).string = t;
})), 5));
},
cutEnd: function() {
this.cover.active = !1;
var e = this.cover.getPositionX() + this.cover.width + this.pks[0].width / 2, t = [], i = [];
for (var n in this.pks) {
(a = this.pks[n]).getPositionX() < e ? t.push(a) : i.push(a);
}
for (var n in t) {
(a = t[n]).runAction(cc.sequence(cc.moveBy(.3, cc.p(-100, 0)), cc.delayTime(.2), cc.moveTo(.2, cc.p(0, 150))));
}
for (var n in i) {
var a;
(a = i[n]).runAction(cc.sequence(cc.moveBy(.3, cc.p(100, 0)), cc.moveTo(.2, cc.p(0, 150))));
}
cc.eventManager.pauseTarget(this.slider.node, !0);
}
});
cc._RF.pop();
}, {} ],
random_code: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d02a7l13JVOzaK5+2N1OCk+", "random_code");
i.random_code = [ "izl0uDyQ429nGuanZjNjW0M3", "1butLIwHsd3RrBRXQgBbi9eJ", "Ua3iGP3wPIgcVsRuGqJrrstd", "oi1be9RrKxSQrPaUf7QUxnEa", "+QCP8mkl5Y/tvbG5gyWx6Yzg", "Ye00q2/s2lriUYHJ9m4P60IG", "cMDEt068YY8gxtwm17Zi2ybW", "Ay3mjBaNZqhauEtKYwj3Yw8u", "T5HA53BKJaRfGeir8TBLbwaU", "3AemPHnJz+0tBbZIQi2SsgiY", "3ON4otm8icjYdDPBANt1F1Rc", "GadEn9RHSHkxBoFG8CPLhCL0", "WZCynNBdsQFgDbQ8te/zmG+J", "Cncx4kMTsbxaQz0nIoAzwgqN", "p5cI0vpVFZ/GBrcC7pDSpyDK", "y5n+B6WPlkxGkDNXWOnTgAAw", "MJfq2whZC67dP/EIx8Ba9iEA", "z3RmVhPpxHCDmmgYQHsMGs6V", "yI8+lOXK5UYI5n+4C32ml1Nn", "ab2K99GVJFZo/edBG3EVnrne", "JkkeBSeFHlLGbW4GcKu9AAYo", "I4YIUU96sIm60jseP2+g5R1+", "CW/S0eZjUCALwD0L+kqRqc7r", "7KiwJpwfvcI9XnbDeFmVv573", "iBr2/54u6KZoYGYHfQfpd1S2", "dI+cp0ALpnniYHhhpTSl/jrL", "A4jf9mFk8eOk+/5yR0LjhXQJ", "HmASn05nOVOCplkQduNzv42e", "qjLFuItaZvoC//WJH8YEBJgK", "m9P0BHAKWWBqTpJAcd+hsSXo", "SDRcHHtb6+AKlo3ASxdjaA6L", "YRGKiD8Wn4Mtf9OYGZZV8ySK", "dNly2V72/nkUT/s3TrrfSGSK", "VPV4yiNgepnaXMzbkZ0xMF7F", "EBl6SFuXzunsNNKAQrnRUSSX", "s6qE68s/ueaf4auPC5CjSoCE", "NJNrhi/T7poYuxbYXBraNyu4", "e8rYU8TCd7L+h/0fgsr0Dm2x", "Kiu/acCDCwohLjMfFb9iNuxK", "qCufeVCI5FrNybo4EsMn03o6", "/GAyw+quJQt9h9GGfa9SXesp", "NnE+zs+7j37blC+LS39JOAx0", "yN7h9WjEUy9gXL9O5HTJ/krz", "BKCxeGvHU2oeoTFVdDI9gupD", "CHGvUKbK8ycDgukMbhAF+EPR", "HY3CPcZM/EKtVTRg6Ak2+HB1", "SXhFlKV9ZA8XIocsUTdzc7zO", "pHiHJvPkdaJQpzF0YT/tNk5F", "l8rDrf+PcwLYCHvzHeD3UnIO", "zbGJgzi7h7Cv1MYm7KbD2Y1D", "DhadptjBDhF9SCBBLXm+RtTX", "i/BcVG0+b+JKvE0VdFemtVhg", "kWmPvp546LLSDYnqtPLZffA8", "oE1Syu2Vclj6JrkKZiiTc2sI", "lOGmLgc1HV0SgwFRDbvTwEbS", "LcQCzoOgG5qhkCnbQ19SLLtX", "bQG/tlL+EFoHphrFSSjQpkU/", "V14VJyD4EztSk10T9Jn0/VmS", "x58lJ2qf3L4riQwBZezkuriC", "gIiLvEfNai233AY5g0agk80r", "AGwB01U6ZVC1nAkPm5rlOGS8", "XbGRgZGjRDTjo0J9h1rUArlB", "6atDYQMZ6el763EX/Jftd6M6", "f3qmpcPk+w/RFJFmk4Wa7824", "dWNJkacqCj1u269DSbrB/lhS", "V925DWXPm+oo2nIkLRXJF55j", "K5Dbm15HuieJqy8ucRns1HBD", "STzfR250R8jnwWJ6kEPlJRxB", "cHv7wNkn/EdClcbYoyIxG6hR", "gz93VMOqQcIOUVeKqZazJi4i", "S8y5pKHmOKp4WjvWW3JSTHJF", "za5ovAC/SvAozTJHKZKX6QUo", "/gLrk/C9rwGFWtL76LDHbLSy", "7fsHuCUlXEQZboYsGOC79mOE", "O7JxIcPKkqnm3zd6RO6h7i9j", "EMj4fxIRdeXm7wRrr3W0jSQZ", "yRX4JNWNG90SPepnKyprodD0", "klUlcJHBYQvfqU1EhNCgNB8m", "XO8mJPzZ2fj9pGMfrhRff5Wg", "Oh8YVjl+KdJBHA4fhLm+RqxM", "5Fz5jwujYW3HK/r6dPM6MfXy", "4fTAhAVR6Jx30X4hWVYiGpFN", "gn92K6QN8+dUX0Begzoty9I/", "+EqZ7XCNvRFo/BkXSkl00eef", "zPA2k5bl6ZLk4zdiqmOTmzKR", "BNFhqGaua9MOc7O9zX6N8Z1Y", "GpX1h606AnEhZXjWoB35BQ08", "oGXYekHYEQadVGVewmnbOeWT", "uSqphX59ZWGVytrB03P+t74p", "4vjRacDJqPA95qjkzFqK25o3", "lBu4w2YEEVSCaKeZDYB37DL0", "Wu6uHf+xgNti5I6jHpR7hTq5", "8x4ZtWKT9bjXHDJOgCKZpv2o", "kIfwEDTNZKuD6YnacmWbrPch", "1z8Wsf9cAqefaeH0QFRUYHdh", "cbPkAwINypZHl1nxQ/8wKKOR", "iMITNQYh6n/fpyc9+8VxH4S1", "4WLD6iUrOSYagV4Fw5ZPEB9U", "rNqCWAd4twa/WZ/FN6PQEkHQ", "2oo0xJNP5+pH1xOGX13eOSeq" ];
cc._RF.pop();
}, {} ],
scanning: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ecd94+3/4tMcKAFJQG6pppY", "scanning");
cc.Class({
extends: cc.Component,
properties: {
_seats: [],
_spot: [],
_color: []
},
onLoad: function() {
if (null != cc.vv) {
this.node.active = !0;
cc.vv.scanning = this;
cc.vv.anysdkMgr.getGPS();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("gps", {
gps: cc.vv.userMgr.gps
});
this.initView();
}
},
initView: function() {
var e, t = this, i = this.node.getChildByName("user");
e = [ "p0", "p1", "p2", "p3", "p4", "p5", "p6", "p7" ];
for (var n = 0; n < e.length; ++n) {
var a = i.getChildByName(e[n]);
a.getChildByName("spot_icon").active = !1;
this._seats.push(a);
var s = a.getChildByName("spot"), c = s.parent.getPosition().add(s.getPosition().mul(s.parent.scale));
this._spot.push(c);
a.active = !1;
}
this._color = [ "#FF0000", "#FF9900", "#FFE13C", "#29FF00", "#00FF8F", "#00FFFF", "#E000FF" ];
this.line = this.node.getChildByName("line").getComponent(cc.Graphics);
this.checkGPS();
this.node.getChildByName("New Layout").on(cc.Node.EventType.TOUCH_END, function() {
t.btn_back();
});
},
initEventHandlers: function() {
cc.vv.gameNetMgr.dataEventHandler = this.node;
var t = this;
this.node.on("gps_push", function(e) {
t.checkGPS(e.detail);
console.log("gps_push:" + e.detail);
});
},
onOpenScanning: function() {
cc.vv.anysdkMgr.getGPS();
cc.vv.netMgr.connectlist[cc.vv.netMgr.GAME].send("gps", {
gps: cc.vv.userMgr.gps
});
this.node.active = !0;
this.line = this.node.getChildByName("line").getComponent(cc.Graphics);
this.checkGPS();
},
btn_back: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
},
checkGPS: function(e) {
if (0 < cc.vv.gameNetMgr.seats.length) for (var t = 0; t < cc.vv.gameNetMgr.seats.length; t++) {
var i = cc.vv.gameNetMgr.seats[t];
this._seats[t].active = !0;
this._seats[t].getChildByName("name").getComponent(cc.Label).string = i.name;
this._seats[t].getChildByName("mask").getChildByName("icon").getComponent("ImageLoader").setUserID(i.userid);
this._seats[t].getChildByName("spot_icon").color = cc.hexToColor("#FFFFFF");
}
if (1 < cc.vv.gameNetMgr.seats.length) for (var n = 0; n < cc.vv.gameNetMgr.seats.length; n++) {
var a = cc.vv.gameNetMgr.seats[n];
this._seats[n].getChildByName("spot_icon").active = !0;
if ("0,0" != a.gps) {
this.line.strokeColor = cc.hexToColor(this._color[n]);
for (var s = this._spot[n], c = n + 1; c < cc.vv.gameNetMgr.seats.length; c++) {
var r = cc.vv.gameNetMgr.seats[c];
if ("0,0" != r.gps) {
var o = this._spot[c];
this._seats[c].getChildByName("spot_icon").active = !0;
if (a.gps && r.gps) {
var h = a.gps.split(","), l = h[0], d = h[1], u = r.gps.split(","), v = u[0], g = u[1];
cc.log("对比的GPS");
cc.log(Number(l));
cc.log(Number(v));
cc.log(Number(d));
cc.log(Number(g));
if (cc.vv.utils.getFlatternDistance(Number(l), Number(d), Number(v), Number(g)) < 50 || Number(l) == Number(v) && Number(d) == Number(g)) {
cc.log("GPS连线");
this.line.moveTo(s.x, s.y);
this.line.lineTo(o.x, o.y);
this.line.stroke();
}
}
}
}
} else this._seats[n].getChildByName("spot_icon").color = cc.hexToColor("#000000");
}
}
});
cc._RF.pop();
}, {} ],
sdkManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9fc8diTxFpApLyfohy4x6EU", "sdkManager");
cc.Class({
extends: cc.Component,
init: function() {
this.ANDROID_API = "org/cocos2dx/javascript/sdkManager";
this.IOS_API = "sdkManager";
},
weChatLogin: function() {
if (cc.sys.os == cc.sys.OS_ANDROID) {
cc.error("安卓端请求微信登陆");
jsb.reflection.callStaticMethod(this.ANDROID_API, "weChatLogin", "()V");
} else cc.sys.os == cc.sys.OS_IOS ? jsb.reflection.callStaticMethod(this.IOS_API, "weChatLogin") : console.log("platform:" + cc.sys.os + " dosn't implement wxLogin.");
}
});
cc._RF.pop();
}, {} ],
sign: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0e65eASBdVNfqknnyrkr716", "sign");
var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
String.prototype.MD5 = function(e) {
function o(e, t) {
return e << t | e >>> 32 - t;
}
function h(e, t) {
var i, n, a, s, c;
a = 2147483648 & e;
s = 2147483648 & t;
c = (1073741823 & e) + (1073741823 & t);
return (i = 1073741824 & e) & (n = 1073741824 & t) ? 2147483648 ^ c ^ a ^ s : i | n ? 1073741824 & c ? 3221225472 ^ c ^ a ^ s : 1073741824 ^ c ^ a ^ s : c ^ a ^ s;
}
function t(e, t, i, n, a, s, c) {
var r;
return h(o(e = h(e, h(h((r = t) & i | ~r & n, a), c)), s), t);
}
function i(e, t, i, n, a, s, c) {
var r;
return h(o(e = h(e, h(h(t & (r = n) | i & ~r, a), c)), s), t);
}
function n(e, t, i, n, a, s, c) {
return h(o(e = h(e, h(h(t ^ i ^ n, a), c)), s), t);
}
function a(e, t, i, n, a, s, c) {
return h(o(e = h(e, h(h(i ^ (t | ~n), a), c)), s), t);
}
function s(e) {
var t, i = "", n = "";
for (t = 0; t <= 3; t++) i += (n = "0" + (e >>> 8 * t & 255).toString(16)).substr(n.length - 2, 2);
return i;
}
var c, r, l, d, u, v, g, _, f, p = Array();
p = function(e) {
for (var t, i = e.length, n = i + 8, a = 16 * ((n - n % 64) / 64 + 1), s = Array(a - 1), c = 0, r = 0; r < i; ) {
c = r % 4 * 8;
s[t = (r - r % 4) / 4] = s[t] | e.charCodeAt(r) << c;
r++;
}
c = r % 4 * 8;
s[t = (r - r % 4) / 4] = s[t] | 128 << c;
s[a - 2] = i << 3;
s[a - 1] = i >>> 29;
return s;
}(this);
v = 1732584193;
g = 4023233417;
_ = 2562383102;
f = 271733878;
for (c = 0; c < p.length; c += 16) {
g = a(g = a(g = a(g = a(g = n(g = n(g = n(g = n(g = i(g = i(g = i(g = i(g = t(g = t(g = t(g = t(l = g, _ = t(d = _, f = t(u = f, v = t(r = v, g, _, f, p[c + 0], 7, 3614090360), g, _, p[c + 1], 12, 3905402710), v, g, p[c + 2], 17, 606105819), f, v, p[c + 3], 22, 3250441966), _ = t(_, f = t(f, v = t(v, g, _, f, p[c + 4], 7, 4118548399), g, _, p[c + 5], 12, 1200080426), v, g, p[c + 6], 17, 2821735955), f, v, p[c + 7], 22, 4249261313), _ = t(_, f = t(f, v = t(v, g, _, f, p[c + 8], 7, 1770035416), g, _, p[c + 9], 12, 2336552879), v, g, p[c + 10], 17, 4294925233), f, v, p[c + 11], 22, 2304563134), _ = t(_, f = t(f, v = t(v, g, _, f, p[c + 12], 7, 1804603682), g, _, p[c + 13], 12, 4254626195), v, g, p[c + 14], 17, 2792965006), f, v, p[c + 15], 22, 1236535329), _ = i(_, f = i(f, v = i(v, g, _, f, p[c + 1], 5, 4129170786), g, _, p[c + 6], 9, 3225465664), v, g, p[c + 11], 14, 643717713), f, v, p[c + 0], 20, 3921069994), _ = i(_, f = i(f, v = i(v, g, _, f, p[c + 5], 5, 3593408605), g, _, p[c + 10], 9, 38016083), v, g, p[c + 15], 14, 3634488961), f, v, p[c + 4], 20, 3889429448), _ = i(_, f = i(f, v = i(v, g, _, f, p[c + 9], 5, 568446438), g, _, p[c + 14], 9, 3275163606), v, g, p[c + 3], 14, 4107603335), f, v, p[c + 8], 20, 1163531501), _ = i(_, f = i(f, v = i(v, g, _, f, p[c + 13], 5, 2850285829), g, _, p[c + 2], 9, 4243563512), v, g, p[c + 7], 14, 1735328473), f, v, p[c + 12], 20, 2368359562), _ = n(_, f = n(f, v = n(v, g, _, f, p[c + 5], 4, 4294588738), g, _, p[c + 8], 11, 2272392833), v, g, p[c + 11], 16, 1839030562), f, v, p[c + 14], 23, 4259657740), _ = n(_, f = n(f, v = n(v, g, _, f, p[c + 1], 4, 2763975236), g, _, p[c + 4], 11, 1272893353), v, g, p[c + 7], 16, 4139469664), f, v, p[c + 10], 23, 3200236656), _ = n(_, f = n(f, v = n(v, g, _, f, p[c + 13], 4, 681279174), g, _, p[c + 0], 11, 3936430074), v, g, p[c + 3], 16, 3572445317), f, v, p[c + 6], 23, 76029189), _ = n(_, f = n(f, v = n(v, g, _, f, p[c + 9], 4, 3654602809), g, _, p[c + 12], 11, 3873151461), v, g, p[c + 15], 16, 530742520), f, v, p[c + 2], 23, 3299628645), _ = a(_, f = a(f, v = a(v, g, _, f, p[c + 0], 6, 4096336452), g, _, p[c + 7], 10, 1126891415), v, g, p[c + 14], 15, 2878612391), f, v, p[c + 5], 21, 4237533241), _ = a(_, f = a(f, v = a(v, g, _, f, p[c + 12], 6, 1700485571), g, _, p[c + 3], 10, 2399980690), v, g, p[c + 10], 15, 4293915773), f, v, p[c + 1], 21, 2240044497), _ = a(_, f = a(f, v = a(v, g, _, f, p[c + 8], 6, 1873313359), g, _, p[c + 15], 10, 4264355552), v, g, p[c + 6], 15, 2734768916), f, v, p[c + 13], 21, 1309151649), _ = a(_, f = a(f, v = a(v, g, _, f, p[c + 4], 6, 4149444226), g, _, p[c + 11], 10, 3174756917), v, g, p[c + 2], 15, 718787259), f, v, p[c + 9], 21, 3951481745);
v = h(v, r);
g = h(g, l);
_ = h(_, d);
f = h(f, u);
}
return 32 == e ? s(v) + s(g) + s(_) + s(f) : s(g) + s(_);
};
i.make_sign = function(e) {
JSON.stringify(e);
var t = n(a(e));
e.sign = t;
};
i.check_sign = function(e) {
return e.sign == n(a(e));
};
function n(e) {
for (var t = e.length, i = "", n = 0; n < t; ++n) i += String.fromCharCode(e.charCodeAt(n) ^ n % 256);
return i.MD5();
}
function a(e) {
for (var t = Object.keys(e), i = (t = t.sort()).length, n = "", a = 0; a < i; a++) {
var s = t[a];
if ("SIGN" != s.toUpperCase()) {
var c = e[s], r = s.toUpperCase();
"object" == ("undefined" == typeof c ? "undefined" : o(c)) ? n += "&" + r + "?" + JSON.stringify(c) : n += "&" + r + "?" + c;
}
}
console.log("----------------------");
return n.substr(1);
}
cc._RF.pop();
}, {} ],
"socket-io": [ function(e, t, i) {
(function(e) {
"use strict";
cc._RF.push(t, "393290vPc1IIYfh8FrmxcNZ", "socket-io");
"function" == typeof Symbol && Symbol.iterator;
0;
cc._RF.pop();
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ],
statistic_key: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3fbdaO5y89KzatxhBQa5mU+", "statistic_key");
i.statistic_key = {
WIN_COUNTS: 1,
JOIN_COUNTS: 2,
MAX_WIN_SCORE: 3,
MAX_LOSE_SCORE: 4,
SHARE_COUNTS: 50,
CALL_JOIN_COUNTS: 51,
RUNNING_JOIN_COUNT: 100,
RUNNING_WIN_COUNT: 101,
RUNNING_WIN_MAX_SCORE: 102,
RUNNING_LOSE_MAX_SCORE: 103,
LANDLORD_JOIN_COUNT: 200,
LANDLORD_WIN_COUNT: 201,
LANDLORD_WIN_MAX_SCORE: 202,
LANDLORD_LOSE_MAX_SCORE: 203,
LANDLORD_LANDLORD_COUNT: 250,
OX_JOIN_COUNT: 300,
OX_WIN_COUNT: 301,
OX_WIN_MAX_SCORE: 302,
OX_LOSE_MAX_SCORE: 303,
OX_MAX_CARD: 399,
GF_JOIN_COUNT: 400,
GF_WIN_COUNT: 401,
GF_WIN_MAX_SCORE: 402,
GF_LOSE_MAX_SCORE: 403,
GF_MAX_CARD: 499,
TAXAS_JOIN_COUNT: 500,
TAXAS_WIN_COUNT: 501,
TAXAS_WIN_MAX_SCORE: 502,
TAXAS_LOSE_MAX_SCORE: 503,
TAXAS_MAX_CARD: 599,
P21_JOIN_COUNT: 700,
P21_WIN_COUNT: 701,
P21_WIN_MAX_SCORE: 702,
P21_LOSE_MAX_SCORE: 703,
P21_MAX_CARD: 799,
SANGONG_JOIN_COUNT: 800,
SANGONG_WIN_COUNT: 801,
SANGONG_WIN_MAX_SCORE: 802,
SANGONG_LOSE_MAX_SCORE: 803,
SANGONG_MAX_CARD: 899,
SHISS_JOIN_COUNT: 900,
SHISS_WIN_COUNT: 901,
SHISS_WIN_MAX_SCORE: 902,
SHISS_LOSE_MAX_SCORE: 903,
SHISS_MAX_CARD: 999,
SDH_JOIN_COUNT: 1e3,
SDH_WIN_COUNT: 1001,
SDH_WIN_MAX_SCORE: 1002,
SDH_LOSE_MAX_SCORE: 1003,
P105_JOIN_COUNT: 1100,
P105_WIN_COUNT: 1101,
P105_WIN_MAX_SCORE: 1102,
P105_LOSE_MAX_SCORE: 1103,
P105_MAX_CARD: 1199
};
i.daily_key = {
PAY_ROUTE_TIMES: 1
};
cc._RF.pop();
}, {} ],
taskbtn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "72aedfuoJdFxZLoMUT2aMmO", "taskbtn");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.target_type = this.node.getChildByName("target_type");
this.task_id = this.node.getChildByName("task_id");
this.initMsgHandler();
},
onbtnRenWu: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.loadRes("hall/prefabs/SelectGame", cc.Prefab, function(e) {
cc.vv.UILoader.instantiate(e, cc.find("Canvas"), function(e) {});
});
},
onbtnlingqu: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = this.task_id.getComponent(cc.Label).string, i = {
account: cc.vv.userMgr.account,
task_id: t
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_task_reward", i);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_task_reward", this.onMsgGetTaskReward.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_task_reward");
},
onMsgGetTaskReward: function(e) {
if (0 == e.detail.errcode) {
cc.vv.alert.show("提示", "领取奖励成功！");
cc.find("Canvas/Task").getComponent("task").requestTaskList();
cc.vv.anysdkMgr.updateMoney();
} else cc.vv.alert.show("提示", "领取奖励失败！");
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
task: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2cfa9Dy8OhN+739Z3Zin8Sx", "task");
cc.Class({
extends: cc.Component,
properties: {
task_meiri_Prefab: {
default: null,
type: cc.Prefab
},
task_meizhou_Prefab: {
default: null,
type: cc.Prefab
},
jiangli: []
},
onLoad: function() {
var e = this.node.getChildByName("task");
this.ScrollView_meiri = e.getChildByName("ScrollView_meiri");
this.ScrollView_meiri.active = !0;
this.scrollBar_meiri = this.ScrollView_meiri.getChildByName("scrollBar");
this.view_meiri = this.ScrollView_meiri.getChildByName("view");
this._con_meiri = this.view_meiri.getChildByName("content");
this._con_meiri_task = this._con_meiri.getChildByName("meiri_task");
this.ScrollView_meizhou = e.getChildByName("ScrollView_meizhou");
this.ScrollView_meizhou.active = !1;
this.scrollBar_meizhou = this.ScrollView_meizhou.getChildByName("scrollBar");
this.view_meizhou = this.ScrollView_meizhou.getChildByName("view");
this._con_meizhou = this.view_meizhou.getChildByName("content");
this._con_meizhou_task = this._con_meizhou.getChildByName("meizhou_task");
this.ToggleGroup = e.getChildByName("ToggleGroup");
this.meiri = this.ToggleGroup.getChildByName("meiri");
this.meiri.isChecked = !0;
this.LoadTask();
this.initMsgHandler();
},
onBtnback: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").getComponent("Hall").Task();
},
onBtnMeiri: function() {
cc.vv.audioMgr.playBtnClick();
this.ScrollView_meiri.active = !0;
this.ScrollView_meizhou.active = !1;
},
onBtnMeizhou: function() {
cc.vv.audioMgr.playBtnClick();
this.ScrollView_meiri.active = !1;
this.ScrollView_meizhou.active = !0;
},
LoadTask: function() {
cc.vv.wc.show("正在加载任务列表");
this.requestTaskList();
},
requestTaskList: function() {
this._con_meiri.removeAllChildren();
this._con_meizhou.removeAllChildren();
var e = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_tasks", e);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("get_tasks", this.onMsgGetTasks.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("get_tasks");
},
onMsgGetTasks: function(e) {
var t = this;
e = e.detail;
cc.vv.wc.hide();
if (0 == e.errcode) {
t._con_meiri.removeAllChildren();
t._con_meizhou.removeAllChildren();
var i = e.task_data, n = i[1], a = i[2];
if (0 < n.length) for (var s = 0; s < n.length; s++) {
var c = n[s], r = cc.instantiate(t.task_meiri_Prefab);
r.parent = t._con_meiri;
r.getComponent(cc.Widget).target = r.parent;
(f = r.getChildByName("task_id")).getComponent(cc.Label).string = c.task_id;
console.log(f.getComponent(cc.Label).string);
(_ = r.getChildByName("name")).getComponent(cc.Label).string = c.describe;
console.log(_.getComponent(cc.Label).string);
(g = r.getChildByName("target_type")).getComponent(cc.Label).string = c.target_type;
console.log(g.getComponent(cc.Label).string);
for (var o = r.getChildByName("baoxiang"), h = JSON.parse(c.reward), l = 0; l < h.length; l++) {
var d = h[l];
t._reward_type = d[0];
t._reward_reward = d[1];
if (1 == t._reward_type) {
y = "获得房卡";
M = t._reward_reward + "张";
o.getChildByName("fangka").active = !0;
} else if (2 == t._reward_type) {
y = "获得钻石x";
M = t._reward_reward;
o.getChildByName("zuanshi").active = !0;
} else if (3 == t._reward_type) {
y = "获得大转盘抽奖";
M = t._reward_reward + "次";
o.getChildByName("zhuanpan").active = !0;
} else if (4 == t._reward_type) {
y = "获得现金";
M = t._reward_reward + "元";
o.getChildByName("xianjin").active = !0;
}
var u = y + M;
t.jiangli.push(u);
}
(C = r.getChildByName("jiangli")).getComponent(cc.Label).string = t.jiangli.join(" ");
console.log(C.getComponent(cc.Label).string);
t.jiangli = [];
u = (A = r.getChildByName("jindu").getChildByName("ProgressBar")).getChildByName("label");
(I = c.target) < (E = c.schedule) && (E = I);
u.getComponent(cc.Label).string = E + "/" + I;
console.log(u.getComponent(cc.Label).string);
A.getComponent(cc.ProgressBar).progress = E / I;
console.log(A.getComponent(cc.ProgressBar).progress);
var v = c.status;
(B = r.getChildByName("btn_renwu")).active = !1;
(w = r.getChildByName("btn_lingqu")).active = !1;
(k = r.getChildByName("btn_wancheng")).active = !1;
0 == v ? B.active = !0 : 1 == v ? w.active = !0 : 2 == v && (k.active = !0);
} else t.scrollBar_meiri.active = !1;
if (0 < a.length) for (s = 0; s < a.length; s++) {
var g, _, f, p = a[s], m = cc.instantiate(t.task_meizhou_Prefab);
m.parent = t._con_meizhou;
m.getComponent(cc.Widget).target = m.parent;
(g = m.getChildByName("target_type")).getComponent(cc.Label).string = p.target_type;
console.log(g.getComponent(cc.Label).string);
(_ = m.getChildByName("name")).getComponent(cc.Label).string = p.describe;
(f = m.getChildByName("task_id")).getComponent(cc.Label).string = p.task_id;
o = m.getChildByName("baoxiang");
var C = m.getChildByName("jiangli");
for (h = JSON.parse(p.reward), l = 0; l < h.length; l++) {
var y, b, M, N = (d = h[l])[0];
b = d[1];
for (var S = 1; S < o.children.length; S++) t._reward_type == S && (o[S].active = !0);
if (1 == N) {
y = "获得房卡:";
M = b + "张";
o.getChildByName("fangka").active = !0;
} else if (2 == N) {
y = "获得钻石x:";
M = b;
o.getChildByName("zuanshi").active = !0;
} else if (3 == N) {
y = "获得大转盘抽奖:";
M = b + "次";
o.getChildByName("zhuanpan").active = !0;
} else if (4 == t._reward_type) {
y = "获得现金";
M = t._reward_reward + "元";
o.getChildByName("xianjin").active = !0;
}
u = y + M;
t.jiangli.push(u);
}
C.getComponent(cc.Label).string = t.jiangli.join(" ");
console.log(C.getComponent(cc.Label).string);
t.jiangli = [];
var A, I, E;
u = (A = m.getChildByName("jindu").getChildByName("ProgressBar")).getChildByName("label");
(I = p.target) < (E = p.schedule) && (E = I);
u.getComponent(cc.Label).string = E + "/" + I;
console.log(u.getComponent(cc.Label).string);
A.getComponent(cc.ProgressBar).progress = E / I;
console.log(A.getComponent(cc.ProgressBar).progress);
var B, w, k;
v = p.status;
(B = m.getChildByName("btn_renwu")).active = !1;
(w = m.getChildByName("btn_lingqu")).active = !1;
(k = m.getChildByName("btn_wancheng")).active = !1;
0 == v ? B.active = !0 : 1 == v ? w.active = !0 : 2 == v && (k.active = !0);
} else t.scrollBar_meizhou.active = !1;
}
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
turnCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "63332A0N2ZJmqmy4vbBIQZ8", "turnCard");
cc.Class({
extends: cc.Component,
properties: {
poker_id: -1
},
setValue: function(e) {
this.node.setScale(.75);
var t = null, i = cc.vv.gameNetMgr.conf.server_type, n = cc.sys.localStorage.getItem("game_" + i);
if (e < 0) if (n) {
var a = JSON.parse(n).card;
t = cc.vv.mahjongmgr.getChoiceFrameByName("card" + a);
console.log("MyPoker牌面：" + t);
} else t = cc.vv.mahjongmgr.getPokerFrameByName("card_bg1"); else {
var s = cc.vv.poker_util.get_poker_value(e), c = cc.vv.poker_util.get_poker_color(e);
t = cc.vv.mahjongmgr.getPokerFrameByName("card_" + c + "_" + s);
}
this.node.getComponent(cc.Sprite).spriteFrame = t;
},
onFinished: function() {
this.setValue(this.poker_id);
},
turn: function(e) {
this.poker_id = e;
var t = this.node.getComponent(cc.Animation), i = cc.vv.gameNetMgr.conf.server_type, n = cc.sys.localStorage.getItem("game_" + i);
if (n) {
var a = JSON.parse(n).card;
t.play("turnCardAni" + a);
} else t.play("turnCardAni4");
t.on("finished", this.onFinished, this);
},
onDestroy: function() {
this.node.getComponent(cc.Animation).off("finished", this.onFinished, this);
}
});
cc._RF.pop();
}, {} ],
user_over_item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "07e1bV5NtlHFY1kEkSbQeZd", "user_over_item");
cc.Class({
extends: cc.Component,
properties: {
keepHold: {
default: null,
type: cc.Node
},
KeepAction: {
default: null,
type: cc.Node
},
id: {
default: null,
type: cc.Node
},
icon: {
default: null,
type: cc.Node
},
userName: {
default: null,
type: cc.Node
},
score: {
default: null,
type: cc.Node
},
house: {
default: null,
type: cc.Node
},
decs: {
default: null,
type: cc.Node
},
benRen: {
default: null,
type: cc.Node
},
zhuang: {
default: null,
type: cc.Node
},
huItem: {
default: null,
type: cc.Node
},
selfLine: {
default: null,
type: cc.Node
},
holdsNode: {
default: null,
type: cc.Node
},
actionNode: {
default: null,
type: cc.Node
},
outcomeType: {
default: null,
type: cc.Node
},
node_flower: {
default: null,
type: cc.Node
}
},
setHouse: function(e) {
this.house.active = e;
},
setBenRen: function(e) {
this.benRen.active = e;
this.setSelfLine(e);
},
setZhuang: function(e) {
this.zhuang.active = e;
},
setDecs: function(e) {
this.decs.getComponent(cc.Label).string = e;
},
setHuItem: function(e) {
if (-1 === e) this.huItem.active = !1; else {
this.huItem.active = !0;
this.setCardSprite(this.huItem, e, 0);
}
},
setSelfLine: function(e) {
this.selfLine.active = e;
},
setHoldsShow: function(e) {
this.holdsNode.removeAllChildren();
for (var t = e.length - 1; -1 < t; t--) {
var i = cc.instantiate(this.keepHold);
this.setCardSprite(i, e[t], 0);
i.parent = this.holdsNode;
}
},
setActionShow: function(e) {
this.actionNode.active = !0;
this.actionNode.removeAllChildren();
if (!(e.length <= 0)) for (var t = 0; t < e.length; t++) {
var i = cc.instantiate(this.KeepAction);
this.setActionSprite(i, e[t]);
i.parent = this.actionNode;
}
},
setCardSprite: function(e, t, i) {
var n = e.getChildByName("item").getComponent("Hunan_Item");
n.setHandValueAndColor(t);
e.active = !0;
cc.vv.gameNetMgr.mjSyncData && n.setICON();
},
setActionSprite: function(e, t) {
e.getComponent("Hunan_Action").setValueAndColor(t, 5);
e.active = !0;
},
setOutcomeType: function(e) {
this.outcomeType.active = !0;
this.outcomeType.getComponent(cc.Label).string = e;
},
setOutcome: function(e) {
var t = this.outcome.getComponent(cc.Sprite);
t.active = !0;
t = e;
},
setHeadIcon: function(e) {
var t = this.icon.getComponent("ImageLoader");
t.clear_setUserID();
t.setUserID(e);
},
setScore: function(e) {
if (NaN !== e && null != e) {
this.score.active = !0;
var t = this.score.getChildByName("score_win");
t.active = !1;
var i = this.score.getChildByName("score_lose");
i.active = !1;
if (0 < e) {
t.getComponent(cc.Label).string = "+" + e;
t.active = !0;
} else if (e < 0) {
i.getComponent(cc.Label).string = e;
i.active = !0;
} else if (0 == e) {
i.getComponent(cc.Label).string = e;
i.active = !0;
}
}
},
setHuaDesc: function() {
this.huapDesc.action = !0;
},
setActionNode: function() {},
setItemNode: function(e) {
this.itemNode.active = !0;
},
setName: function(e) {
this.userName.active = !0;
this.userName.getComponent(cc.Label).string = e;
},
setId: function(e) {
this.id.active = !0;
this.id.getComponent(cc.Label).string = "ID:" + e;
},
setHuaPNode: function() {
this.node_flower.action = !0;
},
setHuaPShow: function(e) {
var t = this.node_flower;
t.active = !0;
t.removeAllChildren();
if (-1 != e) for (var i = 0; i < e.length; i++) {
var n = cc.instantiate(this.keepHold);
this.setCardSprite(n, e[i], 0);
n.parent = t;
}
}
});
cc._RF.pop();
}, {} ],
xiaoxiEmail: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4e00bP3fVGUY0HXF/jHrvw", "xiaoxiEmail");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.getChildByName("email").active = !1;
this.op = -1;
this.initOpEnum();
this.initMsgHandler();
},
initOpEnum: function() {
this.mailOp = {
OPEN: 0,
DELETE: 1,
GET_MAIL_REWARD: 2
};
},
initClubItem: function(e) {
var t = this.node.getChildByName("item").getChildByName("time").getComponent("cc.Label"), i = this.node.getChildByName("email").getChildByName("Time").getComponent("cc.Label"), n = this.node.getChildByName("email").getChildByName("mail_content").getComponent("cc.RichText");
t.string = this.dateFormat(1e3 * e.invite_time);
i.string = this.dateFormat(1e3 * e.invite_time);
var a = "<size=25><color=#FFE13C>" + e.username + "</color></size>", s = "<size=25><color=#FFE13C>" + e.unionname + "</color></size><size=25><color=#E6F3FC>俱乐部</color></size>";
n.string = "<size=25><color=#E6F3FC>尊敬的玩家，你好:\n</color></size>" + a + "<size=25><color=#E6F3FC>邀请您加入</color></size>" + s;
this.unionid = e.unionid;
this.applyuserid = e.userid;
this.emailId = e.emailId;
},
onPrefabInfo: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = {
account: cc.vv.userMgr.account,
operate_code: 2,
mail_id: this.node.mail_id,
sign: cc.vv.userMgr.sign
};
console.log("log---------------------openMail  args=:", t);
this.op = this.mailOp.OPEN;
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("user_operate_mail", t);
},
onBackbtnInfo: function(e) {
cc.vv.audioMgr.playBtnClick();
this.node.getChildByName("email").active = !1;
this.node.getChildByName("item").active = !0;
for (var t = cc.find("Canvas/Xiaoxi/EmailScrollView/view/content"), i = 0; i < t.getChildren().length; i++) {
t.getChildren()[i].active = !0;
}
},
confirmMail: function() {
var e = this;
cc.vv.alert.show("提示", "是否删除此邮件？", function() {
e.deleteMail();
}, !0, "删除");
},
deleteMail: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = {
account: cc.vv.userMgr.account,
operate_code: "0",
mail_id: this.node.mail_id,
sign: cc.vv.userMgr.sign
};
console.log("log---------------------deleteMail  args=:", t);
this.op = this.mailOp.DELETE;
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("user_operate_mail", t);
},
getMailReward: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = {
account: cc.vv.userMgr.account,
operate_code: 1,
mail_id: this.node.mail_id,
sign: cc.vv.userMgr.sign
};
this.op = this.mailOp.GET_MAIL_REWARD;
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("user_operate_mail", t);
},
doOpenMail: function(e) {
if (0 == e.errcode) {
for (var t = cc.find("Canvas/Xiaoxi/EmailScrollView/view/content"), i = 0; i < t.getChildren().length; i++) {
var n = t.getChildren()[i], a = n.mail_id, s = n.status;
if (a != this.node.mail_id) n.active = !1; else {
n.active = !0;
s = 1;
var c = n.getChildByName("email"), r = n.getChildByName("item");
c.active = !0;
r.active = !1;
c.getChildByName("Time").getComponent(cc.Label).string = r.getChildByName("time").getComponent(cc.Label).string;
c.getChildByName("tittle").getComponent(cc.Label).string = r.getChildByName("tittle").getComponent(cc.Label).string;
c.getChildByName("mail_content").getComponent(cc.RichText).string = r.getChildByName("mail_content").getComponent(cc.Label).string;
if (1 == s) {
var o = r.getChildByName("type");
o.getChildByName("TB1").active = !1;
o.getChildByName("TB2").active = !0;
}
this.node.mail_attach && "" != this.node.mail_attach ? c.getChildByName("btn_get").active = !0 : c.getChildByName("btn_get").active = !1;
}
}
t.sum++;
}
},
doDeleteMail: function(e) {
if (0 == e.errcode) {
cc.vv.alert.show("提示", "邮件删除成功！");
cc.find("Canvas/Xiaoxi").getComponent("xiaoxi").requestMailList();
}
},
doGetMailReward: function(e) {
if (0 == e.errcode) {
cc.vv.alert.show("提示", "领取奖励成功！");
cc.find("Canvas/Xiaoxi").getComponent("xiaoxi").requestMailList();
cc.vv.anysdkMgr.updateMoney();
} else {
var t = cc.vv.error.errorMsg(e.errcode);
cc.vv.alert.show("提示", t);
}
},
onBtnLookEmail: function() {
this.node.getChildByName("item").active = !1;
this.node.getChildByName("email").active = !0;
for (var e = cc.find("Canvas/Xiaoxi/EmailScrollView/view/content"), t = 0; t < e.getChildren().length; t++) {
var i = e.getChildren()[t];
i.getComponent("xiaoxiEmail").emailId != this.emailId && (i.active = !1);
}
},
onBtnAgree: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = {
account: cc.vv.userMgr.account,
unionid: this.unionid,
apply_userid: this.applyuserid
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("agree_invite", t);
},
onBtnRefuse: function(e) {
cc.vv.audioMgr.playBtnClick();
var t = {
account: cc.vv.userMgr.account,
unionid: this.unionid,
apply_userid: this.applyuserid
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("refuse_invite", t);
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("user_operate_mail", this.onMsgUserOperateMail.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("agree_invite", this.onMsgAgreeInvite.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("refuse_invite", this.onMsgRefuseInvite.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("user_operate_mail");
cc.vv.netMgr.hallIEventDispatcher.off("agree_invite");
cc.vv.netMgr.hallIEventDispatcher.off("refuse_invite");
},
onMsgUserOperateMail: function(e) {
e = e.detail;
console.log("log----------------ret  this.op=:", e, this.op);
switch (this.op) {
case this.mailOp.OPEN:
console.log("log----------------doOpenMail-----------------");
this.doOpenMail(e);
break;

case this.mailOp.DELETE:
console.log("log----------------doDeleteMail---------------");
this.doDeleteMail(e);
break;

case this.mailOp.GET_MAIL_REWARD:
console.log("log----------------doGetMailReward-------------");
this.doGetMailReward(e);
}
},
onMsgAgreeInvite: function(e) {
0 == (e = e.detail).errcode ? cc.find("Canvas/Xiaoxi").getComponent("xiaoxi").requestMailList() : cc.vv.alert.show("提示", errorM);
},
onMsgRefuseInvite: function(e) {
0 == (e = e.detail).errcode ? cc.find("Canvas/Xiaoxi").getComponent("xiaoxi").requestMailList() : cc.vv.alert.show("提示", errorM);
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
xiaoxi: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5c19dydXBhB0ZNRJC9RYA+D", "xiaoxi");
cc.Class({
extends: cc.Component,
properties: {
mail_Prefab: {
default: null,
type: cc.Prefab
},
award_Prefab: {
default: null,
type: cc.Prefab
},
club_Prefab: {
default: null,
type: cc.Prefab
},
_xiaoxiData: null
},
onLoad: function() {
this.initMsgHandler();
this._emailxiaoxi = this.node.getChildByName("EmailScrollView");
this._emailxiaoxi.active = !0;
this._email_scrollBar = this._emailxiaoxi.getChildByName("scrollBar");
this._email_scrollBar.active = !0;
this._con = cc.find("Canvas/Xiaoxi/EmailScrollView/view/content");
this._email_systemMessages = this._emailxiaoxi.getChildByName("systemMessages");
this._email_systemMessages.active = !1;
this._awardxiaoxi = this.node.getChildByName("global_awardScrollView");
this._awardxiaoxi.active = !1;
this._award_lingqu = this._awardxiaoxi.getChildByName("lingqu");
this._award_scrollBar = this._awardxiaoxi.getChildByName("scrollBar");
this._award_view = this._awardxiaoxi.getChildByName("view");
this._award_content = this._award_view.getChildByName("content");
this._award_systemMessages = this._awardxiaoxi.getChildByName("systemMessages");
this._award_systemMessages.active = !1;
var t = this;
this.node.on("freshMail", function(e) {
t.requestMailList();
});
this.requestMailList();
this.requestGlobal_award_status();
},
onEmailbtnInfo: function(e) {
cc.vv.audioMgr.playBtnClick();
this._emailxiaoxi.active = !0;
this._awardxiaoxi.active = !1;
},
onMessagesbtnInfo: function(e) {
cc.vv.audioMgr.playBtnClick();
this._emailxiaoxi.active = !1;
this._awardxiaoxi.active = !0;
},
dateFormat: function(e) {
var t = new Date(e), i = "{0}-{1}-{2} {3}:{4}:{5}", n = t.getFullYear(), a = t.getMonth() + 1;
a = 10 <= a ? a : "0" + a;
var s = t.getDate();
s = 10 <= s ? s : "0" + s;
var c = t.getHours();
c = 10 <= c ? c : "0" + c;
var r = t.getMinutes();
r = 10 <= r ? r : "0" + r;
var o = t.getSeconds();
o = 10 <= o ? o : "0" + o;
return i = i.format(n, a, s, c, r, o);
},
requestMailList: function() {
this._con.removeAllChildren();
var o = this;
cc.vv.userMgr.getXiaoxi(function(e) {
console.log("log------------getXiaoXi---\x3edata=:", e);
if (!e.mails || 0 == e) {
o._email_scrollBar.active = !1;
o._email_systemMessages.active = !0;
}
o._con.removeAllChildren();
if (0 != e && 0 < e.mails.length) {
for (var t = 0; t < e.mails.length; t++) {
o._email_systemMessages.active = !1;
var i = e.mails[t], n = cc.instantiate(o.mail_Prefab);
n.parent = o._con;
n.mail_id = i.mail_id;
n.mail_attach = i.mail_attach;
var a = n.getChildByName("item"), s = a.getChildByName("type"), c = a.getChildByName("time"), r = o.dateFormat(1e3 * i.send_time);
c.getComponent(cc.Label).string = r;
a.getChildByName("tittle").getComponent(cc.Label).string = i.mail_tittle;
a.getChildByName("mail_content").getComponent(cc.Label).string = i.mail_content;
n.status = i.status;
if (0 == n.status) {
s.getChildByName("TB1").active = !0;
s.getChildByName("TB2").active = !1;
}
if (1 == n.status) {
s.getChildByName("TB1").active = !1;
s.getChildByName("TB2").active = !0;
}
}
o._con.sum = 0;
}
});
this.getClubEmail(function(e) {
cc.log(e);
if (e.invites.length) {
o._email_systemMessages.active = !1;
for (var t = e.invites, i = 0; i < t.length; i++) {
var n = cc.instantiate(o.club_Prefab), a = n.getComponent("xiaoxiEmail");
t[i].emailId = i;
a.initClubItem(t[i]);
o._con.addChild(n);
}
}
});
},
onBtnBackClicked: function(e) {
cc.vv.audioMgr.playBtnClick();
cc.vv.UILoader.destroy(this.node);
cc.find("Canvas").getComponent("Hall").xiaoxi();
},
requestGlobal_award_status: function() {
this._award_content.removeAllChildren();
var s = this;
cc.vv.userMgr.getGlobal_award_status(function(e) {
if (0 < e.length) {
s._award_systemMessages.active = !1;
s._award_content.removeAllChildren();
for (var t = 0; t < e.length; t++) {
var i = e[t], n = cc.instantiate(s.award_Prefab);
n.parent = s._award_content;
var a = n.getChildByName("item");
a.getChildByName("tittle").getComponent(cc.Label).string = i.title;
a.getChildByName("mail_content").getComponent(cc.Label).string = i.content;
}
} else {
s._award_lingqu.active = !1;
s._award_scrollBar.active = !1;
s._award_systemMessages.active = !0;
}
});
},
lingquGlobal_award: function() {
cc.vv.audioMgr.playBtnClick();
var e = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("global_award_get", e);
},
getClubEmail: function(e) {
this.get_invites_callFunc = e;
var t = {
account: cc.vv.userMgr.account
};
cc.vv.netMgr.connectlist[cc.vv.netMgr.HALL].send("get_invites", t);
},
initMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.on("global_award_get", this.onMsgGlobalAwardGet.bind(this));
cc.vv.netMgr.hallIEventDispatcher.on("get_invites", this.onMsgGetInvites.bind(this));
},
removeMsgHandler: function() {
cc.vv.netMgr.hallIEventDispatcher.off("global_award_get");
cc.vv.netMgr.hallIEventDispatcher.off("get_invites");
},
onMsgGetInvites: function(e) {
if (0 == (e = e.detail).errcode) {
cc.log("俱乐部邀请列表", e);
this.get_invites_callFunc(e);
} else cc.vv.alert.show("提示", e.errcode);
},
onMsgGlobalAwardGet: function(e) {
if (0 == (e = e.detail).errcode) {
cc.vv.alert.show("提示", "领取奖励成功！");
cc.vv.anysdkMgr.updateMoney();
this._award_content.removeAllChildren();
this._award_lingqu.active = !1;
this._award_scrollBar.active = !1;
this._award_systemMessages.active = !0;
}
},
onDestroy: function() {
this.removeMsgHandler();
}
});
cc._RF.pop();
}, {} ],
zipai_adaptIponeX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "014e6mxT+tOT4fBSrHEGxar", "zipai_adaptIponeX");
cc.Class({
extends: cc.Component,
onLoad: function() {
this.adaptIponeX();
},
isIponeX: function() {
var e = cc.view.getFrameSize(), t = 2436 == e.width && 1125 == e.height || 1125 == e.width && 2436 == e.height;
return t;
},
adaptIponeX: function() {
if (this.isIponeX()) {
var e = this.node.getComponent(cc.Widget);
e.isAlignLeft = !0;
e.left += 70;
}
}
});
cc._RF.pop();
}, {} ],
zipai_atlasAndAudioUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e33687Rb65NjIi8Qcdbh8WO", "zipai_atlasAndAudioUtils");
cc.Class({
extends: cc.Component,
properties: {
commonAtlas: {
default: null,
type: cc.SpriteAtlas
},
_gameName: ""
},
onLoad: function() {
null != cc.vv && ((cc.vv.zipai_atlasAndAudioUtils = this)._gameName = this.getGameNameBySererId(cc.vv.gameNetMgr.conf.server_type));
},
getCommonSpriteFrameByName: function(e) {
return this.commonAtlas.getSpriteFrame(e);
},
playCardSound: function(e, t) {
if (!(e <= 0)) {
t = 0 < t ? 0 : 1;
var i = "resources/game/zipaiGames/" + this._gameName + "/sounds/card" + e + "_" + t + ".mp3";
cc.vv.audioMgr.playSFX(i);
}
},
playOpsSound: function(e, t) {
t = 0 < t ? 0 : 1;
var i = "resources/game/zipaiGames/" + this._gameName + "/sounds/" + e + "_" + t + ".mp3";
cc.vv.audioMgr.playSFX(i);
},
playDealCardsSound: function() {
var e = "resources/game/zipaiGames/" + this._gameName + "/sounds/fapai.mp3";
cc.vv.audioMgr.playSFX(e);
},
getGameNameBySererId: function(e) {
switch (e) {
case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP:
return "glzp";

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ:
return "phz";

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH:
return "hylh";

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW:
return "hgw";

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF:
return "fpf";

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ:
return "whz";

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT:
return "qmt";
}
}
});
cc._RF.pop();
}, {} ],
zipai_cardsSort: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5cf6dIIqzpHppqerusCTUF7", "zipai_cardsSort");
cc.Class({
extends: cc.Component,
onLoad: function() {
null != cc.vv && ((cc.vv.zipai_cardsSort = this).enumTalbe = e("zipai_enum").Enum);
},
cardSort: function(e) {
this.fourSameCardsList = [];
this.threeSameCardsList = [];
this.twoAndOneCardsList = [];
this.shunZiCardsList = [];
this.twoSameCardsList = [];
this.singleCardsList = [];
this.sortedCardsList = [];
this.notShunZiList = [];
this.bubbleDownArray(e);
this.findFourSameCards(e);
this.findThreeSameCards(e);
this.findTwoSameCards(e);
this.findTwoAndOneCards(e);
this.findShunZiCards(e);
this.findTwoSameCards(e);
this.findSingleCards(e);
this.createSortedCards();
return {
sort: this.sortedCardsList,
single: this.singleCardsList
};
},
bubbleDownArray: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t] < e[i]) {
var n = e[t];
e[t] = e[i];
e[i] = n;
}
},
findFourSameCards: function(e) {
if (!(e.length < 2)) {
for (var t = e[0], i = 0, n = 1; n < e.length; n++) {
if (t == e[n]) i++; else {
i = 0;
t = e[n];
}
3 == i && this.fourSameCardsList.push({
value: t,
bigenIndex: n - 3,
type: this.enumTalbe.holdTpye.four
});
}
for (n = 0; n < this.fourSameCardsList.length; n++) e.splice(this.fourSameCardsList[n].bigenIndex - 4 * n, 4);
}
},
findThreeSameCards: function(e) {
if (!(e.length < 2)) {
for (var t = e[0], i = 0, n = 1; n < e.length; n++) {
if (t == e[n]) i++; else {
i = 0;
t = e[n];
}
2 == i && this.threeSameCardsList.push({
value: t,
bigenIndex: n - 2,
type: this.enumTalbe.holdTpye.three
});
}
for (n = 0; n < this.threeSameCardsList.length; n++) e.splice(this.threeSameCardsList[n].bigenIndex - 3 * n, 3);
}
},
findTwoAndOneCards: function(e) {
for (var t = 0; t < this.twoSameCardsList.length; t++) for (var i = 0; i < e.length; i++) if (this.twoSameCardsList[t].value == e[i] + 10 || this.twoSameCardsList[t].value == e[i] - 10) {
e.splice(i, 1);
this.twoAndOneCardsList.push({
value: this.twoSameCardsList[t].value,
bigenIndex: -1,
type: this.enumTalbe.holdTpye.threeNotSame
});
break;
}
for (t = 0; t < this.twoAndOneCardsList.length; t++) for (i = 0; i < this.twoSameCardsList.length; i++) if (this.twoAndOneCardsList[t].value == this.twoSameCardsList[i].value) {
this.twoSameCardsList.splice(i, 1);
break;
}
for (t = 0; t < this.twoSameCardsList.length; t++) {
e.push(this.twoSameCardsList[t].value);
e.push(this.twoSameCardsList[t].value);
}
this.bubbleDownArray(e);
},
findShunZiCards: function(e) {
if (e.length < 3) {
for (var t = 0; t < e.length; t++) this.notShunZiList.push(e[t]);
e.splice(0, this.notShunZiList.length);
for (t = 0; t < this.notShunZiList.length; t++) e.push(this.notShunZiList[t]);
} else {
var i = !1, n = -1, a = -1, s = e[0];
for (t = 1; t < e.length; t++) if (12 != s && 11 != s) {
e[t] - s == -1 && (n = t);
e[t] - s == -2 && (a = t);
if (0 < a && 0 < n) {
i = !0;
this.shunZiCardsList.push({
value: s - 2,
index: 0,
type: this.enumTalbe.holdTpye.shunZi
});
e.splice(0, 1);
e.splice(n - 1, 1);
e.splice(a - 2, 1);
break;
}
}
if (i) this.findShunZiCards(e); else {
this.notShunZiList.push(e[0]);
e.splice(0, 1);
this.findShunZiCards(e);
}
}
},
findTwoSameCards: function(e) {
this.twoSameCardsList.splice(0, this.twoSameCardsList.length);
if (!(e.length < 2)) {
for (var t = e[0], i = 0, n = 1; n < e.length; n++) {
if (t == e[n]) i++; else {
i = 0;
t = e[n];
}
1 == i && this.twoSameCardsList.push({
value: t,
bigenIndex: n - 1,
type: this.enumTalbe.holdTpye.double
});
}
for (n = 0; n < this.twoSameCardsList.length; n++) e.splice(this.twoSameCardsList[n].bigenIndex - 2 * n, 2);
}
},
findSingleCards: function(e) {
this.singleCardsList = e.concat();
},
createSortedCards: function() {
for (var e = 0; e < this.fourSameCardsList.length; e++) this.sortedCardsList.push(this.fourSameCardsList[e]);
for (e = 0; e < this.threeSameCardsList.length; e++) this.sortedCardsList.push(this.threeSameCardsList[e]);
for (e = 0; e < this.twoAndOneCardsList.length; e++) this.sortedCardsList.push(this.twoAndOneCardsList[e]);
for (e = 0; e < this.shunZiCardsList.length; e++) this.sortedCardsList.push(this.shunZiCardsList[e]);
for (e = 0; e < this.twoSameCardsList.length; e++) this.sortedCardsList.push(this.twoSameCardsList[e]);
for (e = 0; e < this.sortedCardsList.length; e++) for (var t = e + 1; t < this.sortedCardsList.length; t++) if (this.sortedCardsList[e].type < this.sortedCardsList[t].type) {
var i = this.sortedCardsList[e];
this.sortedCardsList[e] = this.sortedCardsList[t];
this.sortedCardsList[t] = i;
}
}
});
cc._RF.pop();
}, {
zipai_enum: "zipai_enum"
} ],
zipai_card: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "409e0EM3cFARoaLqTsfpUV4", "zipai_card");
cc.Class({
extends: cc.Component,
properties: {
cardFrame: {
default: null,
type: cc.Sprite
},
value: -1,
type: -1
},
setValue: function(e) {
this.value = e;
},
getValue: function() {
return this.value;
},
setOrder: function(e) {
this.order = e;
},
getOrder: function() {
return this.order;
},
setType: function(e) {
this.type = e;
},
getType: function() {
return this.type;
},
setBlack: function(e) {
var t = null;
(t = e ? this.node.getChildByName("bigMask") : this.node.getChildByName("smallMask")).active = !0;
var i = this.node.getChildByName("frame");
t.setContentSize(i.getContentSize());
},
getIsBlack: function() {
var e = this.node.getChildByName("bigMask"), t = this.node.getChildByName("smallMask");
return !(!e.active && !t.active);
},
setFrame: function(e) {
this.cardFrame.spriteFrame = e;
}
});
cc._RF.pop();
}, {} ],
zipai_drawCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5498cZIxZRJh4H3/pjSpGX+", "zipai_drawCard");
cc.Class({
extends: cc.Component,
properties: {
cardsAtlas: {
default: null,
type: cc.SpriteAtlas
},
cardPrefab: {
default: null,
type: cc.Prefab
}
},
onLoad: function() {
null != cc.vv && ((cc.vv.zipai_drawCard = this).enumTalbe = e("zipai_enum").Enum);
},
getCardSpriteFrameByName: function(e) {
return this.cardsAtlas.getSpriteFrame(e);
},
drawCard: function(e, t) {
var i = cc.instantiate(this.cardPrefab);
i.active = !0;
var n = null;
switch (t) {
case this.enumTalbe.cardType.BIG:
n = this.getCardSpriteFrameByName("outcard" + e);
break;

case this.enumTalbe.cardType.SMALL:
n = this.getCardSpriteFrameByName("handcard" + e);
break;

case this.enumTalbe.cardType.SAO:
n = this.getCardSpriteFrameByName("saoCard" + e);
break;

case this.enumTalbe.cardType.BACK:
n = this.getCardSpriteFrameByName("cardBack");
break;

case this.enumTalbe.cardType.BIG_CARD_BACK:
n = this.getCardSpriteFrameByName("paibei_big");
}
i.getComponent("zipai_card").setFrame(n);
i.getComponent("zipai_card").setValue(e);
return i;
}
});
cc._RF.pop();
}, {
zipai_enum: "zipai_enum"
} ],
zipai_enum: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ebfbecb5fJLm68G2lsTJX5j", "zipai_enum");
var n = {
cardType: {
SMALL: 0,
BIG: 1,
BACK: 2,
BIG_CARD_BACK: 3,
SAO: 4
},
cardSort: {
ITEM: 0,
HOLDS: 1
},
direction: {
RIGHT_BOUNDARY: 100,
LEFT_BOUNDARY: -100
},
doCardType: {
PICK_CARD: 0,
THROW_CARD: 1
},
eatType: {
SHANG_BI: 1,
XIA_BI: -1
},
operation: {
SAO: 0,
SAOCHUAN: 1,
KAIZHAO: 2,
CHONGZHAO: 3,
PENG: 4,
CHI: 5,
HU: 6,
PAO: 7,
ZIMO: 8,
DANGDI: 9,
SAO_SELF_SAOCHUAN: 10
},
holdTpye: {
single: 1,
double: 2,
shunZi: 2.3,
threeNotSame: 2.5,
three: 3,
four: 4
},
operationBtn: {
HU: 0,
PENG: 1,
EAT: 2,
LIU: 3,
PASS: 4
}
};
i.Enum = n;
cc._RF.pop();
}, {} ],
zipai_gameResult: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6da78L1ue1JoYw19KLhkqzr", "zipai_gameResult");
cc.Class({
extends: cc.Component,
properties: {
_gameresult: null,
_seatNodeList: []
},
onLoad: function() {
if (null != cc.vv) {
this._gameresult = this.node;
this._result_name = this._gameresult.getChildByName("result_name").getComponent(cc.Label);
this._result_roomID = this._gameresult.getChildByName("roomID").getComponent(cc.Label);
this._result_clubID = this._gameresult.getChildByName("clubID").getComponent(cc.Label);
for (var e = this._gameresult.getChildByName("seats"), t = 0; t < e.children.length; ++t) this._seatNodeList.push(e.children[t]);
this.gameRoot = cc.find("Canvas");
this.gameRoot.on("game_result", this.call_game_result, this);
this.gameRoot.on("show_gameResult", this.showGameResult, this);
this._gameresult.active = !1;
}
},
showGameResult: function() {
this._gameresult.active = !0;
},
call_game_result: function(e) {
var t = e.detail.off_banker;
t && 1 == t && (this._gameresult.active = !0);
this.onGameEnd(e.detail);
},
onGameEnd: function(e) {
for (var t = 0; t < this._seatNodeList.length; t++) this._seatNodeList[t].active = !1;
for (var i = cc.vv.gameNetMgr.seats, n = 0, a = 0, s = 0; s < e.over_seats_data.length; ++s) {
var c = e.over_seats_data[s].total_score;
n < c && (n = c);
var r = e.over_seats_data[s].pao_counts;
a < r && (a = r);
}
for (s = 0; s < i.length; ++s) {
var o = i[s];
this._seatNodeList[s].active = !0;
if (e.over_seats_data[s]) {
var h = !(e.over_seats_data[s].total_score != n || !n);
this.showResult(this._seatNodeList[s], e.over_seats_data[s], o.userid, h);
}
}
},
showResult: function(e, t, i, n) {
console.log("结算成绩：", t);
cc.vv.gameNetMgr.conf.server_type;
var a = e.getChildByName("fangzhu"), s = cc.vv.gameNetMgr.getSeatIndexByID(i);
a.active = 0 == s;
cc.vv.userMgr.userId == i ? e.getChildByName("isBen").active = !0 : e.getChildByName("isBen").active = !1;
var c = cc.vv.gameNetMgr.getSeatByID(i);
e.getChildByName("name").getComponent(cc.Label).string = c.name;
e.getChildByName("id").getComponent(cc.Label).string = "ID:" + i;
e.getChildByName("icon").getComponent("ImageLoader").setUserID(i);
e.getChildByName("dayingjia").active = n;
0 < t.total_score ? e.getChildByName("score").getComponent(cc.RichText).string = "<color=#D6D81A>" + t.total_score + "</c>" : e.getChildByName("score").getComponent(cc.RichText).string = "<color=#1EE0E3>" + t.total_score + "</c>";
this._result_name.string = cc.vv.gameNetMgr.getGameTypeStr();
cc.vv.gameNetMgr.unions_id ? this._result_clubID.string = "(俱乐部" + cc.vv.gameNetMgr.unions_id + ")" : this._result_clubID.node.active = !1;
this._result_roomID.string = cc.vv.gameNetMgr.roomId;
for (var r = e.getChildByName("labels"), o = e.getChildByName("values"), h = 0; h < 8; h++) {
var l = "lb" + (h + 1);
r.getChildByName(l).getComponent(cc.Label).string = "";
o.getChildByName(l).getComponent(cc.Label).string = "";
}
var d = [];
for (var u in t.ox_type_count) {
d["type_" + u] = t.ox_type_count[u];
}
var v = [ "总分", "最大分", "赢", "输", "流局", "点炮", "", "" ];
for (h = 0; h < 8; h++) {
l = "lb" + (h + 1);
r.getChildByName(l).getComponent(cc.Label).string = v[h];
}
o.getChildByName("lb1").getComponent(cc.Label).string = t.total_score;
o.getChildByName("lb2").getComponent(cc.Label).string = t.max_score;
o.getChildByName("lb3").getComponent(cc.Label).string = t.win_counts;
o.getChildByName("lb4").getComponent(cc.Label).string = t.lose_counts;
o.getChildByName("lb5").getComponent(cc.Label).string = t.draw_counts;
o.getChildByName("lb6").getComponent(cc.Label).string = t.pao_counts;
},
onBtnCloseClicked: function() {
cc.director.resume();
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.wc.show();
cc.director.loadScene("hall");
},
onBtnShareClicked: function() {
cc.vv.audioMgr.playBtnClick();
cc.vv.gameNetMgr.resetGame();
cc.vv.anysdkMgr.shareResult(0);
},
onDestroy: function() {
this.node.off("ss_result", this.call_game_result, this);
}
});
cc._RF.pop();
}, {} ],
zipai_reOrderHandCards: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ffbb5/Ask1Aq7TLMgA1Z96k", "zipai_reOrderHandCards");
cc.Class({
ctor: function() {
this.gameRoot = null;
},
init: function(e) {
this.gameRoot = e;
},
work: function(e, t, i, n) {
if (Math.abs(n.x - i.x) <= this.gameRoot._outCardSpriteSize.width / 2) this.gameRoot._handcardsInfoList[e].cards[t].setPosition(i.x, i.y); else {
var a = this.getLeftboundary(e, t, i), s = this.getEndIndex(e, a, n);
-1 == s || 9 <= this.gameRoot._handcardsInfoList.length && (s == cc.vv.zipai_cardsSort.enumTalbe.direction.LEFT_BOUNDARY || s == cc.vv.zipai_cardsSort.enumTalbe.direction.RIGHT_BOUNDARY) ? this.gameRoot._handcardsInfoList[e].cards[t].setPosition(i.x, i.y) : this.refreshCards(e, t, i, s);
}
},
getLeftboundary: function(e, t, i) {
return 0 == e && 0 == t ? i.x : this.gameRoot._handcardsInfoList[0].cards[0].x;
},
getEndIndex: function(e, t, i) {
for (var n = -1, a = this.gameRoot._handcardsInfoList.length, s = 0; s < this.gameRoot._handcardsInfoList.length; s++) {
if (i.x < t - this.gameRoot._handCardSpriteSize.width / 2) {
n = cc.vv.zipai_cardsSort.enumTalbe.direction.LEFT_BOUNDARY;
break;
}
if (i.x > this.gameRoot._handcardsInfoList[a - 1].cards[0].x + this.gameRoot._handCardSpriteSize.width / 2) {
n = cc.vv.zipai_cardsSort.enumTalbe.direction.RIGHT_BOUNDARY;
break;
}
if (i.x - this.gameRoot._handcardsInfoList[s].cards[0].x <= this.gameRoot._handCardSpriteSize.width / 2) {
if (e == s) continue;
n = s;
break;
}
}
return n;
},
refreshCards: function(e, t, i, n) {
var a = this.gameRoot._handcardsInfoList[e].cards[t];
if (n == cc.vv.zipai_cardsSort.enumTalbe.direction.LEFT_BOUNDARY) {
(s = {
posx: null,
cards: []
}).posx = this.gameRoot._handcardsInfoList[0].posx;
s.cards.push(a);
this.gameRoot._handcardsInfoList.unshift(s);
this.gameRoot._handcardsInfoList[e + 1].cards.splice(t, 1);
} else if (n == cc.vv.zipai_cardsSort.enumTalbe.direction.RIGHT_BOUNDARY) {
var s;
(s = {
posx: null,
cards: []
}).cards.push(a);
this.gameRoot._handcardsInfoList.push(s);
this.gameRoot._handcardsInfoList[e].cards.splice(t, 1);
} else {
if (4 == this.gameRoot._handcardsInfoList[n].cards.length) {
this.gameRoot._handcardsInfoList[e].cards[t].setPosition(i.x, i.y);
return;
}
if (n != e) {
this.gameRoot._handcardsInfoList[n].cards.push(a);
this.gameRoot._handcardsInfoList[e].cards.splice(t, 1);
}
}
for (var c = 0; c < this.gameRoot._handcardsInfoList.length; c++) 0 == this.gameRoot._handcardsInfoList[c].cards.length && this.gameRoot._handcardsInfoList.splice(c, 1);
this.gameRoot.replaceCards();
}
});
cc._RF.pop();
}, {} ],
zipai_scriptManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "73b511D8dNCMqHY6u0xj5pY", "zipai_scriptManager");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
null != cc.vv && this.addGameScriptByServerID(cc.vv.gameNetMgr.conf.server_type);
},
addGameScriptByServerID: function(e) {
switch (e) {
case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_GLZP:
this.addComponent("GLZP_Utils");
this.addComponent("GLZP_Room");
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_PHZ:
this.addComponent("PHZ_Utils");
this.addComponent("PHZ_Room");
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HYLH:
this.addComponent("HYLH_Utils");
this.addComponent("HYLH_Room");
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_HGW:
this.addComponent("HGW_Utils");
this.addComponent("HGW_Room");
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_FPF:
this.addComponent("FPF_Utils");
this.addComponent("FPF_Room");
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_WHZ:
this.addComponent("WHZ_Utils");
this.addComponent("WHZ_Room");
break;

case cc.vv.gameType.GAME_TYPE.SERVER_TYPE_QMT:
this.addComponent("QMT_Utils");
this.addComponent("QMT_Room");
}
}
});
cc._RF.pop();
}, {} ]
}, {}, [ "FCPiaoFen", "GameNetMgr10003", "DCZB_Replay", "GameNetMgr10008", "GameOver_DCZB", "GameResult_DCZB", "global_setting_DCZB", "msgdefine_dczb", "GameNetMgr10009", "FCEffects_List", "FCGameBase", "FCMahjongUtils", "FCNetBase", "FCObjet", "GameNetMgr10006", "GameNetMgr10007", "Hunan_Action", "Hunan_Item", "Hunan_ItemGang", "Hunan_PokerUtils", "Hunan_globalSetting", "Hunan_msgdefine", "baseActionMgr", "baseEffectMgr", "baseFoldsMgr", "baseGameBirds", "baseGameFanXing", "baseGameNetMgr", "baseGameOver", "baseGameResult", "baseHoldsMgr", "baseOperationMgr", "baseReplay", "baseWallMgr", "FCCreatRoom_CS", "FCCreatRoom_DC", "FCCreatRoom_GL", "FCCreatRoom_HZ", "FCCreatRoom_ZZ", "FCCreateRoom", "FICreateRoom", "FCEffect", "FCGameMgr", "FCGang", "FCJumping", "FCMahJong", "FCMahjongMgr", "FCOutCard", "FCSeabed", "FCTimeTurn", "FIGameMgr", "FCAlert", "FCChat", "FCChatItem", "FCChoice", "FCInfobar", "FCMagic", "FCMore", "FCOper", "FCOperateBtn", "FCPrepare", "FCSeats", "FCSettings", "FCShow", "FCSingleton", "FCTing", "FCTuGuan", "FCUIBase", "FCWanFa", "FIShow", "FITingNode", "FCCSConfig", "FCDCConfig", "FCGLConfig", "FCHZConfig", "FCZZConfig", "FIMahjongConfig", "user_over_item", "ClubChangName", "ClubChat", "ClubFriend", "ClubMail", "ClubSetAutomatic", "ClubSetting", "GameNetMgrClub", "TimeSearch", "chatMsgItem", "clubEnter", "clubMain", "clubNamePre", "club_qun_item", "club_room_item", "CreateRoom_SDB", "GameNetMgr20011", "GameOver_SDB", "GameResult_SDB", "MJGame_SDB", "MJGame_replay_10DB", "MJRoom_SDB", "msgdefine_10DB", "poker_utils_SDB", "CreateRoom_13S", "GameNetMgr20009", "GameOver_13S", "GameResult_13S", "MJGame_13S", "MJGame_replay_13S", "MJRoom_13S", "op13", "poker_utils_13S", "qiepai", "CreateRoom_21D", "GameNetMgr20007", "GameOver_21D", "GameResult_21D", "MJGame_21D", "MJGame_replay_21D", "MJRoom_21D", "msgdefine_21d", "poker_utils_21d", "CreateRoom_3DH", "GameNetMgr20010", "GameOver_3DH", "GameResult_3DH", "MJGame_3DH", "MJGame_replay_3DH", "MJRoom_3DH", "msgdefine_3DH", "poker_utils_3DH", "CreateRoom_3G", "GameNetMgr20008", "GameOver_3G", "GameResult_3G", "MJGame_3G", "MJGame_replay_3G", "MJRoom_3G", "poker_util_3g", "CreateRoom_DDZ", "GameNetMgr20002", "GameOver_DDZ", "GameResult_DDZ", "MJGame_DDZ", "MJGame_replay_DDZ", "MJRoom_DDZ", "poker_utils_DDZ", "CreateRoom_DNN", "GameNetMgr20003", "GameOver_DNN", "GameResult_DNN", "MJGame_DNN", "MJGame_replay_DNN", "MJRoom_DNN", "global_setting_DNN", "poker_utils_DNN", "CreateRoom_DZPK", "GameNetMgr20005", "GameOver_DZPK", "GameResult_DZPK", "MJGame_DZPK", "MJGame_replay_DZPK", "MJRoom_DZPK", "msgdefine_dzpk", "poker_utils_dzpk", "CreateRoom_FLY", "GameNetMgr30000", "GameOver_FLY", "GameResult_FLY", "MJGame_FLY", "MJRoom_FLY", "Settings_FLY", "TimePointer_FLY", "poker_utils_FLY", "CreateRoom_PAGUO", "GameNetMgr20012", "GameOver_PAGUO", "GameResult_PAGUO", "MJGame_PAGUO", "MJGame_replay_PAGUO", "MJRoom_PAGUO", "msgdefine_PAGUO", "poker_utils_PAGUO", "CreateRoom_PDK", "GameNetMgr20001", "GameOver_PDK", "GameResult_PDK", "MJGame_PDK", "MJGame_replay_PDK", "MJRoom_PDK", "poker_utils_PDK", "CreateRoom_PPL", "GameNetMgr20013", "GameOver_PPL", "GameResult_PPL", "MJGame_PPL", "MJGame_replay_pinpinle", "MJRoom_PPL", "global_setting_PPL", "msgdefine_pinpinle", "poker_utils_pinpinle", "ppl_Item", "BaseRoom", "Chat", "Choice", "ChoumaItem", "TimeButton", "Wanfa", "chipsAtlasUtils", "dropChip", "turnCard", "CreateRoom_FPF", "FPF_GameOver", "FPF_GlobalSetting", "FPF_Msgdefine", "FPF_Replay", "FPF_Room", "FPF_Utils", "GameNetMgr30006", "CreateRoom_GLZP", "GLZP_GameOver", "GLZP_GlobalSetting", "GLZP_Msgdefine", "GLZP_Replay", "GLZP_Room", "GLZP_Utils", "GameNetMgr30002", "CreateRoom_HGW", "GameNetMgr30005", "HGW_GameOver", "HGW_GlobalSetting", "HGW_Msgdefine", "HGW_Replay", "HGW_Room", "HGW_Utils", "CreateRoom_HYLH", "GameNetMgr30004", "HYLH_GameOver", "HYLH_GlobalSetting", "HYLH_Msgdefine", "HYLH_Replay", "HYLH_Room", "HYLH_Utils", "CreateRoom_PHZ", "GameNetMgr30003", "PHZ_GameOver", "PHZ_GlobalSetting", "PHZ_Msgdefine", "PHZ_Replay", "PHZ_Room", "PHZ_Utils", "CreateRoom_QMT", "GameNetMgr30008", "QMT_GameOver", "QMT_GlobalSetting", "QMT_Msgdefine", "QMT_Replay", "QMT_Room", "QMT_Utils", "eatNodeEventHandler", "holdsEventHandler", "zipai_adaptIponeX", "zipai_atlasAndAudioUtils", "zipai_card", "zipai_cardsSort", "zipai_drawCard", "zipai_enum", "zipai_gameResult", "zipai_reOrderHandCards", "zipai_scriptManager", "CreateRoom_WHZ", "GameNetMgr30007", "WHZ_GameOver", "WHZ_GlobalSetting", "WHZ_Msgdefine", "WHZ_Replay", "WHZ_Room", "WHZ_Utils", "WHZ_eatNodeEventHandler", "CreateRoom_ZJH", "GameNetMgr20004", "GameOver_zjh", "GameResult_ZJH", "MJGame_ZJH", "MJGame_replay_ZJH", "MJRoom_ZJH", "poker_utils_ZJH", "socket-io", "AnysdkMgr", "AudioMgr", "EventDispatcher", "GameType", "HTTP", "HallReceiver", "IPhoneX", "MahjongMgr", "MemoryDetector", "Net", "NetMgr", "Net_Match", "NodeNode", "Notice", "ReplayMgr", "ShowWX", "UILoader", "UserMgr", "Utils", "VoiceMgr", "addFriend", "Activity", "Alert", "Atavar", "Authentication", "Club", "ClubItem", "Course", "CreateRole", "CreateRoom", "ErrorCode", "Exchange", "Feedback", "Hall", "HallSettings", "History", "ImageLoader", "InvitCode", "JoinGameInput", "LoadingLogic", "Login", "Mall", "MyPoker", "MyPoker_old", "NoticeTip", "OtherOpenRoom", "PopupMgr", "ReConnect", "ReplayCtrl", "Seat", "SelectGame", "Settings", "SongFangKa", "ToastView", "UserInfoShow", "Voice", "WaitingConnection", "clubEmail", "gold_info", "random_code", "scanning", "task", "taskbtn", "xiaoxi", "xiaoxiEmail", "dhrc", "GameUpdateMgr", "HotUpdate", "HotUpdate_Games", "msgdefine", "param_createRoom", "params_init", "sdkManager", "sign", "statistic_key", "GameNetMgr80002", "MatchChatConfig_DDZ", "MatchDetail", "MatchGameOver_DDZ", "MatchGame_DDZ", "MatchHall_DDZ", "MatchItem", "MatchRoom_DDZ", "Matching_DDZ", "RewardDialog", "GameNetMgr80001", "MatchGame_PDK", "MatchRoom_PDK", "EventType", "Match", "MatchHistory", "MatchList", "MatchMain", "MatchRule", "matchAllTop", "matchInfo", "matchPre", "matchRLPre", "matchTop" ]);